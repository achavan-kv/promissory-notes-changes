













//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Blue.Transactions;

namespace Blue.Cosacs.Report
{
    	public partial class WeeklySummary : Blue.Transactions.Command<Context>
	{
	    public WeeklySummary() : base("Report.WeeklySummary")
	    {
	                base.AddInParameter("@FirstMonthYear", DbType.Int32 );
	                base.AddInParameter("@FirstDayYear", DbType.Int32 );
	                base.AddInParameter("@Year", DbType.Int32 );
	                base.AddInParameter("@Productgroup", DbType.AnsiString );
	                base.AddInParameter("@FirstWeek", DbType.Int32 );
	                base.AddInParameter("@LastWeek", DbType.Int32 );
	            }
	
	        public int? FirstMonthYear
	    {
	        get { return (int?)base[0]; }
	        set { base[0] = value; }
	    }
	        public int? FirstDayYear
	    {
	        get { return (int?)base[1]; }
	        set { base[1] = value; }
	    }
	        public int? Year
	    {
	        get { return (int?)base[2]; }
	        set { base[2] = value; }
	    }
	        public string Productgroup
	    {
	        get { return (string)base[3]; }
	        set { base[3] = value; }
	    }
	        public int? FirstWeek
	    {
	        get { return (int?)base[4]; }
	        set { base[4] = value; }
	    }
	        public int? LastWeek
	    {
	        get { return (int?)base[5]; }
	        set { base[5] = value; }
	    }
	    }
	
	partial class WeeklySummary
	{
	    public new void Fill(DataSet ds)
	    {
	        base.Fill(ds);
	    }
	
	        public void Fill(DataSet ds,  int? _FirstMonthYear, int? _FirstDayYear, int? _Year, string _Productgroup, int? _FirstWeek, int? _LastWeek)
	    {
	        this.FirstMonthYear = _FirstMonthYear;
this.FirstDayYear = _FirstDayYear;
this.Year = _Year;
this.Productgroup = _Productgroup;
this.FirstWeek = _FirstWeek;
this.LastWeek = _LastWeek;

	        Fill(ds);
	        
	    }
	    }
	
	public partial class MonthlyClaimsSummaryBySupplier : Blue.Transactions.Command<Context>
	{
	    public MonthlyClaimsSummaryBySupplier() : base("Report.MonthlyClaimsSummaryBySupplier")
	    {
	                base.AddInParameter("@FinYear", DbType.AnsiStringFixedLength );
	                base.AddInParameter("@Month", DbType.AnsiStringFixedLength );
	                base.AddInParameter("@Supplier", DbType.AnsiString );
	            }
	
	        public string FinYear
	    {
	        get { return (string)base[0]; }
	        set { base[0] = value; }
	    }
	        public string Month
	    {
	        get { return (string)base[1]; }
	        set { base[1] = value; }
	    }
	        public string Supplier
	    {
	        get { return (string)base[2]; }
	        set { base[2] = value; }
	    }
	    }
	
	partial class MonthlyClaimsSummaryBySupplier
	{
	    public new void Fill(DataSet ds)
	    {
	        base.Fill(ds);
	    }
	
	        public void Fill(DataSet ds,  string _FinYear, string _Month, string _Supplier)
	    {
	        this.FinYear = _FinYear;
this.Month = _Month;
this.Supplier = _Supplier;

	        Fill(ds);
	        
	    }
	    }
	
	public partial class MonthlyClaimsCategoriesBySupplier : Blue.Transactions.Command<Context>
	{
	    public MonthlyClaimsCategoriesBySupplier() : base("Report.MonthlyClaimsCategoriesBySupplier")
	    {
	                base.AddInParameter("@FinYear", DbType.AnsiStringFixedLength );
	                base.AddInParameter("@Month", DbType.AnsiStringFixedLength );
	                base.AddInParameter("@Supplier", DbType.AnsiString );
	            }
	
	        public string FinYear
	    {
	        get { return (string)base[0]; }
	        set { base[0] = value; }
	    }
	        public string Month
	    {
	        get { return (string)base[1]; }
	        set { base[1] = value; }
	    }
	        public string Supplier
	    {
	        get { return (string)base[2]; }
	        set { base[2] = value; }
	    }
	    }
	
	partial class MonthlyClaimsCategoriesBySupplier
	{
	    public new void Fill(DataSet ds)
	    {
	        base.Fill(ds);
	    }
	
	        public void Fill(DataSet ds,  string _FinYear, string _Month, string _Supplier)
	    {
	        this.FinYear = _FinYear;
this.Month = _Month;
this.Supplier = _Supplier;

	        Fill(ds);
	        
	    }
	    }
	
	public partial class ServiceClaims : Blue.Transactions.Command<Context>
	{
	    public ServiceClaims() : base("Report.ServiceClaims")
	    {
	                base.AddInParameter("@DateLoggedFrom", DbType.AnsiString );
	                base.AddInParameter("@DateLoggedTo", DbType.AnsiString );
	                base.AddInParameter("@DateResolvedFrom", DbType.AnsiString );
	                base.AddInParameter("@DateResolvedTo", DbType.AnsiString );
	                base.AddInParameter("@Supplier", DbType.AnsiString );
	                base.AddInParameter("@PrimaryCharge", DbType.AnsiString );
	                base.AddInParameter("@Department", DbType.AnsiString );
	                base.AddInParameter("@IncludeTechnicianReport", DbType.Boolean );
	                base.AddInParameter("@SupplierCharged", DbType.Boolean );
	                base.AddInParameter("@FYWCharged", DbType.Boolean );
	                base.AddInParameter("@EWCharged", DbType.Boolean );
	                base.AddInParameter("@PageNumber", DbType.Int16 );
	                base.AddInParameter("@PageSize", DbType.Int16 );
	            }
	
	        public string DateLoggedFrom
	    {
	        get { return (string)base[0]; }
	        set { base[0] = value; }
	    }
	        public string DateLoggedTo
	    {
	        get { return (string)base[1]; }
	        set { base[1] = value; }
	    }
	        public string DateResolvedFrom
	    {
	        get { return (string)base[2]; }
	        set { base[2] = value; }
	    }
	        public string DateResolvedTo
	    {
	        get { return (string)base[3]; }
	        set { base[3] = value; }
	    }
	        public string Supplier
	    {
	        get { return (string)base[4]; }
	        set { base[4] = value; }
	    }
	        public string PrimaryCharge
	    {
	        get { return (string)base[5]; }
	        set { base[5] = value; }
	    }
	        public string Department
	    {
	        get { return (string)base[6]; }
	        set { base[6] = value; }
	    }
	        public bool? IncludeTechnicianReport
	    {
	        get { return (bool?)base[7]; }
	        set { base[7] = value; }
	    }
	        public bool? SupplierCharged
	    {
	        get { return (bool?)base[8]; }
	        set { base[8] = value; }
	    }
	        public bool? FYWCharged
	    {
	        get { return (bool?)base[9]; }
	        set { base[9] = value; }
	    }
	        public bool? EWCharged
	    {
	        get { return (bool?)base[10]; }
	        set { base[10] = value; }
	    }
	        public short? PageNumber
	    {
	        get { return (short?)base[11]; }
	        set { base[11] = value; }
	    }
	        public short? PageSize
	    {
	        get { return (short?)base[12]; }
	        set { base[12] = value; }
	    }
	    }
	
	partial class ServiceClaims
	{
	    public new void Fill(DataSet ds)
	    {
	        base.Fill(ds);
	    }
	
	        public void Fill(DataSet ds,  string _DateLoggedFrom, string _DateLoggedTo, string _DateResolvedFrom, string _DateResolvedTo, string _Supplier, string _PrimaryCharge, string _Department, bool? _IncludeTechnicianReport, bool? _SupplierCharged, bool? _FYWCharged, bool? _EWCharged, short? _PageNumber, short? _PageSize)
	    {
	        this.DateLoggedFrom = _DateLoggedFrom;
this.DateLoggedTo = _DateLoggedTo;
this.DateResolvedFrom = _DateResolvedFrom;
this.DateResolvedTo = _DateResolvedTo;
this.Supplier = _Supplier;
this.PrimaryCharge = _PrimaryCharge;
this.Department = _Department;
this.IncludeTechnicianReport = _IncludeTechnicianReport;
this.SupplierCharged = _SupplierCharged;
this.FYWCharged = _FYWCharged;
this.EWCharged = _EWCharged;
this.PageNumber = _PageNumber;
this.PageSize = _PageSize;

	        Fill(ds);
	        
	    }
	    }
	
	public partial class OutstandingSRsPerProductCategory : Blue.Transactions.Command<Context>
	{
	    public OutstandingSRsPerProductCategory() : base("Report.OutstandingSRsPerProductCategory")
	    {
	                base.AddInParameter("@DateFrom", DbType.Date );
	                base.AddInParameter("@DateTo", DbType.Date );
	                base.AddInParameter("@CurrentDate", DbType.Date );
	                base.AddInParameter("@Status", DbType.AnsiString );
	                base.AddInParameter("@Supplier", DbType.AnsiString );
	                base.AddInParameter("@Technician", DbType.Int32 );
	                base.AddInParameter("@WarrantyType", DbType.AnsiStringFixedLength );
	            }
	
	        public DateTime? DateFrom
	    {
	        get { return (DateTime?)base[0]; }
	        set { base[0] = value; }
	    }
	        public DateTime? DateTo
	    {
	        get { return (DateTime?)base[1]; }
	        set { base[1] = value; }
	    }
	        public DateTime? CurrentDate
	    {
	        get { return (DateTime?)base[2]; }
	        set { base[2] = value; }
	    }
	        public string Status
	    {
	        get { return (string)base[3]; }
	        set { base[3] = value; }
	    }
	        public string Supplier
	    {
	        get { return (string)base[4]; }
	        set { base[4] = value; }
	    }
	        public int? Technician
	    {
	        get { return (int?)base[5]; }
	        set { base[5] = value; }
	    }
	        public string WarrantyType
	    {
	        get { return (string)base[6]; }
	        set { base[6] = value; }
	    }
	    }
	
	partial class OutstandingSRsPerProductCategory
	{
	    public new void Fill(DataSet ds)
	    {
	        base.Fill(ds);
	    }
	
	        public void Fill(DataSet ds,  DateTime? _DateFrom, DateTime? _DateTo, DateTime? _CurrentDate, string _Status, string _Supplier, int? _Technician, string _WarrantyType)
	    {
	        this.DateFrom = _DateFrom;
this.DateTo = _DateTo;
this.CurrentDate = _CurrentDate;
this.Status = _Status;
this.Supplier = _Supplier;
this.Technician = _Technician;
this.WarrantyType = _WarrantyType;

	        Fill(ds);
	        
	    }
	    }
	

        public partial class ContextBase : DbContextBase
        {
			protected ContextBase(string connectionString = "Default") : base(connectionString) 
			{
				Database.SetInitializer<Context>(null);
			}
		 
            
            
            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                base.OnModelCreating(modelBuilder);
                
            }
        }

            public partial class Settings : Blue.Config.SettingsBase
    {
        public Settings() : base(Blue.Cosacs.Report.Module.Instance) {}

        public static StructureMap.Configuration.DSL.IRegistry Register<T>(StructureMap.Configuration.DSL.IRegistry registry, T singletonObject)
            where T : Blue.Config.ISettings

        {
            registry.For<Blue.Config.ISettings>().Add(singletonObject).Named(@"Blue.Cosacs.Report");
            registry.For<T>().Singleton().Use(singletonObject);
            return registry;
        }

        public override Blue.Config.SettingMetadata[] Metadata()
        {
            return metadata;
        }

        #region Setting Metadata
        private static readonly Blue.Config.SettingMetadata[] metadata = new Blue.Config.SettingMetadata[] 
        {
                        new Blue.Config.SettingMetadata.@int {
                Id = @"ExactDaysFromDeliveryOnCustomersWithNoEWIR",
                Name = @"Exact number of days from product delivery on customers with no EW/IR (to search)",
                Description = @"Number of days to search customers who did not buy an EW/IR warranty and received their product(s) exactly X days ago.",
                Category = @"Second Effort Solicitation",
                Default = @"14",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"DaysToFywExpirationOnCustomersWithNoEW",
                Name = @"Number of days until FYW expires on customers with no EW",
                Description = @"Number of days to search customers with no EW whose FYW will expire within the next X days",
                Category = @"Second Effort Solicitation",
                Default = @"14",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"DaysSinceFywRepairOnCustomersWithNoEW",
                Name = @"Number of days since FYW repair on customers with no EW (to search)",
                Description = @"Number of days to search customers with no EW who have had a FYW repair within the last X days",
                Category = @"Second Effort Solicitation",
                Default = @"14",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                    };
        #endregion

        #region Setting Enums
                #endregion

        #region Setting Properties
                public int ExactDaysFromDeliveryOnCustomersWithNoEWIR 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("ExactDaysFromDeliveryOnCustomersWithNoEWIR"); }
        }
                public int DaysToFywExpirationOnCustomersWithNoEW 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("DaysToFywExpirationOnCustomersWithNoEW"); }
        }
                public int DaysSinceFywRepairOnCustomersWithNoEW 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("DaysSinceFywRepairOnCustomersWithNoEW"); }
        }
                #endregion
    }
    
    

        public class Module : Blue.Config.ModuleBase
    {
        private Module() {}

        public static readonly Module Instance = new Module
        {
            Label = @"Report",
            Namespace = @"Blue.Cosacs.Report",
            Schema = @"Report",
        };
    }
    }
