













//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Blue.Transactions;

namespace Blue.Cosacs.Web.Common.External
{
    	public partial class HiLoAllocate : Blue.Transactions.Command<Context>
	{
	    public HiLoAllocate() : base("dbo.HiLoAllocate")
	    {
	                base.AddInParameter("@Sequence", DbType.AnsiString );
	                base.AddOutParameter("@CurrentHi", DbType.Int32 , 4);
	                base.AddOutParameter("@MaxLo", DbType.Int32 , 4);
	            }
	
	        public string Sequence
	    {
	        get { return (string)base[0]; }
	        set { base[0] = value; }
	    }
	        public int? CurrentHi
	    {
	        get { return (int?)base[1]; }
	        set { base[1] = value; }
	    }
	        public int? MaxLo
	    {
	        get { return (int?)base[2]; }
	        set { base[2] = value; }
	    }
	    }
	
	partial class HiLoAllocate
	{
	    public new int ExecuteNonQuery()
	    {
	        return base.ExecuteNonQuery();
	    }
	
	        public int ExecuteNonQuery( string _Sequence,out int? _CurrentHi,out int? _MaxLo)
	    {
	        this.Sequence = _Sequence;

	        var __result = base.ExecuteNonQuery();
	        _CurrentHi =this.CurrentHi;
_MaxLo =this.MaxLo;

	        return __result;
	    }
	    }
	

        public partial class ContextBase : DbContextBase
        {
			protected ContextBase(string connectionString = "Default") : base(connectionString) 
			{
				Database.SetInitializer<Context>(null);
			}
		 
            
                public virtual DbSet<Code> Code { get; set; }
            
                public virtual DbSet<CodeCat> CodeCat { get; set; }
            
                public virtual DbSet<Branch> Branch { get; set; }
            
                public virtual DbSet<Bank> Bank { get; set; }
            
                public virtual DbSet<FinancialWeeks> FinancialWeeks { get; set; }
            
            
            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                base.OnModelCreating(modelBuilder);
                
                        var t0 = modelBuilder.Entity< Code >();
                        t0.ToTable("Code", "dbo");
                        
                        t0.HasKey(t => t.category);
                        
                        t0.Property(t => t.origbr)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.category)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(12)
                        
                        
                        ;
                        
                        t0.Property(t => t.code)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(18)
                        
                        
                        ;
                        
                        t0.Property(t => t.codedescript)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t0.Property(t => t.statusflag)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t0.Property(t => t.sortorder)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.reference)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(12)
                        
                        
                        ;
                        
                        t0.Property(t => t.additional)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(15)
                        
                        
                        ;
                        
                        t0.Property(t => t.Additional2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(15)
                        
                        
                        ;
                        
                        var t1 = modelBuilder.Entity< CodeCat >();
                        t1.ToTable("CodeCat", "dbo");
                        
                        t1.HasKey(t => t.category);
                        
                        t1.Property(t => t.origbr)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.category)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(12)
                        
                        
                        ;
                        
                        t1.Property(t => t.catdescript)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t1.Property(t => t.codelgth)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.forcenum)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t1.Property(t => t.forcenumdesc)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t1.Property(t => t.usermaint)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t1.Property(t => t.CodeHeaderText)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t1.Property(t => t.DescriptionHeaderText)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t1.Property(t => t.SortOrderHeaderText)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t1.Property(t => t.ReferenceHeaderText)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t1.Property(t => t.AdditionalHeaderText)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t1.Property(t => t.ToolTipText)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(300)
                        
                        
                        ;
                        
                        t1.Property(t => t.Additional2HeaderText)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        var t2 = modelBuilder.Entity< Branch >();
                        t2.ToTable("Branch", "dbo");
                        
                        t2.HasKey(t => t.branchno);
                        
                        t2.Property(t => t.branchno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.branchname)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t2.Property(t => t.branchaddr1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(26)
                        
                        
                        ;
                        
                        t2.Property(t => t.branchaddr2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(26)
                        
                        
                        ;
                        
                        t2.Property(t => t.branchaddr3)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(26)
                        
                        
                        ;
                        
                        t2.Property(t => t.branchpocode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t2.Property(t => t.telno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(13)
                        
                        
                        ;
                        
                        t2.Property(t => t.servpcent)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.countrycode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(2)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.croffno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.daterun)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.weekno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.oldpctype)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.newpctype)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.datepcchange)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.batchctrlno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.hissn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.hibuffno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.warehouseno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(2)
                        
                        
                        ;
                        
                        t2.Property(t => t.as400exp)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.hirefno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.as400branchno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.codreceipt)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.region)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(3)
                        
                        
                        ;
                        
                        t2.Property(t => t.defaultdeposit)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(3)
                        
                        
                        ;
                        
                        t2.Property(t => t.depositscreenlocked)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.servicelocation)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.highpicklistno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.warehouseregion)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(12)
                        
                        
                        ;
                        
                        t2.Property(t => t.dotnetforwarehouse)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.hightranschedno)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.StoreType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.CreateRFAccounts)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.CreateCashAccounts)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.CreateHPAccounts)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ScoreHPbefore)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Fact2000BranchLetter)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.hiExtInvoiceNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.SRCashAndGoCustid)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ServiceRepairCentre)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.BehaviouralScoring)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ThirdPartyWarehouse)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.defaultPrintLocation)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.CreateStore)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.CashLoanBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t3 = modelBuilder.Entity< Bank >();
                        t3.ToTable("Bank", "dbo");
                        
                        t3.HasKey(t => t.bankcode);
                        
                        t3.Property(t => t.origbr)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.bankcode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(6)
                        
                        
                        ;
                        
                        t3.Property(t => t.bankname)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t3.Property(t => t.bankaddr1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(26)
                        
                        
                        ;
                        
                        t3.Property(t => t.bankaddr2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(26)
                        
                        
                        ;
                        
                        t3.Property(t => t.bankaddr3)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(26)
                        
                        
                        ;
                        
                        t3.Property(t => t.bankpocode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        var t4 = modelBuilder.Entity< FinancialWeeks >();
                        t4.ToTable("FinancialWeeks", "dbo");
                        
                        t4.HasKey(t => t.Year);
                        
                        t4.Property(t => t.Year)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.Week)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.StartDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.EndDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.Quarter)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.DaysCount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.FinYear)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.FinMonth)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        modelBuilder.Entity< ViewSets >().ToTable("ViewSets", "dbo");
                        
                        modelBuilder.Entity< ServiceSupplierView >().ToTable("ServiceSupplierView", "dbo");
                        
            }
        }

        
        [Serializable]
	[DataContract]
    public partial class Code
    {
                [DataMember] public short? origbr { get; set; }
                [DataMember] public string category { get; set; }
                [DataMember] public string code { get; set; }
                [DataMember] public string codedescript { get; set; }
                [DataMember] public string statusflag { get; set; }
                [DataMember] public short sortorder { get; set; }
                [DataMember] public string reference { get; set; }
                [DataMember] public string additional { get; set; }
                [DataMember] public string Additional2 { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class CodeCat
    {
                [DataMember] public short? origbr { get; set; }
                [DataMember] public string category { get; set; }
                [DataMember] public string catdescript { get; set; }
                [DataMember] public int codelgth { get; set; }
                [DataMember] public string forcenum { get; set; }
                [DataMember] public string forcenumdesc { get; set; }
                [DataMember] public string usermaint { get; set; }
                [DataMember] public string CodeHeaderText { get; set; }
                [DataMember] public string DescriptionHeaderText { get; set; }
                [DataMember] public string SortOrderHeaderText { get; set; }
                [DataMember] public string ReferenceHeaderText { get; set; }
                [DataMember] public string AdditionalHeaderText { get; set; }
                [DataMember] public string ToolTipText { get; set; }
                [DataMember] public string Additional2HeaderText { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Branch
    {
                [DataMember] public short branchno { get; set; }
                [DataMember] public string branchname { get; set; }
                [DataMember] public string branchaddr1 { get; set; }
                [DataMember] public string branchaddr2 { get; set; }
                [DataMember] public string branchaddr3 { get; set; }
                [DataMember] public string branchpocode { get; set; }
                [DataMember] public string telno { get; set; }
                [DataMember] public double servpcent { get; set; }
                [DataMember] public string countrycode { get; set; }
                [DataMember] public int croffno { get; set; }
                [DataMember] public DateTime daterun { get; set; }
                [DataMember] public int weekno { get; set; }
                [DataMember] public string oldpctype { get; set; }
                [DataMember] public string newpctype { get; set; }
                [DataMember] public DateTime? datepcchange { get; set; }
                [DataMember] public int batchctrlno { get; set; }
                [DataMember] public int hissn { get; set; }
                [DataMember] public int hibuffno { get; set; }
                [DataMember] public string warehouseno { get; set; }
                [DataMember] public string as400exp { get; set; }
                [DataMember] public int hirefno { get; set; }
                [DataMember] public short as400branchno { get; set; }
                [DataMember] public int codreceipt { get; set; }
                [DataMember] public string region { get; set; }
                [DataMember] public string defaultdeposit { get; set; }
                [DataMember] public bool depositscreenlocked { get; set; }
                [DataMember] public short servicelocation { get; set; }
                [DataMember] public int highpicklistno { get; set; }
                [DataMember] public string warehouseregion { get; set; }
                [DataMember] public string dotnetforwarehouse { get; set; }
                [DataMember] public int hightranschedno { get; set; }
                [DataMember] public string StoreType { get; set; }
                [DataMember] public bool CreateRFAccounts { get; set; }
                [DataMember] public bool CreateCashAccounts { get; set; }
                [DataMember] public bool CreateHPAccounts { get; set; }
                [DataMember] public bool ScoreHPbefore { get; set; }
                [DataMember] public string Fact2000BranchLetter { get; set; }
                [DataMember] public int hiExtInvoiceNo { get; set; }
                [DataMember] public int SRCashAndGoCustid { get; set; }
                [DataMember] public bool ServiceRepairCentre { get; set; }
                [DataMember] public bool BehaviouralScoring { get; set; }
                [DataMember] public string ThirdPartyWarehouse { get; set; }
                [DataMember] public int? defaultPrintLocation { get; set; }
                [DataMember] public bool? CreateStore { get; set; }
                [DataMember] public bool CashLoanBranch { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Bank
    {
                [DataMember] public short? origbr { get; set; }
                [DataMember] public string bankcode { get; set; }
                [DataMember] public string bankname { get; set; }
                [DataMember] public string bankaddr1 { get; set; }
                [DataMember] public string bankaddr2 { get; set; }
                [DataMember] public string bankaddr3 { get; set; }
                [DataMember] public string bankpocode { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class FinancialWeeks
    {
                [DataMember] public short Year { get; set; }
                [DataMember] public byte Week { get; set; }
                [DataMember] public DateTime? StartDate { get; set; }
                [DataMember] public DateTime? EndDate { get; set; }
                [DataMember] public byte? Quarter { get; set; }
                [DataMember] public byte? DaysCount { get; set; }
                [DataMember] public int? FinYear { get; set; }
                [DataMember] public short? FinMonth { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<ViewSets> ViewSets { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class ViewSets
    {
                [DataMember] public string setname { get; set; }
                [DataMember] public int empeeno { get; set; }
                [DataMember] public string tname { get; set; }
                [DataMember] public DateTime dateamend { get; set; }
                [DataMember] public string columntype { get; set; }
                [DataMember] public string setdescript { get; set; }
                [DataMember] public decimal? Value { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<ServiceSupplierView> ServiceSupplierView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class ServiceSupplierView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Supplier { get; set; }
            }

    

    }

