@model IList<Blue.Cosacs.Warehouse.DeliveryView>
@using Blue.Cosacs.Warehouse.Utils;
<style type="text/css">
    .Collection {
         border-left: 10px solid;
    }

    .del-col div.watermark {
        -webkit-transform: none;
        -moz-transform: none;
        color: rgba(230, 230, 230, 0.5);
        font-size: 10em;
        z-index: -100;
        position: absolute;
        top: -25px;
        left: 250px;
        visibility: visible;
    }
</style>

<span style="white-space:nowrap">
    <table class="main">
        <thead>
            <tr>
                <th colspan="2">Shipment No</th>
                <th style="text-align: left">Recipient and Address</th>
                <th class="number">Stock Loc</th>
                <th class="number">Quantity</th>
                <th>Item</th>
                <th>IUPC</th>
            </tr>
        </thead>
        <tbody>
            @{ foreach (var item in @Model)
                {

                <tr class="item noborder @DeliveryOrCollection.FromString(item.DeliveryOrCollection).Name" style="border-top: 1px solid black;">
                    <td rowspan="2" style="text-align:center">
                        @if (item.DeliveryOrCollectionDate.ToString() != null)
                        {
                            //@item.DeliveryOrCollectionDate.ToString("tt")
                            @item.DeliveryOrCollectionSlot
                        }
                        <div class="del-col">
                            <div style="right: -15px">@DeliveryOrCollection.FromString(item.DeliveryOrCollection).Name</div>
                            @if (item.CurrentQuantity == 0)
                            {
                                <div class="watermark cancelled">CANCELLED</div>
                            }
                        </div>
                    </td>
                    <td rowspan="2" style="vertical-align: middle">
                        @Html.Barcode((string)@item.Id.ToString(), BarcodeLib.TYPE.CODE128, 130, 30, false, BarcodeLib.AlignmentPositions.CENTER, true)
                    </td>
                    <td>
                        <div class="block">
                            <div style="font-size: 1.6em">
                                <div style="white-space:normal"><strong>@item.CustomerName.HtmlDecode()&nbsp;[@item.AcctNo]</strong></div>
                                @*<div style="white-space:normal"><strong>@item.CustomerNamePrint.HtmlDecode()</div>*@
                                Delivery Details:
                                <div style="white-space:normal"><strong> @item.DName.HtmlDecode()</strong></div>

                                <div style="white-space:normal">@item.AddressLine1.HtmlDecode()<br /> @item.AddressLine2.HtmlDecode()<br /> @item.AddressLine3.HtmlDecode()  <br />@item.PostCode.HtmlDecode()</div>
                                <div style="white-space:normal" class="ContactInfoNewline-breaks">@item.ContactInfo.HtmlDecode()</div>@*//Address Standardization CR2019 - 025 add class for text alignment for Contact Info to show all lables in new line*@
                            </div>
                            @Html.GetNonStockServicesHtml(item)
                            <div style="white-space:normal">Comments: @item.Comment</div>
                        </div>
                    </td>
                    <td class="number">
                        <div class="branch branchNo" style="white-space:normal">@item.StockBranch</div>
                    </td>
                    <td class="number"><div class="qty">@item.CurrentQuantity</div></td>
                    <td class="larger">
                        @*BOC CR 2018-13*@
                        @{
                            string invnum = string.Empty;
                            if (string.IsNullOrEmpty(item.OrderInvoiceNo) == false)
                            {
                                invnum =  item.OrderInvoiceNo;
                                if (invnum.Length == 14)
                                {
                                    invnum = invnum.Insert(3,  "-");
                                }
                            }
                        }
                        <span>Ord/Invoice No: #@invnum</span><br />
                        @*EOC CR 2018-13*@
                        <span>Shipment No: #@item.BookingId</span>
                        <div style="white-space:normal">@item.ProductDescription</div>
                        <div><label>Item No:</label>&nbsp;@item.ItemNo</div>
                        <div><label>Item UPC:</label>&nbsp;@item.ItemUPC</div>
                    </td>
                    <td rowspan="2">
                        @Html.Barcode((string)item.ItemUPC.ToString(), BarcodeLib.TYPE.CODE128, 130, 30, false, BarcodeLib.AlignmentPositions.CENTER, true)
                    </td>
                </tr>
                <tr class="item noborder @DeliveryOrCollection.FromString(item.DeliveryOrCollection).Name" style="border-bottom: 1px solid black;">
                    <td colspan="7" style="padding-top: 10px">
					Driver Notes:
					<div class="larger" style="white-space:normal;width:60%;">
						@Html.Raw(HttpUtility.HtmlEncode(item.AddressNotes))
					</div>
                    </td>
                </tr>
                <tr>
                    <td class="sign" colspan="7">
                        <div>
                            Recipient Signature
                        </div>
                        <div>
                            Print Name
                        </div>
                        <div>
                            Recipient Id
                        </div>
                    </td>
                </tr>
                }
            }
        </tbody>
    </table>
</span>
