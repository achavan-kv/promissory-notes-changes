@model List<Blue.Cosacs.Warehouse.Booking>
@using Blue.Cosacs.Warehouse.Utils;
@{
    ViewBag.Title = "Shipment #" + ViewBag.Id;
}
@using Blue.Cosacs.Web;
@{ var headerDetails = Model.Find(x => x.Id == Model.Select(m => m.Id).Min());}
<div data-module="warehouse/bookingDetails">
    <div class="section">Original Shipment Details</div>
    <div class="panel panel-default warehouseModule">
        <div class="panel-heading">
            <div class="row">
                <div class="col-lg-6">
                    <span class="itemQuantity" title="Quantity">@headerDetails.Quantity</span>
                    <span> x </span>
                    <span class="ItemDescription" title="Item Description">@Html.Raw(headerDetails.ProductDescription.HtmlDecode()) </span>
                    @if (headerDetails.Damaged)
                    {
                        <span title="Damaged" class="halflings warning-sign"></span>
                    }
                    @if (headerDetails.AssemblyReq)
                    {
                        <span title="AssemblyRequired" class="halflings text-background"></span>
                    }
                </div>
                <div class="col-lg-2">
                    
                </div>
                <div class="col-lg-4 text-right">
                    <span class="DeliveryCollection">
                        <span class="title">@DeliveryOrCollection.FromString(headerDetails.DeliveryOrCollection).Name</span> for
                        <span>@headerDetails.DeliveryOrCollectionDate.ToString("ddd dd MMM yyyy")</span>
                        <span>@headerDetails.DeliveryOrCollectionSlot</span>
                    </span>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <table class="table data">
                <thead>
                    <tr>
                        <th>
                            Recipient
                        </th>
                        <th>
                            Item Details
                        </th>
                        <th>
                            Comments
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <div>@headerDetails.AcctNo</div>
                            <div>
                                <b>@headerDetails.CustomerName.HtmlDecode()</b>
                            </div>
                            <div class="address">
                                <div>@headerDetails.AddressLine1.HtmlDecode()</div>
                                <div>@headerDetails.AddressLine2.HtmlDecode()</div>
                                <div>@headerDetails.AddressLine3.HtmlDecode()</div>
                                <div>@headerDetails.PostCode.HtmlDecode()</div>
                                <div class="ContactInfoNewline-breaks">@(headerDetails.ContactInfo == null ? "" : headerDetails.ContactInfo.HtmlDecode())</div>@*//Address Standardization CR2019 - 025 add class for text alignment for Contact Info to show all lables in new line*@
                            </div>
                        </td>
                        <td class="product">
                            <div class="row">
                                <div class="col-lg-4">
                                    <div><b>Item No</b></div>
                                    <div><b>Item UPC</b></div>
                                    <div><b>Category</b></div>
                                    <div><b>Cost</b></div>
                                    <div><b>Booked</b></div>
                                    @if (headerDetails.NonStockServiceType != null)
                                    {
                                        <div><b>Service</b></div>
                                    }
                                </div>
                                <div class="col-lg-8">
                                    <div>@headerDetails.ItemNo</div>
                                    <div>@headerDetails.ItemUPC</div>
                                    <div>@headerDetails.ProductCategory.HtmlDecode()</div>
                                    <div>@(ViewBag.CurrencySymbol + (headerDetails.UnitPrice * (headerDetails.CurrentQuantity.HasValue ? headerDetails.CurrentQuantity.Value : 0)).ToString("N"))</div>
                                    <div>@headerDetails.OrderedOn.ToString("dddd, dd MMMM yyyy")</div>
                                    <span>@headerDetails.DeliveryOrCollectionSlot</span>
                                    @Html.GetNonStockServicesHtml(headerDetails)
                                </div>
                            </div>
                            <div>@headerDetails.ProductBrand</div>
                            <div>@headerDetails.ProductModel</div>
                            <div>@headerDetails.ProductArea</div>
                        </td>
                        <td style="width: 25%;">
                            @headerDetails.Comment
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="row">
                <div class="col-lg-2 text-right"><b>Stock Branch</b></div>
                <div class="col-lg-10"><span class="stockbranch">@headerDetails.StockBranch.ToString()</span></div>
            </div>
            <div class="row">
                <div class="col-lg-2 text-right"><b>Delivery Branch</b></div>
                <div class="col-lg-10"><span class="delbranch">@headerDetails.DeliveryBranch.ToString()</span></div>
            </div>
        </div>
        
    </div>
    <div class="header">
        
    </div>
    @{ 
        var exceptions = Model.FindAll(x => x.Exception);
        var inProgress = Model.FindAll(x => !x.Exception && !(x.Status == "Delivered" || x.Status == "Rejected" || x.Status == "Closed"));
        var complete = Model.FindAll(x => !x.Exception && (x.Status == "Delivered" || x.Status == "Rejected" || x.Status == "Closed"));
        var allBookings = new List<List<Blue.Cosacs.Warehouse.Booking>>();
        allBookings.AddRange(new[] { exceptions, inProgress, complete });
        var names = new[] { "Exceptions", "InProgress", "Completed / Rejected" };
        var y = -1;
        var btnText = string.Empty;    
    }
    @foreach (var booktype in allBookings)
    {
        y++;
        if (booktype.Count > 0)
        { 
            <div class="section">@names[y]</div>

            foreach (var item in booktype)
            {
                btnText = item.Exception ? "Resolve" : "Amend";

        <div class="panel warehouseModule @(item.Exception ? "panel-danger" : (item.Status == "Delivered" || item.Status == "Collected" ? "panel-success" : "panel-default"))">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-lg-6">
                                <span class="resultType">Shipment</span>
                                <a class="Booking-Id refLink" href="@item.Id.ToString()">#@item.Id.ToString()</a>
                            </div>
                            <div class="col-lg-6 text-right">
                                <span class="DeliveryCollection">
                                    <span class="title">@DeliveryOrCollection.FromString(item.DeliveryOrCollection).Name</span> for
                                    <span>@item.DeliveryOrCollectionDate.ToString("ddd dd MMM yyyy")</span>
                                    <span>@item.DeliveryOrCollectionSlot</span>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body" data-id="@item.Id">
                        <div class="expandable itemDetail" data-id="@item.Id">
                            <table class="table data" data-id="@item.Id">
                                <thead>
                                    <tr>
                                        <th style="width: 10%">
                                            Shipment Date
                                        </th>
                                        <th style="width: 10%">
                                            Current Quantity
                                        </th>
                                        <th style="width: 25%">
                                            Last Status
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="itemDetail @(item.Id == ViewBag.Id ? "currentBooking" : "") search-result" data-id="@item.Id" valign="top">
                                        <td>@item.OrderedOn.DateToUILongString()</td>
                                        <td class="qty">@(item.CurrentQuantity.HasValue ? item.CurrentQuantity.Value : 0)</td>
                                        <td class="status">@item.Status</td>
                                    </tr>
                                </tbody>
                            </table>
                            <div class="tracking"></div>
                            <div class="trackingToggle text-center expandable-toggle"><span class="glyphicons more"></span></div>
                        </div>
                        <div class="exception" data-id="@item.Id">
                            <div class="row">
                                <div class="col-lg-6">
                                    <form class="form-horizontal">
                                        <div class="form-group">
                                            <label for="inputEmail" class="col col-lg-6 control-label">Select new date due</label>
                                            <div class="col col-lg-6">
                                                <input class="resolveDate form-control" readonly="true" type="text" style="margin-bottom: 4px;" />
                                                <select class="form-control" title="Select time">
                                                    <option value="am">AM</option>
                                                    <option value="pm">PM</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-lg-offset-6 col-lg-6 text-right">
                                                <button class="btn btn-primary btnResolve" disabled="disabled"> @btnText </button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="col-lg-6">
                                    <form class="form-horizontal">
                                        <div class="form-group">
                                            <div class="col col-lg-12">
                                                <textarea class="form-control cancelNotes" rows="3" maxlength="200"></textarea>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-lg-offset-6 col-lg-6 text-right">
                                                <button class="btn btn-default btnCancel" disabled="disabled"> Reject Shipment  </button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (item.Exception)
                    {
                        if (Html.HasPermission(Blue.Cosacs.Warehouse.Common.WarehousePermissionEnum.AmendBooking))
                        {  
                            <div class="panel-footer text-center">
                                <button type="button" class="btn btn-danger btn-block showException">Resolve Exception <span class="halflings chevron-down"></span></button>
                            </div>
                        } 
                    }
                    else if (!item.Exception && !(item.Status == "Delivered" || item.Status == "Rejected" || item.Status == "Closed" || item.Status == "Collected"))
                    {
                        if (Html.HasPermission(Blue.Cosacs.Warehouse.Common.WarehousePermissionEnum.AmendBooking))
                        {   
                            <div class="panel-footer text-center">
                                <button type="button" class="btn btn-success btn-block showAmend">Amend Details <span class="halflings chevron-down"></span></button>
                            </div>
                        } 
                    }
                </div>
            }
        }
    }
</div>
