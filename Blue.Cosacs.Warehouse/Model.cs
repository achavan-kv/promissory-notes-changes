













//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Blue.Transactions;

namespace Blue.Cosacs.Warehouse
{
    	public partial class BookingDetails : Blue.Transactions.Command<Context>
	{
	    public BookingDetails() : base("Warehouse.BookingDetails")
	    {
	                base.AddInParameter("@id", DbType.Int32 );
	            }
	
	        public int? id
	    {
	        get { return (int?)base[0]; }
	        set { base[0] = value; }
	    }
	    }
	
	partial class BookingDetails
	{
	    public new void Fill(DataSet ds)
	    {
	        base.Fill(ds);
	    }
	
	        public void Fill(DataSet ds,  int? _id)
	    {
	        this.id = _id;

	        Fill(ds);
	        
	    }
	    }
	
	public partial class UpdateStockQty : Blue.Transactions.Command<Context>
	{
	    public UpdateStockQty() : base("Warehouse.UpdateStockQty")
	    {
	                base.AddInParameter("@itemId", DbType.Int32 );
	                base.AddInParameter("@stockLocn", DbType.Int32 );
	                base.AddInParameter("@qty", DbType.Int32 );
	            }
	
	        public int? itemId
	    {
	        get { return (int?)base[0]; }
	        set { base[0] = value; }
	    }
	        public int? stockLocn
	    {
	        get { return (int?)base[1]; }
	        set { base[1] = value; }
	    }
	        public int? qty
	    {
	        get { return (int?)base[2]; }
	        set { base[2] = value; }
	    }
	    }
	
	partial class UpdateStockQty
	{
	    public new int ExecuteNonQuery()
	    {
	        return base.ExecuteNonQuery();
	    }
	
	        public int ExecuteNonQuery( int? _itemId, int? _stockLocn, int? _qty)
	    {
	        this.itemId = _itemId;
this.stockLocn = _stockLocn;
this.qty = _qty;

	        var __result = base.ExecuteNonQuery();
	        
	        return __result;
	    }
	    }
	

        public partial class ContextBase : DbContextBase
        {
			protected ContextBase(string connectionString = "Default") : base(connectionString) 
			{
				Database.SetInitializer<Context>(null);
			}
		 
            
                public virtual DbSet<Booking> Booking { get; set; }
            
                public virtual DbSet<Picking> Picking { get; set; }
            
                public virtual DbSet<Truck> Truck { get; set; }
            
                public virtual DbSet<ZoneAssignment> ZoneAssignment { get; set; }
            
                public virtual DbSet<Zone> Zone { get; set; }
            
                public virtual DbSet<Load> Load { get; set; }
            
                public virtual DbSet<Driver> Driver { get; set; }
            
                public virtual DbSet<Cancellation> Cancellation { get; set; }
            
                public virtual DbSet<DriverCommission> DriverCommission { get; set; }
            
                public virtual DbSet<DriverPayment> DriverPayment { get; set; }
            
            
            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                base.OnModelCreating(modelBuilder);
                
                        var t0 = modelBuilder.Entity< Booking >();
                        t0.ToTable("Booking", "Warehouse");
                        
                        t0.HasKey(t => t.Id);
                        
                        t0.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.CustomerName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(95)
                        
                        
                        ;
                        
                        t0.Property(t => t.AddressLine1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.AddressLine2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.AddressLine3)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.PostCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t0.Property(t => t.StockBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryOrCollection)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t0.Property(t => t.DeliveryOrCollectionDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.ItemNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(18)
                        
                        
                        ;
                        
                        t0.Property(t => t.ItemId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.ItemUPC)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(18)
                        
                        
                        ;
                        
                        t0.Property(t => t.ProductDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t0.Property(t => t.ProductBrand)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.ProductModel)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.ProductArea)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t0.Property(t => t.ProductCategory)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t0.Property(t => t.Quantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.RepoItemId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Comment)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(200)
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryZone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(8)
                        
                        
                        ;
                        
                        t0.Property(t => t.ContactInfo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(256)
                        
                        
                        ;
                        
                        t0.Property(t => t.OrderedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Damaged)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.AssemblyReq)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.AcctNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(12)
                        .IsFixedLength()
                        
                        ;
                        
                        t0.Property(t => t.OriginalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.TruckId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.PickingId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.PickingAssignedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.PickQuantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.PickingComment)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(160)
                        
                        
                        ;
                        
                        t0.Property(t => t.PickingRejectedReason)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.PickingRejected)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.ScheduleId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.ScheduleComment)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(160)
                        
                        
                        ;
                        
                        t0.Property(t => t.ScheduleSequence)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.PickingAssignedDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.UnitPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Path)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t0.Property(t => t.ScheduleRejected)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.ScheduleRejectedReason)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryRejected)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryRejectedReason)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryConfirmedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryRejectionNotes)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(160)
                        
                        
                        ;
                        
                        t0.Property(t => t.ScheduleQuantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliverQuantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Exception)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.CurrentQuantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Express)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.AddressNotes)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1000)
                        
                        
                        ;
                        
                        t0.Property(t => t.BookedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Fascia)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t0.Property(t => t.PickUp)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.PickUpDatePrinted)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.PickUpNotePrintedBy )
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryConfirmedDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryConfirmedOnDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DeliveryOrCollectionSlot)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(2)
                        .IsFixedLength()
                        
                        ;
                        
                        t0.Property(t => t.ScheduleRejectedDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.ScheduleRejectedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.SalesBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.NonStockServiceType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(8)
                        
                        
                        ;
                        
                        t0.Property(t => t.NonStockServiceItemNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(18)
                        
                        
                        ;
                        
                        t0.Property(t => t.NonStockServiceDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(75)
                        
                        
                        ;
                        
                        t0.Property(t => t.ReceivingLocation)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t1 = modelBuilder.Entity< Picking >();
                        t1.ToTable("Picking", "Warehouse");
                        
                        t1.HasKey(t => t.Id);
                        
                        t1.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.Createdby)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.CheckedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.ConfirmedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.ConfirmedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.Comment)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(160)
                        
                        
                        ;
                        
                        t1.Property(t => t.PickedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.PickedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t2 = modelBuilder.Entity< Truck >();
                        t2.ToTable("Truck", "Warehouse");
                        
                        t2.HasKey(t => t.Id);
                        
                        t2.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t2.Property(t => t.Branch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.DriverId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Size)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        var t3 = modelBuilder.Entity< ZoneAssignment >();
                        t3.ToTable("ZoneAssignment", "Warehouse");
                        
                        t3.HasKey(t => t.Id);
                        
                        t3.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.ZoneId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.AttributeName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t3.Property(t => t.AttributeValue)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        var t4 = modelBuilder.Entity< Zone >();
                        t4.ToTable("Zone", "Warehouse");
                        
                        t4.HasKey(t => t.Id);
                        
                        t4.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t4.Property(t => t.Branch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t5 = modelBuilder.Entity< Load >();
                        t5.ToTable("Load", "Warehouse");
                        
                        t5.HasKey(t => t.Id);
                        
                        t5.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.Createdby)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.DriverId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.ConfirmedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.ConfirmedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.DriverCommissionId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t6 = modelBuilder.Entity< Driver >();
                        t6.ToTable("Driver", "Warehouse");
                        
                        t6.HasKey(t => t.Id);
                        
                        t6.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t6.Property(t => t.PhoneNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        var t7 = modelBuilder.Entity< Cancellation >();
                        t7.ToTable("Cancellation", "Warehouse");
                        
                        t7.HasKey(t => t.Id);
                        
                        t7.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.UserId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Date)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Reason)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(200)
                        
                        
                        ;
                        
                        var t8 = modelBuilder.Entity< DriverCommission >();
                        t8.ToTable("DriverCommission", "Warehouse");
                        
                        t8.HasKey(t => t.Id);
                        
                        t8.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t9 = modelBuilder.Entity< DriverPayment >();
                        t9.ToTable("DriverPayment", "Warehouse");
                        
                        t9.HasKey(t => t.Id);
                        
                        t9.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.SendingBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.ReceivingBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.Size)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t9.Property(t => t.Value)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        .HasPrecision(28,12)
                        ;
                        
                        modelBuilder.Entity< StatusView >().ToTable("StatusView", "Warehouse");
                        
                        modelBuilder.Entity< DriverCommissionView >().ToTable("DriverCommissionView", "Warehouse");
                        
                        modelBuilder.Entity< PickListView >().ToTable("PickListView", "Warehouse");
                        
                        modelBuilder.Entity< PickingView >().ToTable("PickingView", "Warehouse");
                        
                        modelBuilder.Entity< TruckPendingView >().ToTable("TruckPendingView", "Warehouse");
                        
                        modelBuilder.Entity< TruckDeliveryView >().ToTable("TruckDeliveryView", "Warehouse");
                        
                        modelBuilder.Entity< TruckView >().ToTable("TruckView", "Warehouse");
                        
                        modelBuilder.Entity< TruckConfirmedView >().ToTable("TruckConfirmedView", "Warehouse");
                        
                        modelBuilder.Entity< BookingPendingView >().ToTable("BookingPendingView", "Warehouse");
                        
                        modelBuilder.Entity< ZonePriorityView >().ToTable("ZonePriorityView", "Warehouse");
                        
                        modelBuilder.Entity< LoadView >().ToTable("LoadView", "Warehouse");
                        
                        modelBuilder.Entity< ScheduleView >().ToTable("ScheduleView", "Warehouse");
                        
                        modelBuilder.Entity< BookingForceView >().ToTable("BookingForceView", "Warehouse");
                        
                        modelBuilder.Entity< BookingHistoryView >().ToTable("BookingHistoryView", "Warehouse");
                        
                        modelBuilder.Entity< DriverPaymentView >().ToTable("DriverPaymentView", "Warehouse");
                        
                        modelBuilder.Entity< BookingView >().ToTable("BookingView", "Warehouse");

            modelBuilder.Entity<DeliveryView>().ToTable("DeliveryView", "Warehouse");//CR2018-13

            modelBuilder.Entity< UserView >().ToTable("UserView", "Warehouse");
                        
            }
        }

        
        [Serializable]
	[DataContract]
    public partial class Booking
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string CustomerName { get; set; }
                //[DataMember] public string DName { get; set; }
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string AddressLine3 { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public short StockBranch { get; set; }
                [DataMember] public short DeliveryBranch { get; set; }
                [DataMember] public string DeliveryOrCollection { get; set; }
                [DataMember] public DateTime DeliveryOrCollectionDate { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public int ItemId { get; set; }
                [DataMember] public string ItemUPC { get; set; }
                [DataMember] public string ProductDescription { get; set; }
                [DataMember] public string ProductBrand { get; set; }
                [DataMember] public string ProductModel { get; set; }
                [DataMember] public string ProductArea { get; set; }
                [DataMember] public string ProductCategory { get; set; }
                [DataMember] public short Quantity { get; set; }
                [DataMember] public int? RepoItemId { get; set; }
                [DataMember] public string Comment { get; set; }
                [DataMember] public string DeliveryZone { get; set; }
                [DataMember] public string ContactInfo { get; set; }
                [DataMember] public DateTime OrderedOn { get; set; }
                [DataMember] public bool Damaged { get; set; }
                [DataMember] public bool AssemblyReq { get; set; }
                [DataMember] public string AcctNo { get; set; }
                [DataMember] public int? OriginalId { get; set; }
                [DataMember] public int? TruckId { get; set; }
                [DataMember] public int? PickingId { get; set; }
                [DataMember] public int? PickingAssignedBy { get; set; }
                [DataMember] public int? PickQuantity { get; set; }
                [DataMember] public string PickingComment { get; set; }
                [DataMember] public string PickingRejectedReason { get; set; }
                [DataMember] public bool? PickingRejected { get; set; }
                [DataMember] public int? ScheduleId { get; set; }
                [DataMember] public string ScheduleComment { get; set; }
                [DataMember] public int? ScheduleSequence { get; set; }
                [DataMember] public DateTime? PickingAssignedDate { get; set; }
                [DataMember] public decimal UnitPrice { get; set; }
                [DataMember] public string Path { get; set; }
                [DataMember] public bool? ScheduleRejected { get; set; }
                [DataMember] public string ScheduleRejectedReason { get; set; }
                [DataMember] public bool? DeliveryRejected { get; set; }
                [DataMember] public string DeliveryRejectedReason { get; set; }
                [DataMember] public int? DeliveryConfirmedBy { get; set; }
                [DataMember] public string DeliveryRejectionNotes { get; set; }
                [DataMember] public int? ScheduleQuantity { get; set; }
                [DataMember] public int? DeliverQuantity { get; set; }
                [DataMember] public bool Exception { get; set; }
                [DataMember] public int? CurrentQuantity { get; set; }
                [DataMember] public bool Express { get; set; }
                [DataMember] public string AddressNotes { get; set; }
                [DataMember] public int? BookedBy { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public bool PickUp { get; set; }
                [DataMember] public DateTime? PickUpDatePrinted { get; set; }
                [DataMember] public int? @PickUpNotePrintedBy  { get; set; }
                [DataMember] public DateTime? DeliveryConfirmedDate { get; set; }
                [DataMember] public DateTime? DeliveryConfirmedOnDate { get; set; }
                [DataMember] public string DeliveryOrCollectionSlot { get; set; }
                [DataMember] public DateTime? ScheduleRejectedDate { get; set; }
                [DataMember] public int? ScheduleRejectedBy { get; set; }
                [DataMember] public int? SalesBranch { get; set; }
                [DataMember] public string NonStockServiceType { get; set; }
                [DataMember] public string NonStockServiceItemNo { get; set; }
                [DataMember] public string NonStockServiceDescription { get; set; }
                [DataMember] public int? ReceivingLocation { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Picking
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int Createdby { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int? CheckedBy { get; set; }
                [DataMember] public int? ConfirmedBy { get; set; }
                [DataMember] public DateTime? ConfirmedOn { get; set; }
                [DataMember] public string Comment { get; set; }
                [DataMember] public int? PickedBy { get; set; }
                [DataMember] public DateTime? PickedOn { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Truck
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public short Branch { get; set; }
                [DataMember] public int DriverId { get; set; }
                [DataMember] public string Size { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class ZoneAssignment
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int? ZoneId { get; set; }
                [DataMember] public string AttributeName { get; set; }
                [DataMember] public string AttributeValue { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Zone
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public short? Branch { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Load
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int Createdby { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int DriverId { get; set; }
                [DataMember] public DateTime? ConfirmedOn { get; set; }
                [DataMember] public int? ConfirmedBy { get; set; }
                [DataMember] public int? DriverCommissionId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Driver
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public string PhoneNumber { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Cancellation
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int UserId { get; set; }
                [DataMember] public DateTime Date { get; set; }
                [DataMember] public string Reason { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class DriverCommission
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int CreatedBy { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class DriverPayment
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public short SendingBranch { get; set; }
                [DataMember] public short ReceivingBranch { get; set; }
                [DataMember] public string Size { get; set; }
                [DataMember] public decimal? Value { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<StatusView> StatusView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class StatusView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public short StockBranch { get; set; }
                [DataMember] public short DeliveryBranch { get; set; }
                [DataMember] public bool Exception { get; set; }
                [DataMember] public bool? DeliveryRejected { get; set; }
                [DataMember] public bool? ScheduleRejected { get; set; }
                [DataMember] public bool? PickingRejected { get; set; }
                [DataMember] public int? PickListNo { get; set; }
                [DataMember] public int? CancelledId { get; set; }
                [DataMember] public int Closed { get; set; }
                [DataMember] public string DeliveryOrCollection { get; set; }
                [DataMember] public int? PickUpNotePrintedBy { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<DriverCommissionView> DriverCommissionView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class DriverCommissionView
    {
                [DataMember] public int? Id { get; set; }
                [DataMember] public int? ScheduleId { get; set; }
                [DataMember] public short? StockBranch { get; set; }
                [DataMember] public DateTime? ScheduleOn { get; set; }
                [DataMember] public DateTime? DeliveredOn { get; set; }
                [DataMember] public string PickingId { get; set; }
                [DataMember] public decimal? LineTotal { get; set; }
                [DataMember] public DateTime? ExportedOn { get; set; }
                [DataMember] public int? ExportedBy { get; set; }
                [DataMember] public int? DriverId { get; set; }
                [DataMember] public string DriverName { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<PickListView> PickListView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class PickListView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int CreatedBy { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int? PickedBy { get; set; }
                [DataMember] public int? CheckedBy { get; set; }
                [DataMember] public int? ConfirmedBy { get; set; }
                [DataMember] public DateTime? ConfirmedOn { get; set; }
                [DataMember] public string PickListComment { get; set; }
                [DataMember] public string ItemComment { get; set; }
                [DataMember] public int BookingId { get; set; }
                [DataMember] public string PickingComment { get; set; }
                [DataMember] public string AcctNo { get; set; }
                [DataMember] public string CustomerName { get; set; }
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string AddressLine3 { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public short StockBranch { get; set; }
                [DataMember] public short DeliveryBranch { get; set; }
                [DataMember] public string DeliveryOrCollection { get; set; }
                [DataMember] public DateTime DeliveryOrCollectionDate { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public int ItemId { get; set; }
                [DataMember] public string ItemUPC { get; set; }
                [DataMember] public string ProductArea { get; set; }
                [DataMember] public string ProductCategory { get; set; }
                [DataMember] public string ProductDescription { get; set; }
                [DataMember] public string ProductBrand { get; set; }
                [DataMember] public string ProductModel { get; set; }
                [DataMember] public int? PickQuantity { get; set; }
                [DataMember] public short Quantity { get; set; }
                [DataMember] public int? RepoItemId { get; set; }
                [DataMember] public bool AssemblyReq { get; set; }
                [DataMember] public bool Damaged { get; set; }
                [DataMember] public string ContactInfo { get; set; }
                [DataMember] public DateTime? OrderedOn { get; set; }
                [DataMember] public bool? PickingRejected { get; set; }
                [DataMember] public bool? ScheduleRejected { get; set; }
                [DataMember] public string ScheduleRejectedReason { get; set; }
                [DataMember] public string ScheduleComment { get; set; }
                [DataMember] public int? ScheduleQuantity { get; set; }
                [DataMember] public decimal UnitPrice { get; set; }
                [DataMember] public int TruckId { get; set; }
                [DataMember] public string TruckName { get; set; }
                [DataMember] public int? OriginalId { get; set; }
                [DataMember] public int? CurrentQuantity { get; set; }
                [DataMember] public string AddressNotes { get; set; }
                [DataMember] public int? ReceivingLocation { get; set; }
                [DataMember] public string CreatedByName { get; set; }
                [DataMember] public string PickedByName { get; set; }
                [DataMember] public string CheckedByName { get; set; }
                [DataMember] public string ConfirmedByName { get; set; }
                [DataMember] public int? ScheduleId { get; set; }
                [DataMember] public string NonStockServiceType { get; set; }
                [DataMember] public string NonStockServiceItemNo { get; set; }
                [DataMember] public string NonStockServiceDescription { get; set; }
                [DataMember] public int? CancelUser { get; set; }
                [DataMember] public DateTime? CancelDate { get; set; }
                [DataMember] public string CancelReason { get; set; }
                [DataMember] public bool Express { get; set; }
                [DataMember] public double StockOnHand { get; set; }
                [DataMember] public DateTime? LastConfirmedOn { get; set; }
                [DataMember] public string CreatedByLogin { get; set; }
                [DataMember] public string PickedByLogin { get; set; }
                [DataMember] public string CheckedByLogin { get; set; }
                [DataMember] public string ConfirmedByLogin { get; set; }
                [DataMember] public string DeliveryOrCollectionSlot { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<PickingView> PickingView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class PickingView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int CreatedBy { get; set; }
                [DataMember] public int? CheckedBy { get; set; }
                [DataMember] public int? ConfirmedBy { get; set; }
                [DataMember] public int? PickedBy { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public DateTime? ConfirmedOn { get; set; }
                [DataMember] public DateTime? PickedOn { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public string BranchName { get; set; }
                [DataMember] public string CreatedByName { get; set; }
                [DataMember] public string CheckedByName { get; set; }
                [DataMember] public string PickedByName { get; set; }
                [DataMember] public string ConfirmedByName { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<TruckPendingView> TruckPendingView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class TruckPendingView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public short Branch { get; set; }
                [DataMember] public int Count { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<TruckDeliveryView> TruckDeliveryView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class TruckDeliveryView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public short Branch { get; set; }
                [DataMember] public int Count { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<TruckView> TruckView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class TruckView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public short Branch { get; set; }
                [DataMember] public string BranchName { get; set; }
                [DataMember] public int DriverId { get; set; }
                [DataMember] public string Driver { get; set; }
                [DataMember] public string Size { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<TruckConfirmedView> TruckConfirmedView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class TruckConfirmedView
    {
                [DataMember] public int? TruckId { get; set; }
                [DataMember] public DateTime? LastConfirmedOn { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<BookingPendingView> BookingPendingView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class BookingPendingView
    {
                [DataMember] public string AcctNo { get; set; }
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string AddressLine3 { get; set; }
                [DataMember] public bool AssemblyReq { get; set; }
                [DataMember] public string Comment { get; set; }
                [DataMember] public string ContactInfo { get; set; }
                [DataMember] public int? CurrentQuantity { get; set; }
                [DataMember] public string CustomerName { get; set; }
                [DataMember] public bool Damaged { get; set; }
                [DataMember] public int? DeliverQuantity { get; set; }
                [DataMember] public short DeliveryBranch { get; set; }
                [DataMember] public int? DeliveryConfirmedBy { get; set; }
                [DataMember] public string DeliveryOrCollection { get; set; }
                [DataMember] public DateTime DeliveryOrCollectionDate { get; set; }
                [DataMember] public bool? DeliveryRejected { get; set; }
                [DataMember] public string DeliveryRejectedReason { get; set; }
                [DataMember] public string DeliveryRejectionNotes { get; set; }
                [DataMember] public string DeliveryZone { get; set; }
                [DataMember] public bool Exception { get; set; }
                [DataMember] public bool Express { get; set; }
                [DataMember] public int Id { get; set; }
                [DataMember] public int ItemId { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public string ItemUPC { get; set; }
                [DataMember] public DateTime? OrderedOn { get; set; }
                [DataMember] public int? OriginalId { get; set; }
                [DataMember] public string Path { get; set; }
                [DataMember] public int? PickingAssignedBy { get; set; }
                [DataMember] public DateTime? PickingAssignedDate { get; set; }
                [DataMember] public string PickingComment { get; set; }
                [DataMember] public int? PickingId { get; set; }
                [DataMember] public bool? PickingRejected { get; set; }
                [DataMember] public string PickingRejectedReason { get; set; }
                [DataMember] public int? PickQuantity { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public string ProductArea { get; set; }
                [DataMember] public string ProductBrand { get; set; }
                [DataMember] public string ProductCategory { get; set; }
                [DataMember] public string ProductDescription { get; set; }
                [DataMember] public string ProductModel { get; set; }
                [DataMember] public short Quantity { get; set; }
                [DataMember] public int? RepoItemId { get; set; }
                [DataMember] public string ScheduleComment { get; set; }
                [DataMember] public int? ScheduleId { get; set; }
                [DataMember] public int? ScheduleQuantity { get; set; }
                [DataMember] public bool? ScheduleRejected { get; set; }
                [DataMember] public string ScheduleRejectedReason { get; set; }
                [DataMember] public int? ScheduleSequence { get; set; }
                [DataMember] public short StockBranch { get; set; }
                [DataMember] public int? TruckId { get; set; }
                [DataMember] public decimal UnitPrice { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public bool PickUp { get; set; }
                [DataMember] public string NonStockServiceType { get; set; }
                [DataMember] public string NonStockServiceItemNo { get; set; }
                [DataMember] public string NonStockServiceDescription { get; set; }
                [DataMember] public int? CancelUser { get; set; }
                [DataMember] public DateTime? CancelDate { get; set; }
                [DataMember] public string CancelReason { get; set; }
                [DataMember] public double StockOnHand { get; set; }
                [DataMember] public int? CancellationId { get; set; }
                [DataMember] public string DeliveryOrCollectionSlot { get; set; }
                [DataMember] public int? ReceivingLocation { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<ZonePriorityView> ZonePriorityView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class ZonePriorityView
    {
                [DataMember] public short? origbr { get; set; }
                [DataMember] public string category { get; set; }
                [DataMember] public string code { get; set; }
                [DataMember] public string codedescript { get; set; }
                [DataMember] public string statusflag { get; set; }
                [DataMember] public short sortorder { get; set; }
                [DataMember] public string reference { get; set; }
                [DataMember] public string additional { get; set; }
                [DataMember] public string Additional2 { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<LoadView> LoadView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class LoadView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public string DriverName { get; set; }
                [DataMember] public string CreatedByName { get; set; }
                [DataMember] public DateTime? ConfirmedOn { get; set; }
                [DataMember] public string ConfirmedByName { get; set; }
                [DataMember] public string CreatedByLogin { get; set; }
                [DataMember] public string ConfirmedByLogin { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<ScheduleView> ScheduleView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class ScheduleView
    {
                [DataMember] public int? ScheduleID { get; set; }
                [DataMember] public int BookingId { get; set; }
                [DataMember] public string PickingComment { get; set; }
                [DataMember] public int? PickingId { get; set; }
                [DataMember] public string CustomerName { get; set; }
                //[DataMember] public string CustomerNamePrint { get; set; }

                [DataMember] public string DName { get; set; }
        
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string AddressLine3 { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public short StockBranch { get; set; }
                [DataMember] public short DeliveryBranch { get; set; }
                [DataMember] public string DeliveryOrCollection { get; set; }
                [DataMember] public DateTime DeliveryOrCollectionDate { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public int ItemId { get; set; }
                [DataMember] public string ItemUPC { get; set; }
                [DataMember] public string ProductArea { get; set; }
                [DataMember] public string ProductCategory { get; set; }
                [DataMember] public string ProductDescription { get; set; }
                [DataMember] public string ProductBrand { get; set; }
                [DataMember] public string ProductModel { get; set; }
                [DataMember] public int? CurrentQuantity { get; set; }
                [DataMember] public int? RepoItemId { get; set; }
                [DataMember] public bool AssemblyReq { get; set; }
                [DataMember] public bool Damaged { get; set; }
                [DataMember] public string ContactInfo { get; set; }
                [DataMember] public DateTime OrderedOn { get; set; }
                [DataMember] public string DeliveryBranchName { get; set; }
                [DataMember] public int TruckId { get; set; }
                [DataMember] public string TruckName { get; set; }
                [DataMember] public string DeliveryZone { get; set; }
                [DataMember] public int? ScheduleQuantity { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<BookingForceView> BookingForceView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class BookingForceView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string CustomerName { get; set; }
                [DataMember] public string Account { get; set; }
                [DataMember] public string Address { get; set; }
                [DataMember] public short StockBranch { get; set; }
                [DataMember] public short DeliveryBranch { get; set; }
                [DataMember] public string StockBranchName { get; set; }
                [DataMember] public string DeliveryBranchName { get; set; }
                [DataMember] public string DeliveryOrCollection { get; set; }
                [DataMember] public DateTime DeliveryOrCollectionDate { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public int ItemId { get; set; }
                [DataMember] public string ItemUPC { get; set; }
                [DataMember] public string ProductDescription { get; set; }
                [DataMember] public string ProductCategory { get; set; }
                [DataMember] public int? Quantity { get; set; }
                [DataMember] public string DeliveryZone { get; set; }
                [DataMember] public string OrderedOn { get; set; }
                [DataMember] public bool Damaged { get; set; }
                [DataMember] public int? PickListNo { get; set; }
                [DataMember] public DateTime? PickingConfirmedOn { get; set; }
                [DataMember] public int? ScheduleNo { get; set; }
                [DataMember] public int? Truck { get; set; }
                [DataMember] public int? OriginalId { get; set; }
                [DataMember] public bool Exception { get; set; }
                [DataMember] public int? CancelUser { get; set; }
                [DataMember] public DateTime? CancelDate { get; set; }
                [DataMember] public string PATH { get; set; }
                [DataMember] public bool? DeliveryRejected { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public bool PickUp { get; set; }
                [DataMember] public string DeliveryOrCollectionSlot { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<BookingHistoryView> BookingHistoryView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class BookingHistoryView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int? truckId { get; set; }
                [DataMember] public int? pickingID { get; set; }
                [DataMember] public int? ScheduleID { get; set; }
                [DataMember] public DateTime BookingOrderedOn { get; set; }
                [DataMember] public string DeliveryOrCollection { get; set; }
                [DataMember] public DateTime DeliveryOrCollectionDate { get; set; }
                [DataMember] public int? PickQuantity { get; set; }
                [DataMember] public string PickingComment { get; set; }
                [DataMember] public string PickingRejectedReason { get; set; }
                [DataMember] public bool? PickingRejected { get; set; }
                [DataMember] public string ScheduleComment { get; set; }
                [DataMember] public int? ScheduleSequence { get; set; }
                [DataMember] public DateTime? PickingCreatedOn { get; set; }
                [DataMember] public DateTime? PickingConfirmedOn { get; set; }
                [DataMember] public string PickListComment { get; set; }
                [DataMember] public DateTime? PickedOn { get; set; }
                [DataMember] public DateTime? ScheduleCreatedOn { get; set; }
                [DataMember] public int? DriverId { get; set; }
                [DataMember] public string DriverName { get; set; }
                [DataMember] public int? PickingAssignedBy { get; set; }
                [DataMember] public string PickingAssignedByName { get; set; }
                [DataMember] public DateTime? PickingAssignedDate { get; set; }
                [DataMember] public int? PickedBy { get; set; }
                [DataMember] public string PickedByName { get; set; }
                [DataMember] public int? PickedCreatedBy { get; set; }
                [DataMember] public string PickedCreatedByName { get; set; }
                [DataMember] public int? CheckedBy { get; set; }
                [DataMember] public string PickedCheckedByName { get; set; }
                [DataMember] public int? ConfirmedBy { get; set; }
                [DataMember] public string PickedConfirmedByName { get; set; }
                [DataMember] public int? LoadCreatedBy { get; set; }
                [DataMember] public string LoadCreatedByName { get; set; }
                [DataMember] public bool Exception { get; set; }
                [DataMember] public int? OriginalId { get; set; }
                [DataMember] public bool? ChildException { get; set; }
                [DataMember] public int? ChildId { get; set; }
                [DataMember] public DateTime? ExceptionCreatedOn { get; set; }
                [DataMember] public int? CancelUser { get; set; }
                [DataMember] public string CancelReason { get; set; }
                [DataMember] public DateTime? CancelDate { get; set; }
                [DataMember] public DateTime? DeliveryConfirmedOn { get; set; }
                [DataMember] public int? DeliveryConfirmedBy { get; set; }
                [DataMember] public string DeliveryConfirmedByName { get; set; }
                [DataMember] public int? DeliverQuantity { get; set; }
                [DataMember] public bool? DeliveryRejected { get; set; }
                [DataMember] public string DeliveryRejectionNotes { get; set; }
                [DataMember] public string DeliveryRejectedReason { get; set; }
                [DataMember] public short Quantity { get; set; }
                [DataMember] public int? ScheduleQuantity { get; set; }
                [DataMember] public int? CurrentQuantity { get; set; }
                [DataMember] public bool? ParentPickingRejected { get; set; }
                [DataMember] public bool? ParentScheduleRejected { get; set; }
                [DataMember] public bool? ParentDeliveryRejected { get; set; }
                [DataMember] public int? BookedBy { get; set; }
                [DataMember] public string TruckName { get; set; }
                [DataMember] public string BookedByName { get; set; }
                [DataMember] public int? PickUpNotePrintedBy { get; set; }
                [DataMember] public string PickUpNotePrintedByName { get; set; }
                [DataMember] public DateTime? PickUpDatePrinted { get; set; }
                [DataMember] public bool PickUp { get; set; }
                [DataMember] public DateTime? DeliveryConfirmedDate { get; set; }
                [DataMember] public DateTime? ScheduleRejectedDate { get; set; }
                [DataMember] public string ScheduleRejectedByName { get; set; }
                [DataMember] public int? ScheduleRejectedBy { get; set; }
                [DataMember] public string ScheduleRejectedReason { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<DriverPaymentView> DriverPaymentView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class DriverPaymentView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public short ReceivingBranch { get; set; }
                [DataMember] public string ReceivingBranchName { get; set; }
                [DataMember] public short SendingBranch { get; set; }
                [DataMember] public string SendingBranchName { get; set; }
                [DataMember] public string Size { get; set; }
                [DataMember] public decimal? Value { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<BookingView> BookingView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class BookingView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string CustomerName { get; set; }

        [DataMember] public string DName { get; set; }
        [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string AddressLine3 { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public short StockBranch { get; set; }
                [DataMember] public short DeliveryBranch { get; set; }
                [DataMember] public string DeliveryOrCollection { get; set; }
                [DataMember] public DateTime DeliveryOrCollectionDate { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public int ItemId { get; set; }
                [DataMember] public string ItemUPC { get; set; }
                [DataMember] public string ProductDescription { get; set; }
                [DataMember] public string ProductBrand { get; set; }
                [DataMember] public string ProductModel { get; set; }
                [DataMember] public string ProductArea { get; set; }
                [DataMember] public string ProductCategory { get; set; }
                [DataMember] public short Quantity { get; set; }
                [DataMember] public int? RepoItemId { get; set; }
                [DataMember] public string Comment { get; set; }
                [DataMember] public string DeliveryZone { get; set; }
                [DataMember] public string ContactInfo { get; set; }
                [DataMember] public DateTime? OrderedOn { get; set; }
                [DataMember] public bool Damaged { get; set; }
                [DataMember] public bool AssemblyReq { get; set; }
                [DataMember] public string AcctNo { get; set; }
                [DataMember] public int? OriginalId { get; set; }
                [DataMember] public int? TruckId { get; set; }
                [DataMember] public int? PickingId { get; set; }
                [DataMember] public int? PickingAssignedBy { get; set; }
                [DataMember] public int? PickQuantity { get; set; }
                [DataMember] public string PickingComment { get; set; }
                [DataMember] public string PickingRejectedReason { get; set; }
                [DataMember] public bool? PickingRejected { get; set; }
                [DataMember] public int? ScheduleId { get; set; }
                [DataMember] public string ScheduleComment { get; set; }
                [DataMember] public int? ScheduleSequence { get; set; }
                [DataMember] public DateTime? PickingAssignedDate { get; set; }
                [DataMember] public decimal UnitPrice { get; set; }
                [DataMember] public string Path { get; set; }
                [DataMember] public bool? ScheduleRejected { get; set; }
                [DataMember] public string ScheduleRejectedReason { get; set; }
                [DataMember] public bool? DeliveryRejected { get; set; }
                [DataMember] public string DeliveryRejectedReason { get; set; }
                [DataMember] public int? DeliveryConfirmedBy { get; set; }
                [DataMember] public string DeliveryRejectionNotes { get; set; }
                [DataMember] public int? ScheduleQuantity { get; set; }
                [DataMember] public int? DeliverQuantity { get; set; }
                [DataMember] public bool Exception { get; set; }
                [DataMember] public int? CurrentQuantity { get; set; }
                [DataMember] public bool Express { get; set; }
                [DataMember] public string AddressNotes { get; set; }
                [DataMember] public int? BookedBy { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public bool PickUp { get; set; }
                [DataMember] public DateTime? PickUpDatePrinted { get; set; }
                [DataMember] public int? PickUpNotePrintedBy { get; set; }
                [DataMember] public DateTime? DeliveryConfirmedDate { get; set; }
                [DataMember] public int? CancelUser { get; set; }
                [DataMember] public DateTime? CancelDate { get; set; }
                [DataMember] public string CancelReason { get; set; }
                [DataMember] public double StockOnHand { get; set; }
                [DataMember] public string NonStockServiceType { get; set; }
                [DataMember] public string NonStockServiceItemNo { get; set; }
                [DataMember] public string NonStockServiceDescription { get; set; }
                [DataMember] public string DeliveryOrCollectionSlot { get; set; }
                [DataMember] public string StoreType { get; set; }
                [DataMember] public int? ReceivingLocation { get; set; }
    }

    //BOC CR2018-13

    partial class ContextBase
    {
        public virtual DbSet<DeliveryView> DeliveryView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class DeliveryView
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public string CustomerName { get; set; }
        [DataMember] public string DName { get; set; }
        [DataMember] public string AddressLine1 { get; set; }
        [DataMember] public string AddressLine2 { get; set; }
        [DataMember] public string AddressLine3 { get; set; }
        [DataMember] public string PostCode { get; set; }
        [DataMember] public short StockBranch { get; set; }
        [DataMember] public short DeliveryBranch { get; set; }
        [DataMember] public string DeliveryOrCollection { get; set; }
        [DataMember] public DateTime DeliveryOrCollectionDate { get; set; }
        [DataMember] public string ItemNo { get; set; }
        [DataMember] public int ItemId { get; set; }
        [DataMember] public string ItemUPC { get; set; }
        [DataMember] public string ProductDescription { get; set; }
        [DataMember] public string ProductBrand { get; set; }
        [DataMember] public string ProductModel { get; set; }
        [DataMember] public string ProductArea { get; set; }
        [DataMember] public string ProductCategory { get; set; }
        [DataMember] public short Quantity { get; set; }
        [DataMember] public int? RepoItemId { get; set; }
        [DataMember] public string Comment { get; set; }
        [DataMember] public string DeliveryZone { get; set; }
        [DataMember] public string ContactInfo { get; set; }
        [DataMember] public DateTime? OrderedOn { get; set; }
        [DataMember] public bool Damaged { get; set; }
        [DataMember] public bool AssemblyReq { get; set; }
        [DataMember] public string AcctNo { get; set; }
        [DataMember] public int? OriginalId { get; set; }
        [DataMember] public int? TruckId { get; set; }
        [DataMember] public int? PickingId { get; set; }
        [DataMember] public int? PickingAssignedBy { get; set; }
        [DataMember] public int? PickQuantity { get; set; }
        [DataMember] public string PickingComment { get; set; }
        [DataMember] public string PickingRejectedReason { get; set; }
        [DataMember] public bool? PickingRejected { get; set; }
        [DataMember] public int? ScheduleId { get; set; }
        [DataMember] public string ScheduleComment { get; set; }
        [DataMember] public int? ScheduleSequence { get; set; }
        [DataMember] public DateTime? PickingAssignedDate { get; set; }
        [DataMember] public decimal UnitPrice { get; set; }
        [DataMember] public string Path { get; set; }
        [DataMember] public bool? ScheduleRejected { get; set; }
        [DataMember] public string ScheduleRejectedReason { get; set; }
        [DataMember] public bool? DeliveryRejected { get; set; }
        [DataMember] public string DeliveryRejectedReason { get; set; }
        [DataMember] public int? DeliveryConfirmedBy { get; set; }
        [DataMember] public string DeliveryRejectionNotes { get; set; }
        [DataMember] public int? ScheduleQuantity { get; set; }
        [DataMember] public int? DeliverQuantity { get; set; }
        [DataMember] public bool Exception { get; set; }
        [DataMember] public int? CurrentQuantity { get; set; }
        [DataMember] public bool Express { get; set; }
        [DataMember] public string AddressNotes { get; set; }
        [DataMember] public int? BookedBy { get; set; }
        [DataMember] public string Fascia { get; set; }
        [DataMember] public bool PickUp { get; set; }
        [DataMember] public DateTime? PickUpDatePrinted { get; set; }
        [DataMember] public int? PickUpNotePrintedBy { get; set; }
        [DataMember] public DateTime? DeliveryConfirmedDate { get; set; }
        [DataMember] public int? CancelUser { get; set; }
        [DataMember] public DateTime? CancelDate { get; set; }
        [DataMember] public string CancelReason { get; set; }
        [DataMember] public double StockOnHand { get; set; }
        [DataMember] public string NonStockServiceType { get; set; }
        [DataMember] public string NonStockServiceItemNo { get; set; }
        [DataMember] public string NonStockServiceDescription { get; set; }
        [DataMember] public string DeliveryOrCollectionSlot { get; set; }
        [DataMember] public string StoreType { get; set; }
        [DataMember] public int? ReceivingLocation { get; set; }
        [DataMember] public string OrderInvoiceNo { get; set; }//CR2018-13 to display Invoice Suvidha
    }
    //EOC CR2018-13

    partial class ContextBase
    {
        public virtual DbSet<UserView> UserView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class UserView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public short BranchNo { get; set; }
                [DataMember] public string Login { get; set; }
                [DataMember] public string Password { get; set; }
                [DataMember] public DateTime LastChangePassword { get; set; }
                [DataMember] public string FirstName { get; set; }
                [DataMember] public string LastName { get; set; }
                [DataMember] public string ExternalLogin { get; set; }
                [DataMember] public long? LegacyPassword { get; set; }
                [DataMember] public string eMail { get; set; }
                [DataMember] public bool Locked { get; set; }
                [DataMember] public string FullName { get; set; }
                [DataMember] public bool RequireChangePassword { get; set; }
                [DataMember] public string FactEmployeeNo { get; set; }
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string AddressLine3 { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public string Phone { get; set; }
                [DataMember] public string PhoneAlternate { get; set; }
            }

        public partial class Settings : Blue.Config.SettingsBase
    {
        public Settings() : base(Blue.Cosacs.Warehouse.Module.Instance) {}

        public static StructureMap.Configuration.DSL.IRegistry Register<T>(StructureMap.Configuration.DSL.IRegistry registry, T singletonObject)
            where T : Blue.Config.ISettings

        {
            registry.For<Blue.Config.ISettings>().Add(singletonObject).Named(@"Blue.Cosacs.Warehouse");
            registry.For<T>().Singleton().Use(singletonObject);
            return registry;
        }

        public override Blue.Config.SettingMetadata[] Metadata()
        {
            return metadata;
        }

        #region Setting Metadata
        private static readonly Blue.Config.SettingMetadata[] metadata = new Blue.Config.SettingMetadata[] 
        {
                        new Blue.Config.SettingMetadata.@list {
                Id = @"DELREJECT",
                Name = @"Delivery Warehouse Reject Codes",
                Description = @"WDR - Delivery Rejection Reasons",
                Category = @"Code-cat",
                Default = @"Delivery Rejected",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"LOADREJECT",
                Name = @"Load Warehouse Reject Codes",
                Description = @"WLR - Load Rejection Reasons",
                Category = @"Code-cat",
                Default = @"Load Rejected",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"PICKREJECT",
                Name = @"Picking Warehouse Reject Codes",
                Description = @"WPR - Picking Rejection Reasons",
                Category = @"Code-cat",
                Default = @"Picking Rejected",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"COLREJECT",
                Name = @"Collection Warehouse Reject Codes",
                Description = @"WCR - Collection Rejection Reasons",
                Category = @"Code-cat",
                Default = @"Return Rejected",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"PICKUPREJECT",
                Name = @"PickUp Warehouse Reject Codes",
                Description = @"WPUR - PickUp Rejection Reasons",
                Category = @"Code-cat",
                Default = @"PickUp Rejected",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"TRUCKSIZE",
                Name = @"Truck Sizes for Internal Driver Payments",
                Description = @"Truck Sizes",
                Category = @"Code-cat",
                Default = @"Regular",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                    };
        #endregion

        #region Setting Enums
                #endregion

        #region Setting Properties
                public System.String[] DELREJECT 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("DELREJECT"); }
        }
                public System.String[] LOADREJECT 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("LOADREJECT"); }
        }
                public System.String[] PICKREJECT 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("PICKREJECT"); }
        }
                public System.String[] COLREJECT 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("COLREJECT"); }
        }
                public System.String[] PICKUPREJECT 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("PICKUPREJECT"); }
        }
                public System.String[] TRUCKSIZE 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("TRUCKSIZE"); }
        }
                #endregion
    }
    
    

        public class Module : Blue.Config.ModuleBase
    {
        private Module() {}

        public static readonly Module Instance = new Module
        {
            Label = @"Logistics",
            Namespace = @"Blue.Cosacs.Warehouse",
            Schema = @"Warehouse",
        };
    }
    }
