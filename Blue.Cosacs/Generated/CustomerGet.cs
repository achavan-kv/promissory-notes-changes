

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Artemis Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------




using System;
using System.Collections.Generic;
using System.Data;

namespace Blue.Cosacs
{
    public partial class CustomerGet : Artemis.Runtime.Data.Command
    {
        private const string ConnectionStringName = "Default";
        private const string ProcedureName = "[CustomerGet]";

	    public CustomerGet() : base(ConnectionStringName, ProcedureName, CommandType.StoredProcedure) {}

	    
	    public CustomerGet(System.String custid) : base(ConnectionStringName, ProcedureName, CommandType.StoredProcedure)
	    {
		    this.custid = custid;

	    }
	    

	    

protected override void Initialize()
{
	base.Initialize();
	
	
	AddInParameter("custid", DbType.String);
	
}

#region Parameters

public System.String custid
{
	
	set { this[0] = value; }
	
}

#endregion
    }
}

namespace Blue.Cosacs
{
	
	public partial class CustomerGet
	{
		

[Serializable]
public abstract partial class Record
{
	
	public abstract System.String custid
	{
		get;
	}
	
	public abstract System.String otherid
	{
		get;
	}
	
	public abstract System.Int16? branchnohdle
	{
		get;
	}
	
	public abstract System.String name
	{
		get;
	}
	
	public abstract System.String firstname
	{
		get;
	}
	
	public abstract System.String title
	{
		get;
	}
	
	public abstract System.String alias
	{
		get;
	}
	
	public abstract System.String addrsort
	{
		get;
	}
	
	public abstract System.String namesort
	{
		get;
	}
	
	public abstract System.DateTime? dateborn
	{
		get;
	}
	
	public abstract System.String sex
	{
		get;
	}
	
	public abstract System.String ethnicity
	{
		get;
	}
	
	public abstract System.String morerewardsno
	{
		get;
	}
	
	public abstract System.DateTime? effectivedate
	{
		get;
	}
	
	public abstract System.String IdNumber
	{
		get;
	}
	
	public abstract System.String IdType
	{
		get;
	}
	
	public abstract System.Byte? creditblocked
	{
		get;
	}
	
	public abstract System.Decimal? RFCreditLimit
	{
		get;
	}
	
	public abstract System.Byte? RFCardSeqNo
	{
		get;
	}
	
	public abstract System.String RFCardPrinted
	{
		get;
	}
	
	public abstract System.DateTime? datelastscored
	{
		get;
	}
	
	public abstract System.DateTime? RFDateReminded
	{
		get;
	}
	
	public abstract System.Int32? empeenochange
	{
		get;
	}
	
	public abstract System.DateTime? datechange
	{
		get;
	}
	
	public abstract System.String maidenname
	{
		get;
	}
	
	public abstract System.Decimal? OldRFCreditLimit
	{
		get;
	}
	
	public abstract System.String LimitType
	{
		get;
	}
	
	public abstract System.Decimal? AvailableSpend
	{
		get;
	}
	
	public abstract System.String ScoringBand
	{
		get;
	}
	
	public abstract System.String InstantCredit
	{
		get;
	}
	
	public abstract System.String StoreType
	{
		get;
	}
	
	public abstract System.Boolean? LoanQualified
	{
		get;
	}
	
	public abstract System.Int32? dependants
	{
		get;
	}
	
	public abstract System.String maritalstat
	{
		get;
	}
	
	public abstract System.String Nationality
	{
		get;
	}
	
	public abstract System.Byte? recurringarrears
	{
		get;
	}
	
	public abstract System.Int32? age
	{
		get;
	}
	
	public abstract System.String ScoreCardType
	{
		get;
	}
	
}

class Online : Record
{
	public IDataRecord Record;
	
	
	public override System.String custid
	{
		get 
		{ 
			if (Record.IsDBNull(0))
				return null;
			else
				return (System.String)Record[0]; 
		}
	}
	
	public override System.String otherid
	{
		get 
		{ 
			if (Record.IsDBNull(1))
				return null;
			else
				return (System.String)Record[1]; 
		}
	}
	
	public override System.Int16? branchnohdle
	{
		get 
		{ 
			if (Record.IsDBNull(2))
				return null;
			else
				return (System.Int16)Record[2]; 
		}
	}
	
	public override System.String name
	{
		get 
		{ 
			if (Record.IsDBNull(3))
				return null;
			else
				return (System.String)Record[3]; 
		}
	}
	
	public override System.String firstname
	{
		get 
		{ 
			if (Record.IsDBNull(4))
				return null;
			else
				return (System.String)Record[4]; 
		}
	}
	
	public override System.String title
	{
		get 
		{ 
			if (Record.IsDBNull(5))
				return null;
			else
				return (System.String)Record[5]; 
		}
	}
	
	public override System.String alias
	{
		get 
		{ 
			if (Record.IsDBNull(6))
				return null;
			else
				return (System.String)Record[6]; 
		}
	}
	
	public override System.String addrsort
	{
		get 
		{ 
			if (Record.IsDBNull(7))
				return null;
			else
				return (System.String)Record[7]; 
		}
	}
	
	public override System.String namesort
	{
		get 
		{ 
			if (Record.IsDBNull(8))
				return null;
			else
				return (System.String)Record[8]; 
		}
	}
	
	public override System.DateTime? dateborn
	{
		get 
		{ 
			if (Record.IsDBNull(9))
				return null;
			else
				return (System.DateTime)Record[9]; 
		}
	}
	
	public override System.String sex
	{
		get 
		{ 
			if (Record.IsDBNull(10))
				return null;
			else
				return (System.String)Record[10]; 
		}
	}
	
	public override System.String ethnicity
	{
		get 
		{ 
			if (Record.IsDBNull(11))
				return null;
			else
				return (System.String)Record[11]; 
		}
	}
	
	public override System.String morerewardsno
	{
		get 
		{ 
			if (Record.IsDBNull(12))
				return null;
			else
				return (System.String)Record[12]; 
		}
	}
	
	public override System.DateTime? effectivedate
	{
		get 
		{ 
			if (Record.IsDBNull(13))
				return null;
			else
				return (System.DateTime)Record[13]; 
		}
	}
	
	public override System.String IdNumber
	{
		get 
		{ 
			if (Record.IsDBNull(14))
				return null;
			else
				return (System.String)Record[14]; 
		}
	}
	
	public override System.String IdType
	{
		get 
		{ 
			if (Record.IsDBNull(15))
				return null;
			else
				return (System.String)Record[15]; 
		}
	}
	
	public override System.Byte? creditblocked
	{
		get 
		{ 
			if (Record.IsDBNull(16))
				return null;
			else
				return (System.Byte)Record[16]; 
		}
	}
	
	public override System.Decimal? RFCreditLimit
	{
		get 
		{ 
			if (Record.IsDBNull(17))
				return null;
			else
				return (System.Decimal)Record[17]; 
		}
	}
	
	public override System.Byte? RFCardSeqNo
	{
		get 
		{ 
			if (Record.IsDBNull(18))
				return null;
			else
				return (System.Byte)Record[18]; 
		}
	}
	
	public override System.String RFCardPrinted
	{
		get 
		{ 
			if (Record.IsDBNull(19))
				return null;
			else
				return (System.String)Record[19]; 
		}
	}
	
	public override System.DateTime? datelastscored
	{
		get 
		{ 
			if (Record.IsDBNull(20))
				return null;
			else
				return (System.DateTime)Record[20]; 
		}
	}
	
	public override System.DateTime? RFDateReminded
	{
		get 
		{ 
			if (Record.IsDBNull(21))
				return null;
			else
				return (System.DateTime)Record[21]; 
		}
	}
	
	public override System.Int32? empeenochange
	{
		get 
		{ 
			if (Record.IsDBNull(22))
				return null;
			else
				return (System.Int32)Record[22]; 
		}
	}
	
	public override System.DateTime? datechange
	{
		get 
		{ 
			if (Record.IsDBNull(23))
				return null;
			else
				return (System.DateTime)Record[23]; 
		}
	}
	
	public override System.String maidenname
	{
		get 
		{ 
			if (Record.IsDBNull(24))
				return null;
			else
				return (System.String)Record[24]; 
		}
	}
	
	public override System.Decimal? OldRFCreditLimit
	{
		get 
		{ 
			if (Record.IsDBNull(25))
				return null;
			else
				return (System.Decimal)Record[25]; 
		}
	}
	
	public override System.String LimitType
	{
		get 
		{ 
			if (Record.IsDBNull(26))
				return null;
			else
				return (System.String)Record[26]; 
		}
	}
	
	public override System.Decimal? AvailableSpend
	{
		get 
		{ 
			if (Record.IsDBNull(27))
				return null;
			else
				return (System.Decimal)Record[27]; 
		}
	}
	
	public override System.String ScoringBand
	{
		get 
		{ 
			if (Record.IsDBNull(28))
				return null;
			else
				return (System.String)Record[28]; 
		}
	}
	
	public override System.String InstantCredit
	{
		get 
		{ 
			if (Record.IsDBNull(29))
				return null;
			else
				return (System.String)Record[29]; 
		}
	}
	
	public override System.String StoreType
	{
		get 
		{ 
			if (Record.IsDBNull(30))
				return null;
			else
				return (System.String)Record[30]; 
		}
	}
	
	public override System.Boolean? LoanQualified
	{
		get 
		{ 
			if (Record.IsDBNull(31))
				return null;
			else
				return (System.Boolean)Record[31]; 
		}
	}
	
	public override System.Int32? dependants
	{
		get 
		{ 
			if (Record.IsDBNull(32))
				return null;
			else
				return (System.Int32)Record[32]; 
		}
	}
	
	public override System.String maritalstat
	{
		get 
		{ 
			if (Record.IsDBNull(33))
				return null;
			else
				return (System.String)Record[33]; 
		}
	}
	
	public override System.String Nationality
	{
		get 
		{ 
			if (Record.IsDBNull(34))
				return null;
			else
				return (System.String)Record[34]; 
		}
	}
	
	public override System.Byte? recurringarrears
	{
		get 
		{ 
			if (Record.IsDBNull(35))
				return null;
			else
				return (System.Byte)Record[35]; 
		}
	}
	
	public override System.Int32? age
	{
		get 
		{ 
			if (Record.IsDBNull(36))
				return null;
			else
				return (System.Int32)Record[36]; 
		}
	}
	
	public override System.String ScoreCardType
	{
		get 
		{ 
			if (Record.IsDBNull(37))
				return null;
			else
				return (System.String)Record[37]; 
		}
	}
	
}

public class Reader : IDisposable, IEnumerable<Record>
{
	public Reader(IDataReader reader)
	{
		this.reader = reader;
	}
				
	private IDataReader reader;
	
	public void Dispose()
	{
		reader.Dispose();
	}
	
	public IEnumerator<Record> GetEnumerator()
	{
		var ro = new Online();
		
		using (reader)
			while (reader.Read())
			{
				ro.Record = reader;
				yield return ro;
			}
	}
	
	System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return GetEnumerator();
	}
}

public Reader Execute()
{
	return new Reader(ExecuteReader());
}

public Reader Execute(System.String custid)
{
	this.custid = custid;

	Reader _result = Execute();
	
	return _result;
}



	}
}
