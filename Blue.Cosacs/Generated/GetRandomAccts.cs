

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Artemis Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------




using System;
using System.Collections.Generic;
using System.Data;

namespace Blue.Cosacs
{
    public partial class GetRandomAccts : Artemis.Runtime.Data.Command
    {
        private const string ConnectionStringName = "Default";
        private const string ProcedureName = "[GetRandomAccts]";

	    public GetRandomAccts() : base(ConnectionStringName, ProcedureName, CommandType.StoredProcedure) {}

	    
	    public GetRandomAccts(System.Int32? count,System.Boolean? includeSettled,System.String accttype) : base(ConnectionStringName, ProcedureName, CommandType.StoredProcedure)
	    {
		    this.count = count;
this.includeSettled = includeSettled;
this.accttype = accttype;

	    }
	    

	    

protected override void Initialize()
{
	base.Initialize();
	
	
	AddInParameter("count", DbType.Int32);
	
	AddInParameter("includeSettled", DbType.Boolean);
	
	AddInParameter("accttype", DbType.String);
	
}

#region Parameters

public System.Int32? count
{
	
	set { this[0] = value; }
	
}

public System.Boolean? includeSettled
{
	
	set { this[1] = value; }
	
}

public System.String accttype
{
	
	set { this[2] = value; }
	
}

#endregion
    }
}

namespace Blue.Cosacs
{
	
	public partial class GetRandomAccts
	{
		

[Serializable]
public abstract partial class Record
{
	
	public abstract System.String acctno
	{
		get;
	}
	
	public abstract System.Decimal? balance
	{
		get;
	}
	
	public abstract System.String custid
	{
		get;
	}
	
}

class Online : Record
{
	public IDataRecord Record;
	
	
	public override System.String acctno
	{
		get 
		{ 
			if (Record.IsDBNull(0))
				return null;
			else
				return (System.String)Record[0]; 
		}
	}
	
	public override System.Decimal? balance
	{
		get 
		{ 
			if (Record.IsDBNull(1))
				return null;
			else
				return (System.Decimal)Record[1]; 
		}
	}
	
	public override System.String custid
	{
		get 
		{ 
			if (Record.IsDBNull(2))
				return null;
			else
				return (System.String)Record[2]; 
		}
	}
	
}

public class Reader : IDisposable, IEnumerable<Record>
{
	public Reader(IDataReader reader)
	{
		this.reader = reader;
	}
				
	private IDataReader reader;
	
	public void Dispose()
	{
		reader.Dispose();
	}
	
	public IEnumerator<Record> GetEnumerator()
	{
		var ro = new Online();
		
		using (reader)
			while (reader.Read())
			{
				ro.Record = reader;
				yield return ro;
			}
	}
	
	System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return GetEnumerator();
	}
}

public Reader Execute()
{
	return new Reader(ExecuteReader());
}

public Reader Execute(System.Int32? count,System.Boolean? includeSettled,System.String accttype)
{
	this.count = count;
this.includeSettled = includeSettled;
this.accttype = accttype;

	Reader _result = Execute();
	
	return _result;
}



	}
}
