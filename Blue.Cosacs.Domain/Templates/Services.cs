














//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Windows.Forms;


namespace Blue.Cosacs.Shared.Services
{
	public partial class Client 
	{
		
		
		public static void Call(StoreCard.CreateRequest request, 
								Action< StoreCard.CreateResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.CreateRequest,StoreCard.CreateResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.CreateRequest request, 
								Action< StoreCard.CreateResponse> onSuccess, 
								Action< StoreCard.CreateResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.CreateRequest,StoreCard.CreateResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.PayDetailsSaveRequest request, 
								Action< StoreCard.PayDetailsSaveResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.PayDetailsSaveRequest,StoreCard.PayDetailsSaveResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.PayDetailsSaveRequest request, 
								Action< StoreCard.PayDetailsSaveResponse> onSuccess, 
								Action< StoreCard.PayDetailsSaveResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.PayDetailsSaveRequest,StoreCard.PayDetailsSaveResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.ActivateRequest request, 
								Action< StoreCard.ActivateResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.ActivateRequest,StoreCard.ActivateResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.ActivateRequest request, 
								Action< StoreCard.ActivateResponse> onSuccess, 
								Action< StoreCard.ActivateResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.ActivateRequest,StoreCard.ActivateResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.SearchRequest request, 
								Action< StoreCard.SearchResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.SearchRequest,StoreCard.SearchResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.SearchRequest request, 
								Action< StoreCard.SearchResponse> onSuccess, 
								Action< StoreCard.SearchResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.SearchRequest,StoreCard.SearchResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.GetRequest request, 
								Action< StoreCard.GetResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.GetRequest,StoreCard.GetResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.GetRequest request, 
								Action< StoreCard.GetResponse> onSuccess, 
								Action< StoreCard.GetResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.GetRequest,StoreCard.GetResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.CancelRequest request, 
								Action< StoreCard.CancelResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.CancelRequest,StoreCard.CancelResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.CancelRequest request, 
								Action< StoreCard.CancelResponse> onSuccess, 
								Action< StoreCard.CancelResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.CancelRequest,StoreCard.CancelResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.GetValidateCardRequest request, 
								Action< StoreCard.GetValidateCardResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.GetValidateCardRequest,StoreCard.GetValidateCardResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.GetValidateCardRequest request, 
								Action< StoreCard.GetValidateCardResponse> onSuccess, 
								Action< StoreCard.GetValidateCardResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.GetValidateCardRequest,StoreCard.GetValidateCardResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.GetValidatedCardForRecieptRequest request, 
								Action< StoreCard.GetValidatedCardForRecieptResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.GetValidatedCardForRecieptRequest,StoreCard.GetValidatedCardForRecieptResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.GetValidatedCardForRecieptRequest request, 
								Action< StoreCard.GetValidatedCardForRecieptResponse> onSuccess, 
								Action< StoreCard.GetValidatedCardForRecieptResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.GetValidatedCardForRecieptRequest,StoreCard.GetValidatedCardForRecieptResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.GetDeliveryDetailsRequest request, 
								Action< StoreCard.GetDeliveryDetailsResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.GetDeliveryDetailsRequest,StoreCard.GetDeliveryDetailsResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.GetDeliveryDetailsRequest request, 
								Action< StoreCard.GetDeliveryDetailsResponse> onSuccess, 
								Action< StoreCard.GetDeliveryDetailsResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.GetDeliveryDetailsRequest,StoreCard.GetDeliveryDetailsResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.SaveDateNotePrintedRequest request, 
								Action< StoreCard.SaveDateNotePrintedResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.SaveDateNotePrintedRequest,StoreCard.SaveDateNotePrintedResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.SaveDateNotePrintedRequest request, 
								Action< StoreCard.SaveDateNotePrintedResponse> onSuccess, 
								Action< StoreCard.SaveDateNotePrintedResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.SaveDateNotePrintedRequest,StoreCard.SaveDateNotePrintedResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.CheckQualifyRequest request, 
								Action< StoreCard.CheckQualifyResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.CheckQualifyRequest,StoreCard.CheckQualifyResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.CheckQualifyRequest request, 
								Action< StoreCard.CheckQualifyResponse> onSuccess, 
								Action< StoreCard.CheckQualifyResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.CheckQualifyRequest,StoreCard.CheckQualifyResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.GetAccountStatusRequest request, 
								Action< StoreCard.GetAccountStatusResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.GetAccountStatusRequest,StoreCard.GetAccountStatusResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.GetAccountStatusRequest request, 
								Action< StoreCard.GetAccountStatusResponse> onSuccess, 
								Action< StoreCard.GetAccountStatusResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.GetAccountStatusRequest,StoreCard.GetAccountStatusResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.GetInterestRequest request, 
								Action< StoreCard.GetInterestResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.GetInterestRequest,StoreCard.GetInterestResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.GetInterestRequest request, 
								Action< StoreCard.GetInterestResponse> onSuccess, 
								Action< StoreCard.GetInterestResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.GetInterestRequest,StoreCard.GetInterestResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.FintransAddRequest request, 
								Action< StoreCard.FintransAddResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.FintransAddRequest,StoreCard.FintransAddResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.FintransAddRequest request, 
								Action< StoreCard.FintransAddResponse> onSuccess, 
								Action< StoreCard.FintransAddResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.FintransAddRequest,StoreCard.FintransAddResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.StoreCardUpdateMinimumPaymentRequest request, 
								Action< StoreCard.StoreCardUpdateMinimumPaymentResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.StoreCardUpdateMinimumPaymentRequest,StoreCard.StoreCardUpdateMinimumPaymentResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.StoreCardUpdateMinimumPaymentRequest request, 
								Action< StoreCard.StoreCardUpdateMinimumPaymentResponse> onSuccess, 
								Action< StoreCard.StoreCardUpdateMinimumPaymentResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.StoreCardUpdateMinimumPaymentRequest,StoreCard.StoreCardUpdateMinimumPaymentResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.GetCashandGoReturnRequest request, 
								Action< StoreCard.GetCashandGoReturnResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.GetCashandGoReturnRequest,StoreCard.GetCashandGoReturnResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.GetCashandGoReturnRequest request, 
								Action< StoreCard.GetCashandGoReturnResponse> onSuccess, 
								Action< StoreCard.GetCashandGoReturnResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.GetCashandGoReturnRequest,StoreCard.GetCashandGoReturnResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(StoreCard.GetStatementRunsRequest request, 
								Action< StoreCard.GetStatementRunsResponse> onSuccess, Control control = null)
		{
			Execute<StoreCard.GetStatementRunsRequest,StoreCard.GetStatementRunsResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(StoreCard.GetStatementRunsRequest request, 
								Action< StoreCard.GetStatementRunsResponse> onSuccess, 
								Action< StoreCard.GetStatementRunsResponse, Exception> onException, Control control = null)
		{
			Execute<StoreCard.GetStatementRunsRequest,StoreCard.GetStatementRunsResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Branch.GetBranchListRequest request, 
								Action< Branch.GetBranchListResponse> onSuccess, Control control = null)
		{
			Execute<Branch.GetBranchListRequest,Branch.GetBranchListResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Branch.GetBranchListRequest request, 
								Action< Branch.GetBranchListResponse> onSuccess, 
								Action< Branch.GetBranchListResponse, Exception> onException, Control control = null)
		{
			Execute<Branch.GetBranchListRequest,Branch.GetBranchListResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Branch.GetCashierTotalsRequest request, 
								Action< Branch.GetCashierTotalsResponse> onSuccess, Control control = null)
		{
			Execute<Branch.GetCashierTotalsRequest,Branch.GetCashierTotalsResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Branch.GetCashierTotalsRequest request, 
								Action< Branch.GetCashierTotalsResponse> onSuccess, 
								Action< Branch.GetCashierTotalsResponse, Exception> onException, Control control = null)
		{
			Execute<Branch.GetCashierTotalsRequest,Branch.GetCashierTotalsResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Branch.CashierTotalsSaveRequest request, 
								Action< Branch.CashierTotalsSaveResponse> onSuccess, Control control = null)
		{
			Execute<Branch.CashierTotalsSaveRequest,Branch.CashierTotalsSaveResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Branch.CashierTotalsSaveRequest request, 
								Action< Branch.CashierTotalsSaveResponse> onSuccess, 
								Action< Branch.CashierTotalsSaveResponse, Exception> onException, Control control = null)
		{
			Execute<Branch.CashierTotalsSaveRequest,Branch.CashierTotalsSaveResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Credit.CompleteReferralStageRequest request, 
								Action< Credit.CompleteReferralStageResponse> onSuccess, Control control = null)
		{
			Execute<Credit.CompleteReferralStageRequest,Credit.CompleteReferralStageResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Credit.CompleteReferralStageRequest request, 
								Action< Credit.CompleteReferralStageResponse> onSuccess, 
								Action< Credit.CompleteReferralStageResponse, Exception> onException, Control control = null)
		{
			Execute<Credit.CompleteReferralStageRequest,Credit.CompleteReferralStageResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Credit.CashLoanQualificationRequest request, 
								Action< Credit.CashLoanQualificationResponse> onSuccess, Control control = null)
		{
			Execute<Credit.CashLoanQualificationRequest,Credit.CashLoanQualificationResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Credit.CashLoanQualificationRequest request, 
								Action< Credit.CashLoanQualificationResponse> onSuccess, 
								Action< Credit.CashLoanQualificationResponse, Exception> onException, Control control = null)
		{
			Execute<Credit.CashLoanQualificationRequest,Credit.CashLoanQualificationResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Credit.CashLoanCreateAccountRequest request, 
								Action< Credit.CashLoanCreateAccountResponse> onSuccess, Control control = null)
		{
			Execute<Credit.CashLoanCreateAccountRequest,Credit.CashLoanCreateAccountResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Credit.CashLoanCreateAccountRequest request, 
								Action< Credit.CashLoanCreateAccountResponse> onSuccess, 
								Action< Credit.CashLoanCreateAccountResponse, Exception> onException, Control control = null)
		{
			Execute<Credit.CashLoanCreateAccountRequest,Credit.CashLoanCreateAccountResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Credit.UpdateCashLoanBlockedRequest request, 
								Action< Credit.UpdateCashLoanBlockedResponse> onSuccess, Control control = null)
		{
			Execute<Credit.UpdateCashLoanBlockedRequest,Credit.UpdateCashLoanBlockedResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Credit.UpdateCashLoanBlockedRequest request, 
								Action< Credit.UpdateCashLoanBlockedResponse> onSuccess, 
								Action< Credit.UpdateCashLoanBlockedResponse, Exception> onException, Control control = null)
		{
			Execute<Credit.UpdateCashLoanBlockedRequest,Credit.UpdateCashLoanBlockedResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Credit.CheckLoanQualificationRequest request, 
								Action< Credit.CheckLoanQualificationResponse> onSuccess, Control control = null)
		{
			Execute<Credit.CheckLoanQualificationRequest,Credit.CheckLoanQualificationResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Credit.CheckLoanQualificationRequest request, 
								Action< Credit.CheckLoanQualificationResponse> onSuccess, 
								Action< Credit.CheckLoanQualificationResponse, Exception> onException, Control control = null)
		{
			Execute<Credit.CheckLoanQualificationRequest,Credit.CheckLoanQualificationResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(EOD.WTRDatesGetRequest request, 
								Action< EOD.WTRDatesGetResponse> onSuccess, Control control = null)
		{
			Execute<EOD.WTRDatesGetRequest,EOD.WTRDatesGetResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(EOD.WTRDatesGetRequest request, 
								Action< EOD.WTRDatesGetResponse> onSuccess, 
								Action< EOD.WTRDatesGetResponse, Exception> onException, Control control = null)
		{
			Execute<EOD.WTRDatesGetRequest,EOD.WTRDatesGetResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(EOD.WTRDatesSaveRequest request, 
								Action< EOD.WTRDatesSaveResponse> onSuccess, Control control = null)
		{
			Execute<EOD.WTRDatesSaveRequest,EOD.WTRDatesSaveResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(EOD.WTRDatesSaveRequest request, 
								Action< EOD.WTRDatesSaveResponse> onSuccess, 
								Action< EOD.WTRDatesSaveResponse, Exception> onException, Control control = null)
		{
			Execute<EOD.WTRDatesSaveRequest,EOD.WTRDatesSaveResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Financial.GetPaymentsRequest request, 
								Action< Financial.GetPaymentsResponse> onSuccess, Control control = null)
		{
			Execute<Financial.GetPaymentsRequest,Financial.GetPaymentsResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Financial.GetPaymentsRequest request, 
								Action< Financial.GetPaymentsResponse> onSuccess, 
								Action< Financial.GetPaymentsResponse, Exception> onException, Control control = null)
		{
			Execute<Financial.GetPaymentsRequest,Financial.GetPaymentsResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(CosacsConfig.CheckConnRequest request, 
								Action< CosacsConfig.CheckConnResponse> onSuccess, Control control = null)
		{
			Execute<CosacsConfig.CheckConnRequest,CosacsConfig.CheckConnResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(CosacsConfig.CheckConnRequest request, 
								Action< CosacsConfig.CheckConnResponse> onSuccess, 
								Action< CosacsConfig.CheckConnResponse, Exception> onException, Control control = null)
		{
			Execute<CosacsConfig.CheckConnRequest,CosacsConfig.CheckConnResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(CosacsConfig.CheckBranchRequest request, 
								Action< CosacsConfig.CheckBranchResponse> onSuccess, Control control = null)
		{
			Execute<CosacsConfig.CheckBranchRequest,CosacsConfig.CheckBranchResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(CosacsConfig.CheckBranchRequest request, 
								Action< CosacsConfig.CheckBranchResponse> onSuccess, 
								Action< CosacsConfig.CheckBranchResponse, Exception> onException, Control control = null)
		{
			Execute<CosacsConfig.CheckBranchRequest,CosacsConfig.CheckBranchResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Warehouse.GetLineItemBookingFailuresRequest request, 
								Action< Warehouse.GetLineItemBookingFailuresResponse> onSuccess, Control control = null)
		{
			Execute<Warehouse.GetLineItemBookingFailuresRequest,Warehouse.GetLineItemBookingFailuresResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Warehouse.GetLineItemBookingFailuresRequest request, 
								Action< Warehouse.GetLineItemBookingFailuresResponse> onSuccess, 
								Action< Warehouse.GetLineItemBookingFailuresResponse, Exception> onException, Control control = null)
		{
			Execute<Warehouse.GetLineItemBookingFailuresRequest,Warehouse.GetLineItemBookingFailuresResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Warehouse.SaveLineItemFailureNotesRequest request, 
								Action< Warehouse.SaveLineItemFailureNotesResponse> onSuccess, Control control = null)
		{
			Execute<Warehouse.SaveLineItemFailureNotesRequest,Warehouse.SaveLineItemFailureNotesResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Warehouse.SaveLineItemFailureNotesRequest request, 
								Action< Warehouse.SaveLineItemFailureNotesResponse> onSuccess, 
								Action< Warehouse.SaveLineItemFailureNotesResponse, Exception> onException, Control control = null)
		{
			Execute<Warehouse.SaveLineItemFailureNotesRequest,Warehouse.SaveLineItemFailureNotesResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Service.GetItemsIssuedForReplacementRequest request, 
								Action< Service.GetItemsIssuedForReplacementResponse> onSuccess, Control control = null)
		{
			Execute<Service.GetItemsIssuedForReplacementRequest,Service.GetItemsIssuedForReplacementResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Service.GetItemsIssuedForReplacementRequest request, 
								Action< Service.GetItemsIssuedForReplacementResponse> onSuccess, 
								Action< Service.GetItemsIssuedForReplacementResponse, Exception> onException, Control control = null)
		{
			Execute<Service.GetItemsIssuedForReplacementRequest,Service.GetItemsIssuedForReplacementResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Warranty.GetWarrantyRenewalsRequest request, 
								Action< Warranty.GetWarrantyRenewalsResponse> onSuccess, Control control = null)
		{
			Execute<Warranty.GetWarrantyRenewalsRequest,Warranty.GetWarrantyRenewalsResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Warranty.GetWarrantyRenewalsRequest request, 
								Action< Warranty.GetWarrantyRenewalsResponse> onSuccess, 
								Action< Warranty.GetWarrantyRenewalsResponse, Exception> onException, Control control = null)
		{
			Execute<Warranty.GetWarrantyRenewalsRequest,Warranty.GetWarrantyRenewalsResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Warranty.GetWarrantyReturnRequest request, 
								Action< Warranty.GetWarrantyReturnResponse> onSuccess, Control control = null)
		{
			Execute<Warranty.GetWarrantyReturnRequest,Warranty.GetWarrantyReturnResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Warranty.GetWarrantyReturnRequest request, 
								Action< Warranty.GetWarrantyReturnResponse> onSuccess, 
								Action< Warranty.GetWarrantyReturnResponse, Exception> onException, Control control = null)
		{
			Execute<Warranty.GetWarrantyReturnRequest,Warranty.GetWarrantyReturnResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Warranty.GetAvailableWarrantiesRequest request, 
								Action< Warranty.GetAvailableWarrantiesResponse> onSuccess, Control control = null)
		{
			Execute<Warranty.GetAvailableWarrantiesRequest,Warranty.GetAvailableWarrantiesResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Warranty.GetAvailableWarrantiesRequest request, 
								Action< Warranty.GetAvailableWarrantiesResponse> onSuccess, 
								Action< Warranty.GetAvailableWarrantiesResponse, Exception> onException, Control control = null)
		{
			Execute<Warranty.GetAvailableWarrantiesRequest,Warranty.GetAvailableWarrantiesResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Warranty.SaveWarrantyStockinfoRequest request, 
								Action< Warranty.SaveWarrantyStockinfoResponse> onSuccess, Control control = null)
		{
			Execute<Warranty.SaveWarrantyStockinfoRequest,Warranty.SaveWarrantyStockinfoResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Warranty.SaveWarrantyStockinfoRequest request, 
								Action< Warranty.SaveWarrantyStockinfoResponse> onSuccess, 
								Action< Warranty.SaveWarrantyStockinfoResponse, Exception> onException, Control control = null)
		{
			Execute<Warranty.SaveWarrantyStockinfoRequest,Warranty.SaveWarrantyStockinfoResponse>(request, onSuccess, onException, control);
		}
		
		
		public static void Call(Warranty.GetManyWarrantyReturnRequest request, 
								Action< Warranty.GetManyWarrantyReturnResponse> onSuccess, Control control = null)
		{
			Execute<Warranty.GetManyWarrantyReturnRequest,Warranty.GetManyWarrantyReturnResponse>(request, onSuccess, null, control);
		}
		
		public static void Call(Warranty.GetManyWarrantyReturnRequest request, 
								Action< Warranty.GetManyWarrantyReturnResponse> onSuccess, 
								Action< Warranty.GetManyWarrantyReturnResponse, Exception> onException, Control control = null)
		{
			Execute<Warranty.GetManyWarrantyReturnRequest,Warranty.GetManyWarrantyReturnResponse>(request, onSuccess, onException, control);
		}
		
		
	}



		
	namespace StoreCard
	{
		
			
		public partial class CreateRequest  { }
		public partial class CreateResponse { }
		
			
		public partial class PayDetailsSaveRequest  { }
		public partial class PayDetailsSaveResponse { }
		
			
		public partial class ActivateRequest  { }
		public partial class ActivateResponse { }
		
			
		public partial class SearchRequest  { }
		public partial class SearchResponse { }
		
			
		public partial class GetRequest  { }
		public partial class GetResponse { }
		
			
		public partial class CancelRequest  { }
		public partial class CancelResponse { }
		
			
		public partial class GetValidateCardRequest  { }
		public partial class GetValidateCardResponse { }
		
			
		public partial class GetValidatedCardForRecieptRequest  { }
		public partial class GetValidatedCardForRecieptResponse { }
		
			
		public partial class GetDeliveryDetailsRequest  { }
		public partial class GetDeliveryDetailsResponse { }
		
			
		public partial class SaveDateNotePrintedRequest  { }
		public partial class SaveDateNotePrintedResponse { }
		
			
		public partial class CheckQualifyRequest  { }
		public partial class CheckQualifyResponse { }
		
			
		public partial class GetAccountStatusRequest  { }
		public partial class GetAccountStatusResponse { }
		
			
		public partial class GetInterestRequest  { }
		public partial class GetInterestResponse { }
		
			
		public partial class FintransAddRequest  { }
		public partial class FintransAddResponse { }
		
			
		public partial class StoreCardUpdateMinimumPaymentRequest  { }
		public partial class StoreCardUpdateMinimumPaymentResponse { }
		
			
		public partial class GetCashandGoReturnRequest  { }
		public partial class GetCashandGoReturnResponse { }
		
			
		public partial class GetStatementRunsRequest  { }
		public partial class GetStatementRunsResponse { }
		
		
	}
		
		
	namespace Branch
	{
		
			
		public partial class GetBranchListRequest  { }
		public partial class GetBranchListResponse { }
		
			
		public partial class GetCashierTotalsRequest  { }
		public partial class GetCashierTotalsResponse { }
		
			
		public partial class CashierTotalsSaveRequest  { }
		public partial class CashierTotalsSaveResponse { }
		
		
	}
		
		
	namespace Credit
	{
		
			
		public partial class CompleteReferralStageRequest  { }
		public partial class CompleteReferralStageResponse { }
		
			
		public partial class CashLoanQualificationRequest  { }
		public partial class CashLoanQualificationResponse { }
		
			
		public partial class CashLoanCreateAccountRequest  { }
		public partial class CashLoanCreateAccountResponse { }
		
			
		public partial class UpdateCashLoanBlockedRequest  { }
		public partial class UpdateCashLoanBlockedResponse { }
		
			
		public partial class CheckLoanQualificationRequest  { }
		public partial class CheckLoanQualificationResponse { }
		
		
	}
		
		
	namespace EOD
	{
		
			
		public partial class WTRDatesGetRequest  { }
		public partial class WTRDatesGetResponse { }
		
			
		public partial class WTRDatesSaveRequest  { }
		public partial class WTRDatesSaveResponse { }
		
		
	}
		
		
	namespace Financial
	{
		
			
		public partial class GetPaymentsRequest  { }
		public partial class GetPaymentsResponse { }
		
		
	}
		
		
	namespace CosacsConfig
	{
		
			
		public partial class CheckConnRequest  { }
		public partial class CheckConnResponse { }
		
			
		public partial class CheckBranchRequest  { }
		public partial class CheckBranchResponse { }
		
		
	}
		
		
	namespace Warehouse
	{
		
			
		public partial class GetLineItemBookingFailuresRequest  { }
		public partial class GetLineItemBookingFailuresResponse { }
		
			
		public partial class SaveLineItemFailureNotesRequest  { }
		public partial class SaveLineItemFailureNotesResponse { }
		
		
	}
		
		
	namespace Service
	{
		
			
		public partial class GetItemsIssuedForReplacementRequest  { }
		public partial class GetItemsIssuedForReplacementResponse { }
		
		
	}
		
		
	namespace Warranty
	{
		
			
		public partial class GetWarrantyRenewalsRequest  { }
		public partial class GetWarrantyRenewalsResponse { }
		
			
		public partial class GetWarrantyReturnRequest  { }
		public partial class GetWarrantyReturnResponse { }
		
			
		public partial class GetAvailableWarrantiesRequest  { }
		public partial class GetAvailableWarrantiesResponse { }
		
			
		public partial class SaveWarrantyStockinfoRequest  { }
		public partial class SaveWarrantyStockinfoResponse { }
		
			
		public partial class GetManyWarrantyReturnRequest  { }
		public partial class GetManyWarrantyReturnResponse { }
		
		
	}
		

}
