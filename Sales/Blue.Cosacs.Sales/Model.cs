













//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Blue.Transactions;

namespace Blue.Cosacs.Sales
{
    	public partial class WarrantyContractDetails : Blue.Transactions.Command<Context>
	{
	    public WarrantyContractDetails() : base("Sales.WarrantyContractDetails")
	    {
	                base.AddInParameter("@agreementNo", DbType.Int32 );
	                base.AddInParameter("@contractNo", DbType.AnsiString );
	            }
	
	        public int? agreementNo
	    {
	        get { return (int?)base[0]; }
	        set { base[0] = value; }
	    }
	        public string contractNo
	    {
	        get { return (string)base[1]; }
	        set { base[1] = value; }
	    }
	    }
	
	partial class WarrantyContractDetails
	{
	    public new void Fill(DataSet ds)
	    {
	        base.Fill(ds);
	    }
	
	        public void Fill(DataSet ds,  int? _agreementNo, string _contractNo)
	    {
	        this.agreementNo = _agreementNo;
this.contractNo = _contractNo;

	        Fill(ds);
	        
	    }
	    }
	

        public partial class ContextBase : DbContextBase
        {
			protected ContextBase(string connectionString = "Default") : base(connectionString) 
			{
				Database.SetInitializer<Context>(null);
			}
		 
            
                public virtual DbSet<Order> Order { get; set; }
            
                public virtual DbSet<OrderCustomer> OrderCustomer { get; set; }
            
                public virtual DbSet<OrderItem> OrderItem { get; set; }
            
                public virtual DbSet<OrderPayment> OrderPayment { get; set; }
            
                public virtual DbSet<OrderReturn> OrderReturn { get; set; }
            
                public virtual DbSet<OrderReturnCustomer> OrderReturnCustomer { get; set; }
            
                public virtual DbSet<OrderReturnItem> OrderReturnItem { get; set; }
            
                public virtual DbSet<OrderReturnPayment> OrderReturnPayment { get; set; }
            
                public virtual DbSet<ItemType> ItemType { get; set; }
            
                public virtual DbSet<DiscountLimit> DiscountLimit { get; set; }
            
                public virtual DbSet<LinkedContractNames> LinkedContractNames { get; set; }
            
                public virtual DbSet<LinkedContracts> LinkedContracts { get; set; }
            
            
            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                base.OnModelCreating(modelBuilder);
                
                        var t0 = modelBuilder.Entity< Order >();
                        t0.ToTable("Order", "Sales");
                        
                        t0.HasKey(t => t.Id);
                        
                        t0.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.TotalAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.TotalTaxAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.TotalDiscount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.BranchNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.OriginalOrderId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Comments)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1024)
                        
                        
                        ;
                        
                        t0.Property(t => t.IsDutyFreeSale)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.IsTaxFreeSale)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.SoldBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t1 = modelBuilder.Entity< OrderCustomer >();
                        t1.ToTable("OrderCustomer", "Sales");
                        
                        t1.HasKey(t => t.OrderId);
                        
                        t1.Property(t => t.OrderId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.Title)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(8)
                        
                        
                        ;
                        
                        t1.Property(t => t.FirstName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t1.Property(t => t.Middle)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t1.Property(t => t.LastName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t1.Property(t => t.Email)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t1.Property(t => t.HomePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t1.Property(t => t.MobilePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t1.Property(t => t.AddressLine1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t1.Property(t => t.AddressLine2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t1.Property(t => t.PostCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(16)
                        
                        
                        ;
                        
                        t1.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t1.Property(t => t.AddressLine3)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t1.Property(t => t.IsSalesCustomer)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t2 = modelBuilder.Entity< OrderItem >();
                        t2.ToTable("OrderItem", "Sales");
                        
                        t2.HasKey(t => t.Id);
                        
                        t2.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ParentId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.OrderId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ItemTypeId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ItemNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t2.Property(t => t.Description)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(128)
                        
                        
                        ;
                        
                        t2.Property(t => t.Quantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Price)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.TaxRate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.TaxAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.WarrantyLengthMonths)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.WarrantyEffectiveDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.WarrantyContractNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t2.Property(t => t.ManualDiscount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.WarrantyTypeCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t2.Property(t => t.ManualDiscountPercentage)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        .HasMaxLength(12)
                        
                        
                        ;
                        
                        t2.Property(t => t.ProductItemId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.WarrantyLinkId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Returned)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ReturnQuantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ReturnReason)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t2.Property(t => t.ItemUPC)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(18)
                        
                        
                        ;
                        
                        t2.Property(t => t.ItemSupplier)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(40)
                        
                        
                        ;
                        
                        t2.Property(t => t.Department)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t2.Property(t => t.Category)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Class)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t2.Property(t => t.CostPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.RetailPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ParentItemNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t2.Property(t => t.IsClaimed)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.IsReplacement)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.SalePrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.SaleTaxAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.IsFixedDiscount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.PosDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(128)
                        
                        
                        ;
                        
                        var t3 = modelBuilder.Entity< OrderPayment >();
                        t3.ToTable("OrderPayment", "Sales");
                        
                        t3.HasKey(t => t.Id);
                        
                        t3.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.OrderId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.PaymentMethodId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Amount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Bank)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t3.Property(t => t.CardType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(16)
                        
                        
                        ;
                        
                        t3.Property(t => t.CardNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.ChequeNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(16)
                        
                        
                        ;
                        
                        t3.Property(t => t.BankAccountNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t3.Property(t => t.CurrencyRate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.CurrencyAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.StoreCardNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.VoucherNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t3.Property(t => t.CurrencyCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        .HasMaxLength(8)
                        
                        
                        ;
                        
                        t3.Property(t => t.VoucherIssuer)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t3.Property(t => t.VoucherIssuerCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(12)
                        .IsFixedLength()
                        
                        ;
                        
                        var t4 = modelBuilder.Entity< OrderReturn >();
                        t4.ToTable("OrderReturn", "Sales");
                        
                        t4.HasKey(t => t.Id);
                        
                        t4.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.OrderId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.ReturnDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.TotalAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.Comments)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1024)
                        
                        
                        ;
                        
                        t4.Property(t => t.BranchNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t5 = modelBuilder.Entity< OrderReturnCustomer >();
                        t5.ToTable("OrderReturnCustomer", "Sales");
                        
                        t5.HasKey(t => t.OrderReturnId);
                        
                        t5.Property(t => t.OrderReturnId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.Title)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(8)
                        
                        
                        ;
                        
                        t5.Property(t => t.FirstName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t5.Property(t => t.Middle)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t5.Property(t => t.LastName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t5.Property(t => t.Email)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t5.Property(t => t.HomePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t5.Property(t => t.MobilePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t5.Property(t => t.AddressLine1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t5.Property(t => t.AddressLine2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        t5.Property(t => t.PostCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(16)
                        
                        
                        ;
                        
                        var t6 = modelBuilder.Entity< OrderReturnItem >();
                        t6.ToTable("OrderReturnItem", "Sales");
                        
                        t6.HasKey(t => t.Id);
                        
                        t6.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.ReturnId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.ItemTypeId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.ReturnReasonId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.ItemNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t6.Property(t => t.Description)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(128)
                        
                        
                        ;
                        
                        t6.Property(t => t.Quantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.Amount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t7 = modelBuilder.Entity< OrderReturnPayment >();
                        t7.ToTable("OrderReturnPayment", "Sales");
                        
                        t7.HasKey(t => t.Id);
                        
                        t7.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.OrderReturnId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.PaymentMethodId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Amount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Change)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Bank)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t7.Property(t => t.CardType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(16)
                        
                        
                        ;
                        
                        t7.Property(t => t.CardNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.ChequeNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.BankAccountNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t7.Property(t => t.CurrencyRate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.CurrencyAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t8 = modelBuilder.Entity< ItemType >();
                        t8.ToTable("ItemType", "Sales");
                        
                        t8.HasKey(t => t.Id);
                        
                        t8.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(64)
                        
                        
                        ;
                        
                        var t9 = modelBuilder.Entity< DiscountLimit >();
                        t9.ToTable("DiscountLimit", "Sales");
                        
                        t9.HasKey(t => t.Id);
                        
                        t9.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.BranchNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.StoreType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t9.Property(t => t.LimitPercentage)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t10 = modelBuilder.Entity< LinkedContractNames >();
                        t10.ToTable("LinkedContractNames", "Sales");
                        
                        t10.HasKey(t => t.Contract);
                        
                        t10.Property(t => t.Contract)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        var t11 = modelBuilder.Entity< LinkedContracts >();
                        t11.ToTable("LinkedContracts", "Sales");
                        
                        t11.HasKey(t => t.Id);
                        
                        t11.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.Contract)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(18)
                        
                        
                        ;
                        
                        t11.Property(t => t.Category)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        modelBuilder.Entity< LinkedContractsSetupView >().ToTable("LinkedContractsSetupView", "Sales");
                        
            }
        }

        
        [Serializable]
	[DataContract]
    public partial class Order
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public decimal TotalAmount { get; set; }
                [DataMember] public decimal TotalTaxAmount { get; set; }
                [DataMember] public decimal TotalDiscount { get; set; }
                [DataMember] public short BranchNo { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int CreatedBy { get; set; }
                [DataMember] public int? OriginalOrderId { get; set; }
                [DataMember] public string Comments { get; set; }
                [DataMember] public bool IsDutyFreeSale { get; set; }
                [DataMember] public bool IsTaxFreeSale { get; set; }
                [DataMember] public int SoldBy { get; set; }
                [DataMember] public string AgreementInvoiceNumber { get; set; }//Suvidha
    }

    
        [Serializable]
	[DataContract]
    public partial class OrderCustomer
    {
                [DataMember] public int OrderId { get; set; }
                [DataMember] public string Title { get; set; }
                [DataMember] public string FirstName { get; set; }
                [DataMember] public string Middle { get; set; }
                [DataMember] public string LastName { get; set; }
                [DataMember] public string Email { get; set; }
                [DataMember] public string HomePhone { get; set; }
                [DataMember] public string MobilePhone { get; set; }
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public string CustomerId { get; set; }
                [DataMember] public string AddressLine3 { get; set; }
                [DataMember] public bool IsSalesCustomer { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class OrderItem
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int? ParentId { get; set; }
                [DataMember] public int OrderId { get; set; }
                [DataMember] public byte ItemTypeId { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public string Description { get; set; }
                [DataMember] public short Quantity { get; set; }
                [DataMember] public decimal Price { get; set; }
                [DataMember] public decimal TaxRate { get; set; }
                [DataMember] public decimal? TaxAmount { get; set; }
                [DataMember] public byte? WarrantyLengthMonths { get; set; }
                [DataMember] public DateTime? WarrantyEffectiveDate { get; set; }
                [DataMember] public string WarrantyContractNo { get; set; }
                [DataMember] public decimal? ManualDiscount { get; set; }
                [DataMember] public string WarrantyTypeCode { get; set; }
                [DataMember] public string ManualDiscountPercentage { get; set; }
                [DataMember] public int? ProductItemId { get; set; }
                [DataMember] public int? WarrantyLinkId { get; set; }
                [DataMember] public bool? Returned { get; set; }
                [DataMember] public short? ReturnQuantity { get; set; }
                [DataMember] public string ReturnReason { get; set; }
                [DataMember] public string ItemUPC { get; set; }
                [DataMember] public string ItemSupplier { get; set; }
                [DataMember] public string Department { get; set; }
                [DataMember] public short? Category { get; set; }
                [DataMember] public string Class { get; set; }
                [DataMember] public decimal? CostPrice { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public string ParentItemNo { get; set; }
                [DataMember] public bool? IsClaimed { get; set; }
                [DataMember] public bool? IsReplacement { get; set; }
                [DataMember] public decimal SalePrice { get; set; }
                [DataMember] public decimal SaleTaxAmount { get; set; }
                [DataMember] public bool IsFixedDiscount { get; set; }
                [DataMember] public string PosDescription { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class OrderPayment
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int OrderId { get; set; }
                [DataMember] public byte PaymentMethodId { get; set; }
                [DataMember] public decimal Amount { get; set; }
                [DataMember] public string Bank { get; set; }
                [DataMember] public string CardType { get; set; }
                [DataMember] public short? CardNo { get; set; }
                [DataMember] public string ChequeNo { get; set; }
                [DataMember] public string BankAccountNo { get; set; }
                [DataMember] public decimal? CurrencyRate { get; set; }
                [DataMember] public decimal? CurrencyAmount { get; set; }
                [DataMember] public long? StoreCardNo { get; set; }
                [DataMember] public string VoucherNo { get; set; }
                [DataMember] public string CurrencyCode { get; set; }
                [DataMember] public string VoucherIssuer { get; set; }
                [DataMember] public string VoucherIssuerCode { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class OrderReturn
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int OrderId { get; set; }
                [DataMember] public DateTime ReturnDate { get; set; }
                [DataMember] public decimal TotalAmount { get; set; }
                [DataMember] public string Comments { get; set; }
                [DataMember] public short BranchNo { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int CreatedBy { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class OrderReturnCustomer
    {
                [DataMember] public int OrderReturnId { get; set; }
                [DataMember] public string Title { get; set; }
                [DataMember] public string FirstName { get; set; }
                [DataMember] public string Middle { get; set; }
                [DataMember] public string LastName { get; set; }
                [DataMember] public string Email { get; set; }
                [DataMember] public string HomePhone { get; set; }
                [DataMember] public string MobilePhone { get; set; }
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string PostCode { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class OrderReturnItem
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int ReturnId { get; set; }
                [DataMember] public byte ItemTypeId { get; set; }
                [DataMember] public byte ReturnReasonId { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public string Description { get; set; }
                [DataMember] public short Quantity { get; set; }
                [DataMember] public decimal Amount { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class OrderReturnPayment
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int OrderReturnId { get; set; }
                [DataMember] public byte PaymentMethodId { get; set; }
                [DataMember] public decimal Amount { get; set; }
                [DataMember] public decimal Change { get; set; }
                [DataMember] public string Bank { get; set; }
                [DataMember] public string CardType { get; set; }
                [DataMember] public short? CardNo { get; set; }
                [DataMember] public short? ChequeNo { get; set; }
                [DataMember] public string BankAccountNo { get; set; }
                [DataMember] public decimal? CurrencyRate { get; set; }
                [DataMember] public decimal? CurrencyAmount { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class ItemType
    {
                [DataMember] public byte Id { get; set; }
                [DataMember] public string Name { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class DiscountLimit
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public string StoreType { get; set; }
                [DataMember] public decimal LimitPercentage { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int CreatedBy { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class LinkedContractNames
    {
                [DataMember] public string Contract { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class LinkedContracts
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Contract { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public short Category { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<LinkedContractsSetupView> LinkedContractsSetupView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class LinkedContractsSetupView
    {
                [DataMember] public string Contract { get; set; }
                [DataMember] public string ItemNo { get; set; }
                [DataMember] public short Category { get; set; }
            }

        public partial class Settings : Blue.Config.SettingsBase
    {
        public Settings() : base(Blue.Cosacs.Sales.Module.Instance) {}

        public static StructureMap.Configuration.DSL.IRegistry Register<T>(StructureMap.Configuration.DSL.IRegistry registry, T singletonObject)
            where T : Blue.Config.ISettings

        {
            registry.For<Blue.Config.ISettings>().Add(singletonObject).Named(@"Blue.Cosacs.Sales");
            registry.For<T>().Singleton().Use(singletonObject);
            return registry;
        }

        public override Blue.Config.SettingMetadata[] Metadata()
        {
            return metadata;
        }

        #region Setting Metadata
        private static readonly Blue.Config.SettingMetadata[] metadata = new Blue.Config.SettingMetadata[] 
        {
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ReturnReason",
                Name = @"Return/Exchange Reason",
                Description = @"List of possible return/exchange reasons on POS.",
                Category = @"Returns",
                Default = @"
                Mistaken Purchase
                Defective Product
                Wrong Product
                For Fun (Change of Mind)
            ",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@decimal {
                Id = @"TaxRate",
                Name = @"Tax Rate",
                Description = @"Current Tax Rate - Please contact support if you wish to update. Any change here should be made after end of day and will be applicable for accounts open from the next day.",
                Category = @"Parameters",
                Default = @"17.5",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@decimal,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"TaxType",
                Name = @"Stock Tax Type",
                Description = @"Stock includes tax or not.(I or E).",
                Category = @"Parameters",
                Default = @"E",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"WarrantyCancelDays",
                Name = @"Warranty Cancel Days",
                Description = @"This is the period of time in days from delivery that a warranty can be cancelled in isolation to a product.",
                Category = @"Parameters",
                Default = @"30",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"WarrantyHoCopy",
                Name = @"Number of Warranty Contract HO copies",
                Description = @"Number of head office copies of the warranty contract.",
                Category = @"Parameters",
                Default = @"0",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"WarrantyCreditCopy",
                Name = @"Number of Warranty Contract Credit copies",
                Description = @"Number of credit copies of the warranty contract.",
                Category = @"Parameters",
                Default = @"1",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"WarrantyCustCopy",
                Name = @"Number of Warranty Contract copies",
                Description = @"Number of copies of the warranty.",
                Category = @"Parameters",
                Default = @"1",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"CountryName",
                Name = @"Country Name",
                Description = @"This is the country name.",
                Category = @"Parameters",
                Default = @"CountryName",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"CurrencySymbolForPrint",
                Name = @"Curreny Symbol for print",
                Description = @"The currency symbol that will be printed on Agreement and Invoice documents.",
                Category = @"Parameters",
                Default = @"$",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"DecimalPlaces",
                Name = @"Decimal Places for .Net",
                Description = @"Indicates the number of decimal places to be used in .NET. If Prefixed by a  'C' then the currency symbol for the country will also show.  If prefixed by an 'F' then the currency symbol for the country will not be displayed.  If prefixed by an 'N' then the currency symbol for the country will not be displayed and, thousand separators are inserted between each group of three digits. Example: In Jamaica C2 would result in J$5000.45, F2 would result in 5000.45, N2 would result in 5,000.45.",
                Category = @"Parameters",
                Default = @"C2",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@bit {
                Id = @"IsDutyFreeSaleAllowed",
                Name = @"Is Duty Free Sale Allowed",
                Description = @"Determines whether the country can perform duty free sales or not",
                Category = @"Parameters",
                Default = @"True",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@bit,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"MinFreeMonthIRW",
                Name = @"Min Free Months on Replacements (%)",
                Description = @"The minimum number of months (as a percentage of the original item?s free/manufacturer warranty length) that a replacement item on an IR replacement can receive",
                Category = @"Parameters",
                Default = @"50",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@bit {
                Id = @"DelayNewIRW",
                Name = @"Delay New IRW (True / False)",
                Description = @"If True, when an IRW replacement item receives complimentary free/manufacturer warranty months, then the start date of any purchased IRW on the replacement item is delayed until the end of the free months",
                Category = @"Parameters",
                Default = @"False",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@bit,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@text {
                Id = @"CompanyTaxNumber",
                Name = @"Company Tax Number",
                Description = @"The company tax number.",
                Category = @"Parameters",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@text,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"TaxName",
                Name = @"Tax Name",
                Description = @"Indicates type of tax i.e. VAT or GST.",
                Category = @"Parameters",
                Default = @"VAT",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"ThermalPrinterName",
                Name = @"Thermal Printer Name",
                Description = @"The Name of the thermal printer for direct receipt printing.",
                Category = @"Parameters",
                Default = @"EPSON TM-T88V Receipt",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                    };
        #endregion

        #region Setting Enums
                #endregion

        #region Setting Properties
                public System.String[] ReturnReason 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("ReturnReason"); }
        }
                public decimal TaxRate 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Decimal("TaxRate"); }
        }
                public System.String TaxType 
        { 
            get { return ((Blue.Config.ISettingsReader)this).String("TaxType"); }
        }
                public int WarrantyCancelDays 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("WarrantyCancelDays"); }
        }
                public int WarrantyHoCopy 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("WarrantyHoCopy"); }
        }
                public int WarrantyCreditCopy 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("WarrantyCreditCopy"); }
        }
                public int WarrantyCustCopy 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("WarrantyCustCopy"); }
        }
                public System.String CountryName 
        { 
            get { return ((Blue.Config.ISettingsReader)this).String("CountryName"); }
        }
                public System.String CurrencySymbolForPrint 
        { 
            get { return ((Blue.Config.ISettingsReader)this).String("CurrencySymbolForPrint"); }
        }
                public System.String DecimalPlaces 
        { 
            get { return ((Blue.Config.ISettingsReader)this).String("DecimalPlaces"); }
        }
                public bool IsDutyFreeSaleAllowed 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Bit("IsDutyFreeSaleAllowed"); }
        }
                public int MinFreeMonthIRW 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("MinFreeMonthIRW"); }
        }
                public bool DelayNewIRW 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Bit("DelayNewIRW"); }
        }
                public System.String CompanyTaxNumber 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Text("CompanyTaxNumber"); }
        }
                public System.String TaxName 
        { 
            get { return ((Blue.Config.ISettingsReader)this).String("TaxName"); }
        }
                public System.String ThermalPrinterName 
        { 
            get { return ((Blue.Config.ISettingsReader)this).String("ThermalPrinterName"); }
        }
                #endregion
    }
    
    

        public class Module : Blue.Config.ModuleBase
    {
        private Module() {}

        public static readonly Module Instance = new Module
        {
            Label = @"Sales",
            Namespace = @"Blue.Cosacs.Sales",
            Schema = @"Sales",
        };
    }
    }
