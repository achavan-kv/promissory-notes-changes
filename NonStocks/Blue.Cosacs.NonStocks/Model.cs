













//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Blue.Transactions;

namespace Blue.Cosacs.NonStocks
{
    
        public partial class ContextBase : DbContextBase
        {
			protected ContextBase(string connectionString = "Default") : base(connectionString) 
			{
				Database.SetInitializer<Context>(null);
			}
		 
            
                public virtual DbSet<NonStock> NonStock { get; set; }
            
                public virtual DbSet<NonStockHierarchy> NonStockHierarchy { get; set; }
            
                public virtual DbSet<NonStockPrice> NonStockPrice { get; set; }
            
                public virtual DbSet<NonStockPromotion> NonStockPromotion { get; set; }
            
                public virtual DbSet<Link> Link { get; set; }
            
                public virtual DbSet<LinkProduct> LinkProduct { get; set; }
            
                public virtual DbSet<LinkNonStock> LinkNonStock { get; set; }
            
                public virtual DbSet<NonStockType> NonStockType { get; set; }
            
            
            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                base.OnModelCreating(modelBuilder);
                
                        var t0 = modelBuilder.Entity< NonStock >();
                        t0.ToTable("NonStock", "NonStocks");
                        
                        t0.HasKey(t => t.Id);
                        
                        t0.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(8)
                        
                        
                        ;
                        
                        t0.Property(t => t.SKU)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(8)
                        
                        
                        ;
                        
                        t0.Property(t => t.ShortDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t0.Property(t => t.LongDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(40)
                        
                        
                        ;
                        
                        t0.Property(t => t.Active)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.TaxRate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Length)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.IsStaffDiscount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DiscountRecurringPeriod)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Deleted)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.VendorUPC)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(18)
                        
                        
                        ;
                        
                        t0.Property(t => t.IsFullRefund)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.CoverageValue)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t1 = modelBuilder.Entity< NonStockHierarchy >();
                        t1.ToTable("NonStockHierarchy", "NonStocks");
                        
                        t1.HasKey(t => t.Id);
                        
                        t1.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.NonStockId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.Level)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.LevelKey)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t1.Property(t => t.LevelName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        var t2 = modelBuilder.Entity< NonStockPrice >();
                        t2.ToTable("NonStockPrice", "NonStocks");
                        
                        t2.HasKey(t => t.Id);
                        
                        t2.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.NonStockId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Fascia)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t2.Property(t => t.BranchNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.CostPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.RetailPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.TaxInclusivePrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.EffectiveDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.EndDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.DiscountValue)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t3 = modelBuilder.Entity< NonStockPromotion >();
                        t3.ToTable("NonStockPromotion", "NonStocks");
                        
                        t3.HasKey(t => t.Id);
                        
                        t3.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.StartDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.EndDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.RetailPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.PercentageDiscount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Fascia)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t3.Property(t => t.BranchNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.NonStockId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t4 = modelBuilder.Entity< Link >();
                        t4.ToTable("Link", "NonStocks");
                        
                        t4.HasKey(t => t.Id);
                        
                        t4.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t4.Property(t => t.EffectiveDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t5 = modelBuilder.Entity< LinkProduct >();
                        t5.ToTable("LinkProduct", "NonStocks");
                        
                        t5.HasKey(t => t.Id);
                        
                        t5.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.LinkId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.Level_1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t5.Property(t => t.Level_2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t5.Property(t => t.Level_3)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t5.Property(t => t.Level_4)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t5.Property(t => t.Level_5)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t5.Property(t => t.Order)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t6 = modelBuilder.Entity< LinkNonStock >();
                        t6.ToTable("LinkNonStock", "NonStocks");
                        
                        t6.HasKey(t => t.Id);
                        
                        t6.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.LinkId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.NonStockId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.Order)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t7 = modelBuilder.Entity< NonStockType >();
                        t7.ToTable("NonStockType", "NonStocks");
                        
                        t7.HasKey(t => t.Code);
                        
                        t7.Property(t => t.Code)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(8)
                        
                        
                        ;
                        
                        modelBuilder.Entity< ViewNonStockPromotion >().ToTable("ViewNonStockPromotion", "NonStocks");
                        
                        modelBuilder.Entity< NonStockPromotionsView >().ToTable("NonStockPromotionsView", "NonStocks");
                        
                        modelBuilder.Entity< PricesView >().ToTable("PricesView", "NonStocks");
                        
            }
        }

        
        [Serializable]
	[DataContract]
    public partial class NonStock
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string SKU { get; set; }
                [DataMember]
                [RegularExpression("^[^,]+$", ErrorMessage = "Please remove comma from field \"Short Description\"")]
                public string ShortDescription { get; set; }
                [DataMember]
                [RegularExpression("^[^,]+$", ErrorMessage = "Please remove comma from field \"Long Description\"")]
                public string LongDescription { get; set; }
                [DataMember] public bool Active { get; set; }
                [DataMember] public decimal? TaxRate { get; set; }
                [DataMember] public int? Length { get; set; }
                [DataMember] public bool? IsStaffDiscount { get; set; }
                [DataMember] public int? DiscountRecurringPeriod { get; set; }
                [DataMember] public bool? Deleted { get; set; }
                [DataMember] public string VendorUPC { get; set; }
                [DataMember] public bool? IsFullRefund { get; set; }
                [DataMember] public decimal? CoverageValue { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class NonStockHierarchy
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int NonStockId { get; set; }
                [DataMember] public byte Level { get; set; }
                [DataMember] public string LevelKey { get; set; }
                [DataMember] public string LevelName { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class NonStockPrice
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int NonStockId { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public decimal? CostPrice { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public decimal? TaxInclusivePrice { get; set; }
                [DataMember] public DateTime EffectiveDate { get; set; }
                [DataMember] public DateTime? EndDate { get; set; }
                [DataMember] public decimal? DiscountValue { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class NonStockPromotion
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public DateTime StartDate { get; set; }
                [DataMember] public DateTime EndDate { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public decimal? PercentageDiscount { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public int NonStockId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Link
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public DateTime EffectiveDate { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class LinkProduct
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int LinkId { get; set; }
                [DataMember] public string Level_1 { get; set; }
                [DataMember] public string Level_2 { get; set; }
                [DataMember] public string Level_3 { get; set; }
                [DataMember] public string Level_4 { get; set; }
                [DataMember] public string Level_5 { get; set; }
                [DataMember] public short? Order { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class LinkNonStock
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int LinkId { get; set; }
                [DataMember] public int NonStockId { get; set; }
                [DataMember] public short? Order { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class NonStockType
    {
                [DataMember] public string Code { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<ViewNonStockPromotion> ViewNonStockPromotion { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class ViewNonStockPromotion
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public string BranchNumber { get; set; }
                [DataMember] public int NonStockId { get; set; }
                [DataMember] public string NonStockNumber { get; set; }
                [DataMember] public string ShortDescription { get; set; }
                [DataMember] public string LongDescription { get; set; }
                [DataMember] public DateTime StartDate { get; set; }
                [DataMember] public DateTime EndDate { get; set; }
                [DataMember] public decimal? PercentageDiscount { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<NonStockPromotionsView> NonStockPromotionsView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class NonStockPromotionsView
    {
                [DataMember] public DateTime StartDate { get; set; }
                [DataMember] public DateTime EndDate { get; set; }
                [DataMember] public decimal? PercentageDiscount { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public string BranchName { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public int NonStockId { get; set; }
                [DataMember] public string NonStockNumber { get; set; }
                [DataMember] public int NonStockPriceId { get; set; }
                [DataMember] public DateTime NonStockPriceEffectiveDate { get; set; }
                [DataMember] public long? RowKey { get; set; }
                [DataMember] public int NonStockPromotionId { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<PricesView> PricesView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class PricesView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int NonStockId { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string Fascia { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public decimal? CostPrice { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public decimal? TaxInclusivePrice { get; set; }
                [DataMember] public decimal? DiscountValue { get; set; }
                [DataMember] public DateTime EffectiveDate { get; set; }
                [DataMember] public DateTime? EndDate { get; set; }
                [DataMember] public int? HasPromotion { get; set; }
            }

        public partial class Settings : Blue.Config.SettingsBase
    {
        public Settings() : base(Blue.Cosacs.NonStocks.Module.Instance) {}

        public static StructureMap.Configuration.DSL.IRegistry Register<T>(StructureMap.Configuration.DSL.IRegistry registry, T singletonObject)
            where T : Blue.Config.ISettings

        {
            registry.For<Blue.Config.ISettings>().Add(singletonObject).Named(@"Blue.Cosacs.NonStocks");
            registry.For<T>().Singleton().Use(singletonObject);
            return registry;
        }

        public override Blue.Config.SettingMetadata[] Metadata()
        {
            return metadata;
        }

        #region Setting Metadata
        private static readonly Blue.Config.SettingMetadata[] metadata = new Blue.Config.SettingMetadata[] 
        {
                        new Blue.Config.SettingMetadata.@int {
                Id = @"Setting1",
                Name = @"Setting1",
                Description = @"Setting1",
                Category = @"Settings",
                Default = @"0",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                    };
        #endregion

        #region Setting Enums
                #endregion

        #region Setting Properties
                public int Setting1 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("Setting1"); }
        }
                #endregion
    }
    
    

        public class Module : Blue.Config.ModuleBase
    {
        private Module() {}

        public static readonly Module Instance = new Module
        {
            Label = @"NonStocks",
            Namespace = @"Blue.Cosacs.NonStocks",
            Schema = @"NonStocks",
        };
    }
    }
