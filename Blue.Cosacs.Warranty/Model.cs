











//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Blue.Transactions;

namespace Blue.Cosacs.Warranty
{
    	public partial class GetInsertBulkEdit : Blue.Transactions.Command<Context>
	{
	    public GetInsertBulkEdit() : base("Warranty.GetInsertBulkEdit")
	    {
	                base.AddInParameter("@FilteredWarrantyIds", DbType.AnsiString );
	                base.AddInParameter("@BulkEditEffectiveYear", DbType.Int16 );
	                base.AddInParameter("@BulkEditEffectiveMonth", DbType.Int16 );
	                base.AddInParameter("@BulkEditEffectiveDay", DbType.Int16 );
	                base.AddInParameter("@CostPriceChange", DbType.Decimal );
	                base.AddInParameter("@CostPricePercentChange", DbType.Decimal );
	                base.AddInParameter("@CostPriceChangeTo", DbType.Decimal );
	                base.AddInParameter("@RetailPriceChange", DbType.Decimal );
	                base.AddInParameter("@RetailPricePercentChange", DbType.Decimal );
	                base.AddInParameter("@RetailPriceChangeTo", DbType.Decimal );
	                base.AddInParameter("@TaxInclusivePriceChange", DbType.Decimal );
	                base.AddInParameter("@TaxInclusivePricePercentChange", DbType.Decimal );
	                base.AddInParameter("@TaxInclusivePriceChangeTo", DbType.Decimal );
	                base.AddInParameter("@InsertBulkEdit", DbType.Boolean );
	            }
	
	        public string FilteredWarrantyIds
	    {
	        get { return (string)base[0]; }
	        set { base[0] = value; }
	    }
	        public short? BulkEditEffectiveYear
	    {
	        get { return (short?)base[1]; }
	        set { base[1] = value; }
	    }
	        public short? BulkEditEffectiveMonth
	    {
	        get { return (short?)base[2]; }
	        set { base[2] = value; }
	    }
	        public short? BulkEditEffectiveDay
	    {
	        get { return (short?)base[3]; }
	        set { base[3] = value; }
	    }
	        public decimal? CostPriceChange
	    {
	        get { return (decimal?)base[4]; }
	        set { base[4] = value; }
	    }
	        public decimal? CostPricePercentChange
	    {
	        get { return (decimal?)base[5]; }
	        set { base[5] = value; }
	    }
	        public decimal? CostPriceChangeTo
	    {
	        get { return (decimal?)base[6]; }
	        set { base[6] = value; }
	    }
	        public decimal? RetailPriceChange
	    {
	        get { return (decimal?)base[7]; }
	        set { base[7] = value; }
	    }
	        public decimal? RetailPricePercentChange
	    {
	        get { return (decimal?)base[8]; }
	        set { base[8] = value; }
	    }
	        public decimal? RetailPriceChangeTo
	    {
	        get { return (decimal?)base[9]; }
	        set { base[9] = value; }
	    }
	        public decimal? TaxInclusivePriceChange
	    {
	        get { return (decimal?)base[10]; }
	        set { base[10] = value; }
	    }
	        public decimal? TaxInclusivePricePercentChange
	    {
	        get { return (decimal?)base[11]; }
	        set { base[11] = value; }
	    }
	        public decimal? TaxInclusivePriceChangeTo
	    {
	        get { return (decimal?)base[12]; }
	        set { base[12] = value; }
	    }
	        public bool? InsertBulkEdit
	    {
	        get { return (bool?)base[13]; }
	        set { base[13] = value; }
	    }
	    }
	
	partial class GetInsertBulkEdit
	{
	    public new void Fill(DataSet ds)
	    {
	        base.Fill(ds);
	    }
	
	        public void Fill(DataSet ds,  string _FilteredWarrantyIds, short? _BulkEditEffectiveYear, short? _BulkEditEffectiveMonth, short? _BulkEditEffectiveDay, decimal? _CostPriceChange, decimal? _CostPricePercentChange, decimal? _CostPriceChangeTo, decimal? _RetailPriceChange, decimal? _RetailPricePercentChange, decimal? _RetailPriceChangeTo, decimal? _TaxInclusivePriceChange, decimal? _TaxInclusivePricePercentChange, decimal? _TaxInclusivePriceChangeTo, bool? _InsertBulkEdit)
	    {
	        this.FilteredWarrantyIds = _FilteredWarrantyIds;
this.BulkEditEffectiveYear = _BulkEditEffectiveYear;
this.BulkEditEffectiveMonth = _BulkEditEffectiveMonth;
this.BulkEditEffectiveDay = _BulkEditEffectiveDay;
this.CostPriceChange = _CostPriceChange;
this.CostPricePercentChange = _CostPricePercentChange;
this.CostPriceChangeTo = _CostPriceChangeTo;
this.RetailPriceChange = _RetailPriceChange;
this.RetailPricePercentChange = _RetailPricePercentChange;
this.RetailPriceChangeTo = _RetailPriceChangeTo;
this.TaxInclusivePriceChange = _TaxInclusivePriceChange;
this.TaxInclusivePricePercentChange = _TaxInclusivePricePercentChange;
this.TaxInclusivePriceChangeTo = _TaxInclusivePriceChangeTo;
this.InsertBulkEdit = _InsertBulkEdit;

	        Fill(ds);
	        
	    }
	    }
	

        public partial class ContextBase : DbContextBase
        {

            public System.Threading.Tasks.Task<bool> GetProductWarrantableStatus(string SKU)
            {
                var param1 = new System.Data.SqlClient.SqlParameter("SKU", SqlDbType.VarChar);
                param1.Value = SKU;
                return this.Database.SqlQuery<bool>("EXEC Merchandising.GetProductWarrantableStatus @SKU", param1).FirstOrDefaultAsync();
            }

        protected ContextBase(string connectionString = "Default") : base(connectionString) 
			{
				Database.SetInitializer<Context>(null);
			}
		 
            
                public virtual DbSet<Level> Level { get; set; }
            
                public virtual DbSet<Tag> Tag { get; set; }
            
                public virtual DbSet<Warranty> Warranty { get; set; }
            
                public virtual DbSet<WarrantyTags> WarrantyTags { get; set; }
            
                public virtual DbSet<WarrantyPrice> WarrantyPrice { get; set; }
            
                public virtual DbSet<Link> Link { get; set; }
            
                public virtual DbSet<LinkProduct> LinkProduct { get; set; }
            
                public virtual DbSet<LinkWarranty> LinkWarranty { get; set; }
            
                public virtual DbSet<WarrantyPromotion> WarrantyPromotion { get; set; }
            
                public virtual DbSet<WarrantyReturn> WarrantyReturn { get; set; }
            
                public virtual DbSet<WarrantyReturnFilter> WarrantyReturnFilter { get; set; }
            
                public virtual DbSet<WarrantySale> WarrantySale { get; set; }
            
                public virtual DbSet<WarrantyPotentialSale> WarrantyPotentialSale { get; set; }
            
                public virtual DbSet<WarrantyContact> WarrantyContact { get; set; }
            
                public virtual DbSet<Renewal> Renewal { get; set; }
            
            
            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                base.OnModelCreating(modelBuilder);
                
                        var t0 = modelBuilder.Entity< Level >();
                        t0.ToTable("Level", "Warranty");
                        
                        t0.HasKey(t => t.Id);
                        
                        t0.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        var t1 = modelBuilder.Entity< Tag >();
                        t1.ToTable("Tag", "Warranty");
                        
                        t1.HasKey(t => t.Id);
                        
                        t1.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.LevelId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        var t2 = modelBuilder.Entity< Warranty >();
                        t2.ToTable("Warranty", "Warranty");
                        
                        t2.HasKey(t => t.Id);
                        
                        t2.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Number)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t2.Property(t => t.Description)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t2.Property(t => t.Length)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.TaxRate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        .HasPrecision(28,12)
                        ;
                        
                        t2.Property(t => t.Deleted)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.TypeCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        var t3 = modelBuilder.Entity< WarrantyTags >();
                        t3.ToTable("WarrantyTags", "Warranty");
                        
                        t3.HasKey(t => t.Id);
                        
                        t3.Property(t => t.WarrantyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.TagId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.LevelId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t4 = modelBuilder.Entity< WarrantyPrice >();
                        t4.ToTable("WarrantyPrice", "Warranty");
                        
                        t4.HasKey(t => t.Id);
                        
                        t4.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.WarrantyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.BranchType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t4.Property(t => t.BranchNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.CostPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.RetailPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.EffectiveDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.CostPriceChange)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.CostPricePercentChange)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.RetailPriceChange)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.RetailPricePercentChange)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.TaxInclusivePriceChange)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.TaxInclusivePricePercentChange)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.BulkEditId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t5 = modelBuilder.Entity< Link >();
                        t5.ToTable("Link", "Warranty");
                        
                        t5.HasKey(t => t.Id);
                        
                        t5.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t5.Property(t => t.EffectiveDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t6 = modelBuilder.Entity< LinkProduct >();
                        t6.ToTable("LinkProduct", "Warranty");
                        
                        t6.HasKey(t => t.Id);
                        
                        t6.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.LinkId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.StockBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.ItemNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t6.Property(t => t.Level_1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t6.Property(t => t.Level_2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t6.Property(t => t.Level_3)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t6.Property(t => t.StoreType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t6.Property(t => t.RefCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        var t7 = modelBuilder.Entity< LinkWarranty >();
                        t7.ToTable("LinkWarranty", "Warranty");
                        
                        t7.HasKey(t => t.Id);
                        
                        t7.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.LinkId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.WarrantyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.ProductMin)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.ProductMax)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t8 = modelBuilder.Entity< WarrantyPromotion >();
                        t8.ToTable("WarrantyPromotion", "Warranty");
                        
                        t8.HasKey(t => t.Id);
                        
                        t8.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.StartDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.EndDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.RetailPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.PercentageDiscount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        .HasPrecision(28,12)
                        ;
                        
                        t8.Property(t => t.BranchType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t8.Property(t => t.BranchNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.WarrantyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t9 = modelBuilder.Entity< WarrantyReturn >();
                        t9.ToTable("WarrantyReturn", "Warranty");
                        
                        t9.HasKey(t => t.Id);
                        
                        t9.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.WarrantyLength)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.ElapsedMonths)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.PercentageReturn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        .HasPrecision(28,12)
                        ;
                        
                        t9.Property(t => t.BranchType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t9.Property(t => t.BranchNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.WarrantyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.Level_1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t9.Property(t => t.FreeWarrantyLength)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t10 = modelBuilder.Entity< WarrantyReturnFilter >();
                        t10.ToTable("WarrantyReturnFilter", "Warranty");
                        
                        t10.HasKey(t => t.Id);
                        
                        t10.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t10.Property(t => t.WarrantyReturnId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t10.Property(t => t.TagId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t11 = modelBuilder.Entity< WarrantySale >();
                        t11.ToTable("WarrantySale", "Warranty");
                        
                        t11.HasKey(t => t.Id);
                        
                        t11.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.InvoiceNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.SaleBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.SoldOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.SoldBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerAccount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(12)
                        .IsFixedLength()
                        
                        ;
                        
                        t11.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerTitle)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerFirstName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerLastName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(60)
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerAddressLine1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerAddressLine2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerAddressLine3)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerPostcode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemUPC)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemBrand)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemModel)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemSupplier)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyContractNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyLength)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyTaxRate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        .HasPrecision(28,12)
                        ;
                        
                        t11.Property(t => t.WarrantyCostPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyRetailPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantySalePrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.Status)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemSerialNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t11.Property(t => t.StockLocation)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerNotes)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(4000)
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemCostPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemDeliveredOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyGroupId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.SoldById)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.ItemQuantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.EffectiveDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyDeliveredOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.WarrantyType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t11.Property(t => t.AgreementNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t12 = modelBuilder.Entity< WarrantyPotentialSale >();
                        t12.ToTable("WarrantyPotentialSale", "Warranty");
                        
                        t12.HasKey(t => t.Id);
                        
                        t12.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.InvoiceNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t12.Property(t => t.SaleBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.SoldOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.SoldById)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t12.Property(t => t.ItemId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.ItemNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t12.Property(t => t.ItemPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.WarrantyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.WarrantyNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t12.Property(t => t.WarrantyLength)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.WarrantyTaxRate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        .HasPrecision(28,12)
                        ;
                        
                        t12.Property(t => t.WarrantyCostPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.WarrantyRetailPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.WarrantySalePrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.ItemSerialNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t12.Property(t => t.ItemCostPrice)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.ItemDeliveredOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.IsItemReturned)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.SecondEffort)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.WarrantyType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(1)
                        .IsFixedLength()
                        
                        ;
                        
                        t12.Property(t => t.CustomerAccount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(12)
                        .IsFixedLength()
                        
                        ;
                        
                        t12.Property(t => t.AgreementNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.Quantity)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t13 = modelBuilder.Entity< WarrantyContact >();
                        t13.ToTable("WarrantyContact", "Warranty");
                        
                        t13.HasKey(t => t.Id);
                        
                        t13.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t13.Property(t => t.WarrantySaleId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t13.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t13.Property(t => t.Value)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(255)
                        
                        
                        ;
                        
                        var t14 = modelBuilder.Entity< Renewal >();
                        t14.ToTable("Renewal", "Warranty");
                        
                        t14.HasKey(t => t.Id);
                        
                        t14.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t14.Property(t => t.WarrantyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t14.Property(t => t.RenewalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        modelBuilder.Entity< BranchLookup >().ToTable("BranchLookup", "Warranty");
                        
                        modelBuilder.Entity< PriceCalcView >().ToTable("PriceCalcView", "Warranty");
                        
                        modelBuilder.Entity< ViewWarrantyPromotion >().ToTable("ViewWarrantyPromotion", "Warranty");
                        
                        modelBuilder.Entity< WarrantyReturnSearchView >().ToTable("WarrantyReturnSearchView", "Warranty");
                        
                        modelBuilder.Entity< WarrantyPromotionsView >().ToTable("WarrantyPromotionsView", "Warranty");
                        
                        modelBuilder.Entity< LinkWarrantyTypeView >().ToTable("LinkWarrantyTypeView", "Warranty");
                        
                        modelBuilder.Entity< SalePersonView >().ToTable("SalePersonView", "Warranty");
                        
                        modelBuilder.Entity< ProductWarrantyLinkView >().ToTable("ProductWarrantyLinkView", "Warranty");
                        
            }
        }

        
        [Serializable]
	[DataContract]
    public partial class Level
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Tag
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int LevelId { get; set; }
                [DataMember] public string Name { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Warranty
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Number { get; set; }
                [DataMember] public string Description { get; set; }
                [DataMember] public short Length { get; set; }
                [DataMember] public decimal? TaxRate { get; set; }
                [DataMember] public bool Deleted { get; set; }
                [DataMember] public string TypeCode { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class WarrantyTags
    {
                [DataMember] public int WarrantyId { get; set; }
                [DataMember] public int? TagId { get; set; }
                [DataMember] public int Id { get; set; }
                [DataMember] public int LevelId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class WarrantyPrice
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int WarrantyId { get; set; }
                [DataMember] public string BranchType { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public decimal? CostPrice { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public DateTime EffectiveDate { get; set; }
                [DataMember] public decimal? CostPriceChange { get; set; }
                [DataMember] public decimal? CostPricePercentChange { get; set; }
                [DataMember] public decimal? RetailPriceChange { get; set; }
                [DataMember] public decimal? RetailPricePercentChange { get; set; }
                [DataMember] public decimal? TaxInclusivePriceChange { get; set; }
                [DataMember] public decimal? TaxInclusivePricePercentChange { get; set; }
                [DataMember] public int? BulkEditId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Link
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public DateTime EffectiveDate { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class LinkProduct
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int LinkId { get; set; }
                [DataMember] public int? StockBranch { get; set; }
                [DataMember] public string ItemNumber { get; set; }
                [DataMember] public string Level_1 { get; set; }
                [DataMember] public string Level_2 { get; set; }
                [DataMember] public string Level_3 { get; set; }
                [DataMember] public string StoreType { get; set; }
                [DataMember] public string RefCode { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class LinkWarranty
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int LinkId { get; set; }
                [DataMember] public int WarrantyId { get; set; }
                [DataMember] public decimal ProductMin { get; set; }
                [DataMember] public decimal ProductMax { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class WarrantyPromotion
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public DateTime StartDate { get; set; }
                [DataMember] public DateTime EndDate { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public decimal? PercentageDiscount { get; set; }
                [DataMember] public string BranchType { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public int WarrantyId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class WarrantyReturn
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int? WarrantyLength { get; set; }
                [DataMember] public int ElapsedMonths { get; set; }
                [DataMember] public decimal? PercentageReturn { get; set; }
                [DataMember] public string BranchType { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public int? WarrantyId { get; set; }
                [DataMember] public string Level_1 { get; set; }
                [DataMember] public byte? FreeWarrantyLength { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class WarrantyReturnFilter
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int WarrantyReturnId { get; set; }
                [DataMember] public int? TagId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class WarrantySale
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string InvoiceNumber { get; set; }
                [DataMember] public short SaleBranch { get; set; }
                [DataMember] public DateTime? SoldOn { get; set; }
                [DataMember] public string SoldBy { get; set; }
                [DataMember] public string CustomerAccount { get; set; }
                [DataMember] public string CustomerId { get; set; }
                [DataMember] public string CustomerTitle { get; set; }
                [DataMember] public string CustomerFirstName { get; set; }
                [DataMember] public string CustomerLastName { get; set; }
                [DataMember] public string CustomerAddressLine1 { get; set; }
                [DataMember] public string CustomerAddressLine2 { get; set; }
                [DataMember] public string CustomerAddressLine3 { get; set; }
                [DataMember] public string CustomerPostcode { get; set; }
                [DataMember] public int? ItemId { get; set; }
                [DataMember] public string ItemNumber { get; set; }
                [DataMember] public string ItemUPC { get; set; }
                [DataMember] public decimal? ItemPrice { get; set; }
                [DataMember] public string ItemDescription { get; set; }
                [DataMember] public string ItemBrand { get; set; }
                [DataMember] public string ItemModel { get; set; }
                [DataMember] public string ItemSupplier { get; set; }
                [DataMember] public string WarrantyContractNo { get; set; }
                [DataMember] public int? WarrantyId { get; set; }
                [DataMember] public string WarrantyNumber { get; set; }
                [DataMember] public short? WarrantyLength { get; set; }
                [DataMember] public decimal? WarrantyTaxRate { get; set; }
                [DataMember] public decimal? WarrantyCostPrice { get; set; }
                [DataMember] public decimal? WarrantyRetailPrice { get; set; }
                [DataMember] public decimal? WarrantySalePrice { get; set; }
                [DataMember] public string Status { get; set; }
                [DataMember] public string ItemSerialNumber { get; set; }
                [DataMember] public short? StockLocation { get; set; }
                [DataMember] public string CustomerNotes { get; set; }
                [DataMember] public decimal? ItemCostPrice { get; set; }
                [DataMember] public DateTime? ItemDeliveredOn { get; set; }
                [DataMember] public int? WarrantyGroupId { get; set; }
                [DataMember] public int? SoldById { get; set; }
                [DataMember] public int? ItemQuantity { get; set; }
                [DataMember] public DateTime? EffectiveDate { get; set; }
                [DataMember] public DateTime? WarrantyDeliveredOn { get; set; }
                [DataMember] public string WarrantyType { get; set; }
                [DataMember] public int? AgreementNumber { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class WarrantyPotentialSale
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string InvoiceNumber { get; set; }
                [DataMember] public short SaleBranch { get; set; }
                [DataMember] public DateTime? SoldOn { get; set; }
                [DataMember] public int? SoldById { get; set; }
                [DataMember] public string CustomerId { get; set; }
                [DataMember] public int? ItemId { get; set; }
                [DataMember] public string ItemNumber { get; set; }
                [DataMember] public decimal? ItemPrice { get; set; }
                [DataMember] public int? WarrantyId { get; set; }
                [DataMember] public string WarrantyNumber { get; set; }
                [DataMember] public short? WarrantyLength { get; set; }
                [DataMember] public decimal? WarrantyTaxRate { get; set; }
                [DataMember] public decimal? WarrantyCostPrice { get; set; }
                [DataMember] public decimal? WarrantyRetailPrice { get; set; }
                [DataMember] public decimal? WarrantySalePrice { get; set; }
                [DataMember] public string ItemSerialNumber { get; set; }
                [DataMember] public decimal? ItemCostPrice { get; set; }
                [DataMember] public DateTime? ItemDeliveredOn { get; set; }
                [DataMember] public bool IsItemReturned { get; set; }
                [DataMember] public bool? SecondEffort { get; set; }
                [DataMember] public string WarrantyType { get; set; }
                [DataMember] public string CustomerAccount { get; set; }
                [DataMember] public int? AgreementNumber { get; set; }
                [DataMember] public int Quantity { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class WarrantyContact
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int WarrantySaleId { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string Value { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Renewal
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int WarrantyId { get; set; }
                [DataMember] public int RenewalId { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<BranchLookup> BranchLookup { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class BranchLookup
    {
                [DataMember] public short branchno { get; set; }
                [DataMember] public string BranchNameLong { get; set; }
                [DataMember] public string branchname { get; set; }
                [DataMember] public string StoreType { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<PriceCalcView> PriceCalcView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class PriceCalcView
    {
                [DataMember] public int? Id { get; set; }
                [DataMember] public int? WarrantyId { get; set; }
                [DataMember] public string WarrantyNumber { get; set; }
                [DataMember] public string BranchType { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public decimal? CostPrice { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public decimal? RetailTaxInclusivePrice { get; set; }
                [DataMember] public DateTime? EffectiveDate { get; set; }
                [DataMember] public decimal? CostPriceChange { get; set; }
                [DataMember] public decimal? CostPricePercentChange { get; set; }
                [DataMember] public decimal? RetailPriceChange { get; set; }
                [DataMember] public decimal? RetailPricePercentChange { get; set; }
                [DataMember] public decimal? TaxInclusivePriceChange { get; set; }
                [DataMember] public decimal? TaxInclusivePricePercentChange { get; set; }
                [DataMember] public int? BulkEditId { get; set; }
                [DataMember] public string AgrmtTaxType { get; set; }
                [DataMember] public decimal? TaxRate { get; set; }
                [DataMember] public bool? IsFree { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<ViewWarrantyPromotion> ViewWarrantyPromotion { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class ViewWarrantyPromotion
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string BranchType { get; set; }
                [DataMember] public string BranchNumber { get; set; }
                [DataMember] public int WarrantyId { get; set; }
                [DataMember] public string WarrantyNumber { get; set; }
                [DataMember] public DateTime StartDate { get; set; }
                [DataMember] public DateTime EndDate { get; set; }
                [DataMember] public decimal? PercentageDiscount { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<WarrantyReturnSearchView> WarrantyReturnSearchView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class WarrantyReturnSearchView
    {
                [DataMember] public int WarrantyReturnId { get; set; }
                [DataMember] public string WarrantyNo { get; set; }
                [DataMember] public string WarrantyDescription { get; set; }
                [DataMember] public int? TagId { get; set; }
                [DataMember] public string Tag { get; set; }
                [DataMember] public string Level { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<WarrantyPromotionsView> WarrantyPromotionsView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class WarrantyPromotionsView
    {
                [DataMember] public DateTime StartDate { get; set; }
                [DataMember] public DateTime EndDate { get; set; }
                [DataMember] public decimal? PercentageDiscount { get; set; }
                [DataMember] public decimal? RetailPrice { get; set; }
                [DataMember] public short? BranchNumber { get; set; }
                [DataMember] public string BranchName { get; set; }
                [DataMember] public string BranchType { get; set; }
                [DataMember] public int warrantyId { get; set; }
                [DataMember] public string WarrantyNumber { get; set; }
                [DataMember] public int WarrantyPriceId { get; set; }
                [DataMember] public DateTime WarrantyPriceEffectiveDate { get; set; }
                [DataMember] public long? RowKey { get; set; }
                [DataMember] public int WarrantyPromotionId { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<LinkWarrantyTypeView> LinkWarrantyTypeView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class LinkWarrantyTypeView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public string Department { get; set; }
                [DataMember] public string Category { get; set; }
                [DataMember] public string Class { get; set; }
                [DataMember] public string RefCode { get; set; }
                [DataMember] public string StoreType { get; set; }
                [DataMember] public string ItemNumber { get; set; }
                [DataMember] public int? StockBranch { get; set; }
                [DataMember] public string TypeCode { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<SalePersonView> SalePersonView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class SalePersonView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<ProductWarrantyLinkView> ProductWarrantyLinkView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class ProductWarrantyLinkView
    {
                [DataMember] public long? Id { get; set; }
                [DataMember] public int LinkId { get; set; }
                [DataMember] public string StoreType { get; set; }
                [DataMember] public int? StockBranch { get; set; }
                [DataMember] public string ItemNumber { get; set; }
                [DataMember] public string RefCode { get; set; }
                [DataMember] public string Level1 { get; set; }
                [DataMember] public string Level2 { get; set; }
                [DataMember] public string Level3 { get; set; }
                [DataMember] public string WarrantyDescription { get; set; }
                [DataMember] public int WarrantyId { get; set; }
                [DataMember] public string WarrantyTypeCode { get; set; }
                [DataMember] public short WarrantyLenght { get; set; }
                [DataMember] public string WarrantyNumber { get; set; }
                [DataMember] public decimal? WarrantyTaxRange { get; set; }
                [DataMember] public string LinkName { get; set; }
                [DataMember] public decimal ProductMin { get; set; }
                [DataMember] public decimal ProductMax { get; set; }
                [DataMember] public DateTime EffectiveDate { get; set; }
            }

        public partial class Settings : Blue.Config.SettingsBase
    {
        public Settings() : base(Blue.Cosacs.Warranty.Module.Instance) {}

        public static StructureMap.Configuration.DSL.IRegistry Register<T>(StructureMap.Configuration.DSL.IRegistry registry, T singletonObject)
            where T : Blue.Config.ISettings

        {
            registry.For<Blue.Config.ISettings>().Add(singletonObject).Named(@"Blue.Cosacs.Warranty");
            registry.For<T>().Singleton().Use(singletonObject);
            return registry;
        }

        public override Blue.Config.SettingMetadata[] Metadata()
        {
            return metadata;
        }

        #region Setting Metadata
        private static readonly Blue.Config.SettingMetadata[] metadata = new Blue.Config.SettingMetadata[] 
        {
                        new Blue.Config.SettingMetadata.@bit {
                Id = @"EmailSSL",
                Name = @"SSL",
                Description = @"",
                Category = @"Email Notification Account",
                Default = @"false",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@bit,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                    };
        #endregion

        #region Setting Enums
                #endregion

        #region Setting Properties
                public bool EmailSSL 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Bit("EmailSSL"); }
        }
                #endregion
    }
    
    

        public class Module : Blue.Config.ModuleBase
    {
        private Module() {}

        public static readonly Module Instance = new Module
        {
            Label = @"Warranty",
            Namespace = @"Blue.Cosacs.Warranty",
            Schema = @"Warranty",
        };
    }
    }