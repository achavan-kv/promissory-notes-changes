













//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Blue.Transactions;
using System;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data;
using System.Data.Entity;
using System.Runtime.Serialization;

namespace Blue.Cosacs.Service
{
    public partial class NewInternalServiceRequest : Blue.Transactions.Command<Context>
    {
        public NewInternalServiceRequest() : base("Service.NewInternalServiceRequest")
        {
            base.AddInParameter("@Type", DbType.AnsiString);
            base.AddInParameter("@CustomerId", DbType.AnsiString);
            base.AddInParameter("@CustomerAccount", DbType.AnsiStringFixedLength);
        }

        public string Type
        {
            get { return (string)base[0]; }
            set { base[0] = value; }
        }
        public string CustomerId
        {
            get { return (string)base[1]; }
            set { base[1] = value; }
        }
        public string CustomerAccount
        {
            get { return (string)base[2]; }
            set { base[2] = value; }
        }
    }

    partial class NewInternalServiceRequest
    {
        public new void Fill(DataSet ds)
        {
            base.Fill(ds);
        }

        public void Fill(DataSet ds, string _Type, string _CustomerId, string _CustomerAccount)
        {
            this.Type = _Type;
            this.CustomerId = _CustomerId;
            this.CustomerAccount = _CustomerAccount;

            Fill(ds);

        }
    }


    public partial class ContextBase : DbContextBase
    {
        protected ContextBase(string connectionString = "Default") : base(connectionString)
        {
            Database.SetInitializer<Context>(null);
        }


        public virtual DbSet<Request> Request { get; set; }
        public virtual DbSet<Order> Order { get; set; }

        // CR2018-008 by tosif ali 16/10/2018*@
        public virtual DbSet<AddressCode> AddressCode { get; set; }

        public virtual DbSet<customer> customer { get; set; }

        public virtual DbSet<custaddress> custaddress { get; set; }
        //End Hear

        public virtual DbSet<RequestContact> RequestContact { get; set; }

        public virtual DbSet<RequestFoodLoss> RequestFoodLoss { get; set; }

        public virtual DbSet<RequestPart> RequestPart { get; set; }

        public virtual DbSet<RequestScriptAnswer> RequestScriptAnswer { get; set; }

        public virtual DbSet<FaultTag> FaultTag { get; set; }

        public virtual DbSet<Technician> Technician { get; set; }

        public virtual DbSet<ZoneUser> ZoneUser { get; set; }

        public virtual DbSet<SupplierCost> SupplierCost { get; set; }

        public virtual DbSet<Holiday> Holiday { get; set; }

        public virtual DbSet<TechnicianBooking> TechnicianBooking { get; set; }

        public virtual DbSet<Comment> Comment { get; set; }

        public virtual DbSet<Payment> Payment { get; set; }

        public virtual DbSet<TechnicianBookingDelete> TechnicianBookingDelete { get; set; }

        public virtual DbSet<TechnicianBookingReject> TechnicianBookingReject { get; set; }

        public virtual DbSet<ServiceSupplier> ServiceSupplier { get; set; }

        public virtual DbSet<Charge> Charge { get; set; }

        public virtual DbSet<LabourCostMatrix> LabourCostMatrix { get; set; }

        public virtual DbSet<PartsCostMatrix> PartsCostMatrix { get; set; }

        public virtual DbSet<Resolution> Resolution { get; set; }
        public virtual DbSet<AddressMaster> AddressMaster { get; set; } // Address Standardization CR2019 - 025

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            #region Service_Request
            var t01123 = modelBuilder.Entity<Order>();
            t01123.ToTable("Order", "Sales");
            t01123.HasKey(t => t.Id);
            t01123.Property(t => t.Id)

            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            ;


            t01123.Property(t => t.AgreementInvoiceNumber)

           .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            var t0 = modelBuilder.Entity<Request>();
            t0.ToTable("Request", "Service");

            t0.HasKey(t => t.Id);

            t0.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.addtype)
           .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t0.Property(t => t.CreatedOn)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.CreatedBy)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.Branch)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.Type)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(2)
            .IsFixedLength()

            ;

            t0.Property(t => t.State)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(32)


            ;

            t0.Property(t => t.Account)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(12)
            .IsFixedLength()

            ;

            t0.Property(t => t.InvoiceNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.CustomerId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.CustomerTitle)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(25)


            ;

            t0.Property(t => t.CustomerFirstName)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.CustomerLastName)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(60)


            ;

            t0.Property(t => t.CustomerAddressLine1)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.CustomerAddressLine2)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.CustomerAddressLine3)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.CustomerPostcode)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(10)


            ;

            t0.Property(t => t.CustomerNotes)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(4000)


            ;

            t0.Property(t => t.ItemId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(25)


            ;

            t0.Property(t => t.ItemAmount)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)



            .HasPrecision(28, 12)
            ;

            t0.Property(t => t.ItemSoldBy)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.ItemDeliveredOn)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ItemStockLocation)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.Item)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.ItemSupplier)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.ItemSerialNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.WarrantyContractId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.WarrantyLength)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.TransitNotes)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(4000)


            ;

            t0.Property(t => t.EvaluationClaimFoodLoss)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.EvaluationLocation)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.EvaluationAction)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.AllocationItemReceivedOn)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.AllocationPartExpectOn)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.AllocationInstructions)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(4000)


            ;

            t0.Property(t => t.Resolution)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.ResolutionDate)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ResolutionSupplierToCharge)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.ResolutionCategory)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.ResolutionReport)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(4000)


            ;

            t0.Property(t => t.ResolutionLabourCost)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)



            .HasPrecision(28, 12)
            ;

            t0.Property(t => t.ResolutionAdditionalCost)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ResolutionTransportCost)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ResolutionPrimaryCharge)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(30)


            ;

            t0.Property(t => t.FinalisedFailure)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.FinaliseReturnDate)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.CreatedById)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.LastUpdatedUser)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.LastUpdatedUserName)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.LastUpdatedOn)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ItemNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(18)


            ;

            t0.Property(t => t.IsClosed)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.IsPaymentRequired)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ItemModelNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.ManWarrantyLength)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ResolutionDelivererToCharge)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.WarrantyContractNo)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;

            t0.Property(t => t.Printed)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ReplacementIssued)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.Retailer)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.DepositRequired)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.TechnicianPayState)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;

            t0.Property(t => t.Evaluation)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.RepairLimitWarning)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.WarrantyNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.ManufacturerWarrantyNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.ManufacturerWarrantyContractNo)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;

            t0.Property(t => t.WarrantyGroupId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.ProductLevel_1)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(12)


            ;

            t0.Property(t => t.ProductLevel_2)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.ProductLevel_3)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(5)
            .IsFixedLength()

            ;

            t0.Property(t => t.RepairType)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t0.Property(t => t.Manufacturer)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.ReasonForExchange)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(100)


            ;

            t0.Property(t => t.ResolutionFail)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t0.Property(t => t.DepositAuthorised)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            var t01 = modelBuilder.Entity<AddressCode>();
            t01.ToTable("Code");

            t01.HasKey(t => t.origbr);

            t01.Property(t => t.origbr)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t01.Property(t => t.category)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t01.Property(t => t.code)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t01.Property(t => t.codedescript)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            var t011 = modelBuilder.Entity<customer>();
            t011.ToTable("customer");

            t011.HasKey(t => t.origbr);

            t011.Property(t => t.origbr)


            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t011.Property(t => t.custid)
.HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t011.Property(t => t.firstname)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t011.Property(t => t.name)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t011.Property(t => t.title)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            var t0111 = modelBuilder.Entity<custaddress>();
            t0111.ToTable("custaddress");

            t0111.HasKey(t => t.origbr);

            t0111.Property(t => t.origbr)


            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t0111.Property(t => t.custid)
       .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t0111.Property(t => t.addtype)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t0111.Property(t => t.cusaddr1)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t0111.Property(t => t.cusaddr2)
          .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);
            t0111.Property(t => t.cusaddr3)
   .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);
            t0111.Property(t => t.cuspocode)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);

            t0111.Property(t => t.DELTitleC)
         .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);
            t0111.Property(t => t.DELFirstName)
         .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);
            t0111.Property(t => t.DELLastName)
         .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None);




            #endregion

            #region Service_RequestContact
            var t1 = modelBuilder.Entity<RequestContact>();
            t1.ToTable("RequestContact", "Service");

            t1.HasKey(t => t.Id);

            t1.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t1.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t1.Property(t => t.Type)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;

            t1.Property(t => t.Value)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(255)


            ;

            #endregion

            #region Service_RequestFoodLoss
            var t2 = modelBuilder.Entity<RequestFoodLoss>();
            t2.ToTable("RequestFoodLoss", "Service");

            t2.HasKey(t => t.Id);

            t2.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t2.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t2.Property(t => t.Item)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(200)


            ;

            t2.Property(t => t.Value)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            #region Service_RequestPart
            var t3 = modelBuilder.Entity<RequestPart>();
            t3.ToTable("RequestPart", "Service");

            t3.HasKey(t => t.Id);

            t3.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t3.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t3.Property(t => t.PartNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t3.Property(t => t.PartType)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(30)


            ;

            t3.Property(t => t.Quantity)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t3.Property(t => t.Description)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(200)


            ;

            t3.Property(t => t.StockBranch)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t3.Property(t => t.Source)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(32)


            ;

            t3.Property(t => t.CostPrice)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t3.Property(t => t.Price)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t3.Property(t => t.TaxAmount)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t3.Property(t => t.TaxRate)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            #region Service_RequestScriptAnswer
            var t4 = modelBuilder.Entity<RequestScriptAnswer>();
            t4.ToTable("RequestScriptAnswer", "Service");

            t4.HasKey(t => t.Id);

            t4.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t4.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t4.Property(t => t.Question)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(500)


            ;

            t4.Property(t => t.Answer)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(3)
            .IsFixedLength()

            ;
            #endregion

            #region Service_FaultTag
            var t5 = modelBuilder.Entity<FaultTag>();
            t5.ToTable("FaultTag", "Service");

            t5.HasKey(t => t.Id);

            t5.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t5.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t5.Property(t => t.Tag)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(128)


            ;
            #endregion

            #region Service_Technician
            var t6 = modelBuilder.Entity<Technician>();
            t6.ToTable("Technician", "Service");

            t6.HasKey(t => t.UserId);

            t6.Property(t => t.UserId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t6.Property(t => t.Internal)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t6.Property(t => t.StartTime)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(4)
            .IsFixedLength()

            ;

            t6.Property(t => t.EndTime)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(4)
            .IsFixedLength()

            ;

            t6.Property(t => t.Slots)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            // Code Added by Gurpreet - CR2018-010 - 31/10/18 - Setting of max no. of Jobs & Validation with allocated jobs for a technician.
            t6.Property(t => t.MaxJobs)
           .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)


           ;
            //CR2018-010 Changes End
            #endregion

            #region Service_ZoneUser
            var t7 = modelBuilder.Entity<ZoneUser>();
            t7.ToTable("ZoneUser", "Service");

            t7.HasKey(t => t.Id);

            t7.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t7.Property(t => t.UserId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t7.Property(t => t.Zone)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;
            #endregion

            #region Service_SupplierCost
            var t8 = modelBuilder.Entity<SupplierCost>();
            t8.ToTable("SupplierCost", "Service");

            t8.HasKey(t => t.Id);

            t8.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t8.Property(t => t.Supplier)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(30)


            ;

            t8.Property(t => t.Product)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(30)


            ;

            t8.Property(t => t.Year)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t8.Property(t => t.PartType)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(30)


            ;

            t8.Property(t => t.PartPercent)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t8.Property(t => t.PartLimit)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t8.Property(t => t.LabourPercent)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t8.Property(t => t.LabourLimit)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t8.Property(t => t.AdditionalPercent)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t8.Property(t => t.AdditionalLimit)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            #region Service_Holiday
            var t9 = modelBuilder.Entity<Holiday>();
            t9.ToTable("Holiday", "Service");

            t9.HasKey(t => t.Id);

            t9.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t9.Property(t => t.UserId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t9.Property(t => t.StartDate)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t9.Property(t => t.EndDate)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t9.Property(t => t.Approved)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            #region Service_TechnicianBooking
            var t10 = modelBuilder.Entity<TechnicianBooking>();
            t10.ToTable("TechnicianBooking", "Service");

            t10.HasKey(t => t.Id);

            t10.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t10.Property(t => t.UserId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t10.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t10.Property(t => t.Date)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t10.Property(t => t.Slot)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t10.Property(t => t.SlotExtend)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t10.Property(t => t.Reject)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t10.Property(t => t.AllocatedOn)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t10.Property(t => t.CompletedDate)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            #region Service_Comment
            var t11 = modelBuilder.Entity<Comment>();
            t11.ToTable("Comment", "Service");

            t11.HasKey(t => t.Id);

            t11.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t11.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t11.Property(t => t.Date)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t11.Property(t => t.AddedBy)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t11.Property(t => t.Text)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            #region Service_Payment
            var t12 = modelBuilder.Entity<Payment>();
            t12.ToTable("Payment", "Service");

            t12.HasKey(t => t.Id);

            t12.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t12.Property(t => t.PayMethod)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t12.Property(t => t.CustomerId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;

            t12.Property(t => t.Amount)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t12.Property(t => t.EmpeeNo)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t12.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t12.Property(t => t.Bank)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(6)


            ;

            t12.Property(t => t.ChequeNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(16)


            ;

            t12.Property(t => t.BankAccountNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;

            t12.Property(t => t.ChargeType)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(30)


            ;

            t12.Property(t => t.CardType)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;

            t12.Property(t => t.CardNumber)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            #region Service_TechnicianBookingDelete
            var t13 = modelBuilder.Entity<TechnicianBookingDelete>();
            t13.ToTable("TechnicianBookingDelete", "Service");

            t13.HasKey(t => t.Id);

            t13.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t13.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t13.Property(t => t.UserId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t13.Property(t => t.Date)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t13.Property(t => t.TechincianId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t13.Property(t => t.Reason)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(256)


            ;
            #endregion

            #region Service_TechnicianBookingReject
            var t14 = modelBuilder.Entity<TechnicianBookingReject>();
            t14.ToTable("TechnicianBookingReject", "Service");

            t14.HasKey(t => t.Id);

            t14.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t14.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t14.Property(t => t.UserId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t14.Property(t => t.Date)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t14.Property(t => t.TechincianId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t14.Property(t => t.Reason)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(256)


            ;
            #endregion

            #region Service_ServiceSupplier
            var t15 = modelBuilder.Entity<ServiceSupplier>();
            t15.ToTable("ServiceSupplier", "Service");

            t15.HasKey(t => t.Id);

            t15.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t15.Property(t => t.Supplier)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;
            #endregion

            #region Service_Charge
            var t16 = modelBuilder.Entity<Charge>();
            t16.ToTable("Charge", "Service");

            t16.HasKey(t => t.Id);

            t16.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t16.Property(t => t.RequestId)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t16.Property(t => t.Type)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t16.Property(t => t.Account)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(20)


            ;

            t16.Property(t => t.Label)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t16.Property(t => t.IsExternal)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t16.Property(t => t.Cost)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t16.Property(t => t.Value)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t16.Property(t => t.Tax)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t16.Property(t => t.TaxRate)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            #region Service_LabourCostMatrix
            var t17 = modelBuilder.Entity<LabourCostMatrix>();
            t17.ToTable("LabourCostMatrix", "Service");

            t17.HasKey(t => t.Id);

            t17.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t17.Property(t => t.Type)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.InternalTechnician)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t17.Property(t => t.ContractedTechnician)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t17.Property(t => t.Cost)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t17.Property(t => t.EWClaim)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t17.Property(t => t.CustomerCharge)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t17.Property(t => t.Level_1)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_2)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_3)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_4)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_5)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_6)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_7)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_8)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_9)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Level_10)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.ItemList)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(4000)


            ;

            t17.Property(t => t.IsGroupFilter)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t17.Property(t => t.Label)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t17.Property(t => t.Supplier)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(30)


            ;
            #endregion

            #region Service_PartsCostMatrix
            var t18 = modelBuilder.Entity<PartsCostMatrix>();
            t18.ToTable("PartsCostMatrix", "Service");

            t18.HasKey(t => t.Id);

            t18.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t18.Property(t => t.Type)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Internal)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t18.Property(t => t.FirstYearWarranty)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t18.Property(t => t.ExtendedWarranty)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t18.Property(t => t.Customer)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t18.Property(t => t.Level_1)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_2)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_3)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_4)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_5)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_6)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_7)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_8)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_9)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Level_10)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.ItemList)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(4000)


            ;

            t18.Property(t => t.IsGroupFilter)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;

            t18.Property(t => t.Label)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50)


            ;

            t18.Property(t => t.Supplier)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(30)


            ;
            #endregion

            #region Service_Resolution
            var t19 = modelBuilder.Entity<Resolution>();
            t19.ToTable("Resolution", "Service");

            t19.HasKey(t => t.id);

            t19.Property(t => t.id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)




            ;

            t19.Property(t => t.Description)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(128)


            ;

            t19.Property(t => t.Fail)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)




            ;
            #endregion

            // Address Standardization CR2019 - 025
            #region dbo_AddressMaster 
            var t20 = modelBuilder.Entity<AddressMaster>();
            t20.ToTable("AddressMaster");

            t20.HasKey(t => t.Id);

            t20.Property(t => t.Id)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity);

            t20.Property(t => t.Region)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50);

            t20.Property(t => t.Village)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(50);

            t20.Property(t => t.ZipCode)
            .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
            .IsUnicode(false)
            .HasMaxLength(10);
            #endregion

            modelBuilder.Entity<BranchLookup>().ToTable("BranchLookup", "Service");

            modelBuilder.Entity<InvoiceSearchView>().ToTable("InvoiceSearchView", "Service");

            modelBuilder.Entity<CustTelView>().ToTable("CustTelView", "Service");

            modelBuilder.Entity<CountryView>().ToTable("CountryView", "Service");

            modelBuilder.Entity<AdminTechProfileUsersView>().ToTable("AdminTechProfileUsersView", "Service");

            modelBuilder.Entity<AdminUserView>().ToTable("AdminUserView", "Service");

            modelBuilder.Entity<UserProfileView>().ToTable("UserProfileView", "Service");

            modelBuilder.Entity<SummaryPrintView>().ToTable("SummaryPrintView", "Service");

            modelBuilder.Entity<StockView>().ToTable("StockView", "Service");

            modelBuilder.Entity<PublicHolidayView>().ToTable("PublicHolidayView", "Service");

            modelBuilder.Entity<ExchangeRateView>().ToTable("ExchangeRateView", "Service");

            modelBuilder.Entity<SummaryView>().ToTable("SummaryView", "Service");

            modelBuilder.Entity<WarrantyBandView>().ToTable("WarrantyBandView", "Service");

            modelBuilder.Entity<GetRejectedJobsView>().ToTable("GetRejectedJobsView", "Service");

            modelBuilder.Entity<PendingHolidaysNameView>().ToTable("PendingHolidaysNameView", "Service");

            modelBuilder.Entity<HistoryView>().ToTable("HistoryView", "Service");

            modelBuilder.Entity<RequestIndexView>().ToTable("RequestIndexView", "Service");

            modelBuilder.Entity<RequestSlotTimesView>().ToTable("RequestSlotTimesView", "Service");

            modelBuilder.Entity<TechnicianPaymentsView>().ToTable("TechnicianPaymentsView", "Service");

            modelBuilder.Entity<TechnicianPaymentsTotCostView>().ToTable("TechnicianPaymentsTotCostView", "Service");

            modelBuilder.Entity<TechnicianAvailableRequestView>().ToTable("TechnicianAvailableRequestView", "Service");

            modelBuilder.Entity<TechnicianAllocatedRequestView>().ToTable("TechnicianAllocatedRequestView", "Service");

            modelBuilder.Entity<TechnicianNameView>().ToTable("TechnicianNameView", "Service");

            modelBuilder.Entity<TechnicianUser>().ToTable("TechnicianUser", "Service");

            modelBuilder.Entity<ReceiptBranchDetailsView>().ToTable("ReceiptBranchDetailsView", "Service");

            modelBuilder.Entity<ChargeToView>().ToTable("ChargeToView", "Service");

            modelBuilder.Entity<PrimaryChargeToView>().ToTable("PrimaryChargeToView", "Service");

            modelBuilder.Entity<WarrantyTotalRequestsView>().ToTable("WarrantyTotalRequestsView", "Service");

            modelBuilder.Entity<ItemsWithoutWarrantyView>().ToTable("ItemsWithoutWarrantyView", "Service");

            modelBuilder.Entity<ItemsByInvoiceNoSearchView>().ToTable("ItemsByInvoiceNoSearchView", "Service");

            modelBuilder.Entity<RequestPartView>().ToTable("RequestPartView", "Service");

        }
    }
    [Serializable]
    [DataContract]
public partial class Order

    {

        [DataMember] public string AgreementInvoiceNumber { get; set; }

        [DataMember] public int? Id { get; set; }



    }

    [Serializable]
    [DataContract]
    public partial class Request
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public DateTime CreatedOn { get; set; }
        [DataMember] public string CreatedBy { get; set; }
        [DataMember] public short Branch { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public string State { get; set; }
        [DataMember] public string Account { get; set; }
        [DataMember] public string InvoiceNumber { get; set; }
        [DataMember] public string CustomerId { get; set; }
        [DataMember] public string CustomerTitle { get; set; }
        [DataMember] public string CustomerFirstName { get; set; }
        [DataMember] public string CustomerLastName { get; set; }
        [DataMember] public string addtype { get; set; }
        [DataMember] public string CustomerAddressLine1 { get; set; }
        [DataMember] public string CustomerAddressLine2 { get; set; }
        [DataMember] public string CustomerAddressLine3 { get; set; }
        [DataMember] public string CustomerPostcode { get; set; }
        [DataMember] public string CustomerNotes { get; set; }
        [DataMember] public string ItemId { get; set; }
        [DataMember] public decimal? ItemAmount { get; set; }
        [DataMember] public string ItemSoldBy { get; set; }
        [DataMember] public DateTime? ItemDeliveredOn { get; set; }
        [DataMember] public short? ItemStockLocation { get; set; }
        [DataMember] public string Item { get; set; }
        [DataMember] public string ItemSupplier { get; set; }
        [DataMember] public string ItemSerialNumber { get; set; }
        [DataMember] public int? WarrantyContractId { get; set; }
        [DataMember] public byte? WarrantyLength { get; set; }
        [DataMember] public string TransitNotes { get; set; }
        [DataMember] public bool? EvaluationClaimFoodLoss { get; set; }
        [DataMember] public string EvaluationLocation { get; set; }
        [DataMember] public string EvaluationAction { get; set; }
        [DataMember] public DateTime? AllocationItemReceivedOn { get; set; }
        [DataMember] public DateTime? AllocationPartExpectOn { get; set; }
        [DataMember] public string AllocationInstructions { get; set; }
        [DataMember] public string Resolution { get; set; }
        [DataMember] public DateTime? ResolutionDate { get; set; }
        [DataMember] public string ResolutionSupplierToCharge { get; set; }
        [DataMember] public string ResolutionCategory { get; set; }
        [DataMember] public string ResolutionReport { get; set; }
        [DataMember] public decimal? ResolutionLabourCost { get; set; }
        [DataMember] public decimal? ResolutionAdditionalCost { get; set; }
        [DataMember] public decimal? ResolutionTransportCost { get; set; }
        [DataMember] public string ResolutionPrimaryCharge { get; set; }
        [DataMember] public string FinalisedFailure { get; set; }
        [DataMember] public DateTime? FinaliseReturnDate { get; set; }
        [DataMember] public int CreatedById { get; set; }
        [DataMember] public int? LastUpdatedUser { get; set; }
        [DataMember] public string LastUpdatedUserName { get; set; }
        [DataMember] public DateTime? LastUpdatedOn { get; set; }
        [DataMember] public string ItemNumber { get; set; }
        [DataMember] public bool IsClosed { get; set; }
        [DataMember] public bool? IsPaymentRequired { get; set; }
        [DataMember] public string ItemModelNumber { get; set; }
        [DataMember] public byte? ManWarrantyLength { get; set; }
        [DataMember] public string ResolutionDelivererToCharge { get; set; }
        [DataMember] public string WarrantyContractNo { get; set; }
        [DataMember] public bool? Printed { get; set; }
        [DataMember] public bool? ReplacementIssued { get; set; }
        [DataMember] public string Retailer { get; set; }
        [DataMember] public decimal? DepositRequired { get; set; }
        [DataMember] public string TechnicianPayState { get; set; }
        [DataMember] public string Evaluation { get; set; }
        [DataMember] public bool RepairLimitWarning { get; set; }
        [DataMember] public string WarrantyNumber { get; set; }
        [DataMember] public string ManufacturerWarrantyNumber { get; set; }
        [DataMember] public string ManufacturerWarrantyContractNo { get; set; }
        [DataMember] public string WarrantyGroupId { get; set; }
        [DataMember] public string ProductLevel_1 { get; set; }
        [DataMember] public short? ProductLevel_2 { get; set; }
        [DataMember] public string ProductLevel_3 { get; set; }
        [DataMember] public string RepairType { get; set; }
        [DataMember] public string Manufacturer { get; set; }
        [DataMember] public string ReasonForExchange { get; set; }
        [DataMember] public bool ResolutionFail { get; set; }
        [DataMember] public bool DepositAuthorised { get; set; }
        [DataMember] public bool? IsForceReIndexRequired { get; set; } // Added by RD to Force Re-Indexing the servicxe request
    }


    [Serializable]
    [DataContract]
    public partial class RequestContact
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public string Value { get; set; }
    }


    // CR2018-008 by tosif ali 12/10/2018*@
    [Serializable]
    [DataContract]
    public partial class AddressCode
    {
        [DataMember] public int origbr { get; set; }
        [DataMember] public string code { get; set; }
        [DataMember] public string codedescript { get; set; }
        [DataMember] public string category { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class customer
    {
        [DataMember] public int origbr { get; set; }
        [DataMember] public string custid { get; set; }
        [DataMember] public string firstname { get; set; }
        [DataMember] public string title { get; set; }
        [DataMember] public string name { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class custaddress
    {
        [DataMember] public int origbr { get; set; }
        [DataMember] public string custid { get; set; }
        [DataMember] public string addtype { get; set; }
        [DataMember] public string cusaddr1 { get; set; }
        [DataMember] public string cusaddr2 { get; set; }
        [DataMember] public string cusaddr3 { get; set; }
        [DataMember] public string cuspocode { get; set; }
        [DataMember] public string DELTitleC { get; set; }
        [DataMember] public string DELFirstName { get; set; }
        [DataMember] public string DELLastName { get; set; }
        [DataMember] public string notes { get; set; }
    }

    // End Hear





    [Serializable]
    [DataContract]
    public partial class RequestFoodLoss
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string Item { get; set; }
        [DataMember] public decimal Value { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class RequestPart
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string PartNumber { get; set; }
        [DataMember] public string PartType { get; set; }
        [DataMember] public short Quantity { get; set; }
        [DataMember] public string Description { get; set; }
        [DataMember] public int? StockBranch { get; set; }
        [DataMember] public string Source { get; set; }
        [DataMember] public decimal? CostPrice { get; set; }
        [DataMember] public decimal Price { get; set; }
        [DataMember] public decimal? TaxAmount { get; set; }
        [DataMember] public decimal? TaxRate { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class RequestScriptAnswer
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string Question { get; set; }
        [DataMember] public string Answer { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class FaultTag
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string Tag { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class Technician
    {
        [DataMember] public int UserId { get; set; }
        [DataMember] public bool Internal { get; set; }
        [DataMember] public string StartTime { get; set; }
        [DataMember] public string EndTime { get; set; }
        [DataMember] public int Slots { get; set; }

        // Code changes added by Gurpreet - CR2018-010 - 31/10/18 - Setting of max no. of Jobs & Validation with allocated jobs for a technician.
        [DataMember] public int MaxJobs { get; set; }
        //CR2018-010 Changes End
    }


    [Serializable]
    [DataContract]
    public partial class ZoneUser
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public string Zone { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class SupplierCost
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public string Supplier { get; set; }
        [DataMember] public string Product { get; set; }
        [DataMember] public short Year { get; set; }
        [DataMember] public string PartType { get; set; }
        [DataMember] public decimal? PartPercent { get; set; }
        [DataMember] public decimal? PartLimit { get; set; }
        [DataMember] public decimal? LabourPercent { get; set; }
        [DataMember] public decimal? LabourLimit { get; set; }
        [DataMember] public decimal? AdditionalPercent { get; set; }
        [DataMember] public decimal? AdditionalLimit { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class Holiday
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public DateTime StartDate { get; set; }
        [DataMember] public DateTime EndDate { get; set; }
        [DataMember] public bool Approved { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class TechnicianBooking
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public DateTime Date { get; set; }
        [DataMember] public int Slot { get; set; }
        [DataMember] public int SlotExtend { get; set; }
        [DataMember] public bool Reject { get; set; }
        [DataMember] public DateTime AllocatedOn { get; set; }
        [DataMember] public DateTime? CompletedDate { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class Comment
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public DateTime Date { get; set; }
        [DataMember] public string AddedBy { get; set; }
        [DataMember] public string Text { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class Payment
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int PayMethod { get; set; }
        [DataMember] public string CustomerId { get; set; }
        [DataMember] public decimal Amount { get; set; }
        [DataMember] public int EmpeeNo { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string Bank { get; set; }
        [DataMember] public string ChequeNumber { get; set; }
        [DataMember] public string BankAccountNumber { get; set; }
        [DataMember] public string ChargeType { get; set; }
        [DataMember] public string CardType { get; set; }
        [DataMember] public int? CardNumber { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class TechnicianBookingDelete
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public DateTime Date { get; set; }
        [DataMember] public int TechincianId { get; set; }
        [DataMember] public string Reason { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class TechnicianBookingReject
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public DateTime Date { get; set; }
        [DataMember] public int TechincianId { get; set; }
        [DataMember] public string Reason { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class ServiceSupplier
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public string Supplier { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class Charge
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public string Account { get; set; }
        [DataMember] public string Label { get; set; }
        [DataMember] public bool? IsExternal { get; set; }
        [DataMember] public decimal? Cost { get; set; }
        [DataMember] public decimal Value { get; set; }
        [DataMember] public decimal? Tax { get; set; }
        [DataMember] public decimal? TaxRate { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class LabourCostMatrix
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public decimal InternalTechnician { get; set; }
        [DataMember] public decimal ContractedTechnician { get; set; }
        [DataMember] public decimal Cost { get; set; }
        [DataMember] public decimal EWClaim { get; set; }
        [DataMember] public decimal CustomerCharge { get; set; }
        [DataMember] public string Level_1 { get; set; }
        [DataMember] public string Level_2 { get; set; }
        [DataMember] public string Level_3 { get; set; }
        [DataMember] public string Level_4 { get; set; }
        [DataMember] public string Level_5 { get; set; }
        [DataMember] public string Level_6 { get; set; }
        [DataMember] public string Level_7 { get; set; }
        [DataMember] public string Level_8 { get; set; }
        [DataMember] public string Level_9 { get; set; }
        [DataMember] public string Level_10 { get; set; }
        [DataMember] public string ItemList { get; set; }
        [DataMember] public bool IsGroupFilter { get; set; }
        [DataMember] public string Label { get; set; }
        [DataMember] public string Supplier { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class PartsCostMatrix
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public decimal Internal { get; set; }
        [DataMember] public decimal FirstYearWarranty { get; set; }
        [DataMember] public decimal ExtendedWarranty { get; set; }
        [DataMember] public decimal Customer { get; set; }
        [DataMember] public string Level_1 { get; set; }
        [DataMember] public string Level_2 { get; set; }
        [DataMember] public string Level_3 { get; set; }
        [DataMember] public string Level_4 { get; set; }
        [DataMember] public string Level_5 { get; set; }
        [DataMember] public string Level_6 { get; set; }
        [DataMember] public string Level_7 { get; set; }
        [DataMember] public string Level_8 { get; set; }
        [DataMember] public string Level_9 { get; set; }
        [DataMember] public string Level_10 { get; set; }
        [DataMember] public string ItemList { get; set; }
        [DataMember] public bool IsGroupFilter { get; set; }
        [DataMember] public string Label { get; set; }
        [DataMember] public string Supplier { get; set; }
    }


    [Serializable]
    [DataContract]
    public partial class Resolution
    {
        [DataMember] public int id { get; set; }
        [DataMember] public string Description { get; set; }
        [DataMember] public bool Fail { get; set; }
    }

    // Address Standardization CR2019 - 025
    [Serializable]
    [DataContract]
    public partial class AddressMaster
    {
        [DataMember]
        public int Id { get; set; }
        [DataMember]
        public string Region { get; set; }
        [DataMember]
        public string Village { get; set; }
        [DataMember]
        public string ZipCode { get; set; }
    }
    partial class ContextBase
    {
        public virtual DbSet<BranchLookup> BranchLookup { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class BranchLookup
    {
        [DataMember] public short branchno { get; set; }
        [DataMember] public string BranchNameLong { get; set; }
        [DataMember] public string branchname { get; set; }
        [DataMember] public string countrycode { get; set; }
        [DataMember] public short servicelocation { get; set; }
        [DataMember] public string StoreType { get; set; }
        [DataMember] public bool ServiceRepairCentre { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<InvoiceSearchView> InvoiceSearchView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class InvoiceSearchView
    {
        [DataMember] public int WarrantySaleId { get; set; }
        [DataMember] public string custid { get; set; }
        [DataMember] public string acctno { get; set; }
        [DataMember] public int? ItemId { get; set; }
        [DataMember] public string itemNo { get; set; }
        [DataMember] public decimal? price { get; set; }
        [DataMember] public short? stocklocn { get; set; }
        [DataMember] public string itemdescr1 { get; set; }
        [DataMember] public string Supplier { get; set; }
        [DataMember] public DateTime? datedel { get; set; }
        [DataMember] public DateTime? SoldOn { get; set; }
        [DataMember] public int? InvoiceNumber { get; set; }
        [DataMember] public short? branch { get; set; }
        [DataMember] public int SoldBy { get; set; }
        [DataMember] public string SoldByName { get; set; }
        [DataMember] public string WarrantyNumber { get; set; }
        [DataMember] public string WarrantyContractNo { get; set; }
        [DataMember] public short? WarrantyLength { get; set; }
        [DataMember] public string ManufacturerWarrantyNumber { get; set; }
        [DataMember] public string ManufacturerWarrantyContractNo { get; set; }
        [DataMember] public short? ManWarrantyLength { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<CustTelView> CustTelView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class CustTelView
    {
        [DataMember] public string Type { get; set; }
        [DataMember] public string telno { get; set; }
        [DataMember] public string custid { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<CountryView> CountryView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class CountryView
    {
        [DataMember] public short? origbr { get; set; }
        [DataMember] public string countrycode { get; set; }
        [DataMember] public string countryname { get; set; }
        [DataMember] public short hobranchno { get; set; }
        [DataMember] public int cheqdays { get; set; }
        [DataMember] public int letterdays { get; set; }
        [DataMember] public string letterporw { get; set; }
        [DataMember] public string taxtype { get; set; }
        [DataMember] public double? taxrate { get; set; }
        [DataMember] public string taxname { get; set; }
        [DataMember] public double servpcent { get; set; }
        [DataMember] public DateTime daterun { get; set; }
        [DataMember] public DateTime dateweek1 { get; set; }
        [DataMember] public int weekno { get; set; }
        [DataMember] public int batchctrlno { get; set; }
        [DataMember] public double bailfee { get; set; }
        [DataMember] public double bailpcent { get; set; }
        [DataMember] public int rcptsperbook { get; set; }
        [DataMember] public int weeklst400 { get; set; }
        [DataMember] public short taxinvtype { get; set; }
        [DataMember] public string agrmttaxtype { get; set; }
        [DataMember] public DateTime? datelastscor { get; set; }
        [DataMember] public short? minhpage { get; set; }
        [DataMember] public short? maxhpage { get; set; }
        [DataMember] public DateTime datelastcalc { get; set; }
        [DataMember] public int dailyexport { get; set; }
        [DataMember] public double globdelpcent { get; set; }
        [DataMember] public short onemonthdel { get; set; }
        [DataMember] public short deldays { get; set; }
        [DataMember] public string arrearsonpay { get; set; }
        [DataMember] public string systemopen { get; set; }
        [DataMember] public short timing { get; set; }
        [DataMember] public decimal addtomin { get; set; }
        [DataMember] public short addtoterm { get; set; }
        [DataMember] public decimal adminfee { get; set; }
        [DataMember] public string autodownsc5 { get; set; }
        [DataMember] public double cashintrate { get; set; }
        [DataMember] public DateTime datechargesstart { get; set; }
        [DataMember] public short lastchargesweekno { get; set; }
        [DataMember] public short lastyrlastweekno { get; set; }
        [DataMember] public short lettersgap { get; set; }
        [DataMember] public double percentaddto1 { get; set; }
        [DataMember] public double percentaddto2 { get; set; }
        [DataMember] public double percentaddto3 { get; set; }
        [DataMember] public decimal smallbalance { get; set; }
        [DataMember] public string dutyfree { get; set; }
        [DataMember] public string loyaltycard { get; set; }
        [DataMember] public int locktimeout { get; set; }
        [DataMember] public double rebpcent { get; set; }
        [DataMember] public short minperiod { get; set; }
        [DataMember] public short ddleadtime { get; set; }
        [DataMember] public decimal ddfee { get; set; }
        [DataMember] public short ddenabled { get; set; }
        [DataMember] public string ddbankacctno { get; set; }
        [DataMember] public short deliveryslots { get; set; }
        [DataMember] public short defdelnotebranch { get; set; }
        [DataMember] public string paymentmethod { get; set; }
        [DataMember] public short nocents { get; set; }
        [DataMember] public short agrgprint { get; set; }
        [DataMember] public short agrtimeprint { get; set; }
        [DataMember] public short print90 { get; set; }
        [DataMember] public string serviceprint { get; set; }
        [DataMember] public int ddgenno { get; set; }
        [DataMember] public string ddservicetype { get; set; }
        [DataMember] public string ddidcodefrom { get; set; }
        [DataMember] public string ddidcodeto { get; set; }
        [DataMember] public string ddbankbranch { get; set; }
        [DataMember] public string ddbankacctname { get; set; }
        [DataMember] public string ddbankaccttype { get; set; }
        [DataMember] public byte ddtest { get; set; }
        [DataMember] public short varstamp { get; set; }
        [DataMember] public byte notaxcopies { get; set; }
        [DataMember] public byte noagrcopies { get; set; }
        [DataMember] public string agrprinttype { get; set; }
        [DataMember] public short ddmaxrejections { get; set; }
        [DataMember] public byte ddfeeoverride { get; set; }
        [DataMember] public byte fixeddatefirst { get; set; }
        [DataMember] public byte transactenabled { get; set; }
        [DataMember] public string transacturl { get; set; }
        [DataMember] public byte mandatoryresstatus { get; set; }
        [DataMember] public double affinityipt { get; set; }
        [DataMember] public short warrantydays { get; set; }
        [DataMember] public string noninterestitem { get; set; }
        [DataMember] public double percenttopay { get; set; }
        [DataMember] public byte mandwarrantyno { get; set; }
        [DataMember] public byte printextraname { get; set; }
        [DataMember] public string systemdrive { get; set; }
        [DataMember] public short sanctionminyears { get; set; }
        [DataMember] public short hasbarcodes { get; set; }
        [DataMember] public string AdminItemNo { get; set; }
        [DataMember] public string InsItemNo { get; set; }
        [DataMember] public string paywholeunits { get; set; }
        [DataMember] public short bcommissionequalsfee { get; set; }
        [DataMember] public string serviceprintdp { get; set; }
        [DataMember] public string allowzerostock { get; set; }
        [DataMember] public string coddefault { get; set; }
        [DataMember] public string decimalplaces { get; set; }
        [DataMember] public short isunicode { get; set; }
        [DataMember] public string highstatus { get; set; }
        [DataMember] public short ManualRefer { get; set; }
        [DataMember] public short LaserPrintTax { get; set; }
        [DataMember] public short printwarrantycontract { get; set; }
        [DataMember] public double codpercentage { get; set; }
        [DataMember] public byte netcashandgo { get; set; }
        [DataMember] public short printcreditnote { get; set; }
        [DataMember] public short DefaultDelDays { get; set; }
        [DataMember] public short WarrantyCustCopy { get; set; }
        [DataMember] public short WarrantyCreditCopy { get; set; }
        [DataMember] public short WarrantyHOCopy { get; set; }
        [DataMember] public short securitisation { get; set; }
        [DataMember] public short NoRFsummary { get; set; }
        [DataMember] public short NoRFdetails { get; set; }
        [DataMember] public short CreditScanInterval { get; set; }
        [DataMember] public short secureRefunds { get; set; }
        [DataMember] public short maxRFIncomeRatio { get; set; }
        [DataMember] public string warrantystylesheet { get; set; }
        [DataMember] public short creditwarrantyDays { get; set; }
        [DataMember] public short creditwarrantyGrace { get; set; }
        [DataMember] public string CWitemno { get; set; }
        [DataMember] public short creditwarrantyreminder { get; set; }
        [DataMember] public string giftvoucheraccount { get; set; }
        [DataMember] public short defaultvoucherexpiry { get; set; }
        [DataMember] public short copyreferences { get; set; }
        [DataMember] public short minreferences { get; set; }
        [DataMember] public short printscheduleofpayments { get; set; }
        [DataMember] public string CancellationCode { get; set; }
        [DataMember] public short PrintToolBar { get; set; }
        [DataMember] public short mthsarrears { get; set; }
        [DataMember] public short mthsreposs { get; set; }
        [DataMember] public short bankrupt { get; set; }
        [DataMember] public short mthsstatus { get; set; }
        [DataMember] public byte allowsafedeposits { get; set; }
        [DataMember] public byte debitcardselectronic { get; set; }
        [DataMember] public byte creditcardselectronic { get; set; }
        [DataMember] public byte creditcardsconsolidated { get; set; }
        [DataMember] public byte debitcardsconsolidated { get; set; }
        [DataMember] public double blockcreditmonths { get; set; }
        [DataMember] public short cancellationnotes { get; set; }
        [DataMember] public short tmlink { get; set; }
        [DataMember] public int HiExtReceiptNo { get; set; }
        [DataMember] public string ISOCountryCode { get; set; }
        [DataMember] public bool RIFileTransfer { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<AdminTechProfileUsersView> AdminTechProfileUsersView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class AdminTechProfileUsersView
    {
        [DataMember] public int UserId { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<AdminUserView> AdminUserView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class AdminUserView
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public short BranchNo { get; set; }
        [DataMember] public string Login { get; set; }
        [DataMember] public string Password { get; set; }
        [DataMember] public DateTime LastChangePassword { get; set; }
        [DataMember] public string FirstName { get; set; }
        [DataMember] public string LastName { get; set; }
        [DataMember] public string ExternalLogin { get; set; }
        [DataMember] public long? LegacyPassword { get; set; }
        [DataMember] public string eMail { get; set; }
        [DataMember] public bool Locked { get; set; }
        [DataMember] public string FullName { get; set; }
        [DataMember] public bool RequireChangePassword { get; set; }
        [DataMember] public string FactEmployeeNo { get; set; }
        [DataMember] public string AddressLine1 { get; set; }
        [DataMember] public string AddressLine2 { get; set; }
        [DataMember] public string AddressLine3 { get; set; }
        [DataMember] public string PostCode { get; set; }
        [DataMember] public string Phone { get; set; }
        [DataMember] public string PhoneAlternate { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<UserProfileView> UserProfileView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class UserProfileView
    {
        [DataMember] public int id { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public int ProfileId { get; set; }
        [DataMember] public string Name { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<SummaryPrintView> SummaryPrintView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class SummaryPrintView
    {
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string Status { get; set; }
        [DataMember] public DateTime CreatedOn { get; set; }
        [DataMember] public int? DaysOutstanding { get; set; }
        [DataMember] public DateTime? LastUpdatedOn { get; set; }
        [DataMember] public string CustomerChargeAcct { get; set; }
        [DataMember] public string DepositPaid { get; set; }
        [DataMember] public string ChargeAcctCancel { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<StockView> StockView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class StockView
    {
        [DataMember] public string ItemNumber { get; set; }
        [DataMember] public short Location { get; set; }
        [DataMember] public string Description1 { get; set; }
        [DataMember] public string Description2 { get; set; }
        [DataMember] public double StockOnHand { get; set; }
        [DataMember] public decimal? CashPrice { get; set; }
        [DataMember] public decimal CostPrice { get; set; }
        [DataMember] public double taxrate { get; set; }
        [DataMember] public string Supplier { get; set; }
        [DataMember] public short WarrantyLength { get; set; }
        [DataMember] public string deleted { get; set; }
        [DataMember] public bool SparePart { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<PublicHolidayView> PublicHolidayView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class PublicHolidayView
    {
        [DataMember] public DateTime Date { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<ExchangeRateView> ExchangeRateView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class ExchangeRateView
    {
        [DataMember] public string CurrencyName { get; set; }
        [DataMember] public int RateId { get; set; }
        [DataMember] public string Currency { get; set; }
        [DataMember] public DateTime DateFrom { get; set; }
        [DataMember] public double Rate { get; set; }
        [DataMember] public int EmpeeNo { get; set; }
        [DataMember] public string Status { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<SummaryView> SummaryView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class SummaryView
    {
        [DataMember] public string Acctno { get; set; }
        [DataMember] public int ServiceRequestNo { get; set; }
        [DataMember] public int ItemId { get; set; }
        [DataMember] public DateTime? DateLogged { get; set; }
        [DataMember] public DateTime DateClosed { get; set; }
        [DataMember] public int StockLocn { get; set; }
        [DataMember] public int Branch { get; set; }
        [DataMember] public bool? ReplacementIssued { get; set; }
        [DataMember] public bool? ReplacementActioned { get; set; }
        [DataMember] public int? BookingId { get; set; }
        [DataMember] public DateTime? ReplacementDate { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<WarrantyBandView> WarrantyBandView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class WarrantyBandView
    {
        [DataMember] public string waritemno { get; set; }
        [DataMember] public string refcode { get; set; }
        [DataMember] public decimal minprice { get; set; }
        [DataMember] public decimal maxprice { get; set; }
        [DataMember] public int warrantylength { get; set; }
        [DataMember] public short? firstYearWarPeriod { get; set; }
        [DataMember] public int ItemID { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<GetRejectedJobsView> GetRejectedJobsView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class GetRejectedJobsView
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public DateTime Date { get; set; }
        [DataMember] public DateTime AllocatedOn { get; set; }
        [DataMember] public bool Reject { get; set; }
        [DataMember] public string FullName { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public DateTime CreatedOn { get; set; }
        [DataMember] public DateTime? LastUpdatedOn { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<PendingHolidaysNameView> PendingHolidaysNameView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class PendingHolidaysNameView
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public DateTime StartDate { get; set; }
        [DataMember] public DateTime EndDate { get; set; }
        [DataMember] public bool Approved { get; set; }
        [DataMember] public string FullName { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<HistoryView> HistoryView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class HistoryView
    {
        [DataMember] public int RequestId { get; set; }
        [DataMember] public int Id { get; set; }
        [DataMember] public DateTime CreatedOn { get; set; }
        [DataMember] public string State { get; set; }
        [DataMember] public DateTime? LastUpdatedOn { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<RequestIndexView> RequestIndexView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class RequestIndexView
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public DateTime CreatedOn { get; set; }
        [DataMember] public string CreatedBy { get; set; }
        [DataMember] public short Branch { get; set; }
        [DataMember] public string BranchNameLong { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public string State { get; set; }
        [DataMember] public string Account { get; set; }
        [DataMember] public string CustomerId { get; set; }
        [DataMember] public string CustomerTitle { get; set; }
        [DataMember] public string CustomerFirstName { get; set; }
        [DataMember] public string CustomerLastName { get; set; }
        [DataMember] public string CustomerAddressLine1 { get; set; }
        [DataMember] public string CustomerAddressLine2 { get; set; }
        [DataMember] public string CustomerAddressLine3 { get; set; }
        [DataMember] public string CustomerPostcode { get; set; }
        [DataMember] public string CustomerNotes { get; set; }
        [DataMember] public string ItemId { get; set; }
        [DataMember] public decimal? ItemAmount { get; set; }
        [DataMember] public string ItemSoldBy { get; set; }
        [DataMember] public string Item { get; set; }
        [DataMember] public string ItemSupplier { get; set; }
        [DataMember] public string InvoiceNumber { get; set; }
        [DataMember] public string ItemSerialNumber { get; set; }
        [DataMember] public string TransitNotes { get; set; }
        [DataMember] public int CreatedById { get; set; }
        [DataMember] public int? LastUpdatedUser { get; set; }
        [DataMember] public string LastUpdatedUserName { get; set; }
        [DataMember] public DateTime? LastUpdatedOn { get; set; }
        [DataMember] public string ItemNumber { get; set; }
        [DataMember] public bool? Printed { get; set; }
        [DataMember] public bool RepairLimitWarning { get; set; }
        [DataMember] public DateTime? ResolutionDate { get; set; }
        [DataMember] public string HomeBranchName { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<RequestSlotTimesView> RequestSlotTimesView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class RequestSlotTimesView
    {
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string SlotStartTime { get; set; }
        [DataMember] public string SlotEndTime { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<TechnicianPaymentsView> TechnicianPaymentsView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class TechnicianPaymentsView
    {
        [DataMember] public int RequestId { get; set; }
        [DataMember] public int TechnicianId { get; set; }
        [DataMember] public string FullName { get; set; }
        [DataMember] public DateTime AllocatedOn { get; set; }
        [DataMember] public decimal? Labour { get; set; }
        [DataMember] public decimal? PartsOther { get; set; }
        [DataMember] public decimal? Total { get; set; }
        [DataMember] public string State { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<TechnicianPaymentsTotCostView> TechnicianPaymentsTotCostView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class TechnicianPaymentsTotCostView
    {
        [DataMember] public int TechnicianId { get; set; }
        [DataMember] public string FullName { get; set; }
        [DataMember] public decimal? Total { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<TechnicianAvailableRequestView> TechnicianAvailableRequestView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class TechnicianAvailableRequestView
    {
        [DataMember] public int RequestId { get; set; }
        [DataMember] public DateTime CreatedOn { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public string InvoiceNumber { get; set; }
        [DataMember] public string CustomerId { get; set; }
        [DataMember] public string CustomerTitle { get; set; }
        [DataMember] public string CustomerFirstName { get; set; }
        [DataMember] public string CustomerLastName { get; set; }
        [DataMember] public string CustomerAddressLine1 { get; set; }
        [DataMember] public string CustomerAddressLine2 { get; set; }
        [DataMember] public string CustomerAddressLine3 { get; set; }
        [DataMember] public string CustomerPostcode { get; set; }
        [DataMember] public string Item { get; set; }
        [DataMember] public string ItemSupplier { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<TechnicianAllocatedRequestView> TechnicianAllocatedRequestView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class TechnicianAllocatedRequestView
    {
        [DataMember] public int Id { get; set; }
        [DataMember] public DateTime CreatedOn { get; set; }
        [DataMember] public string Type { get; set; }
        [DataMember] public string InvoiceNumber { get; set; }
        [DataMember] public string CustomerId { get; set; }
        [DataMember] public string CustomerTitle { get; set; }
        [DataMember] public string CustomerFirstName { get; set; }
        [DataMember] public string CustomerLastName { get; set; }
        [DataMember] public string CustomerAddressLine1 { get; set; }
        [DataMember] public string CustomerAddressLine2 { get; set; }
        [DataMember] public string CustomerAddressLine3 { get; set; }
        [DataMember] public string CustomerPostcode { get; set; }
        [DataMember] public string CustomerNotes { get; set; }
        [DataMember] public string ItemId { get; set; }
        [DataMember] public string Item { get; set; }
        [DataMember] public string ItemSupplier { get; set; }
        [DataMember] public int UserId { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public DateTime Date { get; set; }
        [DataMember] public int Slot { get; set; }
        [DataMember] public int SlotExtend { get; set; }
        [DataMember] public bool Reject { get; set; }

        //Below Code added by Gurpreet - CR2018-010 - 31/10/18 - Setting of max no. of Jobs & Validation with allocated jobs for a technician.
        [DataMember] public int MaxJobs { get; set; }
        //CR2018-010 Changes End
    }

    partial class ContextBase
    {
        public virtual DbSet<TechnicianNameView> TechnicianNameView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class TechnicianNameView
    {
        [DataMember] public string FullName { get; set; }
        [DataMember] public int UserId { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<TechnicianUser> TechnicianUser { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class TechnicianUser
    {
        [DataMember] public int UserId { get; set; }
        [DataMember] public bool Internal { get; set; }
        [DataMember] public string StartTime { get; set; }
        [DataMember] public string EndTime { get; set; }
        [DataMember] public int Slots { get; set; }
        [DataMember] public string FullName { get; set; }

        // Code added by Gurpreet - CR2018-010 - 31/10/18 - Setting of max no. of Jobs & Validation with allocated jobs for a technician.
        [DataMember] public int MaxJobs { get; set; }
        //CR2018-010 Changes End
    }

    partial class ContextBase
    {
        public virtual DbSet<ReceiptBranchDetailsView> ReceiptBranchDetailsView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class ReceiptBranchDetailsView
    {
        [DataMember] public short BranchNo { get; set; }
        [DataMember] public string BranchName { get; set; }
        [DataMember] public string BranchAddress1 { get; set; }
        [DataMember] public string BranchAddress2 { get; set; }
        [DataMember] public string BranchAddress3 { get; set; }
        [DataMember] public string TaxNumber { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<ChargeToView> ChargeToView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class ChargeToView
    {
        [DataMember] public string Type { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<PrimaryChargeToView> PrimaryChargeToView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class PrimaryChargeToView
    {
        [DataMember] public string ResolutionPrimaryCharge { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<WarrantyTotalRequestsView> WarrantyTotalRequestsView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class WarrantyTotalRequestsView
    {
        [DataMember] public int WarrantyId { get; set; }
        [DataMember] public int? ItemId { get; set; }
        [DataMember] public string CustomerAccount { get; set; }
        [DataMember] public string CustomerId { get; set; }
        [DataMember] public int? ItemQuantity { get; set; }
        [DataMember] public string WarrantyType { get; set; }
        [DataMember] public string RequestState { get; set; }
        [DataMember] public int? TotalRequests { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<ItemsWithoutWarrantyView> ItemsWithoutWarrantyView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class ItemsWithoutWarrantyView
    {
        [DataMember] public int? ItemId { get; set; }
        [DataMember] public short? StockLocation { get; set; }
        [DataMember] public string CustomerAccount { get; set; }
        [DataMember] public string CustomerId { get; set; }
        [DataMember] public int TotalRequests { get; set; }
        [DataMember] public int? ItemCount { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<ItemsByInvoiceNoSearchView> ItemsByInvoiceNoSearchView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class ItemsByInvoiceNoSearchView
    {
        [DataMember] public short? StockLocation { get; set; }
        [DataMember] public string ItemDescription1 { get; set; }
        [DataMember] public decimal? Price { get; set; }
        [DataMember] public DateTime? DeliveryDate { get; set; }
        [DataMember] public int? ItemId { get; set; }
        [DataMember] public string itemNo { get; set; }
        [DataMember] public string Supplier { get; set; }
        [DataMember] public DateTime? SoldOn { get; set; }
        [DataMember] public int SoldBy { get; set; }
        [DataMember] public string SoldByName { get; set; }
        [DataMember] public string WarrantyNumber { get; set; }
        [DataMember] public short? WarrantyLength { get; set; }
        [DataMember] public string WarrantyContractNo { get; set; }
        [DataMember] public short? ManWarrantyLength { get; set; }
        [DataMember] public string ManufacturerWarrantyContractNo { get; set; }
        [DataMember] public int? InvoiceNumber { get; set; }
        [DataMember] public string CustomerID { get; set; }
        [DataMember] public string AccountNo { get; set; }
        [DataMember] public int? TotalItemCount { get; set; }
        [DataMember] public int TotalRequests { get; set; }
        [DataMember] public string CustomerFirstName { get; set; }
        [DataMember] public string CustomerLastName { get; set; }
        [DataMember] public string CustomerTitle { get; set; }
        [DataMember] public string CustomerAddressLine1 { get; set; }
        [DataMember] public string CustomerAddressLine2 { get; set; }
        [DataMember] public string CustomerAddressLine3 { get; set; }
        [DataMember] public string CustomerPostcode { get; set; }
        [DataMember] public string CustomerNotes { get; set; }
    }

    partial class ContextBase
    {
        public virtual DbSet<RequestPartView> RequestPartView { get; set; }
    }

    [Serializable]
    [DataContract]
    public partial class RequestPartView
    {
        [DataMember] public int id { get; set; }
        [DataMember] public int RequestId { get; set; }
        [DataMember] public string PartNumber { get; set; }
        [DataMember] public string PartType { get; set; }
        [DataMember] public short Quantity { get; set; }
        [DataMember] public string Description { get; set; }
        [DataMember] public int? StockBranch { get; set; }
        [DataMember] public string Source { get; set; }
        [DataMember] public decimal? CostPrice { get; set; }
        [DataMember] public decimal Price { get; set; }
        [DataMember] public decimal? TaxAmount { get; set; }
        [DataMember] public decimal? TaxRate { get; set; }
        [DataMember] public decimal? CashPrice { get; set; }
    }

    public partial class Settings : Blue.Config.SettingsBase
    {
        public Settings() : base(Blue.Cosacs.Service.Module.Instance) { }

        public static StructureMap.Configuration.DSL.IRegistry Register<T>(StructureMap.Configuration.DSL.IRegistry registry, T singletonObject)
            where T : Blue.Config.ISettings

        {
            registry.For<Blue.Config.ISettings>().Add(singletonObject).Named(@"Blue.Cosacs.Service");
            registry.For<T>().Singleton().Use(singletonObject);
            return registry;
        }

        public override Blue.Config.SettingMetadata[] Metadata()
        {
            return metadata;
        }

        #region Setting Metadata
        private static readonly Blue.Config.SettingMetadata[] metadata = new Blue.Config.SettingMetadata[]
        {
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceAction",
                Name = @"Service Action",
                Description = @"The options for the Evaluation > Action Required field",
                Category = @"Code-cat and Picklists",
                Default = @"
                Collected
                Not Collected
                Send Technician
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceChargeTo",
                Name = @"Service Charge To",
                Description = @"The default options for the Primary Charge To field",
                Category = @"Code-cat and Picklists",
                Default = @"
                Customer
                Deliverer
                EW
                FYW
                Internal
                Supplier
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceDeliverers",
                Name = @"Service Deliverers",
                Description = @"",
                Category = @"Code-cat and Picklists",
                Default = @"Add deliverer codes",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceLocation",
                Name = @"Service Location",
                Description = @"The options for the location where the service will take place",
                Category = @"Code-cat and Picklists",
                Default = @"SERVICE",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServicePartMonth",
                Name = @"Service Part Month",
                Description = @"Month options for specifying Supplier Contractual Costs matrix",
                Category = @"Code-cat and Picklists",
                Default = @"
                1 - 12
                13 - 24
                25 - 36
                37 - 48
                49 - 60
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceQuestions",
                Name = @"Service Questions",
                Description = @"Script questions for service evaluation",
                Category = @"Code-cat and Picklists",
                Default = @"
                1) Have you read the instruction manual?
                2) Is the item under warranty?
                3) Is the item in use domestically?
                4) Was the item installed by qualified personnel?
                5) Has the item been moved from the delivery address?
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceFaultTag",
                Name = @"Fault tag",
                Description = @"Options for Fault Tags that the technician can specify. These can then be used to search/report on",
                Category = @"Code-cat and Picklists",
                Default = @"
                Rust
                Faulty hinge
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceTechReasons",
                Name = @"Service Reassign Technician Reasons",
                Description = @"Reasons for re-assigning a service request to another technician",
                Category = @"Code-cat and Picklists",
                Default = @"
                Customer not comfortabl wt tech
                Customer migrated another area
                Part availability taking too long
                Technician taking too long
                Vehicle cannot go in area
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceTechRejectReasons",
                Name = @"Service Reject Technician Reasons",
                Description = @"Reasons why a technician is rejecting a job",
                Category = @"Code-cat and Picklists",
                Default = @"Leave Requested",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"TechDeleteDayLimit",
                Name = @"Job Rejection Limit in Days ",
                Description = @"Maximum number of days before a job that a technician can reject the job",
                Category = @"Country Maintenance",
                Default = @"2",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceZone",
                Name = @"Service Technician Category",
                Description = @"Categories for which the technician can do jobs",
                Category = @"Code-cat and Picklists",
                Default = @"
                BROWN
                WHITES
                FURNITURE
                COMPUTER
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceRepairType",
                Name = @"Service Repair Type",
                Description = @"The type of repair - this will be used to calculate charges",
                Category = @"Code-cat and Picklists",
                Default = @"
                Assessment
                Minor
                Major
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceReasonForExchange",
                Name = @"Service Reason For Exchange",
                Description = @"The reason why an item that is BER is being replaced",
                Category = @"Code-cat and Picklists",
                Default = @"
                Electrical Defect
                Hardware
                Mechanical Defect
                Rusting
                Structure
            ",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ServiceRetailer",
                Name = @"Service Retailer",
                Description = @"Retailers show as options when creating an External service request",
                Category = @"Code-cat and Picklists",
                Default = @"Other",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@codeList {
                Id = @"DefaultStockLocationBranch",
                Name = @"Default Stock Location Branch",
                Description = @"The Branch number used as default value for the Stock Location Branch inside the Matching Stock dialog.",
                Category = @"Code-cat and Picklists",
                Default = @"705",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@codeList,
                CodeList = @"BRANCH",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"ServiceBER",
                Name = @"Service BER Limit",
                Description = @"The percentage of the original Cost Price that when exceeded means the product is probably beyond economic repair (BER)",
                Category = @"Country Maintenance",
                Default = @"75",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@bit {
                Id = @"ServiceReplacement",
                Name = @"Service BER Replacement",
                Description = @"When ticked this will allow products beyond economic repair to be instantly replaced",
                Category = @"Country Maintenance",
                Default = @"FALSE",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@bit,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"ServiceBERMarkup",
                Name = @"Service BER Markup",
                Description = @"This is the percentage of the costprice of the item which is BER that will be applied to the costprice when calculating the courts parts total",
                Category = @"Country Maintenance",
                Default = @"10",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"ServiceStockAccount",
                Name = @"Service Stock Account",
                Description = @"The special account number for the service parts inventory",
                Category = @"Country Maintenance",
                Default = @"",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"InstallationStockAccount",
                Name = @"Service Installation Stock Account",
                Description = @"The special account number for the service installation parts inventory",
                Category = @"Country Maintenance",
                Default = @"",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@bit {
                Id = @"ShowWarrantyAvailOnStatement",
                Name = @"Show Warranty Availability on Statement",
                Description = @"When ticked 'Warranty Available' label will be visible on SR Printouts",
                Category = @"Country Maintenance",
                Default = @"FALSE",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@bit,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"InstallElectrical",
                Name = @"Installation Account Electrical",
                Description = @"The special account number for Electrical Installations",
                Category = @"Country Maintenance",
                Default = @"",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"InstallFurniture",
                Name = @"Installation Account Furniture",
                Description = @"The special account number for Furniture Installations",
                Category = @"Country Maintenance",
                Default = @"",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"PreviousRepairCostPercentage",
                Name = @"Previous Repair Cost Warning Percentage",
                Description = @"The percentage of cost price above which there should be a warning to tell the user that the previous repairs exceeded this amount.",
                Category = @"Country Maintenance",
                Default = @"50",
                Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                    };
        #endregion

        #region Setting Enums
        #endregion

        #region Setting Properties
        public System.String[] ServiceAction
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceAction"); }
        }
        public System.String[] ServiceChargeTo
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceChargeTo"); }
        }
        public System.String[] ServiceDeliverers
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceDeliverers"); }
        }
        public System.String[] ServiceLocation
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceLocation"); }
        }
        public System.String[] ServicePartMonth
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServicePartMonth"); }
        }
        public System.String[] ServiceQuestions
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceQuestions"); }
        }
        public System.String[] ServiceFaultTag
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceFaultTag"); }
        }
        public System.String[] ServiceTechReasons
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceTechReasons"); }
        }
        public System.String[] ServiceTechRejectReasons
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceTechRejectReasons"); }
        }
        public int TechDeleteDayLimit
        {
            get { return ((Blue.Config.ISettingsReader)this).Int("TechDeleteDayLimit"); }
        }
        public System.String[] ServiceZone
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceZone"); }
        }
        public System.String[] ServiceRepairType
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceRepairType"); }
        }
        public System.String[] ServiceReasonForExchange
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceReasonForExchange"); }
        }
        public System.String[] ServiceRetailer
        {
            get { return ((Blue.Config.ISettingsReader)this).List("ServiceRetailer"); }
        }
        public System.String DefaultStockLocationBranch
        {
            get { return ((Blue.Config.ISettingsReader)this).Codelist("DefaultStockLocationBranch"); }
        }
        public int ServiceBER
        {
            get { return ((Blue.Config.ISettingsReader)this).Int("ServiceBER"); }
        }
        public bool ServiceReplacement
        {
            get { return ((Blue.Config.ISettingsReader)this).Bit("ServiceReplacement"); }
        }
        public int ServiceBERMarkup
        {
            get { return ((Blue.Config.ISettingsReader)this).Int("ServiceBERMarkup"); }
        }
        public System.String ServiceStockAccount
        {
            get { return ((Blue.Config.ISettingsReader)this).String("ServiceStockAccount"); }
        }
        public System.String InstallationStockAccount
        {
            get { return ((Blue.Config.ISettingsReader)this).String("InstallationStockAccount"); }
        }
        public bool ShowWarrantyAvailOnStatement
        {
            get { return ((Blue.Config.ISettingsReader)this).Bit("ShowWarrantyAvailOnStatement"); }
        }
        public System.String InstallElectrical
        {
            get { return ((Blue.Config.ISettingsReader)this).String("InstallElectrical"); }
        }
        public System.String InstallFurniture
        {
            get { return ((Blue.Config.ISettingsReader)this).String("InstallFurniture"); }
        }
        public int PreviousRepairCostPercentage
        {
            get { return ((Blue.Config.ISettingsReader)this).Int("PreviousRepairCostPercentage"); }
        }
        #endregion
    }



    public class Module : Blue.Config.ModuleBase
    {
        private Module() { }

        public static readonly Module Instance = new Module
        {
            Label = @"Service",
            Namespace = @"Blue.Cosacs.Service",
            Schema = @"Service",
        };
    }
}
