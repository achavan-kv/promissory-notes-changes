













//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Blue.Transactions;

namespace Blue.Cosacs.Credit
{
    
        public partial class ContextBase : DbContextBase
        {
			protected ContextBase(string connectionString = "Default") : base(connectionString) 
			{
				Database.SetInitializer<Context>(null);
			}
		 
            
                public virtual DbSet<Proposal> Proposal { get; set; }
            
                public virtual DbSet<ProposalAddress> ProposalAddress { get; set; }
            
                public virtual DbSet<ProposalApplicant2> ProposalApplicant2 { get; set; }
            
                public virtual DbSet<ProposalReference> ProposalReference { get; set; }
            
                public virtual DbSet<CustomizeFields> CustomizeFields { get; set; }
            
                public virtual DbSet<DocumentConfirmationRules> DocumentConfirmationRules { get; set; }
            
                public virtual DbSet<DocumentConfirmation> DocumentConfirmation { get; set; }
            
                public virtual DbSet<Customer> Customer { get; set; }
            
                public virtual DbSet<CustomerAddress> CustomerAddress { get; set; }
            
                public virtual DbSet<CustomerContact> CustomerContact { get; set; }
            
                public virtual DbSet<HiLo> HiLo { get; set; }
            
                public virtual DbSet<Account> Account { get; set; }
            
                public virtual DbSet<File> File { get; set; }
            
                public virtual DbSet<EmploymentHistory> EmploymentHistory { get; set; }
            
                public virtual DbSet<ScoringBandMatrix> ScoringBandMatrix { get; set; }
            
                public virtual DbSet<ScoreCardConfiguration> ScoreCardConfiguration { get; set; }
            
                public virtual DbSet<TermsTypeFreeInstalments> TermsTypeFreeInstalments { get; set; }
            
                public virtual DbSet<CustomerTag> CustomerTag { get; set; }
            
                public virtual DbSet<TermsTypeProductHierarchyTag> TermsTypeProductHierarchyTag { get; set; }
            
                public virtual DbSet<TermsType> TermsType { get; set; }
            
                public virtual DbSet<TermsTypeDetails> TermsTypeDetails { get; set; }
            
                public virtual DbSet<TermsTypeFascia> TermsTypeFascia { get; set; }
            
                public virtual DbSet<TermsTypeCustomerBand> TermsTypeCustomerBand { get; set; }
            
                public virtual DbSet<TermsTypeCustomerTag> TermsTypeCustomerTag { get; set; }
            
                public virtual DbSet<TermsTypeProductSKU> TermsTypeProductSKU { get; set; }
            
                public virtual DbSet<InstallmentPlan> InstallmentPlan { get; set; }
            
            
            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                base.OnModelCreating(modelBuilder);
                
                        var t0 = modelBuilder.Entity< Proposal >();
                        t0.ToTable("Proposal", "Credit");
                        
                        t0.HasKey(t => t.Id);
                        
                        t0.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Branch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.ApplicationType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.FirstName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t0.Property(t => t.LastName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t0.Property(t => t.HomePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.MobilePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.Email)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(254)
                        
                        
                        ;
                        
                        t0.Property(t => t.Title)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t0.Property(t => t.Alias)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.DateOfBirth)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Gender)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t0.Property(t => t.EthnicGroup)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.Nationality)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.DateInCurrentAddress)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.CurrentResidentialStatus)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t0.Property(t => t.PropertyType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t0.Property(t => t.RentAmountPerMonth)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.CurrentEmploymentDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.EmploymentStatus)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t0.Property(t => t.Occupation)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.PayFrequency)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t0.Property(t => t.PayAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.MonthlyIncome)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.AdditionalIncomeFrequency)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t0.Property(t => t.AdditionalIncomeAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.SchoolFees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.HasCreditCard)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.PaymentMethod)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.AccountType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(15)
                        
                        
                        ;
                        
                        t0.Property(t => t.DateBankAccountOpened)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.AccountNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t0.Property(t => t.AccountBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Source)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.UtilitiesFees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.LoansOrCreditCardsFees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.OtherFees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.BankName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(40)
                        
                        
                        ;
                        
                        t0.Property(t => t.PreviousAddress)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(160)
                        
                        
                        ;
                        
                        t0.Property(t => t.LandlordName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(35)
                        
                        
                        ;
                        
                        t0.Property(t => t.LandlordPhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.EmployerName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t0.Property(t => t.EmployerAddress)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(160)
                        
                        
                        ;
                        
                        t0.Property(t => t.EmployerDepartment)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.EmployerWorkplacePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.ApplicationStage)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.UpdatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.UpdatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.WorkPhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t0.Property(t => t.NoOfDependants)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.MaritalStatus)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        var t1 = modelBuilder.Entity< ProposalAddress >();
                        t1.ToTable("ProposalAddress", "Credit");
                        
                        t1.HasKey(t => t.Id);
                        
                        t1.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.ProposalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.AddressType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t1.Property(t => t.AddressLine1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t1.Property(t => t.AddressLine2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t1.Property(t => t.City)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t1.Property(t => t.PostCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t1.Property(t => t.DeliveryArea)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(70)
                        
                        
                        ;
                        
                        var t2 = modelBuilder.Entity< ProposalApplicant2 >();
                        t2.ToTable("ProposalApplicant2", "Credit");
                        
                        t2.HasKey(t => t.Id);
                        
                        t2.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ProposalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Title)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t2.Property(t => t.FirstName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t2.Property(t => t.LastName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t2.Property(t => t.DateOfBirth)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.Alias)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t2.Property(t => t.Gender)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(6)
                        
                        
                        ;
                        
                        t2.Property(t => t.CurrentEmploymentDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.EmploymentStatus)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t2.Property(t => t.Occupation)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t2.Property(t => t.DateBankAccountOpened)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.EthnicGroup)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t2.Property(t => t.Nationality)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t2.Property(t => t.DateInCurrentAddress)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.CurrentResidentialStatus)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t2.Property(t => t.PropertyType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t2.Property(t => t.RentAmountPerMonth)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.SelfEmployed)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.PayFrequency)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t2.Property(t => t.PayAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.MonthlyIncome)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.AdditionalIncomeFrequency)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t2.Property(t => t.AdditionalIncomeAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.UtilitiesFees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.SchoolFees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.OtherFees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.HasCreditCard)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.PaymentMethod)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t2.Property(t => t.BankName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(40)
                        
                        
                        ;
                        
                        t2.Property(t => t.AccountType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(15)
                        
                        
                        ;
                        
                        t2.Property(t => t.AccountNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(14)
                        
                        
                        ;
                        
                        t2.Property(t => t.AccountBranch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.LoansOrCreditCardsFees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.NoOfDependants)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.MaritalStatus)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        var t3 = modelBuilder.Entity< ProposalReference >();
                        t3.ToTable("ProposalReference", "Credit");
                        
                        t3.HasKey(t => t.Id);
                        
                        t3.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.ProposalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.IsFamily)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Relationship)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(35)
                        
                        
                        ;
                        
                        t3.Property(t => t.FirstName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t3.Property(t => t.LastName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t3.Property(t => t.YearsKnown)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Email)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(254)
                        
                        
                        ;
                        
                        t3.Property(t => t.HomeAddress)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(160)
                        
                        
                        ;
                        
                        t3.Property(t => t.HomePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t3.Property(t => t.WorkAddress)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(160)
                        
                        
                        ;
                        
                        t3.Property(t => t.WorkPhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t3.Property(t => t.MobilePhone)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t3.Property(t => t.Verified)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Comments)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t3.Property(t => t.ReferenceDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(254)
                        
                        
                        ;
                        
                        t3.Property(t => t.CheckedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.DateChecked)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.HomeDirections)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t3.Property(t => t.IsApplicant2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t4 = modelBuilder.Entity< CustomizeFields >();
                        t4.ToTable("CustomizeFields", "Credit");
                        
                        t4.HasKey(t => t.Id);
                        
                        t4.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.ScreenId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(150)
                        
                        
                        ;
                        
                        t4.Property(t => t.ScreenLabel)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(150)
                        
                        
                        ;
                        
                        t4.Property(t => t.Section)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t4.Property(t => t.FieldName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(150)
                        
                        
                        ;
                        
                        t4.Property(t => t.FieldId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(150)
                        
                        
                        ;
                        
                        t4.Property(t => t.Required)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.Visible)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.Readonly)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.Validation)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(150)
                        
                        
                        ;
                        
                        t4.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t4.Property(t => t.Values)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(200)
                        
                        
                        ;
                        
                        t4.Property(t => t.Lookup)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t4.Property(t => t.FieldLookup)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t4.Property(t => t.Length)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.FieldOrder)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.RequiredValues)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(200)
                        
                        
                        ;
                        
                        var t5 = modelBuilder.Entity< DocumentConfirmationRules >();
                        t5.ToTable("DocumentConfirmationRules", "Credit");
                        
                        t5.HasKey(t => t.Id);
                        
                        t5.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.CustomerType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t5.Property(t => t.CustomerTypeDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(250)
                        
                        
                        ;
                        
                        t5.Property(t => t.FieldID)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t5.Property(t => t.FieldDescription)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t5.Property(t => t.FieldType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t5.Property(t => t.Required)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.Upload)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t6 = modelBuilder.Entity< DocumentConfirmation >();
                        t6.ToTable("DocumentConfirmation", "Credit");
                        
                        t6.HasKey(t => t.Id);
                        
                        t6.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.ProposalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.CompulsoryIdType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t6.Property(t => t.CompulsoryId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t6.Property(t => t.CompulsoryIdNotes)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.OptionalIdType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t6.Property(t => t.OptionalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t6.Property(t => t.ProofAddress)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t6.Property(t => t.ProofAddressNotes)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.ProofIncome)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t6.Property(t => t.ProofIncomeNotes)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.ProofIncomeOther)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(30)
                        
                        
                        ;
                        
                        t6.Property(t => t.ProofIncomeOtherNotes)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.References)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.LandlordDetails)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.SpouseDetails)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.GovernmentEmployees)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.OverseasPerson)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        t6.Property(t => t.Comments)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(500)
                        
                        
                        ;
                        
                        var t7 = modelBuilder.Entity< Customer >();
                        t7.ToTable("Customer", "Credit");
                        
                        t7.HasKey(t => t.Id);
                        
                        t7.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.LegacyId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t7.Property(t => t.Branch)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.FirstName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t7.Property(t => t.LastName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t7.Property(t => t.Title)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(25)
                        
                        
                        ;
                        
                        t7.Property(t => t.Alias)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t7.Property(t => t.DateOfBirth)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Gender)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t7.Property(t => t.ReceiveSms)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.ProfilePhoto)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.AdminUserId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t8 = modelBuilder.Entity< CustomerAddress >();
                        t8.ToTable("CustomerAddress", "Credit");
                        
                        t8.HasKey(t => t.Id);
                        
                        t8.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.AddressType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t8.Property(t => t.AddressLine1)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t8.Property(t => t.AddressLine2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t8.Property(t => t.City)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t8.Property(t => t.PostCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(10)
                        
                        
                        ;
                        
                        t8.Property(t => t.DeliveryArea)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(70)
                        
                        
                        ;
                        
                        t8.Property(t => t.IsAddressVerified)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t9 = modelBuilder.Entity< CustomerContact >();
                        t9.ToTable("CustomerContact", "Credit");
                        
                        t9.HasKey(t => t.Id);
                        
                        t9.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.ContactType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t9.Property(t => t.Contact)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(256)
                        
                        
                        ;
                        
                        var t10 = modelBuilder.Entity< HiLo >();
                        t10.ToTable("HiLo", "Credit");
                        
                        t10.HasKey(t => t.Sequence);
                        
                        t10.Property(t => t.Sequence)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(128)
                        
                        
                        ;
                        
                        t10.Property(t => t.NextHi)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t10.Property(t => t.MaxLo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t11 = modelBuilder.Entity< Account >();
                        t11.ToTable("Account", "Credit");
                        
                        t11.HasKey(t => t.AccountNumber);
                        
                        t11.Property(t => t.AccountNumber)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t11.Property(t => t.SettledOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t12 = modelBuilder.Entity< File >();
                        t12.ToTable("File", "Credit");
                        
                        t12.HasKey(t => t.Id);
                        
                        t12.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.ProposalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.FileName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(200)
                        
                        
                        ;
                        
                        t12.Property(t => t.Guid)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.DocumentType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t12.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t12.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t13 = modelBuilder.Entity< EmploymentHistory >();
                        t13.ToTable("EmploymentHistory", "Credit");
                        
                        t13.HasKey(t => t.Id);
                        
                        t13.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t13.Property(t => t.ProposalId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t13.Property(t => t.Occupation)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t13.Property(t => t.DateStart)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t13.Property(t => t.DateEnd)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t13.Property(t => t.IsApplicant2)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t13.Property(t => t.EmployerName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        var t14 = modelBuilder.Entity< ScoringBandMatrix >();
                        t14.ToTable("ScoringBandMatrix", "Credit");
                        
                        t14.HasKey(t => t.Id);
                        
                        t14.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t14.Property(t => t.ScoreCard)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t14.Property(t => t.PointsFrom)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t14.Property(t => t.PointsTo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t14.Property(t => t.Band)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t14.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t14.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t15 = modelBuilder.Entity< ScoreCardConfiguration >();
                        t15.ToTable("ScoreCardConfiguration", "Credit");
                        
                        t15.HasKey(t => t.Id);
                        
                        t15.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t15.Property(t => t.RuleName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t15.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t15.Property(t => t.LookupField)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        var t16 = modelBuilder.Entity< TermsTypeFreeInstalments >();
                        t16.ToTable("TermsTypeFreeInstalments", "Credit");
                        
                        t16.HasKey(t => t.Id);
                        
                        t16.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t16.Property(t => t.TermsTypeDetailsId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t16.Property(t => t.FreeInstalmentInMonths)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t17 = modelBuilder.Entity< CustomerTag >();
                        t17.ToTable("CustomerTag", "Credit");
                        
                        t17.HasKey(t => t.Id);
                        
                        t17.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t17.Property(t => t.CustomerId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t17.Property(t => t.Tag)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        var t18 = modelBuilder.Entity< TermsTypeProductHierarchyTag >();
                        t18.ToTable("TermsTypeProductHierarchyTag", "Credit");
                        
                        t18.HasKey(t => t.Id);
                        
                        t18.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t18.Property(t => t.TermsTypeDetailsId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t18.Property(t => t.TagName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t18.Property(t => t.Level)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        var t19 = modelBuilder.Entity< TermsType >();
                        t19.ToTable("TermsType", "Credit");
                        
                        t19.HasKey(t => t.Id);
                        
                        t19.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t19.Property(t => t.Name)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        var t20 = modelBuilder.Entity< TermsTypeDetails >();
                        t20.ToTable("TermsTypeDetails", "Credit");
                        
                        t20.HasKey(t => t.Id);
                        
                        t20.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.TermsTypeId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.MinTermLength)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.MaxTermLength)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.DefaultTermLength)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.InterestRateHolidays)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.FullRebate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.HasPaymentHolidays)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.CustomerType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t20.Property(t => t.InterestFree)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsStaff)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsDisabled)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsRFAgreement)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsHPAgreement)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsStoreCardAgreement)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsCashLoanNewCustomer)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsCashLoanRecentCustomer)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsCashLoanExistingCustomer)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.IsCashLoanStaffCustomer)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t20.Property(t => t.EndDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t21 = modelBuilder.Entity< TermsTypeFascia >();
                        t21.ToTable("TermsTypeFascia", "Credit");
                        
                        t21.HasKey(t => t.Id);
                        
                        t21.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t21.Property(t => t.TermsTypeDetailsId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t21.Property(t => t.Fascia)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        var t22 = modelBuilder.Entity< TermsTypeCustomerBand >();
                        t22.ToTable("TermsTypeCustomerBand", "Credit");
                        
                        t22.HasKey(t => t.Id);
                        
                        t22.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.BandName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        t22.Property(t => t.PointsFrom)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.PointsTo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.InterestRatePercentage)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.DepositRequiredPercentage)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.CpiPercentage)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.AdminPercentage)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.AdminValue)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.StartDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.EndDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.UpdatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.UpdatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t22.Property(t => t.TermsTypeDetailsId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t23 = modelBuilder.Entity< TermsTypeCustomerTag >();
                        t23.ToTable("TermsTypeCustomerTag", "Credit");
                        
                        t23.HasKey(t => t.Id);
                        
                        t23.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t23.Property(t => t.TermsTypeDetailsId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t23.Property(t => t.TagName)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(50)
                        
                        
                        ;
                        
                        var t24 = modelBuilder.Entity< TermsTypeProductSKU >();
                        t24.ToTable("TermsTypeProductSKU", "Credit");
                        
                        t24.HasKey(t => t.Id);
                        
                        t24.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t24.Property(t => t.TermsTypeDetailsId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t24.Property(t => t.SkuId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t24.Property(t => t.Description)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(240)
                        
                        
                        ;
                        
                        var t25 = modelBuilder.Entity< InstallmentPlan >();
                        t25.ToTable("InstallmentPlan", "Credit");
                        
                        t25.HasKey(t => t.Id);
                        
                        t25.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.AgreementNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.FirstDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.LastDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.InstallmentNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.InstallmentAmount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.InstallmentTotal)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.NoOfMonthInstallmentFree)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.DueDay)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.CreatedOn)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t25.Property(t => t.CreatedBy)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
            }
        }

        
        [Serializable]
	[DataContract]
    public partial class Proposal
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public short Branch { get; set; }
                [DataMember] public string ApplicationType { get; set; }
                [DataMember] public string FirstName { get; set; }
                [DataMember] public string LastName { get; set; }
                [DataMember] public string HomePhone { get; set; }
                [DataMember] public string MobilePhone { get; set; }
                [DataMember] public string Email { get; set; }
                [DataMember] public string Title { get; set; }
                [DataMember] public string Alias { get; set; }
                [DataMember] public int CreatedBy { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public DateTime? DateOfBirth { get; set; }
                [DataMember] public string Gender { get; set; }
                [DataMember] public string EthnicGroup { get; set; }
                [DataMember] public string Nationality { get; set; }
                [DataMember] public DateTime? DateInCurrentAddress { get; set; }
                [DataMember] public string CurrentResidentialStatus { get; set; }
                [DataMember] public string PropertyType { get; set; }
                [DataMember] public int? RentAmountPerMonth { get; set; }
                [DataMember] public DateTime? CurrentEmploymentDate { get; set; }
                [DataMember] public string EmploymentStatus { get; set; }
                [DataMember] public string Occupation { get; set; }
                [DataMember] public string PayFrequency { get; set; }
                [DataMember] public int? PayAmount { get; set; }
                [DataMember] public int? MonthlyIncome { get; set; }
                [DataMember] public string AdditionalIncomeFrequency { get; set; }
                [DataMember] public int? AdditionalIncomeAmount { get; set; }
                [DataMember] public int? SchoolFees { get; set; }
                [DataMember] public bool? HasCreditCard { get; set; }
                [DataMember] public string PaymentMethod { get; set; }
                [DataMember] public string AccountType { get; set; }
                [DataMember] public DateTime? DateBankAccountOpened { get; set; }
                [DataMember] public string AccountNumber { get; set; }
                [DataMember] public int? AccountBranch { get; set; }
                [DataMember] public string Source { get; set; }
                [DataMember] public int? UtilitiesFees { get; set; }
                [DataMember] public int? LoansOrCreditCardsFees { get; set; }
                [DataMember] public int? OtherFees { get; set; }
                [DataMember] public string BankName { get; set; }
                [DataMember] public string PreviousAddress { get; set; }
                [DataMember] public string LandlordName { get; set; }
                [DataMember] public string LandlordPhone { get; set; }
                [DataMember] public string EmployerName { get; set; }
                [DataMember] public string EmployerAddress { get; set; }
                [DataMember] public string EmployerDepartment { get; set; }
                [DataMember] public string EmployerWorkplacePhone { get; set; }
                [DataMember] public int? CustomerId { get; set; }
                [DataMember] public int ApplicationStage { get; set; }
                [DataMember] public DateTime? UpdatedOn { get; set; }
                [DataMember] public int? UpdatedBy { get; set; }
                [DataMember] public string WorkPhone { get; set; }
                [DataMember] public int? NoOfDependants { get; set; }
                [DataMember] public string MaritalStatus { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class ProposalAddress
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int ProposalId { get; set; }
                [DataMember] public string AddressType { get; set; }
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string City { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public string DeliveryArea { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class ProposalApplicant2
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int ProposalId { get; set; }
                [DataMember] public string Title { get; set; }
                [DataMember] public string FirstName { get; set; }
                [DataMember] public string LastName { get; set; }
                [DataMember] public DateTime? DateOfBirth { get; set; }
                [DataMember] public string Alias { get; set; }
                [DataMember] public string Gender { get; set; }
                [DataMember] public DateTime? CurrentEmploymentDate { get; set; }
                [DataMember] public string EmploymentStatus { get; set; }
                [DataMember] public string Occupation { get; set; }
                [DataMember] public DateTime? DateBankAccountOpened { get; set; }
                [DataMember] public int? CustomerId { get; set; }
                [DataMember] public string EthnicGroup { get; set; }
                [DataMember] public string Nationality { get; set; }
                [DataMember] public DateTime? DateInCurrentAddress { get; set; }
                [DataMember] public string CurrentResidentialStatus { get; set; }
                [DataMember] public string PropertyType { get; set; }
                [DataMember] public int? RentAmountPerMonth { get; set; }
                [DataMember] public bool? SelfEmployed { get; set; }
                [DataMember] public string PayFrequency { get; set; }
                [DataMember] public int? PayAmount { get; set; }
                [DataMember] public int? MonthlyIncome { get; set; }
                [DataMember] public string AdditionalIncomeFrequency { get; set; }
                [DataMember] public int? AdditionalIncomeAmount { get; set; }
                [DataMember] public int? UtilitiesFees { get; set; }
                [DataMember] public int? SchoolFees { get; set; }
                [DataMember] public int? OtherFees { get; set; }
                [DataMember] public bool? HasCreditCard { get; set; }
                [DataMember] public string PaymentMethod { get; set; }
                [DataMember] public string BankName { get; set; }
                [DataMember] public string AccountType { get; set; }
                [DataMember] public string AccountNumber { get; set; }
                [DataMember] public int? AccountBranch { get; set; }
                [DataMember] public int? LoansOrCreditCardsFees { get; set; }
                [DataMember] public int? NoOfDependants { get; set; }
                [DataMember] public string MaritalStatus { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class ProposalReference
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int ProposalId { get; set; }
                [DataMember] public bool? IsFamily { get; set; }
                [DataMember] public string Relationship { get; set; }
                [DataMember] public string FirstName { get; set; }
                [DataMember] public string LastName { get; set; }
                [DataMember] public int? YearsKnown { get; set; }
                [DataMember] public string Email { get; set; }
                [DataMember] public string HomeAddress { get; set; }
                [DataMember] public string HomePhone { get; set; }
                [DataMember] public string WorkAddress { get; set; }
                [DataMember] public string WorkPhone { get; set; }
                [DataMember] public string MobilePhone { get; set; }
                [DataMember] public bool Verified { get; set; }
                [DataMember] public string Comments { get; set; }
                [DataMember] public string ReferenceDescription { get; set; }
                [DataMember] public int? CheckedBy { get; set; }
                [DataMember] public DateTime? DateChecked { get; set; }
                [DataMember] public string HomeDirections { get; set; }
                [DataMember] public bool IsApplicant2 { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class CustomizeFields
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string ScreenId { get; set; }
                [DataMember] public string ScreenLabel { get; set; }
                [DataMember] public string Section { get; set; }
                [DataMember] public string FieldName { get; set; }
                [DataMember] public string FieldId { get; set; }
                [DataMember] public bool Required { get; set; }
                [DataMember] public bool Visible { get; set; }
                [DataMember] public bool Readonly { get; set; }
                [DataMember] public string Validation { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string Values { get; set; }
                [DataMember] public string Lookup { get; set; }
                [DataMember] public string FieldLookup { get; set; }
                [DataMember] public int Length { get; set; }
                [DataMember] public int FieldOrder { get; set; }
                [DataMember] public string RequiredValues { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class DocumentConfirmationRules
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string CustomerType { get; set; }
                [DataMember] public string CustomerTypeDescription { get; set; }
                [DataMember] public string FieldID { get; set; }
                [DataMember] public string FieldDescription { get; set; }
                [DataMember] public string FieldType { get; set; }
                [DataMember] public bool Required { get; set; }
                [DataMember] public bool Upload { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class DocumentConfirmation
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int ProposalId { get; set; }
                [DataMember] public string CompulsoryIdType { get; set; }
                [DataMember] public string CompulsoryId { get; set; }
                [DataMember] public string CompulsoryIdNotes { get; set; }
                [DataMember] public string OptionalIdType { get; set; }
                [DataMember] public string OptionalId { get; set; }
                [DataMember] public string ProofAddress { get; set; }
                [DataMember] public string ProofAddressNotes { get; set; }
                [DataMember] public string ProofIncome { get; set; }
                [DataMember] public string ProofIncomeNotes { get; set; }
                [DataMember] public string ProofIncomeOther { get; set; }
                [DataMember] public string ProofIncomeOtherNotes { get; set; }
                [DataMember] public string References { get; set; }
                [DataMember] public string LandlordDetails { get; set; }
                [DataMember] public string SpouseDetails { get; set; }
                [DataMember] public string GovernmentEmployees { get; set; }
                [DataMember] public string OverseasPerson { get; set; }
                [DataMember] public string Comments { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Customer
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string LegacyId { get; set; }
                [DataMember] public short Branch { get; set; }
                [DataMember] public string FirstName { get; set; }
                [DataMember] public string LastName { get; set; }
                [DataMember] public string Title { get; set; }
                [DataMember] public string Alias { get; set; }
                [DataMember] public DateTime? DateOfBirth { get; set; }
                [DataMember] public string Gender { get; set; }
                [DataMember] public bool ReceiveSms { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public Guid? ProfilePhoto { get; set; }
                [DataMember] public int CreatedBy { get; set; }
                [DataMember] public int? AdminUserId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class CustomerAddress
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int CustomerId { get; set; }
                [DataMember] public string AddressType { get; set; }
                [DataMember] public string AddressLine1 { get; set; }
                [DataMember] public string AddressLine2 { get; set; }
                [DataMember] public string City { get; set; }
                [DataMember] public string PostCode { get; set; }
                [DataMember] public string DeliveryArea { get; set; }
                [DataMember] public bool IsAddressVerified { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class CustomerContact
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int CustomerId { get; set; }
                [DataMember] public string ContactType { get; set; }
                [DataMember] public string Contact { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class HiLo
    {
                [DataMember] public string Sequence { get; set; }
                [DataMember] public int NextHi { get; set; }
                [DataMember] public int MaxLo { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class Account
    {
                [DataMember] public long AccountNumber { get; set; }
                [DataMember] public int CustomerId { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public DateTime? SettledOn { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class File
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int ProposalId { get; set; }
                [DataMember] public string FileName { get; set; }
                [DataMember] public Guid? Guid { get; set; }
                [DataMember] public string DocumentType { get; set; }
                [DataMember] public int? CreatedBy { get; set; }
                [DataMember] public DateTime? CreatedOn { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class EmploymentHistory
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int ProposalId { get; set; }
                [DataMember] public string Occupation { get; set; }
                [DataMember] public DateTime DateStart { get; set; }
                [DataMember] public DateTime DateEnd { get; set; }
                [DataMember] public bool IsApplicant2 { get; set; }
                [DataMember] public string EmployerName { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class ScoringBandMatrix
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string ScoreCard { get; set; }
                [DataMember] public int PointsFrom { get; set; }
                [DataMember] public int PointsTo { get; set; }
                [DataMember] public string Band { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int CreatedBy { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class ScoreCardConfiguration
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string RuleName { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string LookupField { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TermsTypeFreeInstalments
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int TermsTypeDetailsId { get; set; }
                [DataMember] public int FreeInstalmentInMonths { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class CustomerTag
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int CustomerId { get; set; }
                [DataMember] public string Tag { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TermsTypeProductHierarchyTag
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int TermsTypeDetailsId { get; set; }
                [DataMember] public string TagName { get; set; }
                [DataMember] public string Level { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TermsType
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string Name { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TermsTypeDetails
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int TermsTypeId { get; set; }
                [DataMember] public int MinTermLength { get; set; }
                [DataMember] public int MaxTermLength { get; set; }
                [DataMember] public int DefaultTermLength { get; set; }
                [DataMember] public int? InterestRateHolidays { get; set; }
                [DataMember] public int? FullRebate { get; set; }
                [DataMember] public bool HasPaymentHolidays { get; set; }
                [DataMember] public string CustomerType { get; set; }
                [DataMember] public int? InterestFree { get; set; }
                [DataMember] public bool IsStaff { get; set; }
                [DataMember] public bool IsDisabled { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int CreatedBy { get; set; }
                [DataMember] public bool IsRFAgreement { get; set; }
                [DataMember] public bool IsHPAgreement { get; set; }
                [DataMember] public bool IsStoreCardAgreement { get; set; }
                [DataMember] public bool IsCashLoanNewCustomer { get; set; }
                [DataMember] public bool IsCashLoanRecentCustomer { get; set; }
                [DataMember] public bool IsCashLoanExistingCustomer { get; set; }
                [DataMember] public bool IsCashLoanStaffCustomer { get; set; }
                [DataMember] public DateTime? EndDate { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TermsTypeFascia
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int TermsTypeDetailsId { get; set; }
                [DataMember] public string Fascia { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TermsTypeCustomerBand
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public string BandName { get; set; }
                [DataMember] public int PointsFrom { get; set; }
                [DataMember] public int PointsTo { get; set; }
                [DataMember] public int InterestRatePercentage { get; set; }
                [DataMember] public int DepositRequiredPercentage { get; set; }
                [DataMember] public int CpiPercentage { get; set; }
                [DataMember] public int AdminPercentage { get; set; }
                [DataMember] public int AdminValue { get; set; }
                [DataMember] public DateTime StartDate { get; set; }
                [DataMember] public DateTime? EndDate { get; set; }
                [DataMember] public int UpdatedBy { get; set; }
                [DataMember] public DateTime UpdatedOn { get; set; }
                [DataMember] public int TermsTypeDetailsId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TermsTypeCustomerTag
    {
                [DataMember] public byte Id { get; set; }
                [DataMember] public int TermsTypeDetailsId { get; set; }
                [DataMember] public string TagName { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TermsTypeProductSKU
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int TermsTypeDetailsId { get; set; }
                [DataMember] public string SkuId { get; set; }
                [DataMember] public string Description { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class InstallmentPlan
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int AgreementNo { get; set; }
                [DataMember] public DateTime FirstDate { get; set; }
                [DataMember] public DateTime LastDate { get; set; }
                [DataMember] public short InstallmentNo { get; set; }
                [DataMember] public decimal InstallmentAmount { get; set; }
                [DataMember] public decimal InstallmentTotal { get; set; }
                [DataMember] public short NoOfMonthInstallmentFree { get; set; }
                [DataMember] public short DueDay { get; set; }
                [DataMember] public DateTime CreatedOn { get; set; }
                [DataMember] public int CreatedBy { get; set; }
            }

        public partial class Settings : Blue.Config.SettingsBase
    {
        public Settings() : base(Blue.Cosacs.Credit.Module.Instance) {}

        public static StructureMap.Configuration.DSL.IRegistry Register<T>(StructureMap.Configuration.DSL.IRegistry registry, T singletonObject)
            where T : Blue.Config.ISettings

        {
            registry.For<Blue.Config.ISettings>().Add(singletonObject).Named(@"Blue.Cosacs.Credit");
            registry.For<T>().Singleton().Use(singletonObject);
            return registry;
        }

        public override Blue.Config.SettingMetadata[] Metadata()
        {
            return metadata;
        }

        #region Setting Metadata
        private static readonly Blue.Config.SettingMetadata[] metadata = new Blue.Config.SettingMetadata[] 
        {
                        new Blue.Config.SettingMetadata.@list {
                Id = @"Nationality",
                Name = @"Other Nationalities",
                Description = @"Other Nationalities",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"EthnicGroup",
                Name = @"Ethnic Group",
                Description = @"Ethnic Group",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"Title",
                Name = @"Title",
                Description = @"Customer Title",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"AddressType",
                Name = @"Address Type",
                Description = @"Type of Address",
                Category = @"Credit",
                Default = @"",
				Fixed = @"Home
                Work
                Delivery",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"DeliveryArea",
                Name = @"Delivery Area",
                Description = @"Delivery Area",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ResidentialStatus",
                Name = @"Residential Status",
                Description = @"Residential Status",
                Category = @"Credit",
                Default = @"",
				Fixed = @"Renting",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"PropertyType",
                Name = @"Property Type",
                Description = @"Property Type",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"Occupation",
                Name = @"Occupation",
                Description = @"Occupation",
                Category = @"Credit",
                Default = @"",
				Fixed = @"Government Employees",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"EmploymentStatus",
                Name = @"Employment Status",
                Description = @"Employment Status",
                Category = @"Credit",
                Default = @"",
				Fixed = @"Self Employed",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"Bank",
                Name = @"Bank",
                Description = @"Bank",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"AccountType",
                Name = @"Account Type",
                Description = @"Account Type",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"Relationship",
                Name = @"Relationship",
                Description = @"Relationship",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@int {
                Id = @"NoOfMonthsInCurrentAddress",
                Name = @"Months in current address",
                Description = @"Number of months in current address",
                Category = @"Credit",
                Default = @"0",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@int,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"CompulsoryId",
                Name = @"Compulsory Form of Id",
                Description = @"Compulsory Form of Id",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"OptionalId",
                Name = @"Optional Form of Id",
                Description = @"Optional Form of Id",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ProofAddress",
                Name = @"Proof of Address",
                Description = @"Proof of Address",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ProofIncome",
                Name = @"Proof of Income (Employment)",
                Description = @"Proof of Income (Employment)",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ProofIncomeOther",
                Name = @"Proof of Income (Other)",
                Description = @"Proof of Income (Other)",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@string {
                Id = @"LocalNationality",
                Name = @"Local Nationality",
                Description = @"Local Nationality",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@string,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"ContactType",
                Name = @"Contact Type",
                Description = @"Contact Type",
                Category = @"Credit",
                Default = @"",
				Fixed = @"Email
                Home Phone
                Work Phone
                Mobile Phone",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"PayFrequency",
                Name = @"Pay Frequency",
                Description = @"Pay Frequency",
                Category = @"Credit",
                Default = @"",
				Fixed = @"Weekly
            Fortnightly
            Monthly
            Annual",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"CustomerTag",
                Name = @"Customer Tag",
                Description = @" Customer Tag ",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                        new Blue.Config.SettingMetadata.@list {
                Id = @"MaritalStatus",
                Name = @"Marital Status",
                Description = @"Marital Status",
                Category = @"Credit",
                Default = @"",
				Fixed = @"",
                //Type = Blue.Config.SettingMetadata.SettingsTypeEnum.@list,
                CodeList = @"",
                Precision = 28,
                Scale = 12,
                            },
                    };
        #endregion

        #region Setting Enums
                #endregion

        #region Setting Properties
                public System.String[] Nationality 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("Nationality"); }
        }
                public System.String[] EthnicGroup 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("EthnicGroup"); }
        }
                public System.String[] Title 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("Title"); }
        }
                public System.String[] AddressType 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("AddressType"); }
        }
                public System.String[] DeliveryArea 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("DeliveryArea"); }
        }
                public System.String[] ResidentialStatus 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("ResidentialStatus"); }
        }
                public System.String[] PropertyType 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("PropertyType"); }
        }
                public System.String[] Occupation 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("Occupation"); }
        }
                public System.String[] EmploymentStatus 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("EmploymentStatus"); }
        }
                public System.String[] Bank 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("Bank"); }
        }
                public System.String[] AccountType 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("AccountType"); }
        }
                public System.String[] Relationship 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("Relationship"); }
        }
                public int NoOfMonthsInCurrentAddress 
        { 
            get { return ((Blue.Config.ISettingsReader)this).Int("NoOfMonthsInCurrentAddress"); }
        }
                public System.String[] CompulsoryId 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("CompulsoryId"); }
        }
                public System.String[] OptionalId 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("OptionalId"); }
        }
                public System.String[] ProofAddress 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("ProofAddress"); }
        }
                public System.String[] ProofIncome 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("ProofIncome"); }
        }
                public System.String[] ProofIncomeOther 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("ProofIncomeOther"); }
        }
                public System.String LocalNationality 
        { 
            get { return ((Blue.Config.ISettingsReader)this).String("LocalNationality"); }
        }
                public System.String[] ContactType 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("ContactType"); }
        }
                public System.String[] PayFrequency 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("PayFrequency"); }
        }
                public System.String[] CustomerTag 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("CustomerTag"); }
        }
                public System.String[] MaritalStatus 
        { 
            get { return ((Blue.Config.ISettingsReader)this).List("MaritalStatus"); }
        }
                #endregion
    }
    
    

        public class Module : Blue.Config.ModuleBase
    {
        private Module() {}

        public static readonly Module Instance = new Module
        {
            Label = @"Credit",
            Namespace = @"Blue.Cosacs.Credit",
            Schema = @"Credit",
        };
    }
    }
