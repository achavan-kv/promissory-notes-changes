//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace STL.PL.WS10 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSetDataSoap", Namespace="http://strategicthought.com/webservices/")]
    public partial class WSetData : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback GetSetsForTNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSetsForTNameBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSetsForTNameBranchAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSetDetailsForSetNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProvisionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProvisionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSetData() {
            this.Url = "http://localhost/Courts.NET.WS/WSetData.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSetsForTNameCompletedEventHandler GetSetsForTNameCompleted;
        
        /// <remarks/>
        public event GetSetsForTNameBranchCompletedEventHandler GetSetsForTNameBranchCompleted;
        
        /// <remarks/>
        public event GetSetsForTNameBranchAllCompletedEventHandler GetSetsForTNameBranchAllCompleted;
        
        /// <remarks/>
        public event SaveSetsCompletedEventHandler SaveSetsCompleted;
        
        /// <remarks/>
        public event GetSetDetailsForSetNameCompletedEventHandler GetSetDetailsForSetNameCompleted;
        
        /// <remarks/>
        public event GetSetsCompletedEventHandler GetSetsCompleted;
        
        /// <remarks/>
        public event GetCategoryItemCompletedEventHandler GetCategoryItemCompleted;
        
        /// <remarks/>
        public event SaveSetDetailsCompletedEventHandler SaveSetDetailsCompleted;
        
        /// <remarks/>
        public event SaveProvisionsCompletedEventHandler SaveProvisionsCompleted;
        
        /// <remarks/>
        public event LoadProvisionsCompletedEventHandler LoadProvisionsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSetsForTName", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSetsForTName(string tName, out string err) {
            object[] results = this.Invoke("GetSetsForTName", new object[] {
                        tName});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSetsForTName(string tName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSetsForTName", new object[] {
                        tName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSetsForTName(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSetsForTNameAsync(string tName) {
            this.GetSetsForTNameAsync(tName, null);
        }
        
        /// <remarks/>
        public void GetSetsForTNameAsync(string tName, object userState) {
            if ((this.GetSetsForTNameOperationCompleted == null)) {
                this.GetSetsForTNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetsForTNameOperationCompleted);
            }
            this.InvokeAsync("GetSetsForTName", new object[] {
                        tName}, this.GetSetsForTNameOperationCompleted, userState);
        }
        
        private void OnGetSetsForTNameOperationCompleted(object arg) {
            if ((this.GetSetsForTNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSetsForTNameCompleted(this, new GetSetsForTNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSetsForTNameBranch", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSetsForTNameBranch(string tName, string branchNo, out string err) {
            object[] results = this.Invoke("GetSetsForTNameBranch", new object[] {
                        tName,
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSetsForTNameBranch(string tName, string branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSetsForTNameBranch", new object[] {
                        tName,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSetsForTNameBranch(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSetsForTNameBranchAsync(string tName, string branchNo) {
            this.GetSetsForTNameBranchAsync(tName, branchNo, null);
        }
        
        /// <remarks/>
        public void GetSetsForTNameBranchAsync(string tName, string branchNo, object userState) {
            if ((this.GetSetsForTNameBranchOperationCompleted == null)) {
                this.GetSetsForTNameBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetsForTNameBranchOperationCompleted);
            }
            this.InvokeAsync("GetSetsForTNameBranch", new object[] {
                        tName,
                        branchNo}, this.GetSetsForTNameBranchOperationCompleted, userState);
        }
        
        private void OnGetSetsForTNameBranchOperationCompleted(object arg) {
            if ((this.GetSetsForTNameBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSetsForTNameBranchCompleted(this, new GetSetsForTNameBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSetsForTNameBranchAll", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSetsForTNameBranchAll(string tName, out string err) {
            object[] results = this.Invoke("GetSetsForTNameBranchAll", new object[] {
                        tName});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSetsForTNameBranchAll(string tName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSetsForTNameBranchAll", new object[] {
                        tName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSetsForTNameBranchAll(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSetsForTNameBranchAllAsync(string tName) {
            this.GetSetsForTNameBranchAllAsync(tName, null);
        }
        
        /// <remarks/>
        public void GetSetsForTNameBranchAllAsync(string tName, object userState) {
            if ((this.GetSetsForTNameBranchAllOperationCompleted == null)) {
                this.GetSetsForTNameBranchAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetsForTNameBranchAllOperationCompleted);
            }
            this.InvokeAsync("GetSetsForTNameBranchAll", new object[] {
                        tName}, this.GetSetsForTNameBranchAllOperationCompleted, userState);
        }
        
        private void OnGetSetsForTNameBranchAllOperationCompleted(object arg) {
            if ((this.GetSetsForTNameBranchAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSetsForTNameBranchAllCompleted(this, new GetSetsForTNameBranchAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveSets", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveSets(string setName, int empeeNo, string tName, string columnType, string setDescript, decimal value, out string err) {
            object[] results = this.Invoke("SaveSets", new object[] {
                        setName,
                        empeeNo,
                        tName,
                        columnType,
                        setDescript,
                        value});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveSets(string setName, int empeeNo, string tName, string columnType, string setDescript, decimal value, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveSets", new object[] {
                        setName,
                        empeeNo,
                        tName,
                        columnType,
                        setDescript,
                        value}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveSets(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSetsAsync(string setName, int empeeNo, string tName, string columnType, string setDescript, decimal value) {
            this.SaveSetsAsync(setName, empeeNo, tName, columnType, setDescript, value, null);
        }
        
        /// <remarks/>
        public void SaveSetsAsync(string setName, int empeeNo, string tName, string columnType, string setDescript, decimal value, object userState) {
            if ((this.SaveSetsOperationCompleted == null)) {
                this.SaveSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSetsOperationCompleted);
            }
            this.InvokeAsync("SaveSets", new object[] {
                        setName,
                        empeeNo,
                        tName,
                        columnType,
                        setDescript,
                        value}, this.SaveSetsOperationCompleted, userState);
        }
        
        private void OnSaveSetsOperationCompleted(object arg) {
            if ((this.SaveSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSetsCompleted(this, new SaveSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSetDetailsForSetName", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSetDetailsForSetName(string setName, string tName, out string err) {
            object[] results = this.Invoke("GetSetDetailsForSetName", new object[] {
                        setName,
                        tName});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSetDetailsForSetName(string setName, string tName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSetDetailsForSetName", new object[] {
                        setName,
                        tName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSetDetailsForSetName(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSetDetailsForSetNameAsync(string setName, string tName) {
            this.GetSetDetailsForSetNameAsync(setName, tName, null);
        }
        
        /// <remarks/>
        public void GetSetDetailsForSetNameAsync(string setName, string tName, object userState) {
            if ((this.GetSetDetailsForSetNameOperationCompleted == null)) {
                this.GetSetDetailsForSetNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetDetailsForSetNameOperationCompleted);
            }
            this.InvokeAsync("GetSetDetailsForSetName", new object[] {
                        setName,
                        tName}, this.GetSetDetailsForSetNameOperationCompleted, userState);
        }
        
        private void OnGetSetDetailsForSetNameOperationCompleted(object arg) {
            if ((this.GetSetDetailsForSetNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSetDetailsForSetNameCompleted(this, new GetSetDetailsForSetNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSets", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSets(string setName, string tName, out string err) {
            object[] results = this.Invoke("GetSets", new object[] {
                        setName,
                        tName});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSets(string setName, string tName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSets", new object[] {
                        setName,
                        tName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSets(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSetsAsync(string setName, string tName) {
            this.GetSetsAsync(setName, tName, null);
        }
        
        /// <remarks/>
        public void GetSetsAsync(string setName, string tName, object userState) {
            if ((this.GetSetsOperationCompleted == null)) {
                this.GetSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetsOperationCompleted);
            }
            this.InvokeAsync("GetSets", new object[] {
                        setName,
                        tName}, this.GetSetsOperationCompleted, userState);
        }
        
        private void OnGetSetsOperationCompleted(object arg) {
            if ((this.GetSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSetsCompleted(this, new GetSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCategoryItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CategoryItem GetCategoryItem(string categoryCode) {
            object[] results = this.Invoke("GetCategoryItem", new object[] {
                        categoryCode});
            return ((CategoryItem)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCategoryItem(string categoryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCategoryItem", new object[] {
                        categoryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public CategoryItem EndGetCategoryItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CategoryItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryItemAsync(string categoryCode) {
            this.GetCategoryItemAsync(categoryCode, null);
        }
        
        /// <remarks/>
        public void GetCategoryItemAsync(string categoryCode, object userState) {
            if ((this.GetCategoryItemOperationCompleted == null)) {
                this.GetCategoryItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryItemOperationCompleted);
            }
            this.InvokeAsync("GetCategoryItem", new object[] {
                        categoryCode}, this.GetCategoryItemOperationCompleted, userState);
        }
        
        private void OnGetCategoryItemOperationCompleted(object arg) {
            if ((this.GetCategoryItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryItemCompleted(this, new GetCategoryItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveSetDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveSetDetails(string setName, string tName, string[] data, int empeeNo, string columnType, string setDescript, decimal value, string[] branchList, out string err) {
            object[] results = this.Invoke("SaveSetDetails", new object[] {
                        setName,
                        tName,
                        data,
                        empeeNo,
                        columnType,
                        setDescript,
                        value,
                        branchList});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveSetDetails(string setName, string tName, string[] data, int empeeNo, string columnType, string setDescript, decimal value, string[] branchList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveSetDetails", new object[] {
                        setName,
                        tName,
                        data,
                        empeeNo,
                        columnType,
                        setDescript,
                        value,
                        branchList}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveSetDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSetDetailsAsync(string setName, string tName, string[] data, int empeeNo, string columnType, string setDescript, decimal value, string[] branchList) {
            this.SaveSetDetailsAsync(setName, tName, data, empeeNo, columnType, setDescript, value, branchList, null);
        }
        
        /// <remarks/>
        public void SaveSetDetailsAsync(string setName, string tName, string[] data, int empeeNo, string columnType, string setDescript, decimal value, string[] branchList, object userState) {
            if ((this.SaveSetDetailsOperationCompleted == null)) {
                this.SaveSetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSetDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveSetDetails", new object[] {
                        setName,
                        tName,
                        data,
                        empeeNo,
                        columnType,
                        setDescript,
                        value,
                        branchList}, this.SaveSetDetailsOperationCompleted, userState);
        }
        
        private void OnSaveSetDetailsOperationCompleted(object arg) {
            if ((this.SaveSetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSetDetailsCompleted(this, new SaveSetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveProvisions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveProvisions(ProvisionsItem[] Items) {
            this.Invoke("SaveProvisions", new object[] {
                        Items});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveProvisions(ProvisionsItem[] Items, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveProvisions", new object[] {
                        Items}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSaveProvisions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SaveProvisionsAsync(ProvisionsItem[] Items) {
            this.SaveProvisionsAsync(Items, null);
        }
        
        /// <remarks/>
        public void SaveProvisionsAsync(ProvisionsItem[] Items, object userState) {
            if ((this.SaveProvisionsOperationCompleted == null)) {
                this.SaveProvisionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProvisionsOperationCompleted);
            }
            this.InvokeAsync("SaveProvisions", new object[] {
                        Items}, this.SaveProvisionsOperationCompleted, userState);
        }
        
        private void OnSaveProvisionsOperationCompleted(object arg) {
            if ((this.SaveProvisionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProvisionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadProvisions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProvisionsItem[] LoadProvisions() {
            object[] results = this.Invoke("LoadProvisions", new object[0]);
            return ((ProvisionsItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadProvisions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadProvisions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ProvisionsItem[] EndLoadProvisions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProvisionsItem[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadProvisionsAsync() {
            this.LoadProvisionsAsync(null);
        }
        
        /// <remarks/>
        public void LoadProvisionsAsync(object userState) {
            if ((this.LoadProvisionsOperationCompleted == null)) {
                this.LoadProvisionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProvisionsOperationCompleted);
            }
            this.InvokeAsync("LoadProvisions", new object[0], this.LoadProvisionsOperationCompleted, userState);
        }
        
        private void OnLoadProvisionsOperationCompleted(object arg) {
            if ((this.LoadProvisionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProvisionsCompleted(this, new LoadProvisionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class ProvisionsItem {
        
        private char acctypeField;
        
        private string statusNameField;
        
        private int statusUpperField;
        
        private int statusLowerField;
        
        private string monthsNameField;
        
        private int monthsUpperField;
        
        private int monthsLowerField;
        
        private decimal provisionField;
        
        /// <remarks/>
        public char Acctype {
            get {
                return this.acctypeField;
            }
            set {
                this.acctypeField = value;
            }
        }
        
        /// <remarks/>
        public string StatusName {
            get {
                return this.statusNameField;
            }
            set {
                this.statusNameField = value;
            }
        }
        
        /// <remarks/>
        public int StatusUpper {
            get {
                return this.statusUpperField;
            }
            set {
                this.statusUpperField = value;
            }
        }
        
        /// <remarks/>
        public int StatusLower {
            get {
                return this.statusLowerField;
            }
            set {
                this.statusLowerField = value;
            }
        }
        
        /// <remarks/>
        public string MonthsName {
            get {
                return this.monthsNameField;
            }
            set {
                this.monthsNameField = value;
            }
        }
        
        /// <remarks/>
        public int MonthsUpper {
            get {
                return this.monthsUpperField;
            }
            set {
                this.monthsUpperField = value;
            }
        }
        
        /// <remarks/>
        public int MonthsLower {
            get {
                return this.monthsLowerField;
            }
            set {
                this.monthsLowerField = value;
            }
        }
        
        /// <remarks/>
        public decimal Provision {
            get {
                return this.provisionField;
            }
            set {
                this.provisionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class CategoryItem {
        
        private string categoryField;
        
        private string codeField;
        
        private string codeDescriptField;
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string CodeDescript {
            get {
                return this.codeDescriptField;
            }
            set {
                this.codeDescriptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSetsForTNameCompletedEventHandler(object sender, GetSetsForTNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSetsForTNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSetsForTNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSetsForTNameBranchCompletedEventHandler(object sender, GetSetsForTNameBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSetsForTNameBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSetsForTNameBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSetsForTNameBranchAllCompletedEventHandler(object sender, GetSetsForTNameBranchAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSetsForTNameBranchAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSetsForTNameBranchAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveSetsCompletedEventHandler(object sender, SaveSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSetDetailsForSetNameCompletedEventHandler(object sender, GetSetDetailsForSetNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSetDetailsForSetNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSetDetailsForSetNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSetsCompletedEventHandler(object sender, GetSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCategoryItemCompletedEventHandler(object sender, GetCategoryItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveSetDetailsCompletedEventHandler(object sender, SaveSetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveProvisionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadProvisionsCompletedEventHandler(object sender, LoadProvisionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProvisionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProvisionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProvisionsItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProvisionsItem[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591