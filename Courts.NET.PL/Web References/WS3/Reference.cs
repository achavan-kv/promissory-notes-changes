//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace STL.PL.WS3 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WCustomerManagerSoap", Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class WCustomerManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback GetCodesForCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCodesToCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAccountsAndDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAccountsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAccountsDetailsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSPADetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAddressesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCustomerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBasicDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCustomerEmploymentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCustomerAdditionalDetailsResidentialOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCustomerAdditionalDetailsFinancialOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAddressesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRFCombinedDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRFCombinedTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMoreRewardsNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashLoanQualifiedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequiredAddressTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctAddressTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnblockCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPrivilegeMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPrivilegeMemberWithValidTermsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRFCombinedDetailsForPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCreditLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressAuditHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerMailingQuerySaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerMailingQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerMailingQueryGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerMailingQueryLoadbyEmpeenoOperationCompleted;
        
        private System.Threading.SendOrPostCallback IssuePrizeVouchersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrizeVoucherDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePrizeVouchersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCustomerPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCustomerSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustomerPhotosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantySecondEffortSolicitationItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWarrantySESConfirmationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateSRCashAndGoCustidOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetDatabycustidOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetDatabyacctnoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetDatabyMembernoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyAddFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltySaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyCheckCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetCashAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetVouchersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyAddRejectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetChargesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltySaveVouchersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyIsLinkAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetValidAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyCancelAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyCheckAccountPeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyCheckRemoveFreeDelOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGRTCancelFreeDelAdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyCheckLinkedAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyGetVoucherValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoyaltyRemoveVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerGetBandOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerSaveBandOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerMmiLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDuplicateCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDuplicateCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateInvoiceNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCustomerDetails_WebOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WCustomerManager() {
            this.Url = "http://localhost/Courts.NET.WS/WCustomerManager.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCodesForCustomerCompletedEventHandler GetCodesForCustomerCompleted;
        
        /// <remarks/>
        public event AddCodesToCustomerCompletedEventHandler AddCodesToCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerAccountsAndDetailsCompletedEventHandler GetCustomerAccountsAndDetailsCompleted;
        
        /// <remarks/>
        public event GetCustomerAccountsDetailsCompletedEventHandler GetCustomerAccountsDetailsCompleted;
        
        /// <remarks/>
        public event GetCustomerAccountsDetailsListCompletedEventHandler GetCustomerAccountsDetailsListCompleted;
        
        /// <remarks/>
        public event GetSPADetailsCompletedEventHandler GetSPADetailsCompleted;
        
        /// <remarks/>
        public event CustomerSearchCompletedEventHandler CustomerSearchCompleted;
        
        /// <remarks/>
        public event GetCustomerAddressesCompletedEventHandler GetCustomerAddressesCompleted;
        
        /// <remarks/>
        public event GetBasicCustomerDetailsCompletedEventHandler GetBasicCustomerDetailsCompleted;
        
        /// <remarks/>
        public event SaveBasicDetailsCompletedEventHandler SaveBasicDetailsCompleted;
        
        /// <remarks/>
        public event SaveCustomerEmploymentDetailsCompletedEventHandler SaveCustomerEmploymentDetailsCompleted;
        
        /// <remarks/>
        public event SaveCustomerAdditionalDetailsResidentialCompletedEventHandler SaveCustomerAdditionalDetailsResidentialCompleted;
        
        /// <remarks/>
        public event SaveCustomerAdditionalDetailsFinancialCompletedEventHandler SaveCustomerAdditionalDetailsFinancialCompleted;
        
        /// <remarks/>
        public event SaveAddressesCompletedEventHandler SaveAddressesCompleted;
        
        /// <remarks/>
        public event GetRFCombinedDetailsCompletedEventHandler GetRFCombinedDetailsCompleted;
        
        /// <remarks/>
        public event GetRFCombinedTransactionsCompletedEventHandler GetRFCombinedTransactionsCompleted;
        
        /// <remarks/>
        public event GetMoreRewardsNoCompletedEventHandler GetMoreRewardsNoCompleted;
        
        /// <remarks/>
        public event GetCashLoanQualifiedCompletedEventHandler GetCashLoanQualifiedCompleted;
        
        /// <remarks/>
        public event GetRequiredAddressTypesCompletedEventHandler GetRequiredAddressTypesCompleted;
        
        /// <remarks/>
        public event GetDistinctAddressTypesCompletedEventHandler GetDistinctAddressTypesCompleted;
        
        /// <remarks/>
        public event GetImageCompletedEventHandler GetImageCompleted;
        
        /// <remarks/>
        public event UpdateImageCompletedEventHandler UpdateImageCompleted;
        
        /// <remarks/>
        public event UnblockCreditCompletedEventHandler UnblockCreditCompleted;
        
        /// <remarks/>
        public event IsPrivilegeMemberCompletedEventHandler IsPrivilegeMemberCompleted;
        
        /// <remarks/>
        public event IsPrivilegeMemberWithValidTermsTypeCompletedEventHandler IsPrivilegeMemberWithValidTermsTypeCompleted;
        
        /// <remarks/>
        public event GetRFCombinedDetailsForPrintCompletedEventHandler GetRFCombinedDetailsForPrintCompleted;
        
        /// <remarks/>
        public event UpdateCustomerIDCompletedEventHandler UpdateCustomerIDCompleted;
        
        /// <remarks/>
        public event SetCreditLimitCompletedEventHandler SetCreditLimitCompleted;
        
        /// <remarks/>
        public event GetCustomerAuditCompletedEventHandler GetCustomerAuditCompleted;
        
        /// <remarks/>
        public event GetAddressHistoryCompletedEventHandler GetAddressHistoryCompleted;
        
        /// <remarks/>
        public event GetAddressAuditHistoryCompletedEventHandler GetAddressAuditHistoryCompleted;
        
        /// <remarks/>
        public event CustomerMailingQuerySaveCompletedEventHandler CustomerMailingQuerySaveCompleted;
        
        /// <remarks/>
        public event CustomerMailingQueryCompletedEventHandler CustomerMailingQueryCompleted;
        
        /// <remarks/>
        public event CustomerMailingQueryGetCompletedEventHandler CustomerMailingQueryGetCompleted;
        
        /// <remarks/>
        public event CustomerMailingQueryLoadbyEmpeenoCompletedEventHandler CustomerMailingQueryLoadbyEmpeenoCompleted;
        
        /// <remarks/>
        public event IssuePrizeVouchersCompletedEventHandler IssuePrizeVouchersCompleted;
        
        /// <remarks/>
        public event GetPrizeVoucherDetailsCompletedEventHandler GetPrizeVoucherDetailsCompleted;
        
        /// <remarks/>
        public event DeletePrizeVouchersCompletedEventHandler DeletePrizeVouchersCompleted;
        
        /// <remarks/>
        public event SaveCustomerPhotoCompletedEventHandler SaveCustomerPhotoCompleted;
        
        /// <remarks/>
        public event SaveCustomerSignatureCompletedEventHandler SaveCustomerSignatureCompleted;
        
        /// <remarks/>
        public event GetCustomerPhotoCompletedEventHandler GetCustomerPhotoCompleted;
        
        /// <remarks/>
        public event GetAllCustomerPhotosCompletedEventHandler GetAllCustomerPhotosCompleted;
        
        /// <remarks/>
        public event GetCustomerSignatureCompletedEventHandler GetCustomerSignatureCompleted;
        
        /// <remarks/>
        public event GetWarrantySecondEffortSolicitationItemsCompletedEventHandler GetWarrantySecondEffortSolicitationItemsCompleted;
        
        /// <remarks/>
        public event SaveWarrantySESConfirmationCompletedEventHandler SaveWarrantySESConfirmationCompleted;
        
        /// <remarks/>
        public event GenerateSRCashAndGoCustidCompletedEventHandler GenerateSRCashAndGoCustidCompleted;
        
        /// <remarks/>
        public event LoyaltyGetDatabycustidCompletedEventHandler LoyaltyGetDatabycustidCompleted;
        
        /// <remarks/>
        public event LoyaltyGetDatabyacctnoCompletedEventHandler LoyaltyGetDatabyacctnoCompleted;
        
        /// <remarks/>
        public event LoyaltyGetDatabyMembernoCompletedEventHandler LoyaltyGetDatabyMembernoCompleted;
        
        /// <remarks/>
        public event LoyaltyAddFeeCompletedEventHandler LoyaltyAddFeeCompleted;
        
        /// <remarks/>
        public event LoyaltySaveCompletedEventHandler LoyaltySaveCompleted;
        
        /// <remarks/>
        public event LoyaltyCheckCustomerCompletedEventHandler LoyaltyCheckCustomerCompleted;
        
        /// <remarks/>
        public event LoyaltyGetCashAccountCompletedEventHandler LoyaltyGetCashAccountCompleted;
        
        /// <remarks/>
        public event LoyaltyGetVouchersCompletedEventHandler LoyaltyGetVouchersCompleted;
        
        /// <remarks/>
        public event LoyaltyAddRejectionCompletedEventHandler LoyaltyAddRejectionCompleted;
        
        /// <remarks/>
        public event LoyaltyGetChargesCompletedEventHandler LoyaltyGetChargesCompleted;
        
        /// <remarks/>
        public event LoyaltySaveVouchersCompletedEventHandler LoyaltySaveVouchersCompleted;
        
        /// <remarks/>
        public event LoyaltyIsLinkAccountCompletedEventHandler LoyaltyIsLinkAccountCompleted;
        
        /// <remarks/>
        public event LoyaltyPayCompletedEventHandler LoyaltyPayCompleted;
        
        /// <remarks/>
        public event LoyaltyGetValidAddressCompletedEventHandler LoyaltyGetValidAddressCompleted;
        
        /// <remarks/>
        public event LoyaltyCancelAccountCompletedEventHandler LoyaltyCancelAccountCompleted;
        
        /// <remarks/>
        public event LoyaltyCheckAccountPeriodCompletedEventHandler LoyaltyCheckAccountPeriodCompleted;
        
        /// <remarks/>
        public event LoyaltyCheckRemoveFreeDelCompletedEventHandler LoyaltyCheckRemoveFreeDelCompleted;
        
        /// <remarks/>
        public event LoyaltyGRTCancelFreeDelAdjustCompletedEventHandler LoyaltyGRTCancelFreeDelAdjustCompleted;
        
        /// <remarks/>
        public event LoyaltyGetHistoryCompletedEventHandler LoyaltyGetHistoryCompleted;
        
        /// <remarks/>
        public event LoyaltyCheckLinkedAccountCompletedEventHandler LoyaltyCheckLinkedAccountCompleted;
        
        /// <remarks/>
        public event LoyaltyGetVoucherValueCompletedEventHandler LoyaltyGetVoucherValueCompleted;
        
        /// <remarks/>
        public event LoyaltyRemoveVoucherCompletedEventHandler LoyaltyRemoveVoucherCompleted;
        
        /// <remarks/>
        public event CustomerGetBandCompletedEventHandler CustomerGetBandCompleted;
        
        /// <remarks/>
        public event CustomerSaveBandCompletedEventHandler CustomerSaveBandCompleted;
        
        /// <remarks/>
        public event LoadCustomerCompletedEventHandler LoadCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerMmiLimitCompletedEventHandler GetCustomerMmiLimitCompleted;
        
        /// <remarks/>
        public event GetDuplicateCustomersCompletedEventHandler GetDuplicateCustomersCompleted;
        
        /// <remarks/>
        public event UpdateDuplicateCustomersCompletedEventHandler UpdateDuplicateCustomersCompleted;
        
        /// <remarks/>
        public event GenerateInvoiceNumberCompletedEventHandler GenerateInvoiceNumberCompleted;
        
        /// <remarks/>
        public event GetBasicCustomerDetails_WebCompletedEventHandler GetBasicCustomerDetails_WebCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCodesForCustomer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCodesForCustomer(string customerID, out bool noSuchCust, out string err) {
            object[] results = this.Invoke("GetCodesForCustomer", new object[] {
                        customerID});
            noSuchCust = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCodesForCustomer(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCodesForCustomer", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCodesForCustomer(System.IAsyncResult asyncResult, out bool noSuchCust, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            noSuchCust = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCodesForCustomerAsync(string customerID) {
            this.GetCodesForCustomerAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetCodesForCustomerAsync(string customerID, object userState) {
            if ((this.GetCodesForCustomerOperationCompleted == null)) {
                this.GetCodesForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodesForCustomerOperationCompleted);
            }
            this.InvokeAsync("GetCodesForCustomer", new object[] {
                        customerID}, this.GetCodesForCustomerOperationCompleted, userState);
        }
        
        private void OnGetCodesForCustomerOperationCompleted(object arg) {
            if ((this.GetCodesForCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodesForCustomerCompleted(this, new GetCodesForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AddCodesToCustomer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddCodesToCustomer(string customerID, System.Data.DataSet ds, string custCode) {
            object[] results = this.Invoke("AddCodesToCustomer", new object[] {
                        customerID,
                        ds,
                        custCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddCodesToCustomer(string customerID, System.Data.DataSet ds, string custCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddCodesToCustomer", new object[] {
                        customerID,
                        ds,
                        custCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddCodesToCustomer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCodesToCustomerAsync(string customerID, System.Data.DataSet ds, string custCode) {
            this.AddCodesToCustomerAsync(customerID, ds, custCode, null);
        }
        
        /// <remarks/>
        public void AddCodesToCustomerAsync(string customerID, System.Data.DataSet ds, string custCode, object userState) {
            if ((this.AddCodesToCustomerOperationCompleted == null)) {
                this.AddCodesToCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCodesToCustomerOperationCompleted);
            }
            this.InvokeAsync("AddCodesToCustomer", new object[] {
                        customerID,
                        ds,
                        custCode}, this.AddCodesToCustomerOperationCompleted, userState);
        }
        
        private void OnAddCodesToCustomerOperationCompleted(object arg) {
            if ((this.AddCodesToCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCodesToCustomerCompleted(this, new AddCodesToCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerAccountsAndDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerAccountsAndDetails(string accountNo, out string err) {
            object[] results = this.Invoke("GetCustomerAccountsAndDetails", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerAccountsAndDetails(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerAccountsAndDetails", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCustomerAccountsAndDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAccountsAndDetailsAsync(string accountNo) {
            this.GetCustomerAccountsAndDetailsAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetCustomerAccountsAndDetailsAsync(string accountNo, object userState) {
            if ((this.GetCustomerAccountsAndDetailsOperationCompleted == null)) {
                this.GetCustomerAccountsAndDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAccountsAndDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAccountsAndDetails", new object[] {
                        accountNo}, this.GetCustomerAccountsAndDetailsOperationCompleted, userState);
        }
        
        private void OnGetCustomerAccountsAndDetailsOperationCompleted(object arg) {
            if ((this.GetCustomerAccountsAndDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAccountsAndDetailsCompleted(this, new GetCustomerAccountsAndDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerAccountsDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerAccountsDetails(string accountNo, out string err) {
            object[] results = this.Invoke("GetCustomerAccountsDetails", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerAccountsDetails(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerAccountsDetails", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCustomerAccountsDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAccountsDetailsAsync(string accountNo) {
            this.GetCustomerAccountsDetailsAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetCustomerAccountsDetailsAsync(string accountNo, object userState) {
            if ((this.GetCustomerAccountsDetailsOperationCompleted == null)) {
                this.GetCustomerAccountsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAccountsDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAccountsDetails", new object[] {
                        accountNo}, this.GetCustomerAccountsDetailsOperationCompleted, userState);
        }
        
        private void OnGetCustomerAccountsDetailsOperationCompleted(object arg) {
            if ((this.GetCustomerAccountsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAccountsDetailsCompleted(this, new GetCustomerAccountsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerAccountsDetailsList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetCustomerAccountsDetailsList(string accountNo, out string err) {
            object[] results = this.Invoke("GetCustomerAccountsDetailsList", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerAccountsDetailsList(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerAccountsDetailsList", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetCustomerAccountsDetailsList(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAccountsDetailsListAsync(string accountNo) {
            this.GetCustomerAccountsDetailsListAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetCustomerAccountsDetailsListAsync(string accountNo, object userState) {
            if ((this.GetCustomerAccountsDetailsListOperationCompleted == null)) {
                this.GetCustomerAccountsDetailsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAccountsDetailsListOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAccountsDetailsList", new object[] {
                        accountNo}, this.GetCustomerAccountsDetailsListOperationCompleted, userState);
        }
        
        private void OnGetCustomerAccountsDetailsListOperationCompleted(object arg) {
            if ((this.GetCustomerAccountsDetailsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAccountsDetailsListCompleted(this, new GetCustomerAccountsDetailsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSPADetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSPADetails(string acctNo, out string err) {
            object[] results = this.Invoke("GetSPADetails", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSPADetails(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSPADetails", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSPADetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSPADetailsAsync(string acctNo) {
            this.GetSPADetailsAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetSPADetailsAsync(string acctNo, object userState) {
            if ((this.GetSPADetailsOperationCompleted == null)) {
                this.GetSPADetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSPADetailsOperationCompleted);
            }
            this.InvokeAsync("GetSPADetails", new object[] {
                        acctNo}, this.GetSPADetailsOperationCompleted, userState);
        }
        
        private void OnGetSPADetailsOperationCompleted(object arg) {
            if ((this.GetSPADetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSPADetailsCompleted(this, new GetSPADetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CustomerSearch", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CustomerSearch(string customerID, string firstName, string lastName, string address, string phoneNumber, int limit, int settled, bool exactMatch, string storeType, out string err) {
            object[] results = this.Invoke("CustomerSearch", new object[] {
                        customerID,
                        firstName,
                        lastName,
                        address,
                        phoneNumber,
                        limit,
                        settled,
                        exactMatch,
                        storeType});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustomerSearch(string customerID, string firstName, string lastName, string address, string phoneNumber, int limit, int settled, bool exactMatch, string storeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CustomerSearch", new object[] {
                        customerID,
                        firstName,
                        lastName,
                        address,
                        phoneNumber,
                        limit,
                        settled,
                        exactMatch,
                        storeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCustomerSearch(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerSearchAsync(string customerID, string firstName, string lastName, string address, string phoneNumber, int limit, int settled, bool exactMatch, string storeType) {
            this.CustomerSearchAsync(customerID, firstName, lastName, address, phoneNumber, limit, settled, exactMatch, storeType, null);
        }
        
        /// <remarks/>
        public void CustomerSearchAsync(string customerID, string firstName, string lastName, string address, string phoneNumber, int limit, int settled, bool exactMatch, string storeType, object userState) {
            if ((this.CustomerSearchOperationCompleted == null)) {
                this.CustomerSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerSearchOperationCompleted);
            }
            this.InvokeAsync("CustomerSearch", new object[] {
                        customerID,
                        firstName,
                        lastName,
                        address,
                        phoneNumber,
                        limit,
                        settled,
                        exactMatch,
                        storeType}, this.CustomerSearchOperationCompleted, userState);
        }
        
        private void OnCustomerSearchOperationCompleted(object arg) {
            if ((this.CustomerSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerSearchCompleted(this, new CustomerSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerAddresses", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerAddresses(string customerID, out string err) {
            object[] results = this.Invoke("GetCustomerAddresses", new object[] {
                        customerID});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerAddresses(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerAddresses", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCustomerAddresses(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAddressesAsync(string customerID) {
            this.GetCustomerAddressesAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetCustomerAddressesAsync(string customerID, object userState) {
            if ((this.GetCustomerAddressesOperationCompleted == null)) {
                this.GetCustomerAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAddressesOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAddresses", new object[] {
                        customerID}, this.GetCustomerAddressesOperationCompleted, userState);
        }
        
        private void OnGetCustomerAddressesOperationCompleted(object arg) {
            if ((this.GetCustomerAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAddressesCompleted(this, new GetCustomerAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBasicCustomerDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCustomerDetails(string customerID, string accountNo, string relationship, out string err) {
            object[] results = this.Invoke("GetBasicCustomerDetails", new object[] {
                        customerID,
                        accountNo,
                        relationship});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBasicCustomerDetails(string customerID, string accountNo, string relationship, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBasicCustomerDetails", new object[] {
                        customerID,
                        accountNo,
                        relationship}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBasicCustomerDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCustomerDetailsAsync(string customerID, string accountNo, string relationship) {
            this.GetBasicCustomerDetailsAsync(customerID, accountNo, relationship, null);
        }
        
        /// <remarks/>
        public void GetBasicCustomerDetailsAsync(string customerID, string accountNo, string relationship, object userState) {
            if ((this.GetBasicCustomerDetailsOperationCompleted == null)) {
                this.GetBasicCustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCustomerDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBasicCustomerDetails", new object[] {
                        customerID,
                        accountNo,
                        relationship}, this.GetBasicCustomerDetailsOperationCompleted, userState);
        }
        
        private void OnGetBasicCustomerDetailsOperationCompleted(object arg) {
            if ((this.GetBasicCustomerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCustomerDetailsCompleted(this, new GetBasicCustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveBasicDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveBasicDetails(
                    string custid, 
                    string title, 
                    string firstName, 
                    string lastName, 
                    string alias, 
                    string accountNo, 
                    string relationship, 
                    System.DateTime dob, 
                    string accountType, 
                    string maidenName, 
                    string loyaltyCardNo, 
                    string countryCode, 
                    string storeType, 
                    System.Data.DataSet otherTabs, 
                    string maritalStat, 
                    int dependants, 
                    string nationality, 
                    bool resieveSms, 
                    out string err) {
            object[] results = this.Invoke("SaveBasicDetails", new object[] {
                        custid,
                        title,
                        firstName,
                        lastName,
                        alias,
                        accountNo,
                        relationship,
                        dob,
                        accountType,
                        maidenName,
                        loyaltyCardNo,
                        countryCode,
                        storeType,
                        otherTabs,
                        maritalStat,
                        dependants,
                        nationality,
                        resieveSms});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveBasicDetails(
                    string custid, 
                    string title, 
                    string firstName, 
                    string lastName, 
                    string alias, 
                    string accountNo, 
                    string relationship, 
                    System.DateTime dob, 
                    string accountType, 
                    string maidenName, 
                    string loyaltyCardNo, 
                    string countryCode, 
                    string storeType, 
                    System.Data.DataSet otherTabs, 
                    string maritalStat, 
                    int dependants, 
                    string nationality, 
                    bool resieveSms, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("SaveBasicDetails", new object[] {
                        custid,
                        title,
                        firstName,
                        lastName,
                        alias,
                        accountNo,
                        relationship,
                        dob,
                        accountType,
                        maidenName,
                        loyaltyCardNo,
                        countryCode,
                        storeType,
                        otherTabs,
                        maritalStat,
                        dependants,
                        nationality,
                        resieveSms}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveBasicDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBasicDetailsAsync(
                    string custid, 
                    string title, 
                    string firstName, 
                    string lastName, 
                    string alias, 
                    string accountNo, 
                    string relationship, 
                    System.DateTime dob, 
                    string accountType, 
                    string maidenName, 
                    string loyaltyCardNo, 
                    string countryCode, 
                    string storeType, 
                    System.Data.DataSet otherTabs, 
                    string maritalStat, 
                    int dependants, 
                    string nationality, 
                    bool resieveSms) {
            this.SaveBasicDetailsAsync(custid, title, firstName, lastName, alias, accountNo, relationship, dob, accountType, maidenName, loyaltyCardNo, countryCode, storeType, otherTabs, maritalStat, dependants, nationality, resieveSms, null);
        }
        
        /// <remarks/>
        public void SaveBasicDetailsAsync(
                    string custid, 
                    string title, 
                    string firstName, 
                    string lastName, 
                    string alias, 
                    string accountNo, 
                    string relationship, 
                    System.DateTime dob, 
                    string accountType, 
                    string maidenName, 
                    string loyaltyCardNo, 
                    string countryCode, 
                    string storeType, 
                    System.Data.DataSet otherTabs, 
                    string maritalStat, 
                    int dependants, 
                    string nationality, 
                    bool resieveSms, 
                    object userState) {
            if ((this.SaveBasicDetailsOperationCompleted == null)) {
                this.SaveBasicDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBasicDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveBasicDetails", new object[] {
                        custid,
                        title,
                        firstName,
                        lastName,
                        alias,
                        accountNo,
                        relationship,
                        dob,
                        accountType,
                        maidenName,
                        loyaltyCardNo,
                        countryCode,
                        storeType,
                        otherTabs,
                        maritalStat,
                        dependants,
                        nationality,
                        resieveSms}, this.SaveBasicDetailsOperationCompleted, userState);
        }
        
        private void OnSaveBasicDetailsOperationCompleted(object arg) {
            if ((this.SaveBasicDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBasicDetailsCompleted(this, new SaveBasicDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCustomerEmploymentDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCustomerEmploymentDetails(string custid, System.Data.DataSet dsEmployment, out string err) {
            object[] results = this.Invoke("SaveCustomerEmploymentDetails", new object[] {
                        custid,
                        dsEmployment});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCustomerEmploymentDetails(string custid, System.Data.DataSet dsEmployment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCustomerEmploymentDetails", new object[] {
                        custid,
                        dsEmployment}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCustomerEmploymentDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCustomerEmploymentDetailsAsync(string custid, System.Data.DataSet dsEmployment) {
            this.SaveCustomerEmploymentDetailsAsync(custid, dsEmployment, null);
        }
        
        /// <remarks/>
        public void SaveCustomerEmploymentDetailsAsync(string custid, System.Data.DataSet dsEmployment, object userState) {
            if ((this.SaveCustomerEmploymentDetailsOperationCompleted == null)) {
                this.SaveCustomerEmploymentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCustomerEmploymentDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveCustomerEmploymentDetails", new object[] {
                        custid,
                        dsEmployment}, this.SaveCustomerEmploymentDetailsOperationCompleted, userState);
        }
        
        private void OnSaveCustomerEmploymentDetailsOperationCompleted(object arg) {
            if ((this.SaveCustomerEmploymentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCustomerEmploymentDetailsCompleted(this, new SaveCustomerEmploymentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCustomerAdditionalDetailsResidential", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCustomerAdditionalDetailsResidential(System.Data.DataSet ds, out string err) {
            object[] results = this.Invoke("SaveCustomerAdditionalDetailsResidential", new object[] {
                        ds});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCustomerAdditionalDetailsResidential(System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCustomerAdditionalDetailsResidential", new object[] {
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCustomerAdditionalDetailsResidential(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCustomerAdditionalDetailsResidentialAsync(System.Data.DataSet ds) {
            this.SaveCustomerAdditionalDetailsResidentialAsync(ds, null);
        }
        
        /// <remarks/>
        public void SaveCustomerAdditionalDetailsResidentialAsync(System.Data.DataSet ds, object userState) {
            if ((this.SaveCustomerAdditionalDetailsResidentialOperationCompleted == null)) {
                this.SaveCustomerAdditionalDetailsResidentialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCustomerAdditionalDetailsResidentialOperationCompleted);
            }
            this.InvokeAsync("SaveCustomerAdditionalDetailsResidential", new object[] {
                        ds}, this.SaveCustomerAdditionalDetailsResidentialOperationCompleted, userState);
        }
        
        private void OnSaveCustomerAdditionalDetailsResidentialOperationCompleted(object arg) {
            if ((this.SaveCustomerAdditionalDetailsResidentialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCustomerAdditionalDetailsResidentialCompleted(this, new SaveCustomerAdditionalDetailsResidentialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCustomerAdditionalDetailsFinancial", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCustomerAdditionalDetailsFinancial(string custId, string accountNo, System.Data.DataSet ds, out string err) {
            object[] results = this.Invoke("SaveCustomerAdditionalDetailsFinancial", new object[] {
                        custId,
                        accountNo,
                        ds});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCustomerAdditionalDetailsFinancial(string custId, string accountNo, System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCustomerAdditionalDetailsFinancial", new object[] {
                        custId,
                        accountNo,
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCustomerAdditionalDetailsFinancial(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCustomerAdditionalDetailsFinancialAsync(string custId, string accountNo, System.Data.DataSet ds) {
            this.SaveCustomerAdditionalDetailsFinancialAsync(custId, accountNo, ds, null);
        }
        
        /// <remarks/>
        public void SaveCustomerAdditionalDetailsFinancialAsync(string custId, string accountNo, System.Data.DataSet ds, object userState) {
            if ((this.SaveCustomerAdditionalDetailsFinancialOperationCompleted == null)) {
                this.SaveCustomerAdditionalDetailsFinancialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCustomerAdditionalDetailsFinancialOperationCompleted);
            }
            this.InvokeAsync("SaveCustomerAdditionalDetailsFinancial", new object[] {
                        custId,
                        accountNo,
                        ds}, this.SaveCustomerAdditionalDetailsFinancialOperationCompleted, userState);
        }
        
        private void OnSaveCustomerAdditionalDetailsFinancialOperationCompleted(object arg) {
            if ((this.SaveCustomerAdditionalDetailsFinancialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCustomerAdditionalDetailsFinancialCompleted(this, new SaveCustomerAdditionalDetailsFinancialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveAddresses", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveAddresses(string linked, System.Data.DataSet ds, out string err) {
            object[] results = this.Invoke("SaveAddresses", new object[] {
                        linked,
                        ds});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveAddresses(string linked, System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAddresses", new object[] {
                        linked,
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveAddresses(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAddressesAsync(string linked, System.Data.DataSet ds) {
            this.SaveAddressesAsync(linked, ds, null);
        }
        
        /// <remarks/>
        public void SaveAddressesAsync(string linked, System.Data.DataSet ds, object userState) {
            if ((this.SaveAddressesOperationCompleted == null)) {
                this.SaveAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAddressesOperationCompleted);
            }
            this.InvokeAsync("SaveAddresses", new object[] {
                        linked,
                        ds}, this.SaveAddressesOperationCompleted, userState);
        }
        
        private void OnSaveAddressesOperationCompleted(object arg) {
            if ((this.SaveAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAddressesCompleted(this, new SaveAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRFCombinedDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRFCombinedDetails(string customerID, out string err) {
            object[] results = this.Invoke("GetRFCombinedDetails", new object[] {
                        customerID});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRFCombinedDetails(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRFCombinedDetails", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRFCombinedDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRFCombinedDetailsAsync(string customerID) {
            this.GetRFCombinedDetailsAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetRFCombinedDetailsAsync(string customerID, object userState) {
            if ((this.GetRFCombinedDetailsOperationCompleted == null)) {
                this.GetRFCombinedDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRFCombinedDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRFCombinedDetails", new object[] {
                        customerID}, this.GetRFCombinedDetailsOperationCompleted, userState);
        }
        
        private void OnGetRFCombinedDetailsOperationCompleted(object arg) {
            if ((this.GetRFCombinedDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRFCombinedDetailsCompleted(this, new GetRFCombinedDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRFCombinedTransactions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRFCombinedTransactions(bool groupedSum, string customerID, out string err) {
            object[] results = this.Invoke("GetRFCombinedTransactions", new object[] {
                        groupedSum,
                        customerID});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRFCombinedTransactions(bool groupedSum, string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRFCombinedTransactions", new object[] {
                        groupedSum,
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRFCombinedTransactions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRFCombinedTransactionsAsync(bool groupedSum, string customerID) {
            this.GetRFCombinedTransactionsAsync(groupedSum, customerID, null);
        }
        
        /// <remarks/>
        public void GetRFCombinedTransactionsAsync(bool groupedSum, string customerID, object userState) {
            if ((this.GetRFCombinedTransactionsOperationCompleted == null)) {
                this.GetRFCombinedTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRFCombinedTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetRFCombinedTransactions", new object[] {
                        groupedSum,
                        customerID}, this.GetRFCombinedTransactionsOperationCompleted, userState);
        }
        
        private void OnGetRFCombinedTransactionsOperationCompleted(object arg) {
            if ((this.GetRFCombinedTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRFCombinedTransactionsCompleted(this, new GetRFCombinedTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetMoreRewardsNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMoreRewardsNo(string customerID, out string err) {
            object[] results = this.Invoke("GetMoreRewardsNo", new object[] {
                        customerID});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMoreRewardsNo(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMoreRewardsNo", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetMoreRewardsNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMoreRewardsNoAsync(string customerID) {
            this.GetMoreRewardsNoAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetMoreRewardsNoAsync(string customerID, object userState) {
            if ((this.GetMoreRewardsNoOperationCompleted == null)) {
                this.GetMoreRewardsNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMoreRewardsNoOperationCompleted);
            }
            this.InvokeAsync("GetMoreRewardsNo", new object[] {
                        customerID}, this.GetMoreRewardsNoOperationCompleted, userState);
        }
        
        private void OnGetMoreRewardsNoOperationCompleted(object arg) {
            if ((this.GetMoreRewardsNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMoreRewardsNoCompleted(this, new GetMoreRewardsNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashLoanQualified", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetCashLoanQualified(string custID, string acctNo, out string err) {
            object[] results = this.Invoke("GetCashLoanQualified", new object[] {
                        custID,
                        acctNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashLoanQualified(string custID, string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashLoanQualified", new object[] {
                        custID,
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetCashLoanQualified(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashLoanQualifiedAsync(string custID, string acctNo) {
            this.GetCashLoanQualifiedAsync(custID, acctNo, null);
        }
        
        /// <remarks/>
        public void GetCashLoanQualifiedAsync(string custID, string acctNo, object userState) {
            if ((this.GetCashLoanQualifiedOperationCompleted == null)) {
                this.GetCashLoanQualifiedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashLoanQualifiedOperationCompleted);
            }
            this.InvokeAsync("GetCashLoanQualified", new object[] {
                        custID,
                        acctNo}, this.GetCashLoanQualifiedOperationCompleted, userState);
        }
        
        private void OnGetCashLoanQualifiedOperationCompleted(object arg) {
            if ((this.GetCashLoanQualifiedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashLoanQualifiedCompleted(this, new GetCashLoanQualifiedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRequiredAddressTypes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetRequiredAddressTypes(string customerID, out string err) {
            object[] results = this.Invoke("GetRequiredAddressTypes", new object[] {
                        customerID});
            err = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRequiredAddressTypes(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRequiredAddressTypes", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetRequiredAddressTypes(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRequiredAddressTypesAsync(string customerID) {
            this.GetRequiredAddressTypesAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetRequiredAddressTypesAsync(string customerID, object userState) {
            if ((this.GetRequiredAddressTypesOperationCompleted == null)) {
                this.GetRequiredAddressTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequiredAddressTypesOperationCompleted);
            }
            this.InvokeAsync("GetRequiredAddressTypes", new object[] {
                        customerID}, this.GetRequiredAddressTypesOperationCompleted, userState);
        }
        
        private void OnGetRequiredAddressTypesOperationCompleted(object arg) {
            if ((this.GetRequiredAddressTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequiredAddressTypesCompleted(this, new GetRequiredAddressTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDistinctAddressTypes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDistinctAddressTypes(string customerID, out string err) {
            object[] results = this.Invoke("GetDistinctAddressTypes", new object[] {
                        customerID});
            err = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDistinctAddressTypes(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDistinctAddressTypes", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetDistinctAddressTypes(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctAddressTypesAsync(string customerID) {
            this.GetDistinctAddressTypesAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetDistinctAddressTypesAsync(string customerID, object userState) {
            if ((this.GetDistinctAddressTypesOperationCompleted == null)) {
                this.GetDistinctAddressTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctAddressTypesOperationCompleted);
            }
            this.InvokeAsync("GetDistinctAddressTypes", new object[] {
                        customerID}, this.GetDistinctAddressTypesOperationCompleted, userState);
        }
        
        private void OnGetDistinctAddressTypesOperationCompleted(object arg) {
            if ((this.GetDistinctAddressTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctAddressTypesCompleted(this, new GetDistinctAddressTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetImage", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetImage(string custid, out string err) {
            object[] results = this.Invoke("GetImage", new object[] {
                        custid});
            err = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImage(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImage", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetImage(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImageAsync(string custid) {
            this.GetImageAsync(custid, null);
        }
        
        /// <remarks/>
        public void GetImageAsync(string custid, object userState) {
            if ((this.GetImageOperationCompleted == null)) {
                this.GetImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageOperationCompleted);
            }
            this.InvokeAsync("GetImage", new object[] {
                        custid}, this.GetImageOperationCompleted, userState);
        }
        
        private void OnGetImageOperationCompleted(object arg) {
            if ((this.GetImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCompleted(this, new GetImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateImage", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateImage(string custid, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] image, out string err) {
            object[] results = this.Invoke("UpdateImage", new object[] {
                        custid,
                        image});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateImage(string custid, byte[] image, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateImage", new object[] {
                        custid,
                        image}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateImage(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateImageAsync(string custid, byte[] image) {
            this.UpdateImageAsync(custid, image, null);
        }
        
        /// <remarks/>
        public void UpdateImageAsync(string custid, byte[] image, object userState) {
            if ((this.UpdateImageOperationCompleted == null)) {
                this.UpdateImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateImageOperationCompleted);
            }
            this.InvokeAsync("UpdateImage", new object[] {
                        custid,
                        image}, this.UpdateImageOperationCompleted, userState);
        }
        
        private void OnUpdateImageOperationCompleted(object arg) {
            if ((this.UpdateImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateImageCompleted(this, new UpdateImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnblockCredit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnblockCredit(string custid, out string err) {
            object[] results = this.Invoke("UnblockCredit", new object[] {
                        custid});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnblockCredit(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnblockCredit", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUnblockCredit(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnblockCreditAsync(string custid) {
            this.UnblockCreditAsync(custid, null);
        }
        
        /// <remarks/>
        public void UnblockCreditAsync(string custid, object userState) {
            if ((this.UnblockCreditOperationCompleted == null)) {
                this.UnblockCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnblockCreditOperationCompleted);
            }
            this.InvokeAsync("UnblockCredit", new object[] {
                        custid}, this.UnblockCreditOperationCompleted, userState);
        }
        
        private void OnUnblockCreditOperationCompleted(object arg) {
            if ((this.UnblockCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnblockCreditCompleted(this, new UnblockCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsPrivilegeMember", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IsPrivilegeMember(string custid, out bool privilegeClub, out string privilegeClubCode, out string privilegeClubDesc, out bool hasDiscount, out string err) {
            object[] results = this.Invoke("IsPrivilegeMember", new object[] {
                        custid});
            privilegeClub = ((bool)(results[1]));
            privilegeClubCode = ((string)(results[2]));
            privilegeClubDesc = ((string)(results[3]));
            hasDiscount = ((bool)(results[4]));
            err = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsPrivilegeMember(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsPrivilegeMember", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndIsPrivilegeMember(System.IAsyncResult asyncResult, out bool privilegeClub, out string privilegeClubCode, out string privilegeClubDesc, out bool hasDiscount, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            privilegeClub = ((bool)(results[1]));
            privilegeClubCode = ((string)(results[2]));
            privilegeClubDesc = ((string)(results[3]));
            hasDiscount = ((bool)(results[4]));
            err = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IsPrivilegeMemberAsync(string custid) {
            this.IsPrivilegeMemberAsync(custid, null);
        }
        
        /// <remarks/>
        public void IsPrivilegeMemberAsync(string custid, object userState) {
            if ((this.IsPrivilegeMemberOperationCompleted == null)) {
                this.IsPrivilegeMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPrivilegeMemberOperationCompleted);
            }
            this.InvokeAsync("IsPrivilegeMember", new object[] {
                        custid}, this.IsPrivilegeMemberOperationCompleted, userState);
        }
        
        private void OnIsPrivilegeMemberOperationCompleted(object arg) {
            if ((this.IsPrivilegeMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPrivilegeMemberCompleted(this, new IsPrivilegeMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsPrivilegeMemberWithValidTermsType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IsPrivilegeMemberWithValidTermsType(string custid, string TermsType, System.DateTime dateAccountOpened, out bool privilegeClub, out string privilegeClubCode, out string privilegeClubDesc, out bool hasDiscount, out string err, out bool termsTypeValid) {
            object[] results = this.Invoke("IsPrivilegeMemberWithValidTermsType", new object[] {
                        custid,
                        TermsType,
                        dateAccountOpened});
            privilegeClub = ((bool)(results[1]));
            privilegeClubCode = ((string)(results[2]));
            privilegeClubDesc = ((string)(results[3]));
            hasDiscount = ((bool)(results[4]));
            err = ((string)(results[5]));
            termsTypeValid = ((bool)(results[6]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsPrivilegeMemberWithValidTermsType(string custid, string TermsType, System.DateTime dateAccountOpened, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsPrivilegeMemberWithValidTermsType", new object[] {
                        custid,
                        TermsType,
                        dateAccountOpened}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndIsPrivilegeMemberWithValidTermsType(System.IAsyncResult asyncResult, out bool privilegeClub, out string privilegeClubCode, out string privilegeClubDesc, out bool hasDiscount, out string err, out bool termsTypeValid) {
            object[] results = this.EndInvoke(asyncResult);
            privilegeClub = ((bool)(results[1]));
            privilegeClubCode = ((string)(results[2]));
            privilegeClubDesc = ((string)(results[3]));
            hasDiscount = ((bool)(results[4]));
            err = ((string)(results[5]));
            termsTypeValid = ((bool)(results[6]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IsPrivilegeMemberWithValidTermsTypeAsync(string custid, string TermsType, System.DateTime dateAccountOpened) {
            this.IsPrivilegeMemberWithValidTermsTypeAsync(custid, TermsType, dateAccountOpened, null);
        }
        
        /// <remarks/>
        public void IsPrivilegeMemberWithValidTermsTypeAsync(string custid, string TermsType, System.DateTime dateAccountOpened, object userState) {
            if ((this.IsPrivilegeMemberWithValidTermsTypeOperationCompleted == null)) {
                this.IsPrivilegeMemberWithValidTermsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPrivilegeMemberWithValidTermsTypeOperationCompleted);
            }
            this.InvokeAsync("IsPrivilegeMemberWithValidTermsType", new object[] {
                        custid,
                        TermsType,
                        dateAccountOpened}, this.IsPrivilegeMemberWithValidTermsTypeOperationCompleted, userState);
        }
        
        private void OnIsPrivilegeMemberWithValidTermsTypeOperationCompleted(object arg) {
            if ((this.IsPrivilegeMemberWithValidTermsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPrivilegeMemberWithValidTermsTypeCompleted(this, new IsPrivilegeMemberWithValidTermsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRFCombinedDetailsForPrint", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRFCombinedDetailsForPrint(string customerID, out string err) {
            object[] results = this.Invoke("GetRFCombinedDetailsForPrint", new object[] {
                        customerID});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRFCombinedDetailsForPrint(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRFCombinedDetailsForPrint", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRFCombinedDetailsForPrint(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRFCombinedDetailsForPrintAsync(string customerID) {
            this.GetRFCombinedDetailsForPrintAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetRFCombinedDetailsForPrintAsync(string customerID, object userState) {
            if ((this.GetRFCombinedDetailsForPrintOperationCompleted == null)) {
                this.GetRFCombinedDetailsForPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRFCombinedDetailsForPrintOperationCompleted);
            }
            this.InvokeAsync("GetRFCombinedDetailsForPrint", new object[] {
                        customerID}, this.GetRFCombinedDetailsForPrintOperationCompleted, userState);
        }
        
        private void OnGetRFCombinedDetailsForPrintOperationCompleted(object arg) {
            if ((this.GetRFCombinedDetailsForPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRFCombinedDetailsForPrintCompleted(this, new GetRFCombinedDetailsForPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateCustomerID", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomerID(string newCustID, string oldCustID, out string err) {
            object[] results = this.Invoke("UpdateCustomerID", new object[] {
                        newCustID,
                        oldCustID});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCustomerID(string newCustID, string oldCustID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCustomerID", new object[] {
                        newCustID,
                        oldCustID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateCustomerID(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerIDAsync(string newCustID, string oldCustID) {
            this.UpdateCustomerIDAsync(newCustID, oldCustID, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerIDAsync(string newCustID, string oldCustID, object userState) {
            if ((this.UpdateCustomerIDOperationCompleted == null)) {
                this.UpdateCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerIDOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerID", new object[] {
                        newCustID,
                        oldCustID}, this.UpdateCustomerIDOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerIDOperationCompleted(object arg) {
            if ((this.UpdateCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerIDCompleted(this, new UpdateCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SetCreditLimit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string SetCreditLimit(string custID, decimal creditLimit) {
            object[] results = this.Invoke("SetCreditLimit", new object[] {
                        custID,
                        creditLimit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetCreditLimit(string custID, decimal creditLimit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetCreditLimit", new object[] {
                        custID,
                        creditLimit}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSetCreditLimit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetCreditLimitAsync(string custID, decimal creditLimit) {
            this.SetCreditLimitAsync(custID, creditLimit, null);
        }
        
        /// <remarks/>
        public void SetCreditLimitAsync(string custID, decimal creditLimit, object userState) {
            if ((this.SetCreditLimitOperationCompleted == null)) {
                this.SetCreditLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCreditLimitOperationCompleted);
            }
            this.InvokeAsync("SetCreditLimit", new object[] {
                        custID,
                        creditLimit}, this.SetCreditLimitOperationCompleted, userState);
        }
        
        private void OnSetCreditLimitOperationCompleted(object arg) {
            if ((this.SetCreditLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCreditLimitCompleted(this, new SetCreditLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerAudit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerAudit(string customerId, out string err) {
            object[] results = this.Invoke("GetCustomerAudit", new object[] {
                        customerId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerAudit(string customerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerAudit", new object[] {
                        customerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCustomerAudit(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAuditAsync(string customerId) {
            this.GetCustomerAuditAsync(customerId, null);
        }
        
        /// <remarks/>
        public void GetCustomerAuditAsync(string customerId, object userState) {
            if ((this.GetCustomerAuditOperationCompleted == null)) {
                this.GetCustomerAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAuditOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAudit", new object[] {
                        customerId}, this.GetCustomerAuditOperationCompleted, userState);
        }
        
        private void OnGetCustomerAuditOperationCompleted(object arg) {
            if ((this.GetCustomerAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAuditCompleted(this, new GetCustomerAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAddressHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAddressHistory(string customerId, out string err) {
            object[] results = this.Invoke("GetAddressHistory", new object[] {
                        customerId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAddressHistory(string customerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAddressHistory", new object[] {
                        customerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAddressHistory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressHistoryAsync(string customerId) {
            this.GetAddressHistoryAsync(customerId, null);
        }
        
        /// <remarks/>
        public void GetAddressHistoryAsync(string customerId, object userState) {
            if ((this.GetAddressHistoryOperationCompleted == null)) {
                this.GetAddressHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressHistoryOperationCompleted);
            }
            this.InvokeAsync("GetAddressHistory", new object[] {
                        customerId}, this.GetAddressHistoryOperationCompleted, userState);
        }
        
        private void OnGetAddressHistoryOperationCompleted(object arg) {
            if ((this.GetAddressHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressHistoryCompleted(this, new GetAddressHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAddressAuditHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAddressAuditHistory(string customerId, out string err) {
            object[] results = this.Invoke("GetAddressAuditHistory", new object[] {
                        customerId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAddressAuditHistory(string customerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAddressAuditHistory", new object[] {
                        customerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAddressAuditHistory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressAuditHistoryAsync(string customerId) {
            this.GetAddressAuditHistoryAsync(customerId, null);
        }
        
        /// <remarks/>
        public void GetAddressAuditHistoryAsync(string customerId, object userState) {
            if ((this.GetAddressAuditHistoryOperationCompleted == null)) {
                this.GetAddressAuditHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressAuditHistoryOperationCompleted);
            }
            this.InvokeAsync("GetAddressAuditHistory", new object[] {
                        customerId}, this.GetAddressAuditHistoryOperationCompleted, userState);
        }
        
        private void OnGetAddressAuditHistoryOperationCompleted(object arg) {
            if ((this.GetAddressAuditHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressAuditHistoryCompleted(this, new GetAddressAuditHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CustomerMailingQuerySave", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CustomerMailingQuerySave(
                    int EmpeenoSave, 
                    System.DateTime datesaved, 
                    string QueryName, 
                    string CustomerCodeSet, 
                    string NoCustomerCodeSet, 
                    string AccountCodeSet, 
                    string NoAccountCodeSet, 
                    string ArrearsRestriction, 
                    double Arrears, 
                    string maxcurrstatus, 
                    string maxeverstatus, 
                    string branchset, 
                    string accttypes, 
                    string itemset, 
                    System.DateTime itemsetstartdate, 
                    System.DateTime itemsetenddate, 
                    string noitemset, 
                    System.DateTime noitemsetstartdate, 
                    System.DateTime noitemsetenddate, 
                    string itemcatset, 
                    System.DateTime itemCatsetstartdate, 
                    System.DateTime itemCatsetenddate, 
                    string noitemCatset, 
                    System.DateTime noitemCatsetstartdate, 
                    System.DateTime noitemCatsetenddate, 
                    int itemsdelivered, 
                    string itemstartswithset, 
                    System.DateTime itemstartswithstartdate, 
                    System.DateTime itemstartswithenddate, 
                    string noitemstartswithset, 
                    System.DateTime noitemstartswithstartdate, 
                    System.DateTime noitemstartswithenddate, 
                    string noletterset, 
                    System.DateTime nolettersetStartdate, 
                    System.DateTime nolettersetEnddate, 
                    string letterset, 
                    System.DateTime lettersetstartdate, 
                    System.DateTime lettersetenddate, 
                    int customerstartage, 
                    int customerEndage, 
                    string totals, 
                    string resulttype, 
                    int excludecancellations, 
                    out string err) {
            object[] results = this.Invoke("CustomerMailingQuerySave", new object[] {
                        EmpeenoSave,
                        datesaved,
                        QueryName,
                        CustomerCodeSet,
                        NoCustomerCodeSet,
                        AccountCodeSet,
                        NoAccountCodeSet,
                        ArrearsRestriction,
                        Arrears,
                        maxcurrstatus,
                        maxeverstatus,
                        branchset,
                        accttypes,
                        itemset,
                        itemsetstartdate,
                        itemsetenddate,
                        noitemset,
                        noitemsetstartdate,
                        noitemsetenddate,
                        itemcatset,
                        itemCatsetstartdate,
                        itemCatsetenddate,
                        noitemCatset,
                        noitemCatsetstartdate,
                        noitemCatsetenddate,
                        itemsdelivered,
                        itemstartswithset,
                        itemstartswithstartdate,
                        itemstartswithenddate,
                        noitemstartswithset,
                        noitemstartswithstartdate,
                        noitemstartswithenddate,
                        noletterset,
                        nolettersetStartdate,
                        nolettersetEnddate,
                        letterset,
                        lettersetstartdate,
                        lettersetenddate,
                        customerstartage,
                        customerEndage,
                        totals,
                        resulttype,
                        excludecancellations});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustomerMailingQuerySave(
                    int EmpeenoSave, 
                    System.DateTime datesaved, 
                    string QueryName, 
                    string CustomerCodeSet, 
                    string NoCustomerCodeSet, 
                    string AccountCodeSet, 
                    string NoAccountCodeSet, 
                    string ArrearsRestriction, 
                    double Arrears, 
                    string maxcurrstatus, 
                    string maxeverstatus, 
                    string branchset, 
                    string accttypes, 
                    string itemset, 
                    System.DateTime itemsetstartdate, 
                    System.DateTime itemsetenddate, 
                    string noitemset, 
                    System.DateTime noitemsetstartdate, 
                    System.DateTime noitemsetenddate, 
                    string itemcatset, 
                    System.DateTime itemCatsetstartdate, 
                    System.DateTime itemCatsetenddate, 
                    string noitemCatset, 
                    System.DateTime noitemCatsetstartdate, 
                    System.DateTime noitemCatsetenddate, 
                    int itemsdelivered, 
                    string itemstartswithset, 
                    System.DateTime itemstartswithstartdate, 
                    System.DateTime itemstartswithenddate, 
                    string noitemstartswithset, 
                    System.DateTime noitemstartswithstartdate, 
                    System.DateTime noitemstartswithenddate, 
                    string noletterset, 
                    System.DateTime nolettersetStartdate, 
                    System.DateTime nolettersetEnddate, 
                    string letterset, 
                    System.DateTime lettersetstartdate, 
                    System.DateTime lettersetenddate, 
                    int customerstartage, 
                    int customerEndage, 
                    string totals, 
                    string resulttype, 
                    int excludecancellations, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CustomerMailingQuerySave", new object[] {
                        EmpeenoSave,
                        datesaved,
                        QueryName,
                        CustomerCodeSet,
                        NoCustomerCodeSet,
                        AccountCodeSet,
                        NoAccountCodeSet,
                        ArrearsRestriction,
                        Arrears,
                        maxcurrstatus,
                        maxeverstatus,
                        branchset,
                        accttypes,
                        itemset,
                        itemsetstartdate,
                        itemsetenddate,
                        noitemset,
                        noitemsetstartdate,
                        noitemsetenddate,
                        itemcatset,
                        itemCatsetstartdate,
                        itemCatsetenddate,
                        noitemCatset,
                        noitemCatsetstartdate,
                        noitemCatsetenddate,
                        itemsdelivered,
                        itemstartswithset,
                        itemstartswithstartdate,
                        itemstartswithenddate,
                        noitemstartswithset,
                        noitemstartswithstartdate,
                        noitemstartswithenddate,
                        noletterset,
                        nolettersetStartdate,
                        nolettersetEnddate,
                        letterset,
                        lettersetstartdate,
                        lettersetenddate,
                        customerstartage,
                        customerEndage,
                        totals,
                        resulttype,
                        excludecancellations}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCustomerMailingQuerySave(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerMailingQuerySaveAsync(
                    int EmpeenoSave, 
                    System.DateTime datesaved, 
                    string QueryName, 
                    string CustomerCodeSet, 
                    string NoCustomerCodeSet, 
                    string AccountCodeSet, 
                    string NoAccountCodeSet, 
                    string ArrearsRestriction, 
                    double Arrears, 
                    string maxcurrstatus, 
                    string maxeverstatus, 
                    string branchset, 
                    string accttypes, 
                    string itemset, 
                    System.DateTime itemsetstartdate, 
                    System.DateTime itemsetenddate, 
                    string noitemset, 
                    System.DateTime noitemsetstartdate, 
                    System.DateTime noitemsetenddate, 
                    string itemcatset, 
                    System.DateTime itemCatsetstartdate, 
                    System.DateTime itemCatsetenddate, 
                    string noitemCatset, 
                    System.DateTime noitemCatsetstartdate, 
                    System.DateTime noitemCatsetenddate, 
                    int itemsdelivered, 
                    string itemstartswithset, 
                    System.DateTime itemstartswithstartdate, 
                    System.DateTime itemstartswithenddate, 
                    string noitemstartswithset, 
                    System.DateTime noitemstartswithstartdate, 
                    System.DateTime noitemstartswithenddate, 
                    string noletterset, 
                    System.DateTime nolettersetStartdate, 
                    System.DateTime nolettersetEnddate, 
                    string letterset, 
                    System.DateTime lettersetstartdate, 
                    System.DateTime lettersetenddate, 
                    int customerstartage, 
                    int customerEndage, 
                    string totals, 
                    string resulttype, 
                    int excludecancellations) {
            this.CustomerMailingQuerySaveAsync(EmpeenoSave, datesaved, QueryName, CustomerCodeSet, NoCustomerCodeSet, AccountCodeSet, NoAccountCodeSet, ArrearsRestriction, Arrears, maxcurrstatus, maxeverstatus, branchset, accttypes, itemset, itemsetstartdate, itemsetenddate, noitemset, noitemsetstartdate, noitemsetenddate, itemcatset, itemCatsetstartdate, itemCatsetenddate, noitemCatset, noitemCatsetstartdate, noitemCatsetenddate, itemsdelivered, itemstartswithset, itemstartswithstartdate, itemstartswithenddate, noitemstartswithset, noitemstartswithstartdate, noitemstartswithenddate, noletterset, nolettersetStartdate, nolettersetEnddate, letterset, lettersetstartdate, lettersetenddate, customerstartage, customerEndage, totals, resulttype, excludecancellations, null);
        }
        
        /// <remarks/>
        public void CustomerMailingQuerySaveAsync(
                    int EmpeenoSave, 
                    System.DateTime datesaved, 
                    string QueryName, 
                    string CustomerCodeSet, 
                    string NoCustomerCodeSet, 
                    string AccountCodeSet, 
                    string NoAccountCodeSet, 
                    string ArrearsRestriction, 
                    double Arrears, 
                    string maxcurrstatus, 
                    string maxeverstatus, 
                    string branchset, 
                    string accttypes, 
                    string itemset, 
                    System.DateTime itemsetstartdate, 
                    System.DateTime itemsetenddate, 
                    string noitemset, 
                    System.DateTime noitemsetstartdate, 
                    System.DateTime noitemsetenddate, 
                    string itemcatset, 
                    System.DateTime itemCatsetstartdate, 
                    System.DateTime itemCatsetenddate, 
                    string noitemCatset, 
                    System.DateTime noitemCatsetstartdate, 
                    System.DateTime noitemCatsetenddate, 
                    int itemsdelivered, 
                    string itemstartswithset, 
                    System.DateTime itemstartswithstartdate, 
                    System.DateTime itemstartswithenddate, 
                    string noitemstartswithset, 
                    System.DateTime noitemstartswithstartdate, 
                    System.DateTime noitemstartswithenddate, 
                    string noletterset, 
                    System.DateTime nolettersetStartdate, 
                    System.DateTime nolettersetEnddate, 
                    string letterset, 
                    System.DateTime lettersetstartdate, 
                    System.DateTime lettersetenddate, 
                    int customerstartage, 
                    int customerEndage, 
                    string totals, 
                    string resulttype, 
                    int excludecancellations, 
                    object userState) {
            if ((this.CustomerMailingQuerySaveOperationCompleted == null)) {
                this.CustomerMailingQuerySaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerMailingQuerySaveOperationCompleted);
            }
            this.InvokeAsync("CustomerMailingQuerySave", new object[] {
                        EmpeenoSave,
                        datesaved,
                        QueryName,
                        CustomerCodeSet,
                        NoCustomerCodeSet,
                        AccountCodeSet,
                        NoAccountCodeSet,
                        ArrearsRestriction,
                        Arrears,
                        maxcurrstatus,
                        maxeverstatus,
                        branchset,
                        accttypes,
                        itemset,
                        itemsetstartdate,
                        itemsetenddate,
                        noitemset,
                        noitemsetstartdate,
                        noitemsetenddate,
                        itemcatset,
                        itemCatsetstartdate,
                        itemCatsetenddate,
                        noitemCatset,
                        noitemCatsetstartdate,
                        noitemCatsetenddate,
                        itemsdelivered,
                        itemstartswithset,
                        itemstartswithstartdate,
                        itemstartswithenddate,
                        noitemstartswithset,
                        noitemstartswithstartdate,
                        noitemstartswithenddate,
                        noletterset,
                        nolettersetStartdate,
                        nolettersetEnddate,
                        letterset,
                        lettersetstartdate,
                        lettersetenddate,
                        customerstartage,
                        customerEndage,
                        totals,
                        resulttype,
                        excludecancellations}, this.CustomerMailingQuerySaveOperationCompleted, userState);
        }
        
        private void OnCustomerMailingQuerySaveOperationCompleted(object arg) {
            if ((this.CustomerMailingQuerySaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerMailingQuerySaveCompleted(this, new CustomerMailingQuerySaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CustomerMailingQuery", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CustomerMailingQuery(
                    string CustomerCodeSet, 
                    string NoCustomerCodeSet, 
                    string AccountCodeSet, 
                    string NoAccountCodeSet, 
                    string ArrearsRestriction, 
                    double Arrears, 
                    string maxcurrstatus, 
                    string maxeverstatus, 
                    string branchset, 
                    string accttypes, 
                    string itemset, 
                    System.DateTime itemsetstartdate, 
                    System.DateTime itemsetenddate, 
                    string noitemset, 
                    System.DateTime noitemsetstartdate, 
                    System.DateTime noitemsetenddate, 
                    string itemcatset, 
                    System.DateTime itemCatsetstartdate, 
                    System.DateTime itemCatsetenddate, 
                    string noitemCatset, 
                    System.DateTime noitemCatsetstartdate, 
                    System.DateTime noitemCatsetenddate, 
                    int itemsdelivered, 
                    string itemstartswithset, 
                    System.DateTime itemstartswithstartdate, 
                    System.DateTime itemstartswithenddate, 
                    string noitemstartswithset, 
                    System.DateTime noitemstartswithstartdate, 
                    System.DateTime noitemstartswithenddate, 
                    string noletterset, 
                    System.DateTime nolettersetStartdate, 
                    System.DateTime nolettersetEnddate, 
                    string letterset, 
                    System.DateTime lettersetstartdate, 
                    System.DateTime lettersetenddate, 
                    int customerstartage, 
                    int customerEndage, 
                    string totals, 
                    string resulttype, 
                    int excludecancellations, 
                    int liveDatabase, 
                    out string err) {
            object[] results = this.Invoke("CustomerMailingQuery", new object[] {
                        CustomerCodeSet,
                        NoCustomerCodeSet,
                        AccountCodeSet,
                        NoAccountCodeSet,
                        ArrearsRestriction,
                        Arrears,
                        maxcurrstatus,
                        maxeverstatus,
                        branchset,
                        accttypes,
                        itemset,
                        itemsetstartdate,
                        itemsetenddate,
                        noitemset,
                        noitemsetstartdate,
                        noitemsetenddate,
                        itemcatset,
                        itemCatsetstartdate,
                        itemCatsetenddate,
                        noitemCatset,
                        noitemCatsetstartdate,
                        noitemCatsetenddate,
                        itemsdelivered,
                        itemstartswithset,
                        itemstartswithstartdate,
                        itemstartswithenddate,
                        noitemstartswithset,
                        noitemstartswithstartdate,
                        noitemstartswithenddate,
                        noletterset,
                        nolettersetStartdate,
                        nolettersetEnddate,
                        letterset,
                        lettersetstartdate,
                        lettersetenddate,
                        customerstartage,
                        customerEndage,
                        totals,
                        resulttype,
                        excludecancellations,
                        liveDatabase});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustomerMailingQuery(
                    string CustomerCodeSet, 
                    string NoCustomerCodeSet, 
                    string AccountCodeSet, 
                    string NoAccountCodeSet, 
                    string ArrearsRestriction, 
                    double Arrears, 
                    string maxcurrstatus, 
                    string maxeverstatus, 
                    string branchset, 
                    string accttypes, 
                    string itemset, 
                    System.DateTime itemsetstartdate, 
                    System.DateTime itemsetenddate, 
                    string noitemset, 
                    System.DateTime noitemsetstartdate, 
                    System.DateTime noitemsetenddate, 
                    string itemcatset, 
                    System.DateTime itemCatsetstartdate, 
                    System.DateTime itemCatsetenddate, 
                    string noitemCatset, 
                    System.DateTime noitemCatsetstartdate, 
                    System.DateTime noitemCatsetenddate, 
                    int itemsdelivered, 
                    string itemstartswithset, 
                    System.DateTime itemstartswithstartdate, 
                    System.DateTime itemstartswithenddate, 
                    string noitemstartswithset, 
                    System.DateTime noitemstartswithstartdate, 
                    System.DateTime noitemstartswithenddate, 
                    string noletterset, 
                    System.DateTime nolettersetStartdate, 
                    System.DateTime nolettersetEnddate, 
                    string letterset, 
                    System.DateTime lettersetstartdate, 
                    System.DateTime lettersetenddate, 
                    int customerstartage, 
                    int customerEndage, 
                    string totals, 
                    string resulttype, 
                    int excludecancellations, 
                    int liveDatabase, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CustomerMailingQuery", new object[] {
                        CustomerCodeSet,
                        NoCustomerCodeSet,
                        AccountCodeSet,
                        NoAccountCodeSet,
                        ArrearsRestriction,
                        Arrears,
                        maxcurrstatus,
                        maxeverstatus,
                        branchset,
                        accttypes,
                        itemset,
                        itemsetstartdate,
                        itemsetenddate,
                        noitemset,
                        noitemsetstartdate,
                        noitemsetenddate,
                        itemcatset,
                        itemCatsetstartdate,
                        itemCatsetenddate,
                        noitemCatset,
                        noitemCatsetstartdate,
                        noitemCatsetenddate,
                        itemsdelivered,
                        itemstartswithset,
                        itemstartswithstartdate,
                        itemstartswithenddate,
                        noitemstartswithset,
                        noitemstartswithstartdate,
                        noitemstartswithenddate,
                        noletterset,
                        nolettersetStartdate,
                        nolettersetEnddate,
                        letterset,
                        lettersetstartdate,
                        lettersetenddate,
                        customerstartage,
                        customerEndage,
                        totals,
                        resulttype,
                        excludecancellations,
                        liveDatabase}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCustomerMailingQuery(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerMailingQueryAsync(
                    string CustomerCodeSet, 
                    string NoCustomerCodeSet, 
                    string AccountCodeSet, 
                    string NoAccountCodeSet, 
                    string ArrearsRestriction, 
                    double Arrears, 
                    string maxcurrstatus, 
                    string maxeverstatus, 
                    string branchset, 
                    string accttypes, 
                    string itemset, 
                    System.DateTime itemsetstartdate, 
                    System.DateTime itemsetenddate, 
                    string noitemset, 
                    System.DateTime noitemsetstartdate, 
                    System.DateTime noitemsetenddate, 
                    string itemcatset, 
                    System.DateTime itemCatsetstartdate, 
                    System.DateTime itemCatsetenddate, 
                    string noitemCatset, 
                    System.DateTime noitemCatsetstartdate, 
                    System.DateTime noitemCatsetenddate, 
                    int itemsdelivered, 
                    string itemstartswithset, 
                    System.DateTime itemstartswithstartdate, 
                    System.DateTime itemstartswithenddate, 
                    string noitemstartswithset, 
                    System.DateTime noitemstartswithstartdate, 
                    System.DateTime noitemstartswithenddate, 
                    string noletterset, 
                    System.DateTime nolettersetStartdate, 
                    System.DateTime nolettersetEnddate, 
                    string letterset, 
                    System.DateTime lettersetstartdate, 
                    System.DateTime lettersetenddate, 
                    int customerstartage, 
                    int customerEndage, 
                    string totals, 
                    string resulttype, 
                    int excludecancellations, 
                    int liveDatabase) {
            this.CustomerMailingQueryAsync(CustomerCodeSet, NoCustomerCodeSet, AccountCodeSet, NoAccountCodeSet, ArrearsRestriction, Arrears, maxcurrstatus, maxeverstatus, branchset, accttypes, itemset, itemsetstartdate, itemsetenddate, noitemset, noitemsetstartdate, noitemsetenddate, itemcatset, itemCatsetstartdate, itemCatsetenddate, noitemCatset, noitemCatsetstartdate, noitemCatsetenddate, itemsdelivered, itemstartswithset, itemstartswithstartdate, itemstartswithenddate, noitemstartswithset, noitemstartswithstartdate, noitemstartswithenddate, noletterset, nolettersetStartdate, nolettersetEnddate, letterset, lettersetstartdate, lettersetenddate, customerstartage, customerEndage, totals, resulttype, excludecancellations, liveDatabase, null);
        }
        
        /// <remarks/>
        public void CustomerMailingQueryAsync(
                    string CustomerCodeSet, 
                    string NoCustomerCodeSet, 
                    string AccountCodeSet, 
                    string NoAccountCodeSet, 
                    string ArrearsRestriction, 
                    double Arrears, 
                    string maxcurrstatus, 
                    string maxeverstatus, 
                    string branchset, 
                    string accttypes, 
                    string itemset, 
                    System.DateTime itemsetstartdate, 
                    System.DateTime itemsetenddate, 
                    string noitemset, 
                    System.DateTime noitemsetstartdate, 
                    System.DateTime noitemsetenddate, 
                    string itemcatset, 
                    System.DateTime itemCatsetstartdate, 
                    System.DateTime itemCatsetenddate, 
                    string noitemCatset, 
                    System.DateTime noitemCatsetstartdate, 
                    System.DateTime noitemCatsetenddate, 
                    int itemsdelivered, 
                    string itemstartswithset, 
                    System.DateTime itemstartswithstartdate, 
                    System.DateTime itemstartswithenddate, 
                    string noitemstartswithset, 
                    System.DateTime noitemstartswithstartdate, 
                    System.DateTime noitemstartswithenddate, 
                    string noletterset, 
                    System.DateTime nolettersetStartdate, 
                    System.DateTime nolettersetEnddate, 
                    string letterset, 
                    System.DateTime lettersetstartdate, 
                    System.DateTime lettersetenddate, 
                    int customerstartage, 
                    int customerEndage, 
                    string totals, 
                    string resulttype, 
                    int excludecancellations, 
                    int liveDatabase, 
                    object userState) {
            if ((this.CustomerMailingQueryOperationCompleted == null)) {
                this.CustomerMailingQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerMailingQueryOperationCompleted);
            }
            this.InvokeAsync("CustomerMailingQuery", new object[] {
                        CustomerCodeSet,
                        NoCustomerCodeSet,
                        AccountCodeSet,
                        NoAccountCodeSet,
                        ArrearsRestriction,
                        Arrears,
                        maxcurrstatus,
                        maxeverstatus,
                        branchset,
                        accttypes,
                        itemset,
                        itemsetstartdate,
                        itemsetenddate,
                        noitemset,
                        noitemsetstartdate,
                        noitemsetenddate,
                        itemcatset,
                        itemCatsetstartdate,
                        itemCatsetenddate,
                        noitemCatset,
                        noitemCatsetstartdate,
                        noitemCatsetenddate,
                        itemsdelivered,
                        itemstartswithset,
                        itemstartswithstartdate,
                        itemstartswithenddate,
                        noitemstartswithset,
                        noitemstartswithstartdate,
                        noitemstartswithenddate,
                        noletterset,
                        nolettersetStartdate,
                        nolettersetEnddate,
                        letterset,
                        lettersetstartdate,
                        lettersetenddate,
                        customerstartage,
                        customerEndage,
                        totals,
                        resulttype,
                        excludecancellations,
                        liveDatabase}, this.CustomerMailingQueryOperationCompleted, userState);
        }
        
        private void OnCustomerMailingQueryOperationCompleted(object arg) {
            if ((this.CustomerMailingQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerMailingQueryCompleted(this, new CustomerMailingQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CustomerMailingQueryGet", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CustomerMailingQueryGet(
                    int EmpeenoSave, 
                    string QueryName, 
                    out System.DateTime datesaved, 
                    out string CustomerCodeSet, 
                    out string NoCustomerCodeSet, 
                    out string AccountCodeSet, 
                    out string NoAccountCodeSet, 
                    out string ArrearsRestriction, 
                    out double Arrears, 
                    out string maxcurrstatus, 
                    out string maxeverstatus, 
                    out string branchset, 
                    out string accttypes, 
                    out string itemset, 
                    out System.DateTime itemsetstartdate, 
                    out System.DateTime itemsetenddate, 
                    out string noitemset, 
                    out System.DateTime noitemsetstartdate, 
                    out System.DateTime noitemsetenddate, 
                    out string itemcatset, 
                    out System.DateTime itemCatsetstartdate, 
                    out System.DateTime itemCatsetenddate, 
                    out string noitemCatset, 
                    out System.DateTime noitemCatsetstartdate, 
                    out System.DateTime noitemCatsetenddate, 
                    out int itemsdelivered, 
                    out string itemstartswithset, 
                    out System.DateTime itemstartswithstartdate, 
                    out System.DateTime itemstartswithenddate, 
                    out string noitemstartswithset, 
                    out System.DateTime noitemstartswithstartdate, 
                    out System.DateTime noitemstartswithenddate, 
                    out string noletterset, 
                    out System.DateTime nolettersetStartdate, 
                    out System.DateTime nolettersetEnddate, 
                    out string letterset, 
                    out System.DateTime lettersetstartdate, 
                    out System.DateTime lettersetenddate, 
                    out int customerstartage, 
                    out int customerEndage, 
                    out string totals, 
                    out string resulttype, 
                    out int excludecancellations) {
            object[] results = this.Invoke("CustomerMailingQueryGet", new object[] {
                        EmpeenoSave,
                        QueryName});
            datesaved = ((System.DateTime)(results[1]));
            CustomerCodeSet = ((string)(results[2]));
            NoCustomerCodeSet = ((string)(results[3]));
            AccountCodeSet = ((string)(results[4]));
            NoAccountCodeSet = ((string)(results[5]));
            ArrearsRestriction = ((string)(results[6]));
            Arrears = ((double)(results[7]));
            maxcurrstatus = ((string)(results[8]));
            maxeverstatus = ((string)(results[9]));
            branchset = ((string)(results[10]));
            accttypes = ((string)(results[11]));
            itemset = ((string)(results[12]));
            itemsetstartdate = ((System.DateTime)(results[13]));
            itemsetenddate = ((System.DateTime)(results[14]));
            noitemset = ((string)(results[15]));
            noitemsetstartdate = ((System.DateTime)(results[16]));
            noitemsetenddate = ((System.DateTime)(results[17]));
            itemcatset = ((string)(results[18]));
            itemCatsetstartdate = ((System.DateTime)(results[19]));
            itemCatsetenddate = ((System.DateTime)(results[20]));
            noitemCatset = ((string)(results[21]));
            noitemCatsetstartdate = ((System.DateTime)(results[22]));
            noitemCatsetenddate = ((System.DateTime)(results[23]));
            itemsdelivered = ((int)(results[24]));
            itemstartswithset = ((string)(results[25]));
            itemstartswithstartdate = ((System.DateTime)(results[26]));
            itemstartswithenddate = ((System.DateTime)(results[27]));
            noitemstartswithset = ((string)(results[28]));
            noitemstartswithstartdate = ((System.DateTime)(results[29]));
            noitemstartswithenddate = ((System.DateTime)(results[30]));
            noletterset = ((string)(results[31]));
            nolettersetStartdate = ((System.DateTime)(results[32]));
            nolettersetEnddate = ((System.DateTime)(results[33]));
            letterset = ((string)(results[34]));
            lettersetstartdate = ((System.DateTime)(results[35]));
            lettersetenddate = ((System.DateTime)(results[36]));
            customerstartage = ((int)(results[37]));
            customerEndage = ((int)(results[38]));
            totals = ((string)(results[39]));
            resulttype = ((string)(results[40]));
            excludecancellations = ((int)(results[41]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustomerMailingQueryGet(int EmpeenoSave, string QueryName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CustomerMailingQueryGet", new object[] {
                        EmpeenoSave,
                        QueryName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCustomerMailingQueryGet(
                    System.IAsyncResult asyncResult, 
                    out System.DateTime datesaved, 
                    out string CustomerCodeSet, 
                    out string NoCustomerCodeSet, 
                    out string AccountCodeSet, 
                    out string NoAccountCodeSet, 
                    out string ArrearsRestriction, 
                    out double Arrears, 
                    out string maxcurrstatus, 
                    out string maxeverstatus, 
                    out string branchset, 
                    out string accttypes, 
                    out string itemset, 
                    out System.DateTime itemsetstartdate, 
                    out System.DateTime itemsetenddate, 
                    out string noitemset, 
                    out System.DateTime noitemsetstartdate, 
                    out System.DateTime noitemsetenddate, 
                    out string itemcatset, 
                    out System.DateTime itemCatsetstartdate, 
                    out System.DateTime itemCatsetenddate, 
                    out string noitemCatset, 
                    out System.DateTime noitemCatsetstartdate, 
                    out System.DateTime noitemCatsetenddate, 
                    out int itemsdelivered, 
                    out string itemstartswithset, 
                    out System.DateTime itemstartswithstartdate, 
                    out System.DateTime itemstartswithenddate, 
                    out string noitemstartswithset, 
                    out System.DateTime noitemstartswithstartdate, 
                    out System.DateTime noitemstartswithenddate, 
                    out string noletterset, 
                    out System.DateTime nolettersetStartdate, 
                    out System.DateTime nolettersetEnddate, 
                    out string letterset, 
                    out System.DateTime lettersetstartdate, 
                    out System.DateTime lettersetenddate, 
                    out int customerstartage, 
                    out int customerEndage, 
                    out string totals, 
                    out string resulttype, 
                    out int excludecancellations) {
            object[] results = this.EndInvoke(asyncResult);
            datesaved = ((System.DateTime)(results[1]));
            CustomerCodeSet = ((string)(results[2]));
            NoCustomerCodeSet = ((string)(results[3]));
            AccountCodeSet = ((string)(results[4]));
            NoAccountCodeSet = ((string)(results[5]));
            ArrearsRestriction = ((string)(results[6]));
            Arrears = ((double)(results[7]));
            maxcurrstatus = ((string)(results[8]));
            maxeverstatus = ((string)(results[9]));
            branchset = ((string)(results[10]));
            accttypes = ((string)(results[11]));
            itemset = ((string)(results[12]));
            itemsetstartdate = ((System.DateTime)(results[13]));
            itemsetenddate = ((System.DateTime)(results[14]));
            noitemset = ((string)(results[15]));
            noitemsetstartdate = ((System.DateTime)(results[16]));
            noitemsetenddate = ((System.DateTime)(results[17]));
            itemcatset = ((string)(results[18]));
            itemCatsetstartdate = ((System.DateTime)(results[19]));
            itemCatsetenddate = ((System.DateTime)(results[20]));
            noitemCatset = ((string)(results[21]));
            noitemCatsetstartdate = ((System.DateTime)(results[22]));
            noitemCatsetenddate = ((System.DateTime)(results[23]));
            itemsdelivered = ((int)(results[24]));
            itemstartswithset = ((string)(results[25]));
            itemstartswithstartdate = ((System.DateTime)(results[26]));
            itemstartswithenddate = ((System.DateTime)(results[27]));
            noitemstartswithset = ((string)(results[28]));
            noitemstartswithstartdate = ((System.DateTime)(results[29]));
            noitemstartswithenddate = ((System.DateTime)(results[30]));
            noletterset = ((string)(results[31]));
            nolettersetStartdate = ((System.DateTime)(results[32]));
            nolettersetEnddate = ((System.DateTime)(results[33]));
            letterset = ((string)(results[34]));
            lettersetstartdate = ((System.DateTime)(results[35]));
            lettersetenddate = ((System.DateTime)(results[36]));
            customerstartage = ((int)(results[37]));
            customerEndage = ((int)(results[38]));
            totals = ((string)(results[39]));
            resulttype = ((string)(results[40]));
            excludecancellations = ((int)(results[41]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerMailingQueryGetAsync(int EmpeenoSave, string QueryName) {
            this.CustomerMailingQueryGetAsync(EmpeenoSave, QueryName, null);
        }
        
        /// <remarks/>
        public void CustomerMailingQueryGetAsync(int EmpeenoSave, string QueryName, object userState) {
            if ((this.CustomerMailingQueryGetOperationCompleted == null)) {
                this.CustomerMailingQueryGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerMailingQueryGetOperationCompleted);
            }
            this.InvokeAsync("CustomerMailingQueryGet", new object[] {
                        EmpeenoSave,
                        QueryName}, this.CustomerMailingQueryGetOperationCompleted, userState);
        }
        
        private void OnCustomerMailingQueryGetOperationCompleted(object arg) {
            if ((this.CustomerMailingQueryGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerMailingQueryGetCompleted(this, new CustomerMailingQueryGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CustomerMailingQueryLoadbyEmpeeno", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CustomerMailingQueryLoadbyEmpeeno(int EmpeenoSave) {
            object[] results = this.Invoke("CustomerMailingQueryLoadbyEmpeeno", new object[] {
                        EmpeenoSave});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustomerMailingQueryLoadbyEmpeeno(int EmpeenoSave, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CustomerMailingQueryLoadbyEmpeeno", new object[] {
                        EmpeenoSave}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCustomerMailingQueryLoadbyEmpeeno(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerMailingQueryLoadbyEmpeenoAsync(int EmpeenoSave) {
            this.CustomerMailingQueryLoadbyEmpeenoAsync(EmpeenoSave, null);
        }
        
        /// <remarks/>
        public void CustomerMailingQueryLoadbyEmpeenoAsync(int EmpeenoSave, object userState) {
            if ((this.CustomerMailingQueryLoadbyEmpeenoOperationCompleted == null)) {
                this.CustomerMailingQueryLoadbyEmpeenoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerMailingQueryLoadbyEmpeenoOperationCompleted);
            }
            this.InvokeAsync("CustomerMailingQueryLoadbyEmpeeno", new object[] {
                        EmpeenoSave}, this.CustomerMailingQueryLoadbyEmpeenoOperationCompleted, userState);
        }
        
        private void OnCustomerMailingQueryLoadbyEmpeenoOperationCompleted(object arg) {
            if ((this.CustomerMailingQueryLoadbyEmpeenoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerMailingQueryLoadbyEmpeenoCompleted(this, new CustomerMailingQueryLoadbyEmpeenoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IssuePrizeVouchers", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IssuePrizeVouchers(string acctNo, decimal cashPrice, int buffNo, out System.DateTime dateIssued, out string err) {
            object[] results = this.Invoke("IssuePrizeVouchers", new object[] {
                        acctNo,
                        cashPrice,
                        buffNo});
            dateIssued = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIssuePrizeVouchers(string acctNo, decimal cashPrice, int buffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IssuePrizeVouchers", new object[] {
                        acctNo,
                        cashPrice,
                        buffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndIssuePrizeVouchers(System.IAsyncResult asyncResult, out System.DateTime dateIssued, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            dateIssued = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IssuePrizeVouchersAsync(string acctNo, decimal cashPrice, int buffNo) {
            this.IssuePrizeVouchersAsync(acctNo, cashPrice, buffNo, null);
        }
        
        /// <remarks/>
        public void IssuePrizeVouchersAsync(string acctNo, decimal cashPrice, int buffNo, object userState) {
            if ((this.IssuePrizeVouchersOperationCompleted == null)) {
                this.IssuePrizeVouchersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIssuePrizeVouchersOperationCompleted);
            }
            this.InvokeAsync("IssuePrizeVouchers", new object[] {
                        acctNo,
                        cashPrice,
                        buffNo}, this.IssuePrizeVouchersOperationCompleted, userState);
        }
        
        private void OnIssuePrizeVouchersOperationCompleted(object arg) {
            if ((this.IssuePrizeVouchersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IssuePrizeVouchersCompleted(this, new IssuePrizeVouchersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPrizeVoucherDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPrizeVoucherDetails(string acctNo, string custID, string branchFilter, System.DateTime dateFrom, System.DateTime dateTo, int buffNo, out string err) {
            object[] results = this.Invoke("GetPrizeVoucherDetails", new object[] {
                        acctNo,
                        custID,
                        branchFilter,
                        dateFrom,
                        dateTo,
                        buffNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPrizeVoucherDetails(string acctNo, string custID, string branchFilter, System.DateTime dateFrom, System.DateTime dateTo, int buffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPrizeVoucherDetails", new object[] {
                        acctNo,
                        custID,
                        branchFilter,
                        dateFrom,
                        dateTo,
                        buffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPrizeVoucherDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrizeVoucherDetailsAsync(string acctNo, string custID, string branchFilter, System.DateTime dateFrom, System.DateTime dateTo, int buffNo) {
            this.GetPrizeVoucherDetailsAsync(acctNo, custID, branchFilter, dateFrom, dateTo, buffNo, null);
        }
        
        /// <remarks/>
        public void GetPrizeVoucherDetailsAsync(string acctNo, string custID, string branchFilter, System.DateTime dateFrom, System.DateTime dateTo, int buffNo, object userState) {
            if ((this.GetPrizeVoucherDetailsOperationCompleted == null)) {
                this.GetPrizeVoucherDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrizeVoucherDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPrizeVoucherDetails", new object[] {
                        acctNo,
                        custID,
                        branchFilter,
                        dateFrom,
                        dateTo,
                        buffNo}, this.GetPrizeVoucherDetailsOperationCompleted, userState);
        }
        
        private void OnGetPrizeVoucherDetailsOperationCompleted(object arg) {
            if ((this.GetPrizeVoucherDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrizeVoucherDetailsCompleted(this, new GetPrizeVoucherDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeletePrizeVouchers", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeletePrizeVouchers(System.DateTime enddate, string acctNo, bool isCancellation, out string err) {
            object[] results = this.Invoke("DeletePrizeVouchers", new object[] {
                        enddate,
                        acctNo,
                        isCancellation});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeletePrizeVouchers(System.DateTime enddate, string acctNo, bool isCancellation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeletePrizeVouchers", new object[] {
                        enddate,
                        acctNo,
                        isCancellation}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeletePrizeVouchers(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePrizeVouchersAsync(System.DateTime enddate, string acctNo, bool isCancellation) {
            this.DeletePrizeVouchersAsync(enddate, acctNo, isCancellation, null);
        }
        
        /// <remarks/>
        public void DeletePrizeVouchersAsync(System.DateTime enddate, string acctNo, bool isCancellation, object userState) {
            if ((this.DeletePrizeVouchersOperationCompleted == null)) {
                this.DeletePrizeVouchersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePrizeVouchersOperationCompleted);
            }
            this.InvokeAsync("DeletePrizeVouchers", new object[] {
                        enddate,
                        acctNo,
                        isCancellation}, this.DeletePrizeVouchersOperationCompleted, userState);
        }
        
        private void OnDeletePrizeVouchersOperationCompleted(object arg) {
            if ((this.DeletePrizeVouchersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePrizeVouchersCompleted(this, new DeletePrizeVouchersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCustomerPhoto", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveCustomerPhoto(string custID, string fileName, int takenBy, out string err) {
            object[] results = this.Invoke("SaveCustomerPhoto", new object[] {
                        custID,
                        fileName,
                        takenBy});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCustomerPhoto(string custID, string fileName, int takenBy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCustomerPhoto", new object[] {
                        custID,
                        fileName,
                        takenBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSaveCustomerPhoto(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCustomerPhotoAsync(string custID, string fileName, int takenBy) {
            this.SaveCustomerPhotoAsync(custID, fileName, takenBy, null);
        }
        
        /// <remarks/>
        public void SaveCustomerPhotoAsync(string custID, string fileName, int takenBy, object userState) {
            if ((this.SaveCustomerPhotoOperationCompleted == null)) {
                this.SaveCustomerPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCustomerPhotoOperationCompleted);
            }
            this.InvokeAsync("SaveCustomerPhoto", new object[] {
                        custID,
                        fileName,
                        takenBy}, this.SaveCustomerPhotoOperationCompleted, userState);
        }
        
        private void OnSaveCustomerPhotoOperationCompleted(object arg) {
            if ((this.SaveCustomerPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCustomerPhotoCompleted(this, new SaveCustomerPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCustomerSignature", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveCustomerSignature(string custID, string fileName, out string err) {
            object[] results = this.Invoke("SaveCustomerSignature", new object[] {
                        custID,
                        fileName});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCustomerSignature(string custID, string fileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCustomerSignature", new object[] {
                        custID,
                        fileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSaveCustomerSignature(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCustomerSignatureAsync(string custID, string fileName) {
            this.SaveCustomerSignatureAsync(custID, fileName, null);
        }
        
        /// <remarks/>
        public void SaveCustomerSignatureAsync(string custID, string fileName, object userState) {
            if ((this.SaveCustomerSignatureOperationCompleted == null)) {
                this.SaveCustomerSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCustomerSignatureOperationCompleted);
            }
            this.InvokeAsync("SaveCustomerSignature", new object[] {
                        custID,
                        fileName}, this.SaveCustomerSignatureOperationCompleted, userState);
        }
        
        private void OnSaveCustomerSignatureOperationCompleted(object arg) {
            if ((this.SaveCustomerSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCustomerSignatureCompleted(this, new SaveCustomerSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerPhoto", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerPhoto(string custID, out string err) {
            object[] results = this.Invoke("GetCustomerPhoto", new object[] {
                        custID});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerPhoto(string custID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerPhoto", new object[] {
                        custID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetCustomerPhoto(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerPhotoAsync(string custID) {
            this.GetCustomerPhotoAsync(custID, null);
        }
        
        /// <remarks/>
        public void GetCustomerPhotoAsync(string custID, object userState) {
            if ((this.GetCustomerPhotoOperationCompleted == null)) {
                this.GetCustomerPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerPhotoOperationCompleted);
            }
            this.InvokeAsync("GetCustomerPhoto", new object[] {
                        custID}, this.GetCustomerPhotoOperationCompleted, userState);
        }
        
        private void OnGetCustomerPhotoOperationCompleted(object arg) {
            if ((this.GetCustomerPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerPhotoCompleted(this, new GetCustomerPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAllCustomerPhotos", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCustomerPhotos(string custID, out string err) {
            object[] results = this.Invoke("GetAllCustomerPhotos", new object[] {
                        custID});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllCustomerPhotos(string custID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllCustomerPhotos", new object[] {
                        custID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllCustomerPhotos(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustomerPhotosAsync(string custID) {
            this.GetAllCustomerPhotosAsync(custID, null);
        }
        
        /// <remarks/>
        public void GetAllCustomerPhotosAsync(string custID, object userState) {
            if ((this.GetAllCustomerPhotosOperationCompleted == null)) {
                this.GetAllCustomerPhotosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustomerPhotosOperationCompleted);
            }
            this.InvokeAsync("GetAllCustomerPhotos", new object[] {
                        custID}, this.GetAllCustomerPhotosOperationCompleted, userState);
        }
        
        private void OnGetAllCustomerPhotosOperationCompleted(object arg) {
            if ((this.GetAllCustomerPhotosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustomerPhotosCompleted(this, new GetAllCustomerPhotosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerSignature", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerSignature(string custID, out string err) {
            object[] results = this.Invoke("GetCustomerSignature", new object[] {
                        custID});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerSignature(string custID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerSignature", new object[] {
                        custID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetCustomerSignature(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerSignatureAsync(string custID) {
            this.GetCustomerSignatureAsync(custID, null);
        }
        
        /// <remarks/>
        public void GetCustomerSignatureAsync(string custID, object userState) {
            if ((this.GetCustomerSignatureOperationCompleted == null)) {
                this.GetCustomerSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerSignatureOperationCompleted);
            }
            this.InvokeAsync("GetCustomerSignature", new object[] {
                        custID}, this.GetCustomerSignatureOperationCompleted, userState);
        }
        
        private void OnGetCustomerSignatureOperationCompleted(object arg) {
            if ((this.GetCustomerSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerSignatureCompleted(this, new GetCustomerSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWarrantySecondEffortSolicitationItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWarrantySecondEffortSolicitationItems(string customerId, int numberOfPrompts, int warrantyAfterDeliveryDays, out string err) {
            object[] results = this.Invoke("GetWarrantySecondEffortSolicitationItems", new object[] {
                        customerId,
                        numberOfPrompts,
                        warrantyAfterDeliveryDays});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarrantySecondEffortSolicitationItems(string customerId, int numberOfPrompts, int warrantyAfterDeliveryDays, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarrantySecondEffortSolicitationItems", new object[] {
                        customerId,
                        numberOfPrompts,
                        warrantyAfterDeliveryDays}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWarrantySecondEffortSolicitationItems(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantySecondEffortSolicitationItemsAsync(string customerId, int numberOfPrompts, int warrantyAfterDeliveryDays) {
            this.GetWarrantySecondEffortSolicitationItemsAsync(customerId, numberOfPrompts, warrantyAfterDeliveryDays, null);
        }
        
        /// <remarks/>
        public void GetWarrantySecondEffortSolicitationItemsAsync(string customerId, int numberOfPrompts, int warrantyAfterDeliveryDays, object userState) {
            if ((this.GetWarrantySecondEffortSolicitationItemsOperationCompleted == null)) {
                this.GetWarrantySecondEffortSolicitationItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantySecondEffortSolicitationItemsOperationCompleted);
            }
            this.InvokeAsync("GetWarrantySecondEffortSolicitationItems", new object[] {
                        customerId,
                        numberOfPrompts,
                        warrantyAfterDeliveryDays}, this.GetWarrantySecondEffortSolicitationItemsOperationCompleted, userState);
        }
        
        private void OnGetWarrantySecondEffortSolicitationItemsOperationCompleted(object arg) {
            if ((this.GetWarrantySecondEffortSolicitationItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantySecondEffortSolicitationItemsCompleted(this, new GetWarrantySecondEffortSolicitationItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveWarrantySESConfirmation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveWarrantySESConfirmation(System.Data.DataSet ds, int empNo, out string err) {
            object[] results = this.Invoke("SaveWarrantySESConfirmation", new object[] {
                        ds,
                        empNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveWarrantySESConfirmation(System.Data.DataSet ds, int empNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveWarrantySESConfirmation", new object[] {
                        ds,
                        empNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveWarrantySESConfirmation(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWarrantySESConfirmationAsync(System.Data.DataSet ds, int empNo) {
            this.SaveWarrantySESConfirmationAsync(ds, empNo, null);
        }
        
        /// <remarks/>
        public void SaveWarrantySESConfirmationAsync(System.Data.DataSet ds, int empNo, object userState) {
            if ((this.SaveWarrantySESConfirmationOperationCompleted == null)) {
                this.SaveWarrantySESConfirmationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWarrantySESConfirmationOperationCompleted);
            }
            this.InvokeAsync("SaveWarrantySESConfirmation", new object[] {
                        ds,
                        empNo}, this.SaveWarrantySESConfirmationOperationCompleted, userState);
        }
        
        private void OnSaveWarrantySESConfirmationOperationCompleted(object arg) {
            if ((this.SaveWarrantySESConfirmationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWarrantySESConfirmationCompleted(this, new SaveWarrantySESConfirmationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GenerateSRCashAndGoCustid", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateSRCashAndGoCustid(int branchNo, out string err) {
            object[] results = this.Invoke("GenerateSRCashAndGoCustid", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGenerateSRCashAndGoCustid(int branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GenerateSRCashAndGoCustid", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGenerateSRCashAndGoCustid(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateSRCashAndGoCustidAsync(int branchNo) {
            this.GenerateSRCashAndGoCustidAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GenerateSRCashAndGoCustidAsync(int branchNo, object userState) {
            if ((this.GenerateSRCashAndGoCustidOperationCompleted == null)) {
                this.GenerateSRCashAndGoCustidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateSRCashAndGoCustidOperationCompleted);
            }
            this.InvokeAsync("GenerateSRCashAndGoCustid", new object[] {
                        branchNo}, this.GenerateSRCashAndGoCustidOperationCompleted, userState);
        }
        
        private void OnGenerateSRCashAndGoCustidOperationCompleted(object arg) {
            if ((this.GenerateSRCashAndGoCustidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateSRCashAndGoCustidCompleted(this, new GenerateSRCashAndGoCustidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetDatabycustid", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Loyalty LoyaltyGetDatabycustid(string custid) {
            object[] results = this.Invoke("LoyaltyGetDatabycustid", new object[] {
                        custid});
            return ((Loyalty)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetDatabycustid(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetDatabycustid", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public Loyalty EndLoyaltyGetDatabycustid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Loyalty)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyGetDatabycustidAsync(string custid) {
            this.LoyaltyGetDatabycustidAsync(custid, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetDatabycustidAsync(string custid, object userState) {
            if ((this.LoyaltyGetDatabycustidOperationCompleted == null)) {
                this.LoyaltyGetDatabycustidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetDatabycustidOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetDatabycustid", new object[] {
                        custid}, this.LoyaltyGetDatabycustidOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetDatabycustidOperationCompleted(object arg) {
            if ((this.LoyaltyGetDatabycustidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetDatabycustidCompleted(this, new LoyaltyGetDatabycustidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetDatabyacctno", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Loyalty LoyaltyGetDatabyacctno(string acctno) {
            object[] results = this.Invoke("LoyaltyGetDatabyacctno", new object[] {
                        acctno});
            return ((Loyalty)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetDatabyacctno(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetDatabyacctno", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public Loyalty EndLoyaltyGetDatabyacctno(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Loyalty)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyGetDatabyacctnoAsync(string acctno) {
            this.LoyaltyGetDatabyacctnoAsync(acctno, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetDatabyacctnoAsync(string acctno, object userState) {
            if ((this.LoyaltyGetDatabyacctnoOperationCompleted == null)) {
                this.LoyaltyGetDatabyacctnoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetDatabyacctnoOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetDatabyacctno", new object[] {
                        acctno}, this.LoyaltyGetDatabyacctnoOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetDatabyacctnoOperationCompleted(object arg) {
            if ((this.LoyaltyGetDatabyacctnoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetDatabyacctnoCompleted(this, new LoyaltyGetDatabyacctnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetDatabyMemberno", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Loyalty LoyaltyGetDatabyMemberno(string membershipno) {
            object[] results = this.Invoke("LoyaltyGetDatabyMemberno", new object[] {
                        membershipno});
            return ((Loyalty)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetDatabyMemberno(string membershipno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetDatabyMemberno", new object[] {
                        membershipno}, callback, asyncState);
        }
        
        /// <remarks/>
        public Loyalty EndLoyaltyGetDatabyMemberno(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Loyalty)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyGetDatabyMembernoAsync(string membershipno) {
            this.LoyaltyGetDatabyMembernoAsync(membershipno, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetDatabyMembernoAsync(string membershipno, object userState) {
            if ((this.LoyaltyGetDatabyMembernoOperationCompleted == null)) {
                this.LoyaltyGetDatabyMembernoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetDatabyMembernoOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetDatabyMemberno", new object[] {
                        membershipno}, this.LoyaltyGetDatabyMembernoOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetDatabyMembernoOperationCompleted(object arg) {
            if ((this.LoyaltyGetDatabyMembernoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetDatabyMembernoCompleted(this, new LoyaltyGetDatabyMembernoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyAddFee", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltyAddFee(string acctno, string membertype, string custid, int user) {
            this.Invoke("LoyaltyAddFee", new object[] {
                        acctno,
                        membertype,
                        custid,
                        user});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyAddFee(string acctno, string membertype, string custid, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyAddFee", new object[] {
                        acctno,
                        membertype,
                        custid,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltyAddFee(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoyaltyAddFeeAsync(string acctno, string membertype, string custid, int user) {
            this.LoyaltyAddFeeAsync(acctno, membertype, custid, user, null);
        }
        
        /// <remarks/>
        public void LoyaltyAddFeeAsync(string acctno, string membertype, string custid, int user, object userState) {
            if ((this.LoyaltyAddFeeOperationCompleted == null)) {
                this.LoyaltyAddFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyAddFeeOperationCompleted);
            }
            this.InvokeAsync("LoyaltyAddFee", new object[] {
                        acctno,
                        membertype,
                        custid,
                        user}, this.LoyaltyAddFeeOperationCompleted, userState);
        }
        
        private void OnLoyaltyAddFeeOperationCompleted(object arg) {
            if ((this.LoyaltyAddFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyAddFeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltySave", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoyaltySave(Loyalty loyalty) {
            object[] results = this.Invoke("LoyaltySave", new object[] {
                        loyalty});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltySave(Loyalty loyalty, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltySave", new object[] {
                        loyalty}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLoyaltySave(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltySaveAsync(Loyalty loyalty) {
            this.LoyaltySaveAsync(loyalty, null);
        }
        
        /// <remarks/>
        public void LoyaltySaveAsync(Loyalty loyalty, object userState) {
            if ((this.LoyaltySaveOperationCompleted == null)) {
                this.LoyaltySaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltySaveOperationCompleted);
            }
            this.InvokeAsync("LoyaltySave", new object[] {
                        loyalty}, this.LoyaltySaveOperationCompleted, userState);
        }
        
        private void OnLoyaltySaveOperationCompleted(object arg) {
            if ((this.LoyaltySaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltySaveCompleted(this, new LoyaltySaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyCheckCustomer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoyaltyCheckCustomer(string custid) {
            object[] results = this.Invoke("LoyaltyCheckCustomer", new object[] {
                        custid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyCheckCustomer(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyCheckCustomer", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLoyaltyCheckCustomer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyCheckCustomerAsync(string custid) {
            this.LoyaltyCheckCustomerAsync(custid, null);
        }
        
        /// <remarks/>
        public void LoyaltyCheckCustomerAsync(string custid, object userState) {
            if ((this.LoyaltyCheckCustomerOperationCompleted == null)) {
                this.LoyaltyCheckCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyCheckCustomerOperationCompleted);
            }
            this.InvokeAsync("LoyaltyCheckCustomer", new object[] {
                        custid}, this.LoyaltyCheckCustomerOperationCompleted, userState);
        }
        
        private void OnLoyaltyCheckCustomerOperationCompleted(object arg) {
            if ((this.LoyaltyCheckCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyCheckCustomerCompleted(this, new LoyaltyCheckCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetCashAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoyaltyGetCashAccount(string custid) {
            object[] results = this.Invoke("LoyaltyGetCashAccount", new object[] {
                        custid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetCashAccount(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetCashAccount", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLoyaltyGetCashAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyGetCashAccountAsync(string custid) {
            this.LoyaltyGetCashAccountAsync(custid, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetCashAccountAsync(string custid, object userState) {
            if ((this.LoyaltyGetCashAccountOperationCompleted == null)) {
                this.LoyaltyGetCashAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetCashAccountOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetCashAccount", new object[] {
                        custid}, this.LoyaltyGetCashAccountOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetCashAccountOperationCompleted(object arg) {
            if ((this.LoyaltyGetCashAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetCashAccountCompleted(this, new LoyaltyGetCashAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetVouchers", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoyaltyVoucher[] LoyaltyGetVouchers(string custid) {
            object[] results = this.Invoke("LoyaltyGetVouchers", new object[] {
                        custid});
            return ((LoyaltyVoucher[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetVouchers(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetVouchers", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public LoyaltyVoucher[] EndLoyaltyGetVouchers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LoyaltyVoucher[])(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyGetVouchersAsync(string custid) {
            this.LoyaltyGetVouchersAsync(custid, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetVouchersAsync(string custid, object userState) {
            if ((this.LoyaltyGetVouchersOperationCompleted == null)) {
                this.LoyaltyGetVouchersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetVouchersOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetVouchers", new object[] {
                        custid}, this.LoyaltyGetVouchersOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetVouchersOperationCompleted(object arg) {
            if ((this.LoyaltyGetVouchersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetVouchersCompleted(this, new LoyaltyGetVouchersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyAddRejection", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltyAddRejection(string custid, string acctno) {
            this.Invoke("LoyaltyAddRejection", new object[] {
                        custid,
                        acctno});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyAddRejection(string custid, string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyAddRejection", new object[] {
                        custid,
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltyAddRejection(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoyaltyAddRejectionAsync(string custid, string acctno) {
            this.LoyaltyAddRejectionAsync(custid, acctno, null);
        }
        
        /// <remarks/>
        public void LoyaltyAddRejectionAsync(string custid, string acctno, object userState) {
            if ((this.LoyaltyAddRejectionOperationCompleted == null)) {
                this.LoyaltyAddRejectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyAddRejectionOperationCompleted);
            }
            this.InvokeAsync("LoyaltyAddRejection", new object[] {
                        custid,
                        acctno}, this.LoyaltyAddRejectionOperationCompleted, userState);
        }
        
        private void OnLoyaltyAddRejectionOperationCompleted(object arg) {
            if ((this.LoyaltyAddRejectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyAddRejectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetCharges", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltyGetCharges(string custid, ref string acctno, ref decimal amount, ref bool active) {
            object[] results = this.Invoke("LoyaltyGetCharges", new object[] {
                        custid,
                        acctno,
                        amount,
                        active});
            acctno = ((string)(results[0]));
            amount = ((decimal)(results[1]));
            active = ((bool)(results[2]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetCharges(string custid, string acctno, decimal amount, bool active, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetCharges", new object[] {
                        custid,
                        acctno,
                        amount,
                        active}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltyGetCharges(System.IAsyncResult asyncResult, out string acctno, out decimal amount, out bool active) {
            object[] results = this.EndInvoke(asyncResult);
            acctno = ((string)(results[0]));
            amount = ((decimal)(results[1]));
            active = ((bool)(results[2]));
        }
        
        /// <remarks/>
        public void LoyaltyGetChargesAsync(string custid, string acctno, decimal amount, bool active) {
            this.LoyaltyGetChargesAsync(custid, acctno, amount, active, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetChargesAsync(string custid, string acctno, decimal amount, bool active, object userState) {
            if ((this.LoyaltyGetChargesOperationCompleted == null)) {
                this.LoyaltyGetChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetChargesOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetCharges", new object[] {
                        custid,
                        acctno,
                        amount,
                        active}, this.LoyaltyGetChargesOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetChargesOperationCompleted(object arg) {
            if ((this.LoyaltyGetChargesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetChargesCompleted(this, new LoyaltyGetChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltySaveVouchers", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltySaveVouchers(int voucher, bool add, string acctno) {
            this.Invoke("LoyaltySaveVouchers", new object[] {
                        voucher,
                        add,
                        acctno});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltySaveVouchers(int voucher, bool add, string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltySaveVouchers", new object[] {
                        voucher,
                        add,
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltySaveVouchers(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoyaltySaveVouchersAsync(int voucher, bool add, string acctno) {
            this.LoyaltySaveVouchersAsync(voucher, add, acctno, null);
        }
        
        /// <remarks/>
        public void LoyaltySaveVouchersAsync(int voucher, bool add, string acctno, object userState) {
            if ((this.LoyaltySaveVouchersOperationCompleted == null)) {
                this.LoyaltySaveVouchersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltySaveVouchersOperationCompleted);
            }
            this.InvokeAsync("LoyaltySaveVouchers", new object[] {
                        voucher,
                        add,
                        acctno}, this.LoyaltySaveVouchersOperationCompleted, userState);
        }
        
        private void OnLoyaltySaveVouchersOperationCompleted(object arg) {
            if ((this.LoyaltySaveVouchersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltySaveVouchersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyIsLinkAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoyaltyIsLinkAccount(string acctno, string custid) {
            object[] results = this.Invoke("LoyaltyIsLinkAccount", new object[] {
                        acctno,
                        custid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyIsLinkAccount(string acctno, string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyIsLinkAccount", new object[] {
                        acctno,
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLoyaltyIsLinkAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyIsLinkAccountAsync(string acctno, string custid) {
            this.LoyaltyIsLinkAccountAsync(acctno, custid, null);
        }
        
        /// <remarks/>
        public void LoyaltyIsLinkAccountAsync(string acctno, string custid, object userState) {
            if ((this.LoyaltyIsLinkAccountOperationCompleted == null)) {
                this.LoyaltyIsLinkAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyIsLinkAccountOperationCompleted);
            }
            this.InvokeAsync("LoyaltyIsLinkAccount", new object[] {
                        acctno,
                        custid}, this.LoyaltyIsLinkAccountOperationCompleted, userState);
        }
        
        private void OnLoyaltyIsLinkAccountOperationCompleted(object arg) {
            if ((this.LoyaltyIsLinkAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyIsLinkAccountCompleted(this, new LoyaltyIsLinkAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyPay", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltyPay(string acctno) {
            this.Invoke("LoyaltyPay", new object[] {
                        acctno});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyPay(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyPay", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltyPay(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoyaltyPayAsync(string acctno) {
            this.LoyaltyPayAsync(acctno, null);
        }
        
        /// <remarks/>
        public void LoyaltyPayAsync(string acctno, object userState) {
            if ((this.LoyaltyPayOperationCompleted == null)) {
                this.LoyaltyPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyPayOperationCompleted);
            }
            this.InvokeAsync("LoyaltyPay", new object[] {
                        acctno}, this.LoyaltyPayOperationCompleted, userState);
        }
        
        private void OnLoyaltyPayOperationCompleted(object arg) {
            if ((this.LoyaltyPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyPayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetValidAddress", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoyaltyValidAddresses[] LoyaltyGetValidAddress(string custid) {
            object[] results = this.Invoke("LoyaltyGetValidAddress", new object[] {
                        custid});
            return ((LoyaltyValidAddresses[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetValidAddress(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetValidAddress", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public LoyaltyValidAddresses[] EndLoyaltyGetValidAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LoyaltyValidAddresses[])(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyGetValidAddressAsync(string custid) {
            this.LoyaltyGetValidAddressAsync(custid, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetValidAddressAsync(string custid, object userState) {
            if ((this.LoyaltyGetValidAddressOperationCompleted == null)) {
                this.LoyaltyGetValidAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetValidAddressOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetValidAddress", new object[] {
                        custid}, this.LoyaltyGetValidAddressOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetValidAddressOperationCompleted(object arg) {
            if ((this.LoyaltyGetValidAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetValidAddressCompleted(this, new LoyaltyGetValidAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyCancelAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltyCancelAccount(string acctno, int user) {
            this.Invoke("LoyaltyCancelAccount", new object[] {
                        acctno,
                        user});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyCancelAccount(string acctno, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyCancelAccount", new object[] {
                        acctno,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltyCancelAccount(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoyaltyCancelAccountAsync(string acctno, int user) {
            this.LoyaltyCancelAccountAsync(acctno, user, null);
        }
        
        /// <remarks/>
        public void LoyaltyCancelAccountAsync(string acctno, int user, object userState) {
            if ((this.LoyaltyCancelAccountOperationCompleted == null)) {
                this.LoyaltyCancelAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyCancelAccountOperationCompleted);
            }
            this.InvokeAsync("LoyaltyCancelAccount", new object[] {
                        acctno,
                        user}, this.LoyaltyCancelAccountOperationCompleted, userState);
        }
        
        private void OnLoyaltyCancelAccountOperationCompleted(object arg) {
            if ((this.LoyaltyCancelAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyCancelAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyCheckAccountPeriod", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoyaltyCheckAccountPeriod(string acctno) {
            object[] results = this.Invoke("LoyaltyCheckAccountPeriod", new object[] {
                        acctno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyCheckAccountPeriod(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyCheckAccountPeriod", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLoyaltyCheckAccountPeriod(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyCheckAccountPeriodAsync(string acctno) {
            this.LoyaltyCheckAccountPeriodAsync(acctno, null);
        }
        
        /// <remarks/>
        public void LoyaltyCheckAccountPeriodAsync(string acctno, object userState) {
            if ((this.LoyaltyCheckAccountPeriodOperationCompleted == null)) {
                this.LoyaltyCheckAccountPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyCheckAccountPeriodOperationCompleted);
            }
            this.InvokeAsync("LoyaltyCheckAccountPeriod", new object[] {
                        acctno}, this.LoyaltyCheckAccountPeriodOperationCompleted, userState);
        }
        
        private void OnLoyaltyCheckAccountPeriodOperationCompleted(object arg) {
            if ((this.LoyaltyCheckAccountPeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyCheckAccountPeriodCompleted(this, new LoyaltyCheckAccountPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyCheckRemoveFreeDel", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltyCheckRemoveFreeDel(string acctno, int user) {
            this.Invoke("LoyaltyCheckRemoveFreeDel", new object[] {
                        acctno,
                        user});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyCheckRemoveFreeDel(string acctno, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyCheckRemoveFreeDel", new object[] {
                        acctno,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltyCheckRemoveFreeDel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoyaltyCheckRemoveFreeDelAsync(string acctno, int user) {
            this.LoyaltyCheckRemoveFreeDelAsync(acctno, user, null);
        }
        
        /// <remarks/>
        public void LoyaltyCheckRemoveFreeDelAsync(string acctno, int user, object userState) {
            if ((this.LoyaltyCheckRemoveFreeDelOperationCompleted == null)) {
                this.LoyaltyCheckRemoveFreeDelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyCheckRemoveFreeDelOperationCompleted);
            }
            this.InvokeAsync("LoyaltyCheckRemoveFreeDel", new object[] {
                        acctno,
                        user}, this.LoyaltyCheckRemoveFreeDelOperationCompleted, userState);
        }
        
        private void OnLoyaltyCheckRemoveFreeDelOperationCompleted(object arg) {
            if ((this.LoyaltyCheckRemoveFreeDelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyCheckRemoveFreeDelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGRTCancelFreeDelAdjust", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltyGRTCancelFreeDelAdjust(string acctno, int user) {
            this.Invoke("LoyaltyGRTCancelFreeDelAdjust", new object[] {
                        acctno,
                        user});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGRTCancelFreeDelAdjust(string acctno, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGRTCancelFreeDelAdjust", new object[] {
                        acctno,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltyGRTCancelFreeDelAdjust(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoyaltyGRTCancelFreeDelAdjustAsync(string acctno, int user) {
            this.LoyaltyGRTCancelFreeDelAdjustAsync(acctno, user, null);
        }
        
        /// <remarks/>
        public void LoyaltyGRTCancelFreeDelAdjustAsync(string acctno, int user, object userState) {
            if ((this.LoyaltyGRTCancelFreeDelAdjustOperationCompleted == null)) {
                this.LoyaltyGRTCancelFreeDelAdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGRTCancelFreeDelAdjustOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGRTCancelFreeDelAdjust", new object[] {
                        acctno,
                        user}, this.LoyaltyGRTCancelFreeDelAdjustOperationCompleted, userState);
        }
        
        private void OnLoyaltyGRTCancelFreeDelAdjustOperationCompleted(object arg) {
            if ((this.LoyaltyGRTCancelFreeDelAdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGRTCancelFreeDelAdjustCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoyaltyGetHistory(string custid) {
            object[] results = this.Invoke("LoyaltyGetHistory", new object[] {
                        custid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetHistory(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetHistory", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoyaltyGetHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyGetHistoryAsync(string custid) {
            this.LoyaltyGetHistoryAsync(custid, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetHistoryAsync(string custid, object userState) {
            if ((this.LoyaltyGetHistoryOperationCompleted == null)) {
                this.LoyaltyGetHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetHistoryOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetHistory", new object[] {
                        custid}, this.LoyaltyGetHistoryOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetHistoryOperationCompleted(object arg) {
            if ((this.LoyaltyGetHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetHistoryCompleted(this, new LoyaltyGetHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyCheckLinkedAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoyaltyCheckLinkedAccount(string acct) {
            object[] results = this.Invoke("LoyaltyCheckLinkedAccount", new object[] {
                        acct});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyCheckLinkedAccount(string acct, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyCheckLinkedAccount", new object[] {
                        acct}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLoyaltyCheckLinkedAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyCheckLinkedAccountAsync(string acct) {
            this.LoyaltyCheckLinkedAccountAsync(acct, null);
        }
        
        /// <remarks/>
        public void LoyaltyCheckLinkedAccountAsync(string acct, object userState) {
            if ((this.LoyaltyCheckLinkedAccountOperationCompleted == null)) {
                this.LoyaltyCheckLinkedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyCheckLinkedAccountOperationCompleted);
            }
            this.InvokeAsync("LoyaltyCheckLinkedAccount", new object[] {
                        acct}, this.LoyaltyCheckLinkedAccountOperationCompleted, userState);
        }
        
        private void OnLoyaltyCheckLinkedAccountOperationCompleted(object arg) {
            if ((this.LoyaltyCheckLinkedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyCheckLinkedAccountCompleted(this, new LoyaltyCheckLinkedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyGetVoucherValue", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> LoyaltyGetVoucherValue(string acct) {
            object[] results = this.Invoke("LoyaltyGetVoucherValue", new object[] {
                        acct});
            return ((System.Nullable<decimal>)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyGetVoucherValue(string acct, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyGetVoucherValue", new object[] {
                        acct}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Nullable<decimal> EndLoyaltyGetVoucherValue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Nullable<decimal>)(results[0]));
        }
        
        /// <remarks/>
        public void LoyaltyGetVoucherValueAsync(string acct) {
            this.LoyaltyGetVoucherValueAsync(acct, null);
        }
        
        /// <remarks/>
        public void LoyaltyGetVoucherValueAsync(string acct, object userState) {
            if ((this.LoyaltyGetVoucherValueOperationCompleted == null)) {
                this.LoyaltyGetVoucherValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyGetVoucherValueOperationCompleted);
            }
            this.InvokeAsync("LoyaltyGetVoucherValue", new object[] {
                        acct}, this.LoyaltyGetVoucherValueOperationCompleted, userState);
        }
        
        private void OnLoyaltyGetVoucherValueOperationCompleted(object arg) {
            if ((this.LoyaltyGetVoucherValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyGetVoucherValueCompleted(this, new LoyaltyGetVoucherValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoyaltyRemoveVoucher", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoyaltyRemoveVoucher(string acct) {
            this.Invoke("LoyaltyRemoveVoucher", new object[] {
                        acct});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoyaltyRemoveVoucher(string acct, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoyaltyRemoveVoucher", new object[] {
                        acct}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLoyaltyRemoveVoucher(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoyaltyRemoveVoucherAsync(string acct) {
            this.LoyaltyRemoveVoucherAsync(acct, null);
        }
        
        /// <remarks/>
        public void LoyaltyRemoveVoucherAsync(string acct, object userState) {
            if ((this.LoyaltyRemoveVoucherOperationCompleted == null)) {
                this.LoyaltyRemoveVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoyaltyRemoveVoucherOperationCompleted);
            }
            this.InvokeAsync("LoyaltyRemoveVoucher", new object[] {
                        acct}, this.LoyaltyRemoveVoucherOperationCompleted, userState);
        }
        
        private void OnLoyaltyRemoveVoucherOperationCompleted(object arg) {
            if ((this.LoyaltyRemoveVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoyaltyRemoveVoucherCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CustomerGetBand", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CustomerGetBand(string acctno, out string err) {
            object[] results = this.Invoke("CustomerGetBand", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustomerGetBand(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CustomerGetBand", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCustomerGetBand(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerGetBandAsync(string acctno) {
            this.CustomerGetBandAsync(acctno, null);
        }
        
        /// <remarks/>
        public void CustomerGetBandAsync(string acctno, object userState) {
            if ((this.CustomerGetBandOperationCompleted == null)) {
                this.CustomerGetBandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerGetBandOperationCompleted);
            }
            this.InvokeAsync("CustomerGetBand", new object[] {
                        acctno}, this.CustomerGetBandOperationCompleted, userState);
        }
        
        private void OnCustomerGetBandOperationCompleted(object arg) {
            if ((this.CustomerGetBandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerGetBandCompleted(this, new CustomerGetBandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CustomerSaveBand", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CustomerSaveBand(string custid, char band) {
            this.Invoke("CustomerSaveBand", new object[] {
                        custid,
                        band});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustomerSaveBand(string custid, char band, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CustomerSaveBand", new object[] {
                        custid,
                        band}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCustomerSaveBand(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CustomerSaveBandAsync(string custid, char band) {
            this.CustomerSaveBandAsync(custid, band, null);
        }
        
        /// <remarks/>
        public void CustomerSaveBandAsync(string custid, char band, object userState) {
            if ((this.CustomerSaveBandOperationCompleted == null)) {
                this.CustomerSaveBandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerSaveBandOperationCompleted);
            }
            this.InvokeAsync("CustomerSaveBand", new object[] {
                        custid,
                        band}, this.CustomerSaveBandOperationCompleted, userState);
        }
        
        private void OnCustomerSaveBandOperationCompleted(object arg) {
            if ((this.CustomerSaveBandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerSaveBandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadCustomer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer LoadCustomer(string custid) {
            object[] results = this.Invoke("LoadCustomer", new object[] {
                        custid});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadCustomer(string custid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadCustomer", new object[] {
                        custid}, callback, asyncState);
        }
        
        /// <remarks/>
        public Customer EndLoadCustomer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCustomerAsync(string custid) {
            this.LoadCustomerAsync(custid, null);
        }
        
        /// <remarks/>
        public void LoadCustomerAsync(string custid, object userState) {
            if ((this.LoadCustomerOperationCompleted == null)) {
                this.LoadCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCustomerOperationCompleted);
            }
            this.InvokeAsync("LoadCustomer", new object[] {
                        custid}, this.LoadCustomerOperationCompleted, userState);
        }
        
        private void OnLoadCustomerOperationCompleted(object arg) {
            if ((this.LoadCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCustomerCompleted(this, new LoadCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerMmiLimit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetCustomerMmiLimit(string CustId, out bool isMmiCalculated) {
            object[] results = this.Invoke("GetCustomerMmiLimit", new object[] {
                        CustId});
            isMmiCalculated = ((bool)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerMmiLimit(string CustId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerMmiLimit", new object[] {
                        CustId}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndGetCustomerMmiLimit(System.IAsyncResult asyncResult, out bool isMmiCalculated) {
            object[] results = this.EndInvoke(asyncResult);
            isMmiCalculated = ((bool)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerMmiLimitAsync(string CustId) {
            this.GetCustomerMmiLimitAsync(CustId, null);
        }
        
        /// <remarks/>
        public void GetCustomerMmiLimitAsync(string CustId, object userState) {
            if ((this.GetCustomerMmiLimitOperationCompleted == null)) {
                this.GetCustomerMmiLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerMmiLimitOperationCompleted);
            }
            this.InvokeAsync("GetCustomerMmiLimit", new object[] {
                        CustId}, this.GetCustomerMmiLimitOperationCompleted, userState);
        }
        
        private void OnGetCustomerMmiLimitOperationCompleted(object arg) {
            if ((this.GetCustomerMmiLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerMmiLimitCompleted(this, new GetCustomerMmiLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDuplicateCustomers", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDuplicateCustomers() {
            object[] results = this.Invoke("GetDuplicateCustomers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDuplicateCustomers(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDuplicateCustomers", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDuplicateCustomers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDuplicateCustomersAsync() {
            this.GetDuplicateCustomersAsync(null);
        }
        
        /// <remarks/>
        public void GetDuplicateCustomersAsync(object userState) {
            if ((this.GetDuplicateCustomersOperationCompleted == null)) {
                this.GetDuplicateCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDuplicateCustomersOperationCompleted);
            }
            this.InvokeAsync("GetDuplicateCustomers", new object[0], this.GetDuplicateCustomersOperationCompleted, userState);
        }
        
        private void OnGetDuplicateCustomersOperationCompleted(object arg) {
            if ((this.GetDuplicateCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDuplicateCustomersCompleted(this, new GetDuplicateCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateDuplicateCustomers", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDuplicateCustomers(string custid, string duplicateCustid, bool resolved) {
            this.Invoke("UpdateDuplicateCustomers", new object[] {
                        custid,
                        duplicateCustid,
                        resolved});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDuplicateCustomers(string custid, string duplicateCustid, bool resolved, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDuplicateCustomers", new object[] {
                        custid,
                        duplicateCustid,
                        resolved}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateDuplicateCustomers(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateDuplicateCustomersAsync(string custid, string duplicateCustid, bool resolved) {
            this.UpdateDuplicateCustomersAsync(custid, duplicateCustid, resolved, null);
        }
        
        /// <remarks/>
        public void UpdateDuplicateCustomersAsync(string custid, string duplicateCustid, bool resolved, object userState) {
            if ((this.UpdateDuplicateCustomersOperationCompleted == null)) {
                this.UpdateDuplicateCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDuplicateCustomersOperationCompleted);
            }
            this.InvokeAsync("UpdateDuplicateCustomers", new object[] {
                        custid,
                        duplicateCustid,
                        resolved}, this.UpdateDuplicateCustomersOperationCompleted, userState);
        }
        
        private void OnUpdateDuplicateCustomersOperationCompleted(object arg) {
            if ((this.UpdateDuplicateCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDuplicateCustomersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GenerateInvoiceNumber", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateInvoiceNumber(string branch_no) {
            object[] results = this.Invoke("GenerateInvoiceNumber", new object[] {
                        branch_no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGenerateInvoiceNumber(string branch_no, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GenerateInvoiceNumber", new object[] {
                        branch_no}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGenerateInvoiceNumber(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateInvoiceNumberAsync(string branch_no) {
            this.GenerateInvoiceNumberAsync(branch_no, null);
        }
        
        /// <remarks/>
        public void GenerateInvoiceNumberAsync(string branch_no, object userState) {
            if ((this.GenerateInvoiceNumberOperationCompleted == null)) {
                this.GenerateInvoiceNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateInvoiceNumberOperationCompleted);
            }
            this.InvokeAsync("GenerateInvoiceNumber", new object[] {
                        branch_no}, this.GenerateInvoiceNumberOperationCompleted, userState);
        }
        
        private void OnGenerateInvoiceNumberOperationCompleted(object arg) {
            if ((this.GenerateInvoiceNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateInvoiceNumberCompleted(this, new GenerateInvoiceNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBasicCustomerDetails_Web", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCustomerDetails_Web(string agrmtno, out string err) {
            object[] results = this.Invoke("GetBasicCustomerDetails_Web", new object[] {
                        agrmtno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBasicCustomerDetails_Web(string agrmtno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBasicCustomerDetails_Web", new object[] {
                        agrmtno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBasicCustomerDetails_Web(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCustomerDetails_WebAsync(string agrmtno) {
            this.GetBasicCustomerDetails_WebAsync(agrmtno, null);
        }
        
        /// <remarks/>
        public void GetBasicCustomerDetails_WebAsync(string agrmtno, object userState) {
            if ((this.GetBasicCustomerDetails_WebOperationCompleted == null)) {
                this.GetBasicCustomerDetails_WebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCustomerDetails_WebOperationCompleted);
            }
            this.InvokeAsync("GetBasicCustomerDetails_Web", new object[] {
                        agrmtno}, this.GetBasicCustomerDetails_WebOperationCompleted, userState);
        }
        
        private void OnGetBasicCustomerDetails_WebOperationCompleted(object arg) {
            if ((this.GetBasicCustomerDetails_WebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCustomerDetails_WebCompleted(this, new GetBasicCustomerDetails_WebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class Customer {
        
        private System.Nullable<short> origbrField;
        
        private string custidField;
        
        private string otheridField;
        
        private short branchnohdleField;
        
        private string nameField;
        
        private string firstnameField;
        
        private string titleField;
        
        private string aliasField;
        
        private string addrsortField;
        
        private string namesortField;
        
        private System.DateTime datebornField;
        
        private string sexField;
        
        private string ethnicityField;
        
        private string morerewardsnoField;
        
        private System.Nullable<System.DateTime> effectivedateField;
        
        private string idNumberField;
        
        private string idTypeField;
        
        private byte creditblockedField;
        
        private decimal rFCreditLimitField;
        
        private byte rFCardSeqNoField;
        
        private string rFCardPrintedField;
        
        private System.Nullable<System.DateTime> datelastscoredField;
        
        private System.Nullable<System.DateTime> rFDateRemindedField;
        
        private int empeenochangeField;
        
        private System.Nullable<System.DateTime> datechangeField;
        
        private string maidennameField;
        
        private decimal oldRFCreditLimitField;
        
        private string limitTypeField;
        
        private decimal availableSpendField;
        
        private string scoringBandField;
        
        private string instantCreditField;
        
        private string storeTypeField;
        
        private bool loanQualifiedField;
        
        private int dependantsField;
        
        private string maritalstatField;
        
        private string nationalityField;
        
        private System.Nullable<byte> recurringarrearsField;
        
        private System.Nullable<int> ageField;
        
        private string scoreCardTypeField;
        
        private System.Nullable<bool> storeCardApprovedField;
        
        private System.Nullable<decimal> storeCardLimitField;
        
        private System.Nullable<decimal> storeCardAvailableField;
        
        private System.Nullable<System.DateTime> sCardApprovedDateField;
        
        private string cashLoanBlockedField;
        
        private bool cashLoanNewField;
        
        private bool cashLoanRecentField;
        
        private bool cashLoanExistingField;
        
        private bool cashLoanStaffField;
        
        private int idField;
        
        private System.Nullable<bool> resieveSmsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> origbr {
            get {
                return this.origbrField;
            }
            set {
                this.origbrField = value;
            }
        }
        
        /// <remarks/>
        public string custid {
            get {
                return this.custidField;
            }
            set {
                this.custidField = value;
            }
        }
        
        /// <remarks/>
        public string otherid {
            get {
                return this.otheridField;
            }
            set {
                this.otheridField = value;
            }
        }
        
        /// <remarks/>
        public short branchnohdle {
            get {
                return this.branchnohdleField;
            }
            set {
                this.branchnohdleField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public string addrsort {
            get {
                return this.addrsortField;
            }
            set {
                this.addrsortField = value;
            }
        }
        
        /// <remarks/>
        public string namesort {
            get {
                return this.namesortField;
            }
            set {
                this.namesortField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateborn {
            get {
                return this.datebornField;
            }
            set {
                this.datebornField = value;
            }
        }
        
        /// <remarks/>
        public string sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string ethnicity {
            get {
                return this.ethnicityField;
            }
            set {
                this.ethnicityField = value;
            }
        }
        
        /// <remarks/>
        public string morerewardsno {
            get {
                return this.morerewardsnoField;
            }
            set {
                this.morerewardsnoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> effectivedate {
            get {
                return this.effectivedateField;
            }
            set {
                this.effectivedateField = value;
            }
        }
        
        /// <remarks/>
        public string IdNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public string IdType {
            get {
                return this.idTypeField;
            }
            set {
                this.idTypeField = value;
            }
        }
        
        /// <remarks/>
        public byte creditblocked {
            get {
                return this.creditblockedField;
            }
            set {
                this.creditblockedField = value;
            }
        }
        
        /// <remarks/>
        public decimal RFCreditLimit {
            get {
                return this.rFCreditLimitField;
            }
            set {
                this.rFCreditLimitField = value;
            }
        }
        
        /// <remarks/>
        public byte RFCardSeqNo {
            get {
                return this.rFCardSeqNoField;
            }
            set {
                this.rFCardSeqNoField = value;
            }
        }
        
        /// <remarks/>
        public string RFCardPrinted {
            get {
                return this.rFCardPrintedField;
            }
            set {
                this.rFCardPrintedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> datelastscored {
            get {
                return this.datelastscoredField;
            }
            set {
                this.datelastscoredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RFDateReminded {
            get {
                return this.rFDateRemindedField;
            }
            set {
                this.rFDateRemindedField = value;
            }
        }
        
        /// <remarks/>
        public int empeenochange {
            get {
                return this.empeenochangeField;
            }
            set {
                this.empeenochangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> datechange {
            get {
                return this.datechangeField;
            }
            set {
                this.datechangeField = value;
            }
        }
        
        /// <remarks/>
        public string maidenname {
            get {
                return this.maidennameField;
            }
            set {
                this.maidennameField = value;
            }
        }
        
        /// <remarks/>
        public decimal OldRFCreditLimit {
            get {
                return this.oldRFCreditLimitField;
            }
            set {
                this.oldRFCreditLimitField = value;
            }
        }
        
        /// <remarks/>
        public string LimitType {
            get {
                return this.limitTypeField;
            }
            set {
                this.limitTypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal AvailableSpend {
            get {
                return this.availableSpendField;
            }
            set {
                this.availableSpendField = value;
            }
        }
        
        /// <remarks/>
        public string ScoringBand {
            get {
                return this.scoringBandField;
            }
            set {
                this.scoringBandField = value;
            }
        }
        
        /// <remarks/>
        public string InstantCredit {
            get {
                return this.instantCreditField;
            }
            set {
                this.instantCreditField = value;
            }
        }
        
        /// <remarks/>
        public string StoreType {
            get {
                return this.storeTypeField;
            }
            set {
                this.storeTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool LoanQualified {
            get {
                return this.loanQualifiedField;
            }
            set {
                this.loanQualifiedField = value;
            }
        }
        
        /// <remarks/>
        public int dependants {
            get {
                return this.dependantsField;
            }
            set {
                this.dependantsField = value;
            }
        }
        
        /// <remarks/>
        public string maritalstat {
            get {
                return this.maritalstatField;
            }
            set {
                this.maritalstatField = value;
            }
        }
        
        /// <remarks/>
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<byte> recurringarrears {
            get {
                return this.recurringarrearsField;
            }
            set {
                this.recurringarrearsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string ScoreCardType {
            get {
                return this.scoreCardTypeField;
            }
            set {
                this.scoreCardTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> StoreCardApproved {
            get {
                return this.storeCardApprovedField;
            }
            set {
                this.storeCardApprovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> StoreCardLimit {
            get {
                return this.storeCardLimitField;
            }
            set {
                this.storeCardLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> StoreCardAvailable {
            get {
                return this.storeCardAvailableField;
            }
            set {
                this.storeCardAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SCardApprovedDate {
            get {
                return this.sCardApprovedDateField;
            }
            set {
                this.sCardApprovedDateField = value;
            }
        }
        
        /// <remarks/>
        public string CashLoanBlocked {
            get {
                return this.cashLoanBlockedField;
            }
            set {
                this.cashLoanBlockedField = value;
            }
        }
        
        /// <remarks/>
        public bool CashLoanNew {
            get {
                return this.cashLoanNewField;
            }
            set {
                this.cashLoanNewField = value;
            }
        }
        
        /// <remarks/>
        public bool CashLoanRecent {
            get {
                return this.cashLoanRecentField;
            }
            set {
                this.cashLoanRecentField = value;
            }
        }
        
        /// <remarks/>
        public bool CashLoanExisting {
            get {
                return this.cashLoanExistingField;
            }
            set {
                this.cashLoanExistingField = value;
            }
        }
        
        /// <remarks/>
        public bool CashLoanStaff {
            get {
                return this.cashLoanStaffField;
            }
            set {
                this.cashLoanStaffField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ResieveSms {
            get {
                return this.resieveSmsField;
            }
            set {
                this.resieveSmsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class LoyaltyValidAddresses {
        
        private string addtypeField;
        
        /// <remarks/>
        public string addtype {
            get {
                return this.addtypeField;
            }
            set {
                this.addtypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class LoyaltyVoucher {
        
        private string membernoField;
        
        private string acctnoField;
        
        private string custidField;
        
        private System.DateTime voucherdateField;
        
        private decimal vouchervalueField;
        
        private int voucherrefField;
        
        /// <remarks/>
        public string memberno {
            get {
                return this.membernoField;
            }
            set {
                this.membernoField = value;
            }
        }
        
        /// <remarks/>
        public string acctno {
            get {
                return this.acctnoField;
            }
            set {
                this.acctnoField = value;
            }
        }
        
        /// <remarks/>
        public string custid {
            get {
                return this.custidField;
            }
            set {
                this.custidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime voucherdate {
            get {
                return this.voucherdateField;
            }
            set {
                this.voucherdateField = value;
            }
        }
        
        /// <remarks/>
        public decimal vouchervalue {
            get {
                return this.vouchervalueField;
            }
            set {
                this.vouchervalueField = value;
            }
        }
        
        /// <remarks/>
        public int voucherref {
            get {
                return this.voucherrefField;
            }
            set {
                this.voucherrefField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class Loyalty {
        
        private string userField;
        
        private char cancelField;
        
        private string membernoField;
        
        private string custidField;
        
        private System.DateTime startdateField;
        
        private System.DateTime enddateField;
        
        private char membertypeField;
        
        private int statusacctField;
        
        private int statusvoucherField;
        
        private int rejectionsField;
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public char cancel {
            get {
                return this.cancelField;
            }
            set {
                this.cancelField = value;
            }
        }
        
        /// <remarks/>
        public string memberno {
            get {
                return this.membernoField;
            }
            set {
                this.membernoField = value;
            }
        }
        
        /// <remarks/>
        public string custid {
            get {
                return this.custidField;
            }
            set {
                this.custidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startdate {
            get {
                return this.startdateField;
            }
            set {
                this.startdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime enddate {
            get {
                return this.enddateField;
            }
            set {
                this.enddateField = value;
            }
        }
        
        /// <remarks/>
        public char membertype {
            get {
                return this.membertypeField;
            }
            set {
                this.membertypeField = value;
            }
        }
        
        /// <remarks/>
        public int statusacct {
            get {
                return this.statusacctField;
            }
            set {
                this.statusacctField = value;
            }
        }
        
        /// <remarks/>
        public int statusvoucher {
            get {
                return this.statusvoucherField;
            }
            set {
                this.statusvoucherField = value;
            }
        }
        
        /// <remarks/>
        public int rejections {
            get {
                return this.rejectionsField;
            }
            set {
                this.rejectionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCodesForCustomerCompletedEventHandler(object sender, GetCodesForCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodesForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodesForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool noSuchCust {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddCodesToCustomerCompletedEventHandler(object sender, AddCodesToCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCodesToCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCodesToCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerAccountsAndDetailsCompletedEventHandler(object sender, GetCustomerAccountsAndDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAccountsAndDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAccountsAndDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerAccountsDetailsCompletedEventHandler(object sender, GetCustomerAccountsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAccountsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAccountsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerAccountsDetailsListCompletedEventHandler(object sender, GetCustomerAccountsDetailsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAccountsDetailsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAccountsDetailsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSPADetailsCompletedEventHandler(object sender, GetSPADetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSPADetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSPADetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerSearchCompletedEventHandler(object sender, CustomerSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerAddressesCompletedEventHandler(object sender, GetCustomerAddressesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetBasicCustomerDetailsCompletedEventHandler(object sender, GetBasicCustomerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveBasicDetailsCompletedEventHandler(object sender, SaveBasicDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBasicDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBasicDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveCustomerEmploymentDetailsCompletedEventHandler(object sender, SaveCustomerEmploymentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCustomerEmploymentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCustomerEmploymentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveCustomerAdditionalDetailsResidentialCompletedEventHandler(object sender, SaveCustomerAdditionalDetailsResidentialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCustomerAdditionalDetailsResidentialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCustomerAdditionalDetailsResidentialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveCustomerAdditionalDetailsFinancialCompletedEventHandler(object sender, SaveCustomerAdditionalDetailsFinancialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCustomerAdditionalDetailsFinancialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCustomerAdditionalDetailsFinancialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveAddressesCompletedEventHandler(object sender, SaveAddressesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRFCombinedDetailsCompletedEventHandler(object sender, GetRFCombinedDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRFCombinedDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRFCombinedDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRFCombinedTransactionsCompletedEventHandler(object sender, GetRFCombinedTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRFCombinedTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRFCombinedTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMoreRewardsNoCompletedEventHandler(object sender, GetMoreRewardsNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMoreRewardsNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMoreRewardsNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCashLoanQualifiedCompletedEventHandler(object sender, GetCashLoanQualifiedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashLoanQualifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashLoanQualifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRequiredAddressTypesCompletedEventHandler(object sender, GetRequiredAddressTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequiredAddressTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequiredAddressTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDistinctAddressTypesCompletedEventHandler(object sender, GetDistinctAddressTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctAddressTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctAddressTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetImageCompletedEventHandler(object sender, GetImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateImageCompletedEventHandler(object sender, UpdateImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnblockCreditCompletedEventHandler(object sender, UnblockCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnblockCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnblockCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsPrivilegeMemberCompletedEventHandler(object sender, IsPrivilegeMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPrivilegeMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPrivilegeMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool privilegeClub {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string privilegeClubCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string privilegeClubDesc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool hasDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsPrivilegeMemberWithValidTermsTypeCompletedEventHandler(object sender, IsPrivilegeMemberWithValidTermsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPrivilegeMemberWithValidTermsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPrivilegeMemberWithValidTermsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool privilegeClub {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string privilegeClubCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string privilegeClubDesc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool hasDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public bool termsTypeValid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRFCombinedDetailsForPrintCompletedEventHandler(object sender, GetRFCombinedDetailsForPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRFCombinedDetailsForPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRFCombinedDetailsForPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCustomerIDCompletedEventHandler(object sender, UpdateCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetCreditLimitCompletedEventHandler(object sender, SetCreditLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCreditLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCreditLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerAuditCompletedEventHandler(object sender, GetCustomerAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAddressHistoryCompletedEventHandler(object sender, GetAddressHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAddressAuditHistoryCompletedEventHandler(object sender, GetAddressAuditHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressAuditHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressAuditHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerMailingQuerySaveCompletedEventHandler(object sender, CustomerMailingQuerySaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerMailingQuerySaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerMailingQuerySaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerMailingQueryCompletedEventHandler(object sender, CustomerMailingQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerMailingQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerMailingQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerMailingQueryGetCompletedEventHandler(object sender, CustomerMailingQueryGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerMailingQueryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerMailingQueryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime datesaved {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string CustomerCodeSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string NoCustomerCodeSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string AccountCodeSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string NoAccountCodeSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string ArrearsRestriction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public double Arrears {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string maxcurrstatus {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string maxeverstatus {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string branchset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string accttypes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
        
        /// <remarks/>
        public string itemset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[12]));
            }
        }
        
        /// <remarks/>
        public System.DateTime itemsetstartdate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[13]));
            }
        }
        
        /// <remarks/>
        public System.DateTime itemsetenddate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[14]));
            }
        }
        
        /// <remarks/>
        public string noitemset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[15]));
            }
        }
        
        /// <remarks/>
        public System.DateTime noitemsetstartdate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[16]));
            }
        }
        
        /// <remarks/>
        public System.DateTime noitemsetenddate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[17]));
            }
        }
        
        /// <remarks/>
        public string itemcatset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[18]));
            }
        }
        
        /// <remarks/>
        public System.DateTime itemCatsetstartdate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[19]));
            }
        }
        
        /// <remarks/>
        public System.DateTime itemCatsetenddate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[20]));
            }
        }
        
        /// <remarks/>
        public string noitemCatset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[21]));
            }
        }
        
        /// <remarks/>
        public System.DateTime noitemCatsetstartdate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[22]));
            }
        }
        
        /// <remarks/>
        public System.DateTime noitemCatsetenddate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[23]));
            }
        }
        
        /// <remarks/>
        public int itemsdelivered {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[24]));
            }
        }
        
        /// <remarks/>
        public string itemstartswithset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[25]));
            }
        }
        
        /// <remarks/>
        public System.DateTime itemstartswithstartdate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[26]));
            }
        }
        
        /// <remarks/>
        public System.DateTime itemstartswithenddate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[27]));
            }
        }
        
        /// <remarks/>
        public string noitemstartswithset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[28]));
            }
        }
        
        /// <remarks/>
        public System.DateTime noitemstartswithstartdate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[29]));
            }
        }
        
        /// <remarks/>
        public System.DateTime noitemstartswithenddate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[30]));
            }
        }
        
        /// <remarks/>
        public string noletterset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[31]));
            }
        }
        
        /// <remarks/>
        public System.DateTime nolettersetStartdate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[32]));
            }
        }
        
        /// <remarks/>
        public System.DateTime nolettersetEnddate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[33]));
            }
        }
        
        /// <remarks/>
        public string letterset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[34]));
            }
        }
        
        /// <remarks/>
        public System.DateTime lettersetstartdate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[35]));
            }
        }
        
        /// <remarks/>
        public System.DateTime lettersetenddate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[36]));
            }
        }
        
        /// <remarks/>
        public int customerstartage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[37]));
            }
        }
        
        /// <remarks/>
        public int customerEndage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[38]));
            }
        }
        
        /// <remarks/>
        public string totals {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[39]));
            }
        }
        
        /// <remarks/>
        public string resulttype {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[40]));
            }
        }
        
        /// <remarks/>
        public int excludecancellations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[41]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerMailingQueryLoadbyEmpeenoCompletedEventHandler(object sender, CustomerMailingQueryLoadbyEmpeenoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerMailingQueryLoadbyEmpeenoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerMailingQueryLoadbyEmpeenoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IssuePrizeVouchersCompletedEventHandler(object sender, IssuePrizeVouchersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IssuePrizeVouchersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IssuePrizeVouchersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dateIssued {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPrizeVoucherDetailsCompletedEventHandler(object sender, GetPrizeVoucherDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrizeVoucherDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrizeVoucherDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeletePrizeVouchersCompletedEventHandler(object sender, DeletePrizeVouchersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePrizeVouchersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePrizeVouchersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveCustomerPhotoCompletedEventHandler(object sender, SaveCustomerPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCustomerPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCustomerPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveCustomerSignatureCompletedEventHandler(object sender, SaveCustomerSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCustomerSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCustomerSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerPhotoCompletedEventHandler(object sender, GetCustomerPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllCustomerPhotosCompletedEventHandler(object sender, GetAllCustomerPhotosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustomerPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustomerPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerSignatureCompletedEventHandler(object sender, GetCustomerSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarrantySecondEffortSolicitationItemsCompletedEventHandler(object sender, GetWarrantySecondEffortSolicitationItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantySecondEffortSolicitationItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantySecondEffortSolicitationItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveWarrantySESConfirmationCompletedEventHandler(object sender, SaveWarrantySESConfirmationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWarrantySESConfirmationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWarrantySESConfirmationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GenerateSRCashAndGoCustidCompletedEventHandler(object sender, GenerateSRCashAndGoCustidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateSRCashAndGoCustidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateSRCashAndGoCustidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetDatabycustidCompletedEventHandler(object sender, LoyaltyGetDatabycustidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetDatabycustidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetDatabycustidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Loyalty Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Loyalty)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetDatabyacctnoCompletedEventHandler(object sender, LoyaltyGetDatabyacctnoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetDatabyacctnoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetDatabyacctnoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Loyalty Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Loyalty)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetDatabyMembernoCompletedEventHandler(object sender, LoyaltyGetDatabyMembernoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetDatabyMembernoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetDatabyMembernoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Loyalty Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Loyalty)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyAddFeeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltySaveCompletedEventHandler(object sender, LoyaltySaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltySaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltySaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyCheckCustomerCompletedEventHandler(object sender, LoyaltyCheckCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyCheckCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyCheckCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetCashAccountCompletedEventHandler(object sender, LoyaltyGetCashAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetCashAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetCashAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetVouchersCompletedEventHandler(object sender, LoyaltyGetVouchersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetVouchersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetVouchersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoyaltyVoucher[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoyaltyVoucher[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyAddRejectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetChargesCompletedEventHandler(object sender, LoyaltyGetChargesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string acctno {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal amount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool active {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltySaveVouchersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyIsLinkAccountCompletedEventHandler(object sender, LoyaltyIsLinkAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyIsLinkAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyIsLinkAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyPayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetValidAddressCompletedEventHandler(object sender, LoyaltyGetValidAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetValidAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetValidAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoyaltyValidAddresses[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoyaltyValidAddresses[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyCancelAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyCheckAccountPeriodCompletedEventHandler(object sender, LoyaltyCheckAccountPeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyCheckAccountPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyCheckAccountPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyCheckRemoveFreeDelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGRTCancelFreeDelAdjustCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetHistoryCompletedEventHandler(object sender, LoyaltyGetHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyCheckLinkedAccountCompletedEventHandler(object sender, LoyaltyCheckLinkedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyCheckLinkedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyCheckLinkedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyGetVoucherValueCompletedEventHandler(object sender, LoyaltyGetVoucherValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoyaltyGetVoucherValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoyaltyGetVoucherValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<decimal> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<decimal>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoyaltyRemoveVoucherCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerGetBandCompletedEventHandler(object sender, CustomerGetBandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerGetBandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerGetBandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CustomerSaveBandCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadCustomerCompletedEventHandler(object sender, LoadCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerMmiLimitCompletedEventHandler(object sender, GetCustomerMmiLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerMmiLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerMmiLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isMmiCalculated {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDuplicateCustomersCompletedEventHandler(object sender, GetDuplicateCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDuplicateCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDuplicateCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateDuplicateCustomersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GenerateInvoiceNumberCompletedEventHandler(object sender, GenerateInvoiceNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateInvoiceNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateInvoiceNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetBasicCustomerDetails_WebCompletedEventHandler(object sender, GetBasicCustomerDetails_WebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCustomerDetails_WebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCustomerDetails_WebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591