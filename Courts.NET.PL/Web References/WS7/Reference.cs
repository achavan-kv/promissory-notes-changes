//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace STL.PL.WS7 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WCreditManagerSoap", Namespace="http://strategicthought.com/webservices/")]
    public partial class WCreditManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback GetProposalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProposalStage1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProposalStage2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProposalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProposalStage2OperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProposalFlagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRFLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExistCashLoanOperationCompleted;
        
        private System.Threading.SendOrPostCallback DummySanctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScoringRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveApplicantSpendMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicantSpendMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDependentSpendMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDependentSpendFactorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicantSpendFactorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDependentSpendMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveScoringRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScoreProposalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRFScoringMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTermsTypeMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRFScoringMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTermsTypeMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyTermsTypeMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualReferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferralDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteReferralStageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReferralNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProposalNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindSecondApplicantOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocConfirmationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocConfirmationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnclearedStageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnClearFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestTransactOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSchemaValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferralSummaryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpendLimitReferralOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveScoreHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBSCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadScoreHistforCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyBSRescoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveManualReferralNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMmiMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMmiMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCustomerMmiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMmiThresholdForSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditMmiThresholdUsedInstalmentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WCreditManager() {
            this.Url = "http://localhost/Courts.NET.WS/WCreditManager.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetProposalCompletedEventHandler GetProposalCompleted;
        
        /// <remarks/>
        public event GetProposalStage1CompletedEventHandler GetProposalStage1Completed;
        
        /// <remarks/>
        public event GetProposalStage2CompletedEventHandler GetProposalStage2Completed;
        
        /// <remarks/>
        public event GetReferenceListCompletedEventHandler GetReferenceListCompleted;
        
        /// <remarks/>
        public event SaveProposalCompletedEventHandler SaveProposalCompleted;
        
        /// <remarks/>
        public event SaveProposalStage2CompletedEventHandler SaveProposalStage2Completed;
        
        /// <remarks/>
        public event LoadProposalFlagsCompletedEventHandler LoadProposalFlagsCompleted;
        
        /// <remarks/>
        public event GetRFLimitCompletedEventHandler GetRFLimitCompleted;
        
        /// <remarks/>
        public event GetExistCashLoanCompletedEventHandler GetExistCashLoanCompleted;
        
        /// <remarks/>
        public event DummySanctionCompletedEventHandler DummySanctionCompleted;
        
        /// <remarks/>
        public event GetScoringRulesCompletedEventHandler GetScoringRulesCompleted;
        
        /// <remarks/>
        public event SaveApplicantSpendMatrixCompletedEventHandler SaveApplicantSpendMatrixCompleted;
        
        /// <remarks/>
        public event GetApplicantSpendMatrixCompletedEventHandler GetApplicantSpendMatrixCompleted;
        
        /// <remarks/>
        public event SaveDependentSpendMatrixCompletedEventHandler SaveDependentSpendMatrixCompleted;
        
        /// <remarks/>
        public event GetDependentSpendFactorCompletedEventHandler GetDependentSpendFactorCompleted;
        
        /// <remarks/>
        public event GetApplicantSpendFactorCompletedEventHandler GetApplicantSpendFactorCompleted;
        
        /// <remarks/>
        public event GetDependentSpendMatrixCompletedEventHandler GetDependentSpendMatrixCompleted;
        
        /// <remarks/>
        public event SaveScoringRulesCompletedEventHandler SaveScoringRulesCompleted;
        
        /// <remarks/>
        public event ScoreProposalCompletedEventHandler ScoreProposalCompleted;
        
        /// <remarks/>
        public event GetRFScoringMatrixCompletedEventHandler GetRFScoringMatrixCompleted;
        
        /// <remarks/>
        public event GetTermsTypeMatrixCompletedEventHandler GetTermsTypeMatrixCompleted;
        
        /// <remarks/>
        public event SaveRFScoringMatrixCompletedEventHandler SaveRFScoringMatrixCompleted;
        
        /// <remarks/>
        public event SaveTermsTypeMatrixCompletedEventHandler SaveTermsTypeMatrixCompleted;
        
        /// <remarks/>
        public event ApplyTermsTypeMatrixCompletedEventHandler ApplyTermsTypeMatrixCompleted;
        
        /// <remarks/>
        public event ManualReferCompletedEventHandler ManualReferCompleted;
        
        /// <remarks/>
        public event GetReferralDataCompletedEventHandler GetReferralDataCompleted;
        
        /// <remarks/>
        public event CompleteReferralStageCompletedEventHandler CompleteReferralStageCompleted;
        
        /// <remarks/>
        public event SaveReferralNotesCompletedEventHandler SaveReferralNotesCompleted;
        
        /// <remarks/>
        public event SaveProposalNotesCompletedEventHandler SaveProposalNotesCompleted;
        
        /// <remarks/>
        public event FindSecondApplicantCompletedEventHandler FindSecondApplicantCompleted;
        
        /// <remarks/>
        public event GetDocConfirmationDataCompletedEventHandler GetDocConfirmationDataCompleted;
        
        /// <remarks/>
        public event SaveDocConfirmationCompletedEventHandler SaveDocConfirmationCompleted;
        
        /// <remarks/>
        public event GetUnclearedStageCompletedEventHandler GetUnclearedStageCompleted;
        
        /// <remarks/>
        public event UnClearFlagCompletedEventHandler UnClearFlagCompleted;
        
        /// <remarks/>
        public event TestTransactCompletedEventHandler TestTransactCompleted;
        
        /// <remarks/>
        public event TestSchemaValidationCompletedEventHandler TestSchemaValidationCompleted;
        
        /// <remarks/>
        public event GetReferralSummaryDataCompletedEventHandler GetReferralSummaryDataCompleted;
        
        /// <remarks/>
        public event SpendLimitReferralCompletedEventHandler SpendLimitReferralCompleted;
        
        /// <remarks/>
        public event SaveScoreHistCompletedEventHandler SaveScoreHistCompleted;
        
        /// <remarks/>
        public event LoadBSCustomersCompletedEventHandler LoadBSCustomersCompleted;
        
        /// <remarks/>
        public event LoadScoreHistforCustomerCompletedEventHandler LoadScoreHistforCustomerCompleted;
        
        /// <remarks/>
        public event ApplyBSRescoreCompletedEventHandler ApplyBSRescoreCompleted;
        
        /// <remarks/>
        public event SaveManualReferralNotesCompletedEventHandler SaveManualReferralNotesCompleted;
        
        /// <remarks/>
        public event GetMmiMatrixCompletedEventHandler GetMmiMatrixCompleted;
        
        /// <remarks/>
        public event SaveMmiMatrixCompletedEventHandler SaveMmiMatrixCompleted;
        
        /// <remarks/>
        public event SaveCustomerMmiCompletedEventHandler SaveCustomerMmiCompleted;
        
        /// <remarks/>
        public event GetMmiThresholdForSaleCompletedEventHandler GetMmiThresholdForSaleCompleted;
        
        /// <remarks/>
        public event AuditMmiThresholdUsedInstalmentCompletedEventHandler AuditMmiThresholdUsedInstalmentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/1", RequestElementName="1", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="1Response", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("1Result")]
        public System.Data.DataSet GetProposal(string customerID, string accountNo, System.DateTime dateProp, string mode, out string err) {
            object[] results = this.Invoke("GetProposal", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        mode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProposal(string customerID, string accountNo, System.DateTime dateProp, string mode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProposal", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        mode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetProposal(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProposalAsync(string customerID, string accountNo, System.DateTime dateProp, string mode) {
            this.GetProposalAsync(customerID, accountNo, dateProp, mode, null);
        }
        
        /// <remarks/>
        public void GetProposalAsync(string customerID, string accountNo, System.DateTime dateProp, string mode, object userState) {
            if ((this.GetProposalOperationCompleted == null)) {
                this.GetProposalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProposalOperationCompleted);
            }
            this.InvokeAsync("GetProposal", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        mode}, this.GetProposalOperationCompleted, userState);
        }
        
        private void OnGetProposalOperationCompleted(object arg) {
            if ((this.GetProposalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProposalCompleted(this, new GetProposalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/2", RequestElementName="2", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="2Response", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("2Result")]
        public System.Data.DataSet GetProposalStage1(string customerID, string accountNo, string mode, string relation, out string err) {
            object[] results = this.Invoke("GetProposalStage1", new object[] {
                        customerID,
                        accountNo,
                        mode,
                        relation});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProposalStage1(string customerID, string accountNo, string mode, string relation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProposalStage1", new object[] {
                        customerID,
                        accountNo,
                        mode,
                        relation}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetProposalStage1(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProposalStage1Async(string customerID, string accountNo, string mode, string relation) {
            this.GetProposalStage1Async(customerID, accountNo, mode, relation, null);
        }
        
        /// <remarks/>
        public void GetProposalStage1Async(string customerID, string accountNo, string mode, string relation, object userState) {
            if ((this.GetProposalStage1OperationCompleted == null)) {
                this.GetProposalStage1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProposalStage1OperationCompleted);
            }
            this.InvokeAsync("GetProposalStage1", new object[] {
                        customerID,
                        accountNo,
                        mode,
                        relation}, this.GetProposalStage1OperationCompleted, userState);
        }
        
        private void OnGetProposalStage1OperationCompleted(object arg) {
            if ((this.GetProposalStage1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProposalStage1Completed(this, new GetProposalStage1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetProposalStage2", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProposalStage2(string customerID, System.DateTime dtDateProp, string accountNo, string relation, out string err) {
            object[] results = this.Invoke("GetProposalStage2", new object[] {
                        customerID,
                        dtDateProp,
                        accountNo,
                        relation});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProposalStage2(string customerID, System.DateTime dtDateProp, string accountNo, string relation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProposalStage2", new object[] {
                        customerID,
                        dtDateProp,
                        accountNo,
                        relation}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetProposalStage2(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProposalStage2Async(string customerID, System.DateTime dtDateProp, string accountNo, string relation) {
            this.GetProposalStage2Async(customerID, dtDateProp, accountNo, relation, null);
        }
        
        /// <remarks/>
        public void GetProposalStage2Async(string customerID, System.DateTime dtDateProp, string accountNo, string relation, object userState) {
            if ((this.GetProposalStage2OperationCompleted == null)) {
                this.GetProposalStage2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProposalStage2OperationCompleted);
            }
            this.InvokeAsync("GetProposalStage2", new object[] {
                        customerID,
                        dtDateProp,
                        accountNo,
                        relation}, this.GetProposalStage2OperationCompleted, userState);
        }
        
        private void OnGetProposalStage2OperationCompleted(object arg) {
            if ((this.GetProposalStage2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProposalStage2Completed(this, new GetProposalStage2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetReferenceList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReferenceList(string custId, out string err) {
            object[] results = this.Invoke("GetReferenceList", new object[] {
                        custId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReferenceList(string custId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReferenceList", new object[] {
                        custId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReferenceList(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceListAsync(string custId) {
            this.GetReferenceListAsync(custId, null);
        }
        
        /// <remarks/>
        public void GetReferenceListAsync(string custId, object userState) {
            if ((this.GetReferenceListOperationCompleted == null)) {
                this.GetReferenceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceListOperationCompleted);
            }
            this.InvokeAsync("GetReferenceList", new object[] {
                        custId}, this.GetReferenceListOperationCompleted, userState);
        }
        
        private void OnGetReferenceListOperationCompleted(object arg) {
            if ((this.GetReferenceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceListCompleted(this, new GetReferenceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveProposal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveProposal(string customerID, string accountNo, System.Data.DataSet app1, System.Data.DataSet app2, bool sanction, out string err) {
            object[] results = this.Invoke("SaveProposal", new object[] {
                        customerID,
                        accountNo,
                        app1,
                        app2,
                        sanction});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveProposal(string customerID, string accountNo, System.Data.DataSet app1, System.Data.DataSet app2, bool sanction, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveProposal", new object[] {
                        customerID,
                        accountNo,
                        app1,
                        app2,
                        sanction}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveProposal(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProposalAsync(string customerID, string accountNo, System.Data.DataSet app1, System.Data.DataSet app2, bool sanction) {
            this.SaveProposalAsync(customerID, accountNo, app1, app2, sanction, null);
        }
        
        /// <remarks/>
        public void SaveProposalAsync(string customerID, string accountNo, System.Data.DataSet app1, System.Data.DataSet app2, bool sanction, object userState) {
            if ((this.SaveProposalOperationCompleted == null)) {
                this.SaveProposalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProposalOperationCompleted);
            }
            this.InvokeAsync("SaveProposal", new object[] {
                        customerID,
                        accountNo,
                        app1,
                        app2,
                        sanction}, this.SaveProposalOperationCompleted, userState);
        }
        
        private void OnSaveProposalOperationCompleted(object arg) {
            if ((this.SaveProposalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProposalCompleted(this, new SaveProposalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveProposalStage2", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveProposalStage2(string customerID, string accountNo, System.Data.DataSet app1, System.Data.DataSet app2, bool complete, out string err) {
            object[] results = this.Invoke("SaveProposalStage2", new object[] {
                        customerID,
                        accountNo,
                        app1,
                        app2,
                        complete});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveProposalStage2(string customerID, string accountNo, System.Data.DataSet app1, System.Data.DataSet app2, bool complete, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveProposalStage2", new object[] {
                        customerID,
                        accountNo,
                        app1,
                        app2,
                        complete}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveProposalStage2(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProposalStage2Async(string customerID, string accountNo, System.Data.DataSet app1, System.Data.DataSet app2, bool complete) {
            this.SaveProposalStage2Async(customerID, accountNo, app1, app2, complete, null);
        }
        
        /// <remarks/>
        public void SaveProposalStage2Async(string customerID, string accountNo, System.Data.DataSet app1, System.Data.DataSet app2, bool complete, object userState) {
            if ((this.SaveProposalStage2OperationCompleted == null)) {
                this.SaveProposalStage2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProposalStage2OperationCompleted);
            }
            this.InvokeAsync("SaveProposalStage2", new object[] {
                        customerID,
                        accountNo,
                        app1,
                        app2,
                        complete}, this.SaveProposalStage2OperationCompleted, userState);
        }
        
        private void OnSaveProposalStage2OperationCompleted(object arg) {
            if ((this.SaveProposalStage2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProposalStage2Completed(this, new SaveProposalStage2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadProposalFlags", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadProposalFlags(string accountNo, string customerID, System.DateTime dateProp, out bool holdProp, out string currentStatus, out string err) {
            object[] results = this.Invoke("LoadProposalFlags", new object[] {
                        accountNo,
                        customerID,
                        dateProp});
            holdProp = ((bool)(results[1]));
            currentStatus = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadProposalFlags(string accountNo, string customerID, System.DateTime dateProp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadProposalFlags", new object[] {
                        accountNo,
                        customerID,
                        dateProp}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadProposalFlags(System.IAsyncResult asyncResult, out bool holdProp, out string currentStatus, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            holdProp = ((bool)(results[1]));
            currentStatus = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadProposalFlagsAsync(string accountNo, string customerID, System.DateTime dateProp) {
            this.LoadProposalFlagsAsync(accountNo, customerID, dateProp, null);
        }
        
        /// <remarks/>
        public void LoadProposalFlagsAsync(string accountNo, string customerID, System.DateTime dateProp, object userState) {
            if ((this.LoadProposalFlagsOperationCompleted == null)) {
                this.LoadProposalFlagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProposalFlagsOperationCompleted);
            }
            this.InvokeAsync("LoadProposalFlags", new object[] {
                        accountNo,
                        customerID,
                        dateProp}, this.LoadProposalFlagsOperationCompleted, userState);
        }
        
        private void OnLoadProposalFlagsOperationCompleted(object arg) {
            if ((this.LoadProposalFlagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProposalFlagsCompleted(this, new LoadProposalFlagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRFLimit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRFLimit(string customerID, string acctList, string accountType, out decimal limit, out decimal available, out bool wrongType, out string err) {
            object[] results = this.Invoke("GetRFLimit", new object[] {
                        customerID,
                        acctList,
                        accountType});
            limit = ((decimal)(results[1]));
            available = ((decimal)(results[2]));
            wrongType = ((bool)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRFLimit(string customerID, string acctList, string accountType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRFLimit", new object[] {
                        customerID,
                        acctList,
                        accountType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetRFLimit(System.IAsyncResult asyncResult, out decimal limit, out decimal available, out bool wrongType, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            limit = ((decimal)(results[1]));
            available = ((decimal)(results[2]));
            wrongType = ((bool)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRFLimitAsync(string customerID, string acctList, string accountType) {
            this.GetRFLimitAsync(customerID, acctList, accountType, null);
        }
        
        /// <remarks/>
        public void GetRFLimitAsync(string customerID, string acctList, string accountType, object userState) {
            if ((this.GetRFLimitOperationCompleted == null)) {
                this.GetRFLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRFLimitOperationCompleted);
            }
            this.InvokeAsync("GetRFLimit", new object[] {
                        customerID,
                        acctList,
                        accountType}, this.GetRFLimitOperationCompleted, userState);
        }
        
        private void OnGetRFLimitOperationCompleted(object arg) {
            if ((this.GetRFLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRFLimitCompleted(this, new GetRFLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetExistCashLoan", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetExistCashLoan(string customerID, out decimal limit, out string err) {
            object[] results = this.Invoke("GetExistCashLoan", new object[] {
                        customerID});
            limit = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExistCashLoan(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExistCashLoan", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetExistCashLoan(System.IAsyncResult asyncResult, out decimal limit, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            limit = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetExistCashLoanAsync(string customerID) {
            this.GetExistCashLoanAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetExistCashLoanAsync(string customerID, object userState) {
            if ((this.GetExistCashLoanOperationCompleted == null)) {
                this.GetExistCashLoanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExistCashLoanOperationCompleted);
            }
            this.InvokeAsync("GetExistCashLoan", new object[] {
                        customerID}, this.GetExistCashLoanOperationCompleted, userState);
        }
        
        private void OnGetExistCashLoanOperationCompleted(object arg) {
            if ((this.GetExistCashLoanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExistCashLoanCompleted(this, new GetExistCashLoanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DummySanction", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal DummySanction(string accountNo, string customerID, System.DateTime timeStamp, out string err) {
            object[] results = this.Invoke("DummySanction", new object[] {
                        accountNo,
                        customerID,
                        timeStamp});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDummySanction(string accountNo, string customerID, System.DateTime timeStamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DummySanction", new object[] {
                        accountNo,
                        customerID,
                        timeStamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndDummySanction(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void DummySanctionAsync(string accountNo, string customerID, System.DateTime timeStamp) {
            this.DummySanctionAsync(accountNo, customerID, timeStamp, null);
        }
        
        /// <remarks/>
        public void DummySanctionAsync(string accountNo, string customerID, System.DateTime timeStamp, object userState) {
            if ((this.DummySanctionOperationCompleted == null)) {
                this.DummySanctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDummySanctionOperationCompleted);
            }
            this.InvokeAsync("DummySanction", new object[] {
                        accountNo,
                        customerID,
                        timeStamp}, this.DummySanctionOperationCompleted, userState);
        }
        
        private void OnDummySanctionOperationCompleted(object arg) {
            if ((this.DummySanctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DummySanctionCompleted(this, new DummySanctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetScoringRules", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetScoringRules(string country, char scoretype, string region, out string err) {
            object[] results = this.Invoke("GetScoringRules", new object[] {
                        country,
                        scoretype,
                        region});
            err = ((string)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScoringRules(string country, char scoretype, string region, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScoringRules", new object[] {
                        country,
                        scoretype,
                        region}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetScoringRules(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetScoringRulesAsync(string country, char scoretype, string region) {
            this.GetScoringRulesAsync(country, scoretype, region, null);
        }
        
        /// <remarks/>
        public void GetScoringRulesAsync(string country, char scoretype, string region, object userState) {
            if ((this.GetScoringRulesOperationCompleted == null)) {
                this.GetScoringRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScoringRulesOperationCompleted);
            }
            this.InvokeAsync("GetScoringRules", new object[] {
                        country,
                        scoretype,
                        region}, this.GetScoringRulesOperationCompleted, userState);
        }
        
        private void OnGetScoringRulesOperationCompleted(object arg) {
            if ((this.GetScoringRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScoringRulesCompleted(this, new GetScoringRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveApplicantSpendMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveApplicantSpendMatrix(System.Data.DataTable dt, out string err) {
            object[] results = this.Invoke("SaveApplicantSpendMatrix", new object[] {
                        dt});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveApplicantSpendMatrix(System.Data.DataTable dt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveApplicantSpendMatrix", new object[] {
                        dt}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveApplicantSpendMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveApplicantSpendMatrixAsync(System.Data.DataTable dt) {
            this.SaveApplicantSpendMatrixAsync(dt, null);
        }
        
        /// <remarks/>
        public void SaveApplicantSpendMatrixAsync(System.Data.DataTable dt, object userState) {
            if ((this.SaveApplicantSpendMatrixOperationCompleted == null)) {
                this.SaveApplicantSpendMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveApplicantSpendMatrixOperationCompleted);
            }
            this.InvokeAsync("SaveApplicantSpendMatrix", new object[] {
                        dt}, this.SaveApplicantSpendMatrixOperationCompleted, userState);
        }
        
        private void OnSaveApplicantSpendMatrixOperationCompleted(object arg) {
            if ((this.SaveApplicantSpendMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveApplicantSpendMatrixCompleted(this, new SaveApplicantSpendMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetApplicantSpendMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApplicantSpendMatrix(out string err) {
            object[] results = this.Invoke("GetApplicantSpendMatrix", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetApplicantSpendMatrix(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetApplicantSpendMatrix", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetApplicantSpendMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicantSpendMatrixAsync() {
            this.GetApplicantSpendMatrixAsync(null);
        }
        
        /// <remarks/>
        public void GetApplicantSpendMatrixAsync(object userState) {
            if ((this.GetApplicantSpendMatrixOperationCompleted == null)) {
                this.GetApplicantSpendMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicantSpendMatrixOperationCompleted);
            }
            this.InvokeAsync("GetApplicantSpendMatrix", new object[0], this.GetApplicantSpendMatrixOperationCompleted, userState);
        }
        
        private void OnGetApplicantSpendMatrixOperationCompleted(object arg) {
            if ((this.GetApplicantSpendMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicantSpendMatrixCompleted(this, new GetApplicantSpendMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveDependentSpendMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDependentSpendMatrix(System.Data.DataTable dt, out string err) {
            object[] results = this.Invoke("SaveDependentSpendMatrix", new object[] {
                        dt});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveDependentSpendMatrix(System.Data.DataTable dt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveDependentSpendMatrix", new object[] {
                        dt}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveDependentSpendMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDependentSpendMatrixAsync(System.Data.DataTable dt) {
            this.SaveDependentSpendMatrixAsync(dt, null);
        }
        
        /// <remarks/>
        public void SaveDependentSpendMatrixAsync(System.Data.DataTable dt, object userState) {
            if ((this.SaveDependentSpendMatrixOperationCompleted == null)) {
                this.SaveDependentSpendMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDependentSpendMatrixOperationCompleted);
            }
            this.InvokeAsync("SaveDependentSpendMatrix", new object[] {
                        dt}, this.SaveDependentSpendMatrixOperationCompleted, userState);
        }
        
        private void OnSaveDependentSpendMatrixOperationCompleted(object arg) {
            if ((this.SaveDependentSpendMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDependentSpendMatrixCompleted(this, new SaveDependentSpendMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDependentSpendFactor", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetDependentSpendFactor(decimal noOfDep, out string err) {
            object[] results = this.Invoke("GetDependentSpendFactor", new object[] {
                        noOfDep});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDependentSpendFactor(decimal noOfDep, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDependentSpendFactor", new object[] {
                        noOfDep}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndGetDependentSpendFactor(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetDependentSpendFactorAsync(decimal noOfDep) {
            this.GetDependentSpendFactorAsync(noOfDep, null);
        }
        
        /// <remarks/>
        public void GetDependentSpendFactorAsync(decimal noOfDep, object userState) {
            if ((this.GetDependentSpendFactorOperationCompleted == null)) {
                this.GetDependentSpendFactorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDependentSpendFactorOperationCompleted);
            }
            this.InvokeAsync("GetDependentSpendFactor", new object[] {
                        noOfDep}, this.GetDependentSpendFactorOperationCompleted, userState);
        }
        
        private void OnGetDependentSpendFactorOperationCompleted(object arg) {
            if ((this.GetDependentSpendFactorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDependentSpendFactorCompleted(this, new GetDependentSpendFactorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetApplicantSpendFactor", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetApplicantSpendFactor(string income, out string err) {
            object[] results = this.Invoke("GetApplicantSpendFactor", new object[] {
                        income});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetApplicantSpendFactor(string income, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetApplicantSpendFactor", new object[] {
                        income}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndGetApplicantSpendFactor(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicantSpendFactorAsync(string income) {
            this.GetApplicantSpendFactorAsync(income, null);
        }
        
        /// <remarks/>
        public void GetApplicantSpendFactorAsync(string income, object userState) {
            if ((this.GetApplicantSpendFactorOperationCompleted == null)) {
                this.GetApplicantSpendFactorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicantSpendFactorOperationCompleted);
            }
            this.InvokeAsync("GetApplicantSpendFactor", new object[] {
                        income}, this.GetApplicantSpendFactorOperationCompleted, userState);
        }
        
        private void OnGetApplicantSpendFactorOperationCompleted(object arg) {
            if ((this.GetApplicantSpendFactorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicantSpendFactorCompleted(this, new GetApplicantSpendFactorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDependentSpendMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDependentSpendMatrix(out string err) {
            object[] results = this.Invoke("GetDependentSpendMatrix", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDependentSpendMatrix(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDependentSpendMatrix", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDependentSpendMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDependentSpendMatrixAsync() {
            this.GetDependentSpendMatrixAsync(null);
        }
        
        /// <remarks/>
        public void GetDependentSpendMatrixAsync(object userState) {
            if ((this.GetDependentSpendMatrixOperationCompleted == null)) {
                this.GetDependentSpendMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDependentSpendMatrixOperationCompleted);
            }
            this.InvokeAsync("GetDependentSpendMatrix", new object[0], this.GetDependentSpendMatrixOperationCompleted, userState);
        }
        
        private void OnGetDependentSpendMatrixOperationCompleted(object arg) {
            if ((this.GetDependentSpendMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDependentSpendMatrixCompleted(this, new GetDependentSpendMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveScoringRules", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveScoringRules(string country, System.Xml.XmlNode rules, string region, out string err) {
            object[] results = this.Invoke("SaveScoringRules", new object[] {
                        country,
                        rules,
                        region});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveScoringRules(string country, System.Xml.XmlNode rules, string region, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveScoringRules", new object[] {
                        country,
                        rules,
                        region}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveScoringRules(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveScoringRulesAsync(string country, System.Xml.XmlNode rules, string region) {
            this.SaveScoringRulesAsync(country, rules, region, null);
        }
        
        /// <remarks/>
        public void SaveScoringRulesAsync(string country, System.Xml.XmlNode rules, string region, object userState) {
            if ((this.SaveScoringRulesOperationCompleted == null)) {
                this.SaveScoringRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveScoringRulesOperationCompleted);
            }
            this.InvokeAsync("SaveScoringRules", new object[] {
                        country,
                        rules,
                        region}, this.SaveScoringRulesOperationCompleted, userState);
        }
        
        private void OnSaveScoringRulesOperationCompleted(object arg) {
            if ((this.SaveScoringRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveScoringRulesCompleted(this, new SaveScoringRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ScoreProposal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ScoreProposal(
                    string country, 
                    string accountNo, 
                    string accountType, 
                    string customerID, 
                    System.DateTime dateProp, 
                    short branchNo, 
                    ref bool referDeclined, 
                    int user, 
                    out string newBand, 
                    out string refCode, 
                    out decimal points, 
                    out decimal RFLimit, 
                    out string result, 
                    out string bureauFailure, 
                    out string referralReasons, 
                    out string err) {
            object[] results = this.Invoke("ScoreProposal", new object[] {
                        country,
                        accountNo,
                        accountType,
                        customerID,
                        dateProp,
                        branchNo,
                        referDeclined,
                        user});
            referDeclined = ((bool)(results[1]));
            newBand = ((string)(results[2]));
            refCode = ((string)(results[3]));
            points = ((decimal)(results[4]));
            RFLimit = ((decimal)(results[5]));
            result = ((string)(results[6]));
            bureauFailure = ((string)(results[7]));
            referralReasons = ((string)(results[8]));
            err = ((string)(results[9]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginScoreProposal(string country, string accountNo, string accountType, string customerID, System.DateTime dateProp, short branchNo, bool referDeclined, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ScoreProposal", new object[] {
                        country,
                        accountNo,
                        accountType,
                        customerID,
                        dateProp,
                        branchNo,
                        referDeclined,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndScoreProposal(System.IAsyncResult asyncResult, out bool referDeclined, out string newBand, out string refCode, out decimal points, out decimal RFLimit, out string result, out string bureauFailure, out string referralReasons, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            referDeclined = ((bool)(results[1]));
            newBand = ((string)(results[2]));
            refCode = ((string)(results[3]));
            points = ((decimal)(results[4]));
            RFLimit = ((decimal)(results[5]));
            result = ((string)(results[6]));
            bureauFailure = ((string)(results[7]));
            referralReasons = ((string)(results[8]));
            err = ((string)(results[9]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ScoreProposalAsync(string country, string accountNo, string accountType, string customerID, System.DateTime dateProp, short branchNo, bool referDeclined, int user) {
            this.ScoreProposalAsync(country, accountNo, accountType, customerID, dateProp, branchNo, referDeclined, user, null);
        }
        
        /// <remarks/>
        public void ScoreProposalAsync(string country, string accountNo, string accountType, string customerID, System.DateTime dateProp, short branchNo, bool referDeclined, int user, object userState) {
            if ((this.ScoreProposalOperationCompleted == null)) {
                this.ScoreProposalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScoreProposalOperationCompleted);
            }
            this.InvokeAsync("ScoreProposal", new object[] {
                        country,
                        accountNo,
                        accountType,
                        customerID,
                        dateProp,
                        branchNo,
                        referDeclined,
                        user}, this.ScoreProposalOperationCompleted, userState);
        }
        
        private void OnScoreProposalOperationCompleted(object arg) {
            if ((this.ScoreProposalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScoreProposalCompleted(this, new ScoreProposalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRFScoringMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRFScoringMatrix(string country, char scoretype, string region, out string err) {
            object[] results = this.Invoke("GetRFScoringMatrix", new object[] {
                        country,
                        scoretype,
                        region});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRFScoringMatrix(string country, char scoretype, string region, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRFScoringMatrix", new object[] {
                        country,
                        scoretype,
                        region}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRFScoringMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRFScoringMatrixAsync(string country, char scoretype, string region) {
            this.GetRFScoringMatrixAsync(country, scoretype, region, null);
        }
        
        /// <remarks/>
        public void GetRFScoringMatrixAsync(string country, char scoretype, string region, object userState) {
            if ((this.GetRFScoringMatrixOperationCompleted == null)) {
                this.GetRFScoringMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRFScoringMatrixOperationCompleted);
            }
            this.InvokeAsync("GetRFScoringMatrix", new object[] {
                        country,
                        scoretype,
                        region}, this.GetRFScoringMatrixOperationCompleted, userState);
        }
        
        private void OnGetRFScoringMatrixOperationCompleted(object arg) {
            if ((this.GetRFScoringMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRFScoringMatrixCompleted(this, new GetRFScoringMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTermsTypeMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTermsTypeMatrix(string country, char scoretype, out string err) {
            object[] results = this.Invoke("GetTermsTypeMatrix", new object[] {
                        country,
                        scoretype});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTermsTypeMatrix(string country, char scoretype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTermsTypeMatrix", new object[] {
                        country,
                        scoretype}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTermsTypeMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTermsTypeMatrixAsync(string country, char scoretype) {
            this.GetTermsTypeMatrixAsync(country, scoretype, null);
        }
        
        /// <remarks/>
        public void GetTermsTypeMatrixAsync(string country, char scoretype, object userState) {
            if ((this.GetTermsTypeMatrixOperationCompleted == null)) {
                this.GetTermsTypeMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTermsTypeMatrixOperationCompleted);
            }
            this.InvokeAsync("GetTermsTypeMatrix", new object[] {
                        country,
                        scoretype}, this.GetTermsTypeMatrixOperationCompleted, userState);
        }
        
        private void OnGetTermsTypeMatrixOperationCompleted(object arg) {
            if ((this.GetTermsTypeMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTermsTypeMatrixCompleted(this, new GetTermsTypeMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveRFScoringMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveRFScoringMatrix(string fileName, string countryCode, char scoretype, string region, System.Data.DataSet matrix, bool newImport, out string err) {
            object[] results = this.Invoke("SaveRFScoringMatrix", new object[] {
                        fileName,
                        countryCode,
                        scoretype,
                        region,
                        matrix,
                        newImport});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveRFScoringMatrix(string fileName, string countryCode, char scoretype, string region, System.Data.DataSet matrix, bool newImport, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveRFScoringMatrix", new object[] {
                        fileName,
                        countryCode,
                        scoretype,
                        region,
                        matrix,
                        newImport}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveRFScoringMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRFScoringMatrixAsync(string fileName, string countryCode, char scoretype, string region, System.Data.DataSet matrix, bool newImport) {
            this.SaveRFScoringMatrixAsync(fileName, countryCode, scoretype, region, matrix, newImport, null);
        }
        
        /// <remarks/>
        public void SaveRFScoringMatrixAsync(string fileName, string countryCode, char scoretype, string region, System.Data.DataSet matrix, bool newImport, object userState) {
            if ((this.SaveRFScoringMatrixOperationCompleted == null)) {
                this.SaveRFScoringMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRFScoringMatrixOperationCompleted);
            }
            this.InvokeAsync("SaveRFScoringMatrix", new object[] {
                        fileName,
                        countryCode,
                        scoretype,
                        region,
                        matrix,
                        newImport}, this.SaveRFScoringMatrixOperationCompleted, userState);
        }
        
        private void OnSaveRFScoringMatrixOperationCompleted(object arg) {
            if ((this.SaveRFScoringMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRFScoringMatrixCompleted(this, new SaveRFScoringMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveTermsTypeMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveTermsTypeMatrix(string fileName, string countryCode, char scoretype, System.Data.DataSet matrix, bool newImport, out string err) {
            object[] results = this.Invoke("SaveTermsTypeMatrix", new object[] {
                        fileName,
                        countryCode,
                        scoretype,
                        matrix,
                        newImport});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveTermsTypeMatrix(string fileName, string countryCode, char scoretype, System.Data.DataSet matrix, bool newImport, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveTermsTypeMatrix", new object[] {
                        fileName,
                        countryCode,
                        scoretype,
                        matrix,
                        newImport}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveTermsTypeMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTermsTypeMatrixAsync(string fileName, string countryCode, char scoretype, System.Data.DataSet matrix, bool newImport) {
            this.SaveTermsTypeMatrixAsync(fileName, countryCode, scoretype, matrix, newImport, null);
        }
        
        /// <remarks/>
        public void SaveTermsTypeMatrixAsync(string fileName, string countryCode, char scoretype, System.Data.DataSet matrix, bool newImport, object userState) {
            if ((this.SaveTermsTypeMatrixOperationCompleted == null)) {
                this.SaveTermsTypeMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTermsTypeMatrixOperationCompleted);
            }
            this.InvokeAsync("SaveTermsTypeMatrix", new object[] {
                        fileName,
                        countryCode,
                        scoretype,
                        matrix,
                        newImport}, this.SaveTermsTypeMatrixOperationCompleted, userState);
        }
        
        private void OnSaveTermsTypeMatrixOperationCompleted(object arg) {
            if ((this.SaveTermsTypeMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTermsTypeMatrixCompleted(this, new SaveTermsTypeMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ApplyTermsTypeMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ApplyTermsTypeMatrix(System.DateTime startDate, char scorecard, out string err) {
            object[] results = this.Invoke("ApplyTermsTypeMatrix", new object[] {
                        startDate,
                        scorecard});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApplyTermsTypeMatrix(System.DateTime startDate, char scorecard, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApplyTermsTypeMatrix", new object[] {
                        startDate,
                        scorecard}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndApplyTermsTypeMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyTermsTypeMatrixAsync(System.DateTime startDate, char scorecard) {
            this.ApplyTermsTypeMatrixAsync(startDate, scorecard, null);
        }
        
        /// <remarks/>
        public void ApplyTermsTypeMatrixAsync(System.DateTime startDate, char scorecard, object userState) {
            if ((this.ApplyTermsTypeMatrixOperationCompleted == null)) {
                this.ApplyTermsTypeMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyTermsTypeMatrixOperationCompleted);
            }
            this.InvokeAsync("ApplyTermsTypeMatrix", new object[] {
                        startDate,
                        scorecard}, this.ApplyTermsTypeMatrixOperationCompleted, userState);
        }
        
        private void OnApplyTermsTypeMatrixOperationCompleted(object arg) {
            if ((this.ApplyTermsTypeMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyTermsTypeMatrixCompleted(this, new ApplyTermsTypeMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ManualRefer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ManualRefer(string customerID, string accountNo, System.DateTime dateProp, bool isManualRefer, bool cashLoan, out string err) {
            object[] results = this.Invoke("ManualRefer", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        isManualRefer,
                        cashLoan});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginManualRefer(string customerID, string accountNo, System.DateTime dateProp, bool isManualRefer, bool cashLoan, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ManualRefer", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        isManualRefer,
                        cashLoan}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndManualRefer(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ManualReferAsync(string customerID, string accountNo, System.DateTime dateProp, bool isManualRefer, bool cashLoan) {
            this.ManualReferAsync(customerID, accountNo, dateProp, isManualRefer, cashLoan, null);
        }
        
        /// <remarks/>
        public void ManualReferAsync(string customerID, string accountNo, System.DateTime dateProp, bool isManualRefer, bool cashLoan, object userState) {
            if ((this.ManualReferOperationCompleted == null)) {
                this.ManualReferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualReferOperationCompleted);
            }
            this.InvokeAsync("ManualRefer", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        isManualRefer,
                        cashLoan}, this.ManualReferOperationCompleted, userState);
        }
        
        private void OnManualReferOperationCompleted(object arg) {
            if ((this.ManualReferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualReferCompleted(this, new ManualReferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetReferralData", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReferralData(string customerID, string accountNo, System.DateTime dateProp, string countryCode, out string err) {
            object[] results = this.Invoke("GetReferralData", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        countryCode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReferralData(string customerID, string accountNo, System.DateTime dateProp, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReferralData", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReferralData(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferralDataAsync(string customerID, string accountNo, System.DateTime dateProp, string countryCode) {
            this.GetReferralDataAsync(customerID, accountNo, dateProp, countryCode, null);
        }
        
        /// <remarks/>
        public void GetReferralDataAsync(string customerID, string accountNo, System.DateTime dateProp, string countryCode, object userState) {
            if ((this.GetReferralDataOperationCompleted == null)) {
                this.GetReferralDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferralDataOperationCompleted);
            }
            this.InvokeAsync("GetReferralData", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        countryCode}, this.GetReferralDataOperationCompleted, userState);
        }
        
        private void OnGetReferralDataOperationCompleted(object arg) {
            if ((this.GetReferralDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferralDataCompleted(this, new GetReferralDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CompleteReferralStage", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CompleteReferralStage(string customerID, string accountNo, System.DateTime dateProp, string newNotes, string notes, bool approved, bool rejected, bool reOpen, int branch, decimal creditLimit, string CountryCode, out string err) {
            object[] results = this.Invoke("CompleteReferralStage", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNotes,
                        notes,
                        approved,
                        rejected,
                        reOpen,
                        branch,
                        creditLimit,
                        CountryCode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCompleteReferralStage(string customerID, string accountNo, System.DateTime dateProp, string newNotes, string notes, bool approved, bool rejected, bool reOpen, int branch, decimal creditLimit, string CountryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CompleteReferralStage", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNotes,
                        notes,
                        approved,
                        rejected,
                        reOpen,
                        branch,
                        creditLimit,
                        CountryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCompleteReferralStage(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteReferralStageAsync(string customerID, string accountNo, System.DateTime dateProp, string newNotes, string notes, bool approved, bool rejected, bool reOpen, int branch, decimal creditLimit, string CountryCode) {
            this.CompleteReferralStageAsync(customerID, accountNo, dateProp, newNotes, notes, approved, rejected, reOpen, branch, creditLimit, CountryCode, null);
        }
        
        /// <remarks/>
        public void CompleteReferralStageAsync(string customerID, string accountNo, System.DateTime dateProp, string newNotes, string notes, bool approved, bool rejected, bool reOpen, int branch, decimal creditLimit, string CountryCode, object userState) {
            if ((this.CompleteReferralStageOperationCompleted == null)) {
                this.CompleteReferralStageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteReferralStageOperationCompleted);
            }
            this.InvokeAsync("CompleteReferralStage", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNotes,
                        notes,
                        approved,
                        rejected,
                        reOpen,
                        branch,
                        creditLimit,
                        CountryCode}, this.CompleteReferralStageOperationCompleted, userState);
        }
        
        private void OnCompleteReferralStageOperationCompleted(object arg) {
            if ((this.CompleteReferralStageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteReferralStageCompleted(this, new CompleteReferralStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveReferralNotes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveReferralNotes(string customerID, string accountNo, System.DateTime dateProp, string newNote, decimal creditLimit, string countryCode, out string err) {
            object[] results = this.Invoke("SaveReferralNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNote,
                        creditLimit,
                        countryCode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveReferralNotes(string customerID, string accountNo, System.DateTime dateProp, string newNote, decimal creditLimit, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveReferralNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNote,
                        creditLimit,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveReferralNotes(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReferralNotesAsync(string customerID, string accountNo, System.DateTime dateProp, string newNote, decimal creditLimit, string countryCode) {
            this.SaveReferralNotesAsync(customerID, accountNo, dateProp, newNote, creditLimit, countryCode, null);
        }
        
        /// <remarks/>
        public void SaveReferralNotesAsync(string customerID, string accountNo, System.DateTime dateProp, string newNote, decimal creditLimit, string countryCode, object userState) {
            if ((this.SaveReferralNotesOperationCompleted == null)) {
                this.SaveReferralNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReferralNotesOperationCompleted);
            }
            this.InvokeAsync("SaveReferralNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNote,
                        creditLimit,
                        countryCode}, this.SaveReferralNotesOperationCompleted, userState);
        }
        
        private void OnSaveReferralNotesOperationCompleted(object arg) {
            if ((this.SaveReferralNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReferralNotesCompleted(this, new SaveReferralNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveProposalNotes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveProposalNotes(string customerID, string accountNo, System.DateTime dateProp, string notes, out string err) {
            object[] results = this.Invoke("SaveProposalNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        notes});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveProposalNotes(string customerID, string accountNo, System.DateTime dateProp, string notes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveProposalNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        notes}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveProposalNotes(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProposalNotesAsync(string customerID, string accountNo, System.DateTime dateProp, string notes) {
            this.SaveProposalNotesAsync(customerID, accountNo, dateProp, notes, null);
        }
        
        /// <remarks/>
        public void SaveProposalNotesAsync(string customerID, string accountNo, System.DateTime dateProp, string notes, object userState) {
            if ((this.SaveProposalNotesOperationCompleted == null)) {
                this.SaveProposalNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProposalNotesOperationCompleted);
            }
            this.InvokeAsync("SaveProposalNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        notes}, this.SaveProposalNotesOperationCompleted, userState);
        }
        
        private void OnSaveProposalNotesOperationCompleted(object arg) {
            if ((this.SaveProposalNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProposalNotesCompleted(this, new SaveProposalNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/FindSecondApplicant", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindSecondApplicant(string customerID, string accountNo, string relation, out string err) {
            object[] results = this.Invoke("FindSecondApplicant", new object[] {
                        customerID,
                        accountNo,
                        relation});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindSecondApplicant(string customerID, string accountNo, string relation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindSecondApplicant", new object[] {
                        customerID,
                        accountNo,
                        relation}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndFindSecondApplicant(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindSecondApplicantAsync(string customerID, string accountNo, string relation) {
            this.FindSecondApplicantAsync(customerID, accountNo, relation, null);
        }
        
        /// <remarks/>
        public void FindSecondApplicantAsync(string customerID, string accountNo, string relation, object userState) {
            if ((this.FindSecondApplicantOperationCompleted == null)) {
                this.FindSecondApplicantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindSecondApplicantOperationCompleted);
            }
            this.InvokeAsync("FindSecondApplicant", new object[] {
                        customerID,
                        accountNo,
                        relation}, this.FindSecondApplicantOperationCompleted, userState);
        }
        
        private void OnFindSecondApplicantOperationCompleted(object arg) {
            if ((this.FindSecondApplicantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindSecondApplicantCompleted(this, new FindSecondApplicantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDocConfirmationData", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDocConfirmationData(string customerID, string accountNo, System.DateTime dateProp, out string err) {
            object[] results = this.Invoke("GetDocConfirmationData", new object[] {
                        customerID,
                        accountNo,
                        dateProp});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocConfirmationData(string customerID, string accountNo, System.DateTime dateProp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocConfirmationData", new object[] {
                        customerID,
                        accountNo,
                        dateProp}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDocConfirmationData(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocConfirmationDataAsync(string customerID, string accountNo, System.DateTime dateProp) {
            this.GetDocConfirmationDataAsync(customerID, accountNo, dateProp, null);
        }
        
        /// <remarks/>
        public void GetDocConfirmationDataAsync(string customerID, string accountNo, System.DateTime dateProp, object userState) {
            if ((this.GetDocConfirmationDataOperationCompleted == null)) {
                this.GetDocConfirmationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocConfirmationDataOperationCompleted);
            }
            this.InvokeAsync("GetDocConfirmationData", new object[] {
                        customerID,
                        accountNo,
                        dateProp}, this.GetDocConfirmationDataOperationCompleted, userState);
        }
        
        private void OnGetDocConfirmationDataOperationCompleted(object arg) {
            if ((this.GetDocConfirmationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocConfirmationDataCompleted(this, new GetDocConfirmationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveDocConfirmation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDocConfirmation(string acctno, System.Data.DataSet propData, bool complete, out string err) {
            object[] results = this.Invoke("SaveDocConfirmation", new object[] {
                        acctno,
                        propData,
                        complete});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveDocConfirmation(string acctno, System.Data.DataSet propData, bool complete, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveDocConfirmation", new object[] {
                        acctno,
                        propData,
                        complete}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveDocConfirmation(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocConfirmationAsync(string acctno, System.Data.DataSet propData, bool complete) {
            this.SaveDocConfirmationAsync(acctno, propData, complete, null);
        }
        
        /// <remarks/>
        public void SaveDocConfirmationAsync(string acctno, System.Data.DataSet propData, bool complete, object userState) {
            if ((this.SaveDocConfirmationOperationCompleted == null)) {
                this.SaveDocConfirmationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocConfirmationOperationCompleted);
            }
            this.InvokeAsync("SaveDocConfirmation", new object[] {
                        acctno,
                        propData,
                        complete}, this.SaveDocConfirmationOperationCompleted, userState);
        }
        
        private void OnSaveDocConfirmationOperationCompleted(object arg) {
            if ((this.SaveDocConfirmationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocConfirmationCompleted(this, new SaveDocConfirmationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetUnclearedStage", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUnclearedStage(string accountNo, ref string newAccount, ref string checkType, ref System.DateTime dateProp, ref string propResult, out string err) {
            object[] results = this.Invoke("GetUnclearedStage", new object[] {
                        accountNo,
                        newAccount,
                        checkType,
                        dateProp,
                        propResult});
            newAccount = ((string)(results[1]));
            checkType = ((string)(results[2]));
            dateProp = ((System.DateTime)(results[3]));
            propResult = ((string)(results[4]));
            err = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUnclearedStage(string accountNo, string newAccount, string checkType, System.DateTime dateProp, string propResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUnclearedStage", new object[] {
                        accountNo,
                        newAccount,
                        checkType,
                        dateProp,
                        propResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetUnclearedStage(System.IAsyncResult asyncResult, out string newAccount, out string checkType, out System.DateTime dateProp, out string propResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            newAccount = ((string)(results[1]));
            checkType = ((string)(results[2]));
            dateProp = ((System.DateTime)(results[3]));
            propResult = ((string)(results[4]));
            err = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnclearedStageAsync(string accountNo, string newAccount, string checkType, System.DateTime dateProp, string propResult) {
            this.GetUnclearedStageAsync(accountNo, newAccount, checkType, dateProp, propResult, null);
        }
        
        /// <remarks/>
        public void GetUnclearedStageAsync(string accountNo, string newAccount, string checkType, System.DateTime dateProp, string propResult, object userState) {
            if ((this.GetUnclearedStageOperationCompleted == null)) {
                this.GetUnclearedStageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnclearedStageOperationCompleted);
            }
            this.InvokeAsync("GetUnclearedStage", new object[] {
                        accountNo,
                        newAccount,
                        checkType,
                        dateProp,
                        propResult}, this.GetUnclearedStageOperationCompleted, userState);
        }
        
        private void OnGetUnclearedStageOperationCompleted(object arg) {
            if ((this.GetUnclearedStageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnclearedStageCompleted(this, new GetUnclearedStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnClearFlag", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnClearFlag(string accountNo, string checkType, bool changeStatus, int user, out string err) {
            object[] results = this.Invoke("UnClearFlag", new object[] {
                        accountNo,
                        checkType,
                        changeStatus,
                        user});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnClearFlag(string accountNo, string checkType, bool changeStatus, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnClearFlag", new object[] {
                        accountNo,
                        checkType,
                        changeStatus,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUnClearFlag(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnClearFlagAsync(string accountNo, string checkType, bool changeStatus, int user) {
            this.UnClearFlagAsync(accountNo, checkType, changeStatus, user, null);
        }
        
        /// <remarks/>
        public void UnClearFlagAsync(string accountNo, string checkType, bool changeStatus, int user, object userState) {
            if ((this.UnClearFlagOperationCompleted == null)) {
                this.UnClearFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnClearFlagOperationCompleted);
            }
            this.InvokeAsync("UnClearFlag", new object[] {
                        accountNo,
                        checkType,
                        changeStatus,
                        user}, this.UnClearFlagOperationCompleted, userState);
        }
        
        private void OnUnClearFlagOperationCompleted(object arg) {
            if ((this.UnClearFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnClearFlagCompleted(this, new UnClearFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TestTransact", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TestTransact(string accountNo, out string err) {
            object[] results = this.Invoke("TestTransact", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestTransact(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestTransact", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndTestTransact(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TestTransactAsync(string accountNo) {
            this.TestTransactAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void TestTransactAsync(string accountNo, object userState) {
            if ((this.TestTransactOperationCompleted == null)) {
                this.TestTransactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestTransactOperationCompleted);
            }
            this.InvokeAsync("TestTransact", new object[] {
                        accountNo}, this.TestTransactOperationCompleted, userState);
        }
        
        private void OnTestTransactOperationCompleted(object arg) {
            if ((this.TestTransactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestTransactCompleted(this, new TestTransactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TestSchemaValidation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestSchemaValidation(out string err) {
            object[] results = this.Invoke("TestSchemaValidation", new object[0]);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestSchemaValidation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestSchemaValidation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndTestSchemaValidation(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestSchemaValidationAsync() {
            this.TestSchemaValidationAsync(null);
        }
        
        /// <remarks/>
        public void TestSchemaValidationAsync(object userState) {
            if ((this.TestSchemaValidationOperationCompleted == null)) {
                this.TestSchemaValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSchemaValidationOperationCompleted);
            }
            this.InvokeAsync("TestSchemaValidation", new object[0], this.TestSchemaValidationOperationCompleted, userState);
        }
        
        private void OnTestSchemaValidationOperationCompleted(object arg) {
            if ((this.TestSchemaValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSchemaValidationCompleted(this, new TestSchemaValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetReferralSummaryData", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReferralSummaryData(string accountNo, string customerID, string accountType, System.DateTime dateProp, out System.Xml.XmlNode lineItems, out string err) {
            object[] results = this.Invoke("GetReferralSummaryData", new object[] {
                        accountNo,
                        customerID,
                        accountType,
                        dateProp});
            lineItems = ((System.Xml.XmlNode)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReferralSummaryData(string accountNo, string customerID, string accountType, System.DateTime dateProp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReferralSummaryData", new object[] {
                        accountNo,
                        customerID,
                        accountType,
                        dateProp}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReferralSummaryData(System.IAsyncResult asyncResult, out System.Xml.XmlNode lineItems, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            lineItems = ((System.Xml.XmlNode)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferralSummaryDataAsync(string accountNo, string customerID, string accountType, System.DateTime dateProp) {
            this.GetReferralSummaryDataAsync(accountNo, customerID, accountType, dateProp, null);
        }
        
        /// <remarks/>
        public void GetReferralSummaryDataAsync(string accountNo, string customerID, string accountType, System.DateTime dateProp, object userState) {
            if ((this.GetReferralSummaryDataOperationCompleted == null)) {
                this.GetReferralSummaryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferralSummaryDataOperationCompleted);
            }
            this.InvokeAsync("GetReferralSummaryData", new object[] {
                        accountNo,
                        customerID,
                        accountType,
                        dateProp}, this.GetReferralSummaryDataOperationCompleted, userState);
        }
        
        private void OnGetReferralSummaryDataOperationCompleted(object arg) {
            if ((this.GetReferralSummaryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferralSummaryDataCompleted(this, new GetReferralSummaryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SpendLimitReferral", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SpendLimitReferral(string customerID, string accountNo, System.DateTime dateProp, string newNotes, decimal creditLimit, string countryCode, out string err) {
            object[] results = this.Invoke("SpendLimitReferral", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNotes,
                        creditLimit,
                        countryCode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSpendLimitReferral(string customerID, string accountNo, System.DateTime dateProp, string newNotes, decimal creditLimit, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SpendLimitReferral", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNotes,
                        creditLimit,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSpendLimitReferral(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SpendLimitReferralAsync(string customerID, string accountNo, System.DateTime dateProp, string newNotes, decimal creditLimit, string countryCode) {
            this.SpendLimitReferralAsync(customerID, accountNo, dateProp, newNotes, creditLimit, countryCode, null);
        }
        
        /// <remarks/>
        public void SpendLimitReferralAsync(string customerID, string accountNo, System.DateTime dateProp, string newNotes, decimal creditLimit, string countryCode, object userState) {
            if ((this.SpendLimitReferralOperationCompleted == null)) {
                this.SpendLimitReferralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpendLimitReferralOperationCompleted);
            }
            this.InvokeAsync("SpendLimitReferral", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        newNotes,
                        creditLimit,
                        countryCode}, this.SpendLimitReferralOperationCompleted, userState);
        }
        
        private void OnSpendLimitReferralOperationCompleted(object arg) {
            if ((this.SpendLimitReferralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpendLimitReferralCompleted(this, new SpendLimitReferralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveScoreHist", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveScoreHist(string CustomerID, System.DateTime dateprop, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> scorecard, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<short> points, float creditlimit, string scoringband, int user, string reasonchanged, string AccountNo, out string err) {
            object[] results = this.Invoke("SaveScoreHist", new object[] {
                        CustomerID,
                        dateprop,
                        scorecard,
                        points,
                        creditlimit,
                        scoringband,
                        user,
                        reasonchanged,
                        AccountNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveScoreHist(string CustomerID, System.DateTime dateprop, System.Nullable<char> scorecard, System.Nullable<short> points, float creditlimit, string scoringband, int user, string reasonchanged, string AccountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveScoreHist", new object[] {
                        CustomerID,
                        dateprop,
                        scorecard,
                        points,
                        creditlimit,
                        scoringband,
                        user,
                        reasonchanged,
                        AccountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveScoreHist(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveScoreHistAsync(string CustomerID, System.DateTime dateprop, System.Nullable<char> scorecard, System.Nullable<short> points, float creditlimit, string scoringband, int user, string reasonchanged, string AccountNo) {
            this.SaveScoreHistAsync(CustomerID, dateprop, scorecard, points, creditlimit, scoringband, user, reasonchanged, AccountNo, null);
        }
        
        /// <remarks/>
        public void SaveScoreHistAsync(string CustomerID, System.DateTime dateprop, System.Nullable<char> scorecard, System.Nullable<short> points, float creditlimit, string scoringband, int user, string reasonchanged, string AccountNo, object userState) {
            if ((this.SaveScoreHistOperationCompleted == null)) {
                this.SaveScoreHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveScoreHistOperationCompleted);
            }
            this.InvokeAsync("SaveScoreHist", new object[] {
                        CustomerID,
                        dateprop,
                        scorecard,
                        points,
                        creditlimit,
                        scoringband,
                        user,
                        reasonchanged,
                        AccountNo}, this.SaveScoreHistOperationCompleted, userState);
        }
        
        private void OnSaveScoreHistOperationCompleted(object arg) {
            if ((this.SaveScoreHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveScoreHistCompleted(this, new SaveScoreHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadBSCustomers", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadBSCustomers(string category, int runno, out string err) {
            object[] results = this.Invoke("LoadBSCustomers", new object[] {
                        category,
                        runno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadBSCustomers(string category, int runno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadBSCustomers", new object[] {
                        category,
                        runno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadBSCustomers(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBSCustomersAsync(string category, int runno) {
            this.LoadBSCustomersAsync(category, runno, null);
        }
        
        /// <remarks/>
        public void LoadBSCustomersAsync(string category, int runno, object userState) {
            if ((this.LoadBSCustomersOperationCompleted == null)) {
                this.LoadBSCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBSCustomersOperationCompleted);
            }
            this.InvokeAsync("LoadBSCustomers", new object[] {
                        category,
                        runno}, this.LoadBSCustomersOperationCompleted, userState);
        }
        
        private void OnLoadBSCustomersOperationCompleted(object arg) {
            if ((this.LoadBSCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBSCustomersCompleted(this, new LoadBSCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadScoreHistforCustomer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadScoreHistforCustomer(string CustomerId, out string err) {
            object[] results = this.Invoke("LoadScoreHistforCustomer", new object[] {
                        CustomerId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadScoreHistforCustomer(string CustomerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadScoreHistforCustomer", new object[] {
                        CustomerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadScoreHistforCustomer(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadScoreHistforCustomerAsync(string CustomerId) {
            this.LoadScoreHistforCustomerAsync(CustomerId, null);
        }
        
        /// <remarks/>
        public void LoadScoreHistforCustomerAsync(string CustomerId, object userState) {
            if ((this.LoadScoreHistforCustomerOperationCompleted == null)) {
                this.LoadScoreHistforCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadScoreHistforCustomerOperationCompleted);
            }
            this.InvokeAsync("LoadScoreHistforCustomer", new object[] {
                        CustomerId}, this.LoadScoreHistforCustomerOperationCompleted, userState);
        }
        
        private void OnLoadScoreHistforCustomerOperationCompleted(object arg) {
            if ((this.LoadScoreHistforCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadScoreHistforCustomerCompleted(this, new LoadScoreHistforCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ApplyBSRescore", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ApplyBSRescore(string CustomerID, int runno, out string err) {
            object[] results = this.Invoke("ApplyBSRescore", new object[] {
                        CustomerID,
                        runno});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApplyBSRescore(string CustomerID, int runno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApplyBSRescore", new object[] {
                        CustomerID,
                        runno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndApplyBSRescore(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyBSRescoreAsync(string CustomerID, int runno) {
            this.ApplyBSRescoreAsync(CustomerID, runno, null);
        }
        
        /// <remarks/>
        public void ApplyBSRescoreAsync(string CustomerID, int runno, object userState) {
            if ((this.ApplyBSRescoreOperationCompleted == null)) {
                this.ApplyBSRescoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyBSRescoreOperationCompleted);
            }
            this.InvokeAsync("ApplyBSRescore", new object[] {
                        CustomerID,
                        runno}, this.ApplyBSRescoreOperationCompleted, userState);
        }
        
        private void OnApplyBSRescoreOperationCompleted(object arg) {
            if ((this.ApplyBSRescoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyBSRescoreCompleted(this, new ApplyBSRescoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveManualReferralNotes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveManualReferralNotes(string customerID, string accountNo, System.DateTime dateProp, string notes, decimal creditLimit, string countryCode, out string err) {
            object[] results = this.Invoke("SaveManualReferralNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        notes,
                        creditLimit,
                        countryCode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveManualReferralNotes(string customerID, string accountNo, System.DateTime dateProp, string notes, decimal creditLimit, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveManualReferralNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        notes,
                        creditLimit,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveManualReferralNotes(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveManualReferralNotesAsync(string customerID, string accountNo, System.DateTime dateProp, string notes, decimal creditLimit, string countryCode) {
            this.SaveManualReferralNotesAsync(customerID, accountNo, dateProp, notes, creditLimit, countryCode, null);
        }
        
        /// <remarks/>
        public void SaveManualReferralNotesAsync(string customerID, string accountNo, System.DateTime dateProp, string notes, decimal creditLimit, string countryCode, object userState) {
            if ((this.SaveManualReferralNotesOperationCompleted == null)) {
                this.SaveManualReferralNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveManualReferralNotesOperationCompleted);
            }
            this.InvokeAsync("SaveManualReferralNotes", new object[] {
                        customerID,
                        accountNo,
                        dateProp,
                        notes,
                        creditLimit,
                        countryCode}, this.SaveManualReferralNotesOperationCompleted, userState);
        }
        
        private void OnSaveManualReferralNotesOperationCompleted(object arg) {
            if ((this.SaveManualReferralNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveManualReferralNotesCompleted(this, new SaveManualReferralNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetMmiMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMmiMatrix(out string err) {
            object[] results = this.Invoke("GetMmiMatrix", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMmiMatrix(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMmiMatrix", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMmiMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMmiMatrixAsync() {
            this.GetMmiMatrixAsync(null);
        }
        
        /// <remarks/>
        public void GetMmiMatrixAsync(object userState) {
            if ((this.GetMmiMatrixOperationCompleted == null)) {
                this.GetMmiMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMmiMatrixOperationCompleted);
            }
            this.InvokeAsync("GetMmiMatrix", new object[0], this.GetMmiMatrixOperationCompleted, userState);
        }
        
        private void OnGetMmiMatrixOperationCompleted(object arg) {
            if ((this.GetMmiMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMmiMatrixCompleted(this, new GetMmiMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveMmiMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveMmiMatrix(System.Data.DataSet matrix, out string err) {
            object[] results = this.Invoke("SaveMmiMatrix", new object[] {
                        matrix});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveMmiMatrix(System.Data.DataSet matrix, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveMmiMatrix", new object[] {
                        matrix}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveMmiMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMmiMatrixAsync(System.Data.DataSet matrix) {
            this.SaveMmiMatrixAsync(matrix, null);
        }
        
        /// <remarks/>
        public void SaveMmiMatrixAsync(System.Data.DataSet matrix, object userState) {
            if ((this.SaveMmiMatrixOperationCompleted == null)) {
                this.SaveMmiMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMmiMatrixOperationCompleted);
            }
            this.InvokeAsync("SaveMmiMatrix", new object[] {
                        matrix}, this.SaveMmiMatrixOperationCompleted, userState);
        }
        
        private void OnSaveMmiMatrixOperationCompleted(object arg) {
            if ((this.SaveMmiMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMmiMatrixCompleted(this, new SaveMmiMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCustomerMmi", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCustomerMmi(string custId, int userId, string reasonChanged, out string err) {
            object[] results = this.Invoke("SaveCustomerMmi", new object[] {
                        custId,
                        userId,
                        reasonChanged});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCustomerMmi(string custId, int userId, string reasonChanged, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCustomerMmi", new object[] {
                        custId,
                        userId,
                        reasonChanged}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCustomerMmi(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCustomerMmiAsync(string custId, int userId, string reasonChanged) {
            this.SaveCustomerMmiAsync(custId, userId, reasonChanged, null);
        }
        
        /// <remarks/>
        public void SaveCustomerMmiAsync(string custId, int userId, string reasonChanged, object userState) {
            if ((this.SaveCustomerMmiOperationCompleted == null)) {
                this.SaveCustomerMmiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCustomerMmiOperationCompleted);
            }
            this.InvokeAsync("SaveCustomerMmi", new object[] {
                        custId,
                        userId,
                        reasonChanged}, this.SaveCustomerMmiOperationCompleted, userState);
        }
        
        private void OnSaveCustomerMmiOperationCompleted(object arg) {
            if ((this.SaveCustomerMmiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCustomerMmiCompleted(this, new SaveCustomerMmiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetMmiThresholdForSale", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMmiThresholdForSale(string custId, string acctNo, string termType, out bool isMmiAllowed, out decimal mmiLimit, out decimal mmiThreshold, out string err) {
            object[] results = this.Invoke("GetMmiThresholdForSale", new object[] {
                        custId,
                        acctNo,
                        termType});
            isMmiAllowed = ((bool)(results[1]));
            mmiLimit = ((decimal)(results[2]));
            mmiThreshold = ((decimal)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMmiThresholdForSale(string custId, string acctNo, string termType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMmiThresholdForSale", new object[] {
                        custId,
                        acctNo,
                        termType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetMmiThresholdForSale(System.IAsyncResult asyncResult, out bool isMmiAllowed, out decimal mmiLimit, out decimal mmiThreshold, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            isMmiAllowed = ((bool)(results[1]));
            mmiLimit = ((decimal)(results[2]));
            mmiThreshold = ((decimal)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMmiThresholdForSaleAsync(string custId, string acctNo, string termType) {
            this.GetMmiThresholdForSaleAsync(custId, acctNo, termType, null);
        }
        
        /// <remarks/>
        public void GetMmiThresholdForSaleAsync(string custId, string acctNo, string termType, object userState) {
            if ((this.GetMmiThresholdForSaleOperationCompleted == null)) {
                this.GetMmiThresholdForSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMmiThresholdForSaleOperationCompleted);
            }
            this.InvokeAsync("GetMmiThresholdForSale", new object[] {
                        custId,
                        acctNo,
                        termType}, this.GetMmiThresholdForSaleOperationCompleted, userState);
        }
        
        private void OnGetMmiThresholdForSaleOperationCompleted(object arg) {
            if ((this.GetMmiThresholdForSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMmiThresholdForSaleCompleted(this, new GetMmiThresholdForSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AuditMmiThresholdUsedInstalment", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AuditMmiThresholdUsedInstalment(string custId, string acctNo, decimal mmi, decimal mmiThreshold, decimal installment, System.DateTime activityDate, out string err) {
            object[] results = this.Invoke("AuditMmiThresholdUsedInstalment", new object[] {
                        custId,
                        acctNo,
                        mmi,
                        mmiThreshold,
                        installment,
                        activityDate});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuditMmiThresholdUsedInstalment(string custId, string acctNo, decimal mmi, decimal mmiThreshold, decimal installment, System.DateTime activityDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuditMmiThresholdUsedInstalment", new object[] {
                        custId,
                        acctNo,
                        mmi,
                        mmiThreshold,
                        installment,
                        activityDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAuditMmiThresholdUsedInstalment(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AuditMmiThresholdUsedInstalmentAsync(string custId, string acctNo, decimal mmi, decimal mmiThreshold, decimal installment, System.DateTime activityDate) {
            this.AuditMmiThresholdUsedInstalmentAsync(custId, acctNo, mmi, mmiThreshold, installment, activityDate, null);
        }
        
        /// <remarks/>
        public void AuditMmiThresholdUsedInstalmentAsync(string custId, string acctNo, decimal mmi, decimal mmiThreshold, decimal installment, System.DateTime activityDate, object userState) {
            if ((this.AuditMmiThresholdUsedInstalmentOperationCompleted == null)) {
                this.AuditMmiThresholdUsedInstalmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditMmiThresholdUsedInstalmentOperationCompleted);
            }
            this.InvokeAsync("AuditMmiThresholdUsedInstalment", new object[] {
                        custId,
                        acctNo,
                        mmi,
                        mmiThreshold,
                        installment,
                        activityDate}, this.AuditMmiThresholdUsedInstalmentOperationCompleted, userState);
        }
        
        private void OnAuditMmiThresholdUsedInstalmentOperationCompleted(object arg) {
            if ((this.AuditMmiThresholdUsedInstalmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditMmiThresholdUsedInstalmentCompleted(this, new AuditMmiThresholdUsedInstalmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProposalCompletedEventHandler(object sender, GetProposalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProposalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProposalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProposalStage1CompletedEventHandler(object sender, GetProposalStage1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProposalStage1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProposalStage1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProposalStage2CompletedEventHandler(object sender, GetProposalStage2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProposalStage2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProposalStage2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReferenceListCompletedEventHandler(object sender, GetReferenceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveProposalCompletedEventHandler(object sender, SaveProposalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProposalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProposalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveProposalStage2CompletedEventHandler(object sender, SaveProposalStage2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProposalStage2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProposalStage2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadProposalFlagsCompletedEventHandler(object sender, LoadProposalFlagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProposalFlagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProposalFlagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool holdProp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string currentStatus {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRFLimitCompletedEventHandler(object sender, GetRFLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRFLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRFLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal limit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal available {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool wrongType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetExistCashLoanCompletedEventHandler(object sender, GetExistCashLoanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExistCashLoanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExistCashLoanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal limit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DummySanctionCompletedEventHandler(object sender, DummySanctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DummySanctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DummySanctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetScoringRulesCompletedEventHandler(object sender, GetScoringRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScoringRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScoringRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveApplicantSpendMatrixCompletedEventHandler(object sender, SaveApplicantSpendMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveApplicantSpendMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveApplicantSpendMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetApplicantSpendMatrixCompletedEventHandler(object sender, GetApplicantSpendMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicantSpendMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicantSpendMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveDependentSpendMatrixCompletedEventHandler(object sender, SaveDependentSpendMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDependentSpendMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDependentSpendMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDependentSpendFactorCompletedEventHandler(object sender, GetDependentSpendFactorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDependentSpendFactorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDependentSpendFactorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetApplicantSpendFactorCompletedEventHandler(object sender, GetApplicantSpendFactorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicantSpendFactorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicantSpendFactorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDependentSpendMatrixCompletedEventHandler(object sender, GetDependentSpendMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDependentSpendMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDependentSpendMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveScoringRulesCompletedEventHandler(object sender, SaveScoringRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveScoringRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveScoringRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ScoreProposalCompletedEventHandler(object sender, ScoreProposalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScoreProposalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScoreProposalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool referDeclined {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newBand {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string refCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal points {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal RFLimit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string bureauFailure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string referralReasons {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRFScoringMatrixCompletedEventHandler(object sender, GetRFScoringMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRFScoringMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRFScoringMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTermsTypeMatrixCompletedEventHandler(object sender, GetTermsTypeMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTermsTypeMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTermsTypeMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveRFScoringMatrixCompletedEventHandler(object sender, SaveRFScoringMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRFScoringMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRFScoringMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveTermsTypeMatrixCompletedEventHandler(object sender, SaveTermsTypeMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTermsTypeMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTermsTypeMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ApplyTermsTypeMatrixCompletedEventHandler(object sender, ApplyTermsTypeMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyTermsTypeMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyTermsTypeMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ManualReferCompletedEventHandler(object sender, ManualReferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualReferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualReferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReferralDataCompletedEventHandler(object sender, GetReferralDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferralDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferralDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CompleteReferralStageCompletedEventHandler(object sender, CompleteReferralStageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteReferralStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteReferralStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveReferralNotesCompletedEventHandler(object sender, SaveReferralNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReferralNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReferralNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveProposalNotesCompletedEventHandler(object sender, SaveProposalNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProposalNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProposalNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FindSecondApplicantCompletedEventHandler(object sender, FindSecondApplicantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindSecondApplicantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindSecondApplicantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDocConfirmationDataCompletedEventHandler(object sender, GetDocConfirmationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocConfirmationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocConfirmationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveDocConfirmationCompletedEventHandler(object sender, SaveDocConfirmationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDocConfirmationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDocConfirmationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUnclearedStageCompletedEventHandler(object sender, GetUnclearedStageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnclearedStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnclearedStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newAccount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string checkType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dateProp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string propResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnClearFlagCompletedEventHandler(object sender, UnClearFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnClearFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnClearFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestTransactCompletedEventHandler(object sender, TestTransactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestTransactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestTransactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestSchemaValidationCompletedEventHandler(object sender, TestSchemaValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSchemaValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSchemaValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReferralSummaryDataCompletedEventHandler(object sender, GetReferralSummaryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferralSummaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferralSummaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode lineItems {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SpendLimitReferralCompletedEventHandler(object sender, SpendLimitReferralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpendLimitReferralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpendLimitReferralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveScoreHistCompletedEventHandler(object sender, SaveScoreHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveScoreHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveScoreHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadBSCustomersCompletedEventHandler(object sender, LoadBSCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBSCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBSCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadScoreHistforCustomerCompletedEventHandler(object sender, LoadScoreHistforCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadScoreHistforCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadScoreHistforCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ApplyBSRescoreCompletedEventHandler(object sender, ApplyBSRescoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyBSRescoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyBSRescoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveManualReferralNotesCompletedEventHandler(object sender, SaveManualReferralNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveManualReferralNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveManualReferralNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMmiMatrixCompletedEventHandler(object sender, GetMmiMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMmiMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMmiMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveMmiMatrixCompletedEventHandler(object sender, SaveMmiMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMmiMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMmiMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveCustomerMmiCompletedEventHandler(object sender, SaveCustomerMmiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCustomerMmiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCustomerMmiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMmiThresholdForSaleCompletedEventHandler(object sender, GetMmiThresholdForSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMmiThresholdForSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMmiThresholdForSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isMmiAllowed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal mmiLimit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal mmiThreshold {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuditMmiThresholdUsedInstalmentCompletedEventHandler(object sender, AuditMmiThresholdUsedInstalmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditMmiThresholdUsedInstalmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditMmiThresholdUsedInstalmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591