//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18046.
// 
#pragma warning disable 1591

namespace STL.PL.WS1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WLoginSoap", Namespace="http://strategicthought.com/webservices/")]
    public partial class WLogin : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback IsValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoggedInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatePasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesStaffByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeLogonHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffAllocationByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback TerminateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CashTillOpenLoadEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCommissionDetailsByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateBailiffCommissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRolePermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExceptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WLogin() {
            this.Url = global::STL.PL.Properties.Settings.Default.Courts_NET_PL_W13_WLogin;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsValidCompletedEventHandler IsValidCompleted;
        
        /// <remarks/>
        public event GetRolesCompletedEventHandler GetRolesCompleted;
        
        /// <remarks/>
        public event LoggedInCompletedEventHandler LoggedInCompleted;
        
        /// <remarks/>
        public event GetEmployeeNameCompletedEventHandler GetEmployeeNameCompleted;
        
        /// <remarks/>
        public event GetDatePasswordChangedCompletedEventHandler GetDatePasswordChangedCompleted;
        
        /// <remarks/>
        public event GetEmployeeDetailsCompletedEventHandler GetEmployeeDetailsCompleted;
        
        /// <remarks/>
        public event SaveStaffCompletedEventHandler SaveStaffCompleted;
        
        /// <remarks/>
        public event GetSalesStaffByTypeCompletedEventHandler GetSalesStaffByTypeCompleted;
        
        /// <remarks/>
        public event GetEmployeeLogonHistoryCompletedEventHandler GetEmployeeLogonHistoryCompleted;
        
        /// <remarks/>
        public event GetStaffAllocationByTypeCompletedEventHandler GetStaffAllocationByTypeCompleted;
        
        /// <remarks/>
        public event SavePasswordCompletedEventHandler SavePasswordCompleted;
        
        /// <remarks/>
        public event LogOffCompletedEventHandler LogOffCompleted;
        
        /// <remarks/>
        public event TerminateEmployeeCompletedEventHandler TerminateEmployeeCompleted;
        
        /// <remarks/>
        public event CashTillOpenLoadEmployeeCompletedEventHandler CashTillOpenLoadEmployeeCompleted;
        
        /// <remarks/>
        public event LoadCommissionDetailsByTypeCompletedEventHandler LoadCommissionDetailsByTypeCompleted;
        
        /// <remarks/>
        public event CalculateBailiffCommissionCompletedEventHandler CalculateBailiffCommissionCompleted;
        
        /// <remarks/>
        public event CheckRolePermissionCompletedEventHandler CheckRolePermissionCompleted;
        
        /// <remarks/>
        public event CheckConfigCompletedEventHandler CheckConfigCompleted;
        
        /// <remarks/>
        public event ExceptionCompletedEventHandler ExceptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsValid", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] IsValid(System.DateTime clientdate, out string empeeNo, out string name, out string err) {
            object[] results = this.Invoke("IsValid", new object[] {
                        clientdate});
            empeeNo = ((string)(results[1]));
            name = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsValid(System.DateTime clientdate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsValid", new object[] {
                        clientdate}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndIsValid(System.IAsyncResult asyncResult, out string empeeNo, out string name, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            empeeNo = ((string)(results[1]));
            name = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void IsValidAsync(System.DateTime clientdate) {
            this.IsValidAsync(clientdate, null);
        }
        
        /// <remarks/>
        public void IsValidAsync(System.DateTime clientdate, object userState) {
            if ((this.IsValidOperationCompleted == null)) {
                this.IsValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidOperationCompleted);
            }
            this.InvokeAsync("IsValid", new object[] {
                        clientdate}, this.IsValidOperationCompleted, userState);
        }
        
        private void OnIsValidOperationCompleted(object arg) {
            if ((this.IsValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidCompleted(this, new IsValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRoles", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetRoles(string user, string pass, out int empeeNo) {
            object[] results = this.Invoke("GetRoles", new object[] {
                        user,
                        pass});
            empeeNo = ((int)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRoles(string user, string pass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRoles", new object[] {
                        user,
                        pass}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetRoles(System.IAsyncResult asyncResult, out int empeeNo) {
            object[] results = this.EndInvoke(asyncResult);
            empeeNo = ((int)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesAsync(string user, string pass) {
            this.GetRolesAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void GetRolesAsync(string user, string pass, object userState) {
            if ((this.GetRolesOperationCompleted == null)) {
                this.GetRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesOperationCompleted);
            }
            this.InvokeAsync("GetRoles", new object[] {
                        user,
                        pass}, this.GetRolesOperationCompleted, userState);
        }
        
        private void OnGetRolesOperationCompleted(object arg) {
            if ((this.GetRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoggedIn", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LoggedIn(string machineName, [System.Xml.Serialization.XmlElementAttribute("loggedIn")] out bool loggedIn1, out string err) {
            object[] results = this.Invoke("LoggedIn", new object[] {
                        machineName});
            loggedIn1 = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoggedIn(string machineName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoggedIn", new object[] {
                        machineName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndLoggedIn(System.IAsyncResult asyncResult, out bool loggedIn1, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            loggedIn1 = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoggedInAsync(string machineName) {
            this.LoggedInAsync(machineName, null);
        }
        
        /// <remarks/>
        public void LoggedInAsync(string machineName, object userState) {
            if ((this.LoggedInOperationCompleted == null)) {
                this.LoggedInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoggedInOperationCompleted);
            }
            this.InvokeAsync("LoggedIn", new object[] {
                        machineName}, this.LoggedInOperationCompleted, userState);
        }
        
        private void OnLoggedInOperationCompleted(object arg) {
            if ((this.LoggedInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoggedInCompleted(this, new LoggedInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetEmployeeName", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeName(int employeeNo, out string err) {
            object[] results = this.Invoke("GetEmployeeName", new object[] {
                        employeeNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEmployeeName(int employeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEmployeeName", new object[] {
                        employeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetEmployeeName(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeNameAsync(int employeeNo) {
            this.GetEmployeeNameAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void GetEmployeeNameAsync(int employeeNo, object userState) {
            if ((this.GetEmployeeNameOperationCompleted == null)) {
                this.GetEmployeeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeNameOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeName", new object[] {
                        employeeNo}, this.GetEmployeeNameOperationCompleted, userState);
        }
        
        private void OnGetEmployeeNameOperationCompleted(object arg) {
            if ((this.GetEmployeeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeNameCompleted(this, new GetEmployeeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDatePasswordChanged", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetDatePasswordChanged(int employeeNo, out string err) {
            object[] results = this.Invoke("GetDatePasswordChanged", new object[] {
                        employeeNo});
            err = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDatePasswordChanged(int employeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDatePasswordChanged", new object[] {
                        employeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetDatePasswordChanged(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatePasswordChangedAsync(int employeeNo) {
            this.GetDatePasswordChangedAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void GetDatePasswordChangedAsync(int employeeNo, object userState) {
            if ((this.GetDatePasswordChangedOperationCompleted == null)) {
                this.GetDatePasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatePasswordChangedOperationCompleted);
            }
            this.InvokeAsync("GetDatePasswordChanged", new object[] {
                        employeeNo}, this.GetDatePasswordChangedOperationCompleted, userState);
        }
        
        private void OnGetDatePasswordChangedOperationCompleted(object arg) {
            if ((this.GetDatePasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatePasswordChangedCompleted(this, new GetDatePasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetEmployeeDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEmployeeDetails(int EmployeeNo, string err) {
            object[] results = this.Invoke("GetEmployeeDetails", new object[] {
                        EmployeeNo,
                        err});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEmployeeDetails(int EmployeeNo, string err, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEmployeeDetails", new object[] {
                        EmployeeNo,
                        err}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetEmployeeDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeDetailsAsync(int EmployeeNo, string err) {
            this.GetEmployeeDetailsAsync(EmployeeNo, err, null);
        }
        
        /// <remarks/>
        public void GetEmployeeDetailsAsync(int EmployeeNo, string err, object userState) {
            if ((this.GetEmployeeDetailsOperationCompleted == null)) {
                this.GetEmployeeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeDetails", new object[] {
                        EmployeeNo,
                        err}, this.GetEmployeeDetailsOperationCompleted, userState);
        }
        
        private void OnGetEmployeeDetailsOperationCompleted(object arg) {
            if ((this.GetEmployeeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeDetailsCompleted(this, new GetEmployeeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveStaff", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveStaff(bool changePassword, short branchno, int empeeNo, string fACTEmpeeNo, string firstName, string lastName, string employeeType, string password, string dutyFree, int maxRow, short loggedIn, bool defaultRate, float upliftRate, int empeechange, string err) {
            object[] results = this.Invoke("SaveStaff", new object[] {
                        changePassword,
                        branchno,
                        empeeNo,
                        fACTEmpeeNo,
                        firstName,
                        lastName,
                        employeeType,
                        password,
                        dutyFree,
                        maxRow,
                        loggedIn,
                        defaultRate,
                        upliftRate,
                        empeechange,
                        err});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveStaff(
                    bool changePassword, 
                    short branchno, 
                    int empeeNo, 
                    string fACTEmpeeNo, 
                    string firstName, 
                    string lastName, 
                    string employeeType, 
                    string password, 
                    string dutyFree, 
                    int maxRow, 
                    short loggedIn, 
                    bool defaultRate, 
                    float upliftRate, 
                    int empeechange, 
                    string err, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("SaveStaff", new object[] {
                        changePassword,
                        branchno,
                        empeeNo,
                        fACTEmpeeNo,
                        firstName,
                        lastName,
                        employeeType,
                        password,
                        dutyFree,
                        maxRow,
                        loggedIn,
                        defaultRate,
                        upliftRate,
                        empeechange,
                        err}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveStaff(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveStaffAsync(bool changePassword, short branchno, int empeeNo, string fACTEmpeeNo, string firstName, string lastName, string employeeType, string password, string dutyFree, int maxRow, short loggedIn, bool defaultRate, float upliftRate, int empeechange, string err) {
            this.SaveStaffAsync(changePassword, branchno, empeeNo, fACTEmpeeNo, firstName, lastName, employeeType, password, dutyFree, maxRow, loggedIn, defaultRate, upliftRate, empeechange, err, null);
        }
        
        /// <remarks/>
        public void SaveStaffAsync(
                    bool changePassword, 
                    short branchno, 
                    int empeeNo, 
                    string fACTEmpeeNo, 
                    string firstName, 
                    string lastName, 
                    string employeeType, 
                    string password, 
                    string dutyFree, 
                    int maxRow, 
                    short loggedIn, 
                    bool defaultRate, 
                    float upliftRate, 
                    int empeechange, 
                    string err, 
                    object userState) {
            if ((this.SaveStaffOperationCompleted == null)) {
                this.SaveStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveStaffOperationCompleted);
            }
            this.InvokeAsync("SaveStaff", new object[] {
                        changePassword,
                        branchno,
                        empeeNo,
                        fACTEmpeeNo,
                        firstName,
                        lastName,
                        employeeType,
                        password,
                        dutyFree,
                        maxRow,
                        loggedIn,
                        defaultRate,
                        upliftRate,
                        empeechange,
                        err}, this.SaveStaffOperationCompleted, userState);
        }
        
        private void OnSaveStaffOperationCompleted(object arg) {
            if ((this.SaveStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveStaffCompleted(this, new SaveStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSalesStaffByType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSalesStaffByType(string employeeType, int branchno, out string err) {
            object[] results = this.Invoke("GetSalesStaffByType", new object[] {
                        employeeType,
                        branchno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSalesStaffByType(string employeeType, int branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSalesStaffByType", new object[] {
                        employeeType,
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSalesStaffByType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesStaffByTypeAsync(string employeeType, int branchno) {
            this.GetSalesStaffByTypeAsync(employeeType, branchno, null);
        }
        
        /// <remarks/>
        public void GetSalesStaffByTypeAsync(string employeeType, int branchno, object userState) {
            if ((this.GetSalesStaffByTypeOperationCompleted == null)) {
                this.GetSalesStaffByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesStaffByTypeOperationCompleted);
            }
            this.InvokeAsync("GetSalesStaffByType", new object[] {
                        employeeType,
                        branchno}, this.GetSalesStaffByTypeOperationCompleted, userState);
        }
        
        private void OnGetSalesStaffByTypeOperationCompleted(object arg) {
            if ((this.GetSalesStaffByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesStaffByTypeCompleted(this, new GetSalesStaffByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetEmployeeLogonHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEmployeeLogonHistory(int empeeno, out string err) {
            object[] results = this.Invoke("GetEmployeeLogonHistory", new object[] {
                        empeeno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEmployeeLogonHistory(int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEmployeeLogonHistory", new object[] {
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetEmployeeLogonHistory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeLogonHistoryAsync(int empeeno) {
            this.GetEmployeeLogonHistoryAsync(empeeno, null);
        }
        
        /// <remarks/>
        public void GetEmployeeLogonHistoryAsync(int empeeno, object userState) {
            if ((this.GetEmployeeLogonHistoryOperationCompleted == null)) {
                this.GetEmployeeLogonHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeLogonHistoryOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeLogonHistory", new object[] {
                        empeeno}, this.GetEmployeeLogonHistoryOperationCompleted, userState);
        }
        
        private void OnGetEmployeeLogonHistoryOperationCompleted(object arg) {
            if ((this.GetEmployeeLogonHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeLogonHistoryCompleted(this, new GetEmployeeLogonHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStaffAllocationByType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStaffAllocationByType(int employeeType, int branchno, out string err) {
            object[] results = this.Invoke("GetStaffAllocationByType", new object[] {
                        employeeType,
                        branchno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStaffAllocationByType(int employeeType, int branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStaffAllocationByType", new object[] {
                        employeeType,
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStaffAllocationByType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffAllocationByTypeAsync(int employeeType, int branchno) {
            this.GetStaffAllocationByTypeAsync(employeeType, branchno, null);
        }
        
        /// <remarks/>
        public void GetStaffAllocationByTypeAsync(int employeeType, int branchno, object userState) {
            if ((this.GetStaffAllocationByTypeOperationCompleted == null)) {
                this.GetStaffAllocationByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffAllocationByTypeOperationCompleted);
            }
            this.InvokeAsync("GetStaffAllocationByType", new object[] {
                        employeeType,
                        branchno}, this.GetStaffAllocationByTypeOperationCompleted, userState);
        }
        
        private void OnGetStaffAllocationByTypeOperationCompleted(object arg) {
            if ((this.GetStaffAllocationByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffAllocationByTypeCompleted(this, new GetStaffAllocationByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SavePassword", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SavePasswordResult SavePassword(string newPassword, string oldPassword, string userLogin, string loggedInUser) {
            object[] results = this.Invoke("SavePassword", new object[] {
                        newPassword,
                        oldPassword,
                        userLogin,
                        loggedInUser});
            return ((SavePasswordResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSavePassword(string newPassword, string oldPassword, string userLogin, string loggedInUser, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SavePassword", new object[] {
                        newPassword,
                        oldPassword,
                        userLogin,
                        loggedInUser}, callback, asyncState);
        }
        
        /// <remarks/>
        public SavePasswordResult EndSavePassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SavePasswordResult)(results[0]));
        }
        
        /// <remarks/>
        public void SavePasswordAsync(string newPassword, string oldPassword, string userLogin, string loggedInUser) {
            this.SavePasswordAsync(newPassword, oldPassword, userLogin, loggedInUser, null);
        }
        
        /// <remarks/>
        public void SavePasswordAsync(string newPassword, string oldPassword, string userLogin, string loggedInUser, object userState) {
            if ((this.SavePasswordOperationCompleted == null)) {
                this.SavePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePasswordOperationCompleted);
            }
            this.InvokeAsync("SavePassword", new object[] {
                        newPassword,
                        oldPassword,
                        userLogin,
                        loggedInUser}, this.SavePasswordOperationCompleted, userState);
        }
        
        private void OnSavePasswordOperationCompleted(object arg) {
            if ((this.SavePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePasswordCompleted(this, new SavePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LogOff", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogOff(string machineName, int userId, string userName) {
            this.Invoke("LogOff", new object[] {
                        machineName,
                        userId,
                        userName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogOff(string machineName, int userId, string userName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogOff", new object[] {
                        machineName,
                        userId,
                        userName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogOff(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LogOffAsync(string machineName, int userId, string userName) {
            this.LogOffAsync(machineName, userId, userName, null);
        }
        
        /// <remarks/>
        public void LogOffAsync(string machineName, int userId, string userName, object userState) {
            if ((this.LogOffOperationCompleted == null)) {
                this.LogOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOffOperationCompleted);
            }
            this.InvokeAsync("LogOff", new object[] {
                        machineName,
                        userId,
                        userName}, this.LogOffOperationCompleted, userState);
        }
        
        private void OnLogOffOperationCompleted(object arg) {
            if ((this.LogOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TerminateEmployee", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TerminateEmployee(int empeeno, int empeechange, out string err) {
            object[] results = this.Invoke("TerminateEmployee", new object[] {
                        empeeno,
                        empeechange});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTerminateEmployee(int empeeno, int empeechange, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TerminateEmployee", new object[] {
                        empeeno,
                        empeechange}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndTerminateEmployee(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TerminateEmployeeAsync(int empeeno, int empeechange) {
            this.TerminateEmployeeAsync(empeeno, empeechange, null);
        }
        
        /// <remarks/>
        public void TerminateEmployeeAsync(int empeeno, int empeechange, object userState) {
            if ((this.TerminateEmployeeOperationCompleted == null)) {
                this.TerminateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTerminateEmployeeOperationCompleted);
            }
            this.InvokeAsync("TerminateEmployee", new object[] {
                        empeeno,
                        empeechange}, this.TerminateEmployeeOperationCompleted, userState);
        }
        
        private void OnTerminateEmployeeOperationCompleted(object arg) {
            if ((this.TerminateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TerminateEmployeeCompleted(this, new TerminateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CashTillOpenLoadEmployee", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CashTillOpenLoadEmployee(int user, string tillid, out string err) {
            object[] results = this.Invoke("CashTillOpenLoadEmployee", new object[] {
                        user,
                        tillid});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCashTillOpenLoadEmployee(int user, string tillid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CashTillOpenLoadEmployee", new object[] {
                        user,
                        tillid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCashTillOpenLoadEmployee(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CashTillOpenLoadEmployeeAsync(int user, string tillid) {
            this.CashTillOpenLoadEmployeeAsync(user, tillid, null);
        }
        
        /// <remarks/>
        public void CashTillOpenLoadEmployeeAsync(int user, string tillid, object userState) {
            if ((this.CashTillOpenLoadEmployeeOperationCompleted == null)) {
                this.CashTillOpenLoadEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCashTillOpenLoadEmployeeOperationCompleted);
            }
            this.InvokeAsync("CashTillOpenLoadEmployee", new object[] {
                        user,
                        tillid}, this.CashTillOpenLoadEmployeeOperationCompleted, userState);
        }
        
        private void OnCashTillOpenLoadEmployeeOperationCompleted(object arg) {
            if ((this.CashTillOpenLoadEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CashTillOpenLoadEmployeeCompleted(this, new CashTillOpenLoadEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadCommissionDetailsByType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadCommissionDetailsByType(string employeeType, int branchNo, out string err) {
            object[] results = this.Invoke("LoadCommissionDetailsByType", new object[] {
                        employeeType,
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadCommissionDetailsByType(string employeeType, int branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadCommissionDetailsByType", new object[] {
                        employeeType,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadCommissionDetailsByType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCommissionDetailsByTypeAsync(string employeeType, int branchNo) {
            this.LoadCommissionDetailsByTypeAsync(employeeType, branchNo, null);
        }
        
        /// <remarks/>
        public void LoadCommissionDetailsByTypeAsync(string employeeType, int branchNo, object userState) {
            if ((this.LoadCommissionDetailsByTypeOperationCompleted == null)) {
                this.LoadCommissionDetailsByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCommissionDetailsByTypeOperationCompleted);
            }
            this.InvokeAsync("LoadCommissionDetailsByType", new object[] {
                        employeeType,
                        branchNo}, this.LoadCommissionDetailsByTypeOperationCompleted, userState);
        }
        
        private void OnLoadCommissionDetailsByTypeOperationCompleted(object arg) {
            if ((this.LoadCommissionDetailsByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCommissionDetailsByTypeCompleted(this, new LoadCommissionDetailsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalculateBailiffCommission", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CalculateBailiffCommission(string employeeType, int branchNo, out string err) {
            object[] results = this.Invoke("CalculateBailiffCommission", new object[] {
                        employeeType,
                        branchNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateBailiffCommission(string employeeType, int branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateBailiffCommission", new object[] {
                        employeeType,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCalculateBailiffCommission(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateBailiffCommissionAsync(string employeeType, int branchNo) {
            this.CalculateBailiffCommissionAsync(employeeType, branchNo, null);
        }
        
        /// <remarks/>
        public void CalculateBailiffCommissionAsync(string employeeType, int branchNo, object userState) {
            if ((this.CalculateBailiffCommissionOperationCompleted == null)) {
                this.CalculateBailiffCommissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateBailiffCommissionOperationCompleted);
            }
            this.InvokeAsync("CalculateBailiffCommission", new object[] {
                        employeeType,
                        branchNo}, this.CalculateBailiffCommissionOperationCompleted, userState);
        }
        
        private void OnCalculateBailiffCommissionOperationCompleted(object arg) {
            if ((this.CalculateBailiffCommissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateBailiffCommissionCompleted(this, new CalculateBailiffCommissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckRolePermission", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckRolePermission(int empeeNo, string password, string permissionName, out string message, out string err) {
            object[] results = this.Invoke("CheckRolePermission", new object[] {
                        empeeNo,
                        password,
                        permissionName});
            message = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckRolePermission(int empeeNo, string password, string permissionName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckRolePermission", new object[] {
                        empeeNo,
                        password,
                        permissionName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckRolePermission(System.IAsyncResult asyncResult, out string message, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            message = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRolePermissionAsync(int empeeNo, string password, string permissionName) {
            this.CheckRolePermissionAsync(empeeNo, password, permissionName, null);
        }
        
        /// <remarks/>
        public void CheckRolePermissionAsync(int empeeNo, string password, string permissionName, object userState) {
            if ((this.CheckRolePermissionOperationCompleted == null)) {
                this.CheckRolePermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRolePermissionOperationCompleted);
            }
            this.InvokeAsync("CheckRolePermission", new object[] {
                        empeeNo,
                        password,
                        permissionName}, this.CheckRolePermissionOperationCompleted, userState);
        }
        
        private void OnCheckRolePermissionOperationCompleted(object arg) {
            if ((this.CheckRolePermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRolePermissionCompleted(this, new CheckRolePermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckConfig", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckConfig(char country, int branch) {
            object[] results = this.Invoke("CheckConfig", new object[] {
                        country,
                        branch});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckConfig(char country, int branch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckConfig", new object[] {
                        country,
                        branch}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckConfig(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckConfigAsync(char country, int branch) {
            this.CheckConfigAsync(country, branch, null);
        }
        
        /// <remarks/>
        public void CheckConfigAsync(char country, int branch, object userState) {
            if ((this.CheckConfigOperationCompleted == null)) {
                this.CheckConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckConfigOperationCompleted);
            }
            this.InvokeAsync("CheckConfig", new object[] {
                        country,
                        branch}, this.CheckConfigOperationCompleted, userState);
        }
        
        private void OnCheckConfigOperationCompleted(object arg) {
            if ((this.CheckConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckConfigCompleted(this, new CheckConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Exception", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Exception([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.bluebridgeltd.com/cosacs/exceptions/2010/09/", IsNullable=true)] Error e) {
            this.Invoke("Exception", new object[] {
                        e});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginException(Error e, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Exception", new object[] {
                        e}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndException(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ExceptionAsync(Error e) {
            this.ExceptionAsync(e, null);
        }
        
        /// <remarks/>
        public void ExceptionAsync(Error e, object userState) {
            if ((this.ExceptionOperationCompleted == null)) {
                this.ExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExceptionOperationCompleted);
            }
            this.InvokeAsync("Exception", new object[] {
                        e}, this.ExceptionOperationCompleted, userState);
        }
        
        private void OnExceptionOperationCompleted(object arg) {
            if ((this.ExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExceptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.bluebridgeltd.com/cosacs/exceptions/2010/09/")]
    public partial class Error {
        
        private string messageField;
        
        private string sourceField;
        
        private string exceptionTypeField;
        
        private string detailsField;
        
        private string machineNameField;
        
        private string processNameField;
        
        private System.DateTime timestampField;
        
        private string identityNameField;
        
        private string identityTypeField;
        
        private string versionField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionType {
            get {
                return this.exceptionTypeField;
            }
            set {
                this.exceptionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessName {
            get {
                return this.processNameField;
            }
            set {
                this.processNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string IdentityName {
            get {
                return this.identityNameField;
            }
            set {
                this.identityNameField = value;
            }
        }
        
        /// <remarks/>
        public string IdentityType {
            get {
                return this.identityTypeField;
            }
            set {
                this.identityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class SavePasswordResult {
        
        private bool isValidField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsValidCompletedEventHandler(object sender, IsValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string empeeNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRolesCompletedEventHandler(object sender, GetRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int empeeNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoggedInCompletedEventHandler(object sender, LoggedInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoggedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoggedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool loggedIn1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmployeeNameCompletedEventHandler(object sender, GetEmployeeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDatePasswordChangedCompletedEventHandler(object sender, GetDatePasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatePasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatePasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmployeeDetailsCompletedEventHandler(object sender, GetEmployeeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveStaffCompletedEventHandler(object sender, SaveStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSalesStaffByTypeCompletedEventHandler(object sender, GetSalesStaffByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesStaffByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesStaffByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmployeeLogonHistoryCompletedEventHandler(object sender, GetEmployeeLogonHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeLogonHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeLogonHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStaffAllocationByTypeCompletedEventHandler(object sender, GetStaffAllocationByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffAllocationByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffAllocationByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SavePasswordCompletedEventHandler(object sender, SavePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SavePasswordResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SavePasswordResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogOffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TerminateEmployeeCompletedEventHandler(object sender, TerminateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TerminateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TerminateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CashTillOpenLoadEmployeeCompletedEventHandler(object sender, CashTillOpenLoadEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CashTillOpenLoadEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CashTillOpenLoadEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadCommissionDetailsByTypeCompletedEventHandler(object sender, LoadCommissionDetailsByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCommissionDetailsByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCommissionDetailsByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CalculateBailiffCommissionCompletedEventHandler(object sender, CalculateBailiffCommissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateBailiffCommissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateBailiffCommissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckRolePermissionCompletedEventHandler(object sender, CheckRolePermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRolePermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRolePermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckConfigCompletedEventHandler(object sender, CheckConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExceptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591