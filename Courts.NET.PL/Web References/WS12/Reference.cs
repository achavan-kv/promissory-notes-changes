//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace STL.PL.WS12 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WCollectionsManagerSoap", Namespace="http://strategicthought.com/webservices/")]
    public partial class WCollectionsManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback GetConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActionsWithStrategyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategyActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategyConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategiesToSendToOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategiesForBailiffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLettersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorklistDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveStrategyConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetStrategyActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStrategyAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExistingStrategyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategyActionsForEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerTelephoneNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBailActionsWithTelephoneActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkList_ActionRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWorkListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWorkListOrderColumnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWorkListSortOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkListSortOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctLetterCodesByRunNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLetterFieldsbyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchByStoreTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZoneAllocatableEmployeeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActionRightsHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorklistRightsHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallReminderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLegalFraudInsuranceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllocateableStaffandTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountGetCombinedSPADetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBailActionsForSPAOperationCompleted;
        
        private System.Threading.SendOrPostCallback SPAWriteRefinanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveZoneRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBailiffZoneAllocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadUnallocatedAddressZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadZoneRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback BailiffAllocationRulesLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback RolesGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVillagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZipCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WCollectionsManager() {
            this.Url = global::STL.PL.Properties.Settings.Default.Courts_NET_PL_WS12_WCollectionsManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetConditionsCompletedEventHandler GetConditionsCompleted;
        
        /// <remarks/>
        public event GetActionsCompletedEventHandler GetActionsCompleted;
        
        /// <remarks/>
        public event GetActionsWithStrategyCompletedEventHandler GetActionsWithStrategyCompleted;
        
        /// <remarks/>
        public event GetStrategyActionsCompletedEventHandler GetStrategyActionsCompleted;
        
        /// <remarks/>
        public event GetWorkListsCompletedEventHandler GetWorkListsCompleted;
        
        /// <remarks/>
        public event GetStrategyConditionsCompletedEventHandler GetStrategyConditionsCompleted;
        
        /// <remarks/>
        public event GetStrategiesCompletedEventHandler GetStrategiesCompleted;
        
        /// <remarks/>
        public event GetStrategiesToSendToCompletedEventHandler GetStrategiesToSendToCompleted;
        
        /// <remarks/>
        public event GetStrategiesForBailiffCompletedEventHandler GetStrategiesForBailiffCompleted;
        
        /// <remarks/>
        public event GetLettersCompletedEventHandler GetLettersCompleted;
        
        /// <remarks/>
        public event GetSMSCompletedEventHandler GetSMSCompleted;
        
        /// <remarks/>
        public event GetWorklistDataSetCompletedEventHandler GetWorklistDataSetCompleted;
        
        /// <remarks/>
        public event SaveStrategyConditionCompletedEventHandler SaveStrategyConditionCompleted;
        
        /// <remarks/>
        public event SaveSMSCompletedEventHandler SaveSMSCompleted;
        
        /// <remarks/>
        public event SetStrategyActiveCompletedEventHandler SetStrategyActiveCompleted;
        
        /// <remarks/>
        public event DeleteWorkListCompletedEventHandler DeleteWorkListCompleted;
        
        /// <remarks/>
        public event DeleteSMSCompletedEventHandler DeleteSMSCompleted;
        
        /// <remarks/>
        public event UpdateStrategyAccountsCompletedEventHandler UpdateStrategyAccountsCompleted;
        
        /// <remarks/>
        public event LockAccountCompletedEventHandler LockAccountCompleted;
        
        /// <remarks/>
        public event UnlockAccountCompletedEventHandler UnlockAccountCompleted;
        
        /// <remarks/>
        public event DeleteExistingStrategyCompletedEventHandler DeleteExistingStrategyCompleted;
        
        /// <remarks/>
        public event GetStrategyActionsForEmployeeCompletedEventHandler GetStrategyActionsForEmployeeCompleted;
        
        /// <remarks/>
        public event UpdateCustomerTelephoneNoCompletedEventHandler UpdateCustomerTelephoneNoCompleted;
        
        /// <remarks/>
        public event SaveBailActionsWithTelephoneActionsCompletedEventHandler SaveBailActionsWithTelephoneActionsCompleted;
        
        /// <remarks/>
        public event UpdateWorkList_ActionRightsCompletedEventHandler UpdateWorkList_ActionRightsCompleted;
        
        /// <remarks/>
        public event SaveWorkListsCompletedEventHandler SaveWorkListsCompleted;
        
        /// <remarks/>
        public event LoadWorkListOrderColumnsCompletedEventHandler LoadWorkListOrderColumnsCompleted;
        
        /// <remarks/>
        public event LoadWorkListSortOrderCompletedEventHandler LoadWorkListSortOrderCompleted;
        
        /// <remarks/>
        public event UpdateWorkListSortOrderCompletedEventHandler UpdateWorkListSortOrderCompleted;
        
        /// <remarks/>
        public event GetDistinctLetterCodesByRunNoCompletedEventHandler GetDistinctLetterCodesByRunNoCompleted;
        
        /// <remarks/>
        public event LoadLetterFieldsbyCodeCompletedEventHandler LoadLetterFieldsbyCodeCompleted;
        
        /// <remarks/>
        public event GetBranchByStoreTypeCompletedEventHandler GetBranchByStoreTypeCompleted;
        
        /// <remarks/>
        public event GetZonesCompletedEventHandler GetZonesCompleted;
        
        /// <remarks/>
        public event GetZoneAllocatableEmployeeInfoCompletedEventHandler GetZoneAllocatableEmployeeInfoCompleted;
        
        /// <remarks/>
        public event GetActionRightsHierarchyCompletedEventHandler GetActionRightsHierarchyCompleted;
        
        /// <remarks/>
        public event GetWorklistRightsHierarchyCompletedEventHandler GetWorklistRightsHierarchyCompleted;
        
        /// <remarks/>
        public event GetCallReminderInfoCompletedEventHandler GetCallReminderInfoCompleted;
        
        /// <remarks/>
        public event GetLegalFraudInsuranceDetailsCompletedEventHandler GetLegalFraudInsuranceDetailsCompleted;
        
        /// <remarks/>
        public event LoadAllocateableStaffandTypesCompletedEventHandler LoadAllocateableStaffandTypesCompleted;
        
        /// <remarks/>
        public event AccountGetCombinedSPADetailsCompletedEventHandler AccountGetCombinedSPADetailsCompleted;
        
        /// <remarks/>
        public event SaveBailActionsForSPACompletedEventHandler SaveBailActionsForSPACompleted;
        
        /// <remarks/>
        public event SPAWriteRefinanceCompletedEventHandler SPAWriteRefinanceCompleted;
        
        /// <remarks/>
        public event SaveZoneRuleCompletedEventHandler SaveZoneRuleCompleted;
        
        /// <remarks/>
        public event SaveBailiffZoneAllocationCompletedEventHandler SaveBailiffZoneAllocationCompleted;
        
        /// <remarks/>
        public event DeleteZoneCompletedEventHandler DeleteZoneCompleted;
        
        /// <remarks/>
        public event SaveZonesCompletedEventHandler SaveZonesCompleted;
        
        /// <remarks/>
        public event ApplyZonesCompletedEventHandler ApplyZonesCompleted;
        
        /// <remarks/>
        public event LoadUnallocatedAddressZonesCompletedEventHandler LoadUnallocatedAddressZonesCompleted;
        
        /// <remarks/>
        public event LoadZoneRulesCompletedEventHandler LoadZoneRulesCompleted;
        
        /// <remarks/>
        public event BailiffAllocationRulesLoadCompletedEventHandler BailiffAllocationRulesLoadCompleted;
        
        /// <remarks/>
        public event RolesGetCompletedEventHandler RolesGetCompleted;
        
        /// <remarks/>
        public event GetVillagesCompletedEventHandler GetVillagesCompleted;
        
        /// <remarks/>
        public event GetRegionsCompletedEventHandler GetRegionsCompleted;
        
        /// <remarks/>
        public event GetZipCodeCompletedEventHandler GetZipCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetConditions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConditions(out string err) {
            object[] results = this.Invoke("GetConditions", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetConditions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetConditions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetConditions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConditionsAsync() {
            this.GetConditionsAsync(null);
        }
        
        /// <remarks/>
        public void GetConditionsAsync(object userState) {
            if ((this.GetConditionsOperationCompleted == null)) {
                this.GetConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConditionsOperationCompleted);
            }
            this.InvokeAsync("GetConditions", new object[0], this.GetConditionsOperationCompleted, userState);
        }
        
        private void OnGetConditionsOperationCompleted(object arg) {
            if ((this.GetConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConditionsCompleted(this, new GetConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetActions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActions(out string err) {
            object[] results = this.Invoke("GetActions", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetActions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetActions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetActions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActionsAsync() {
            this.GetActionsAsync(null);
        }
        
        /// <remarks/>
        public void GetActionsAsync(object userState) {
            if ((this.GetActionsOperationCompleted == null)) {
                this.GetActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActionsOperationCompleted);
            }
            this.InvokeAsync("GetActions", new object[0], this.GetActionsOperationCompleted, userState);
        }
        
        private void OnGetActionsOperationCompleted(object arg) {
            if ((this.GetActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActionsCompleted(this, new GetActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetActionsWithStrategy", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActionsWithStrategy(out string err) {
            object[] results = this.Invoke("GetActionsWithStrategy", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetActionsWithStrategy(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetActionsWithStrategy", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetActionsWithStrategy(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActionsWithStrategyAsync() {
            this.GetActionsWithStrategyAsync(null);
        }
        
        /// <remarks/>
        public void GetActionsWithStrategyAsync(object userState) {
            if ((this.GetActionsWithStrategyOperationCompleted == null)) {
                this.GetActionsWithStrategyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActionsWithStrategyOperationCompleted);
            }
            this.InvokeAsync("GetActionsWithStrategy", new object[0], this.GetActionsWithStrategyOperationCompleted, userState);
        }
        
        private void OnGetActionsWithStrategyOperationCompleted(object arg) {
            if ((this.GetActionsWithStrategyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActionsWithStrategyCompleted(this, new GetActionsWithStrategyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStrategyActions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStrategyActions(string strategy, out string err) {
            object[] results = this.Invoke("GetStrategyActions", new object[] {
                        strategy});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStrategyActions(string strategy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStrategyActions", new object[] {
                        strategy}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStrategyActions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategyActionsAsync(string strategy) {
            this.GetStrategyActionsAsync(strategy, null);
        }
        
        /// <remarks/>
        public void GetStrategyActionsAsync(string strategy, object userState) {
            if ((this.GetStrategyActionsOperationCompleted == null)) {
                this.GetStrategyActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategyActionsOperationCompleted);
            }
            this.InvokeAsync("GetStrategyActions", new object[] {
                        strategy}, this.GetStrategyActionsOperationCompleted, userState);
        }
        
        private void OnGetStrategyActionsOperationCompleted(object arg) {
            if ((this.GetStrategyActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategyActionsCompleted(this, new GetStrategyActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWorkLists", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorkLists(out string err) {
            object[] results = this.Invoke("GetWorkLists", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWorkLists(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWorkLists", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWorkLists(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkListsAsync() {
            this.GetWorkListsAsync(null);
        }
        
        /// <remarks/>
        public void GetWorkListsAsync(object userState) {
            if ((this.GetWorkListsOperationCompleted == null)) {
                this.GetWorkListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkListsOperationCompleted);
            }
            this.InvokeAsync("GetWorkLists", new object[0], this.GetWorkListsOperationCompleted, userState);
        }
        
        private void OnGetWorkListsOperationCompleted(object arg) {
            if ((this.GetWorkListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkListsCompleted(this, new GetWorkListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStrategyConditions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStrategyConditions(string strategy, out string err) {
            object[] results = this.Invoke("GetStrategyConditions", new object[] {
                        strategy});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStrategyConditions(string strategy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStrategyConditions", new object[] {
                        strategy}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStrategyConditions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategyConditionsAsync(string strategy) {
            this.GetStrategyConditionsAsync(strategy, null);
        }
        
        /// <remarks/>
        public void GetStrategyConditionsAsync(string strategy, object userState) {
            if ((this.GetStrategyConditionsOperationCompleted == null)) {
                this.GetStrategyConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategyConditionsOperationCompleted);
            }
            this.InvokeAsync("GetStrategyConditions", new object[] {
                        strategy}, this.GetStrategyConditionsOperationCompleted, userState);
        }
        
        private void OnGetStrategyConditionsOperationCompleted(object arg) {
            if ((this.GetStrategyConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategyConditionsCompleted(this, new GetStrategyConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStrategies", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStrategies(out string err) {
            object[] results = this.Invoke("GetStrategies", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStrategies(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStrategies", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStrategies(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategiesAsync() {
            this.GetStrategiesAsync(null);
        }
        
        /// <remarks/>
        public void GetStrategiesAsync(object userState) {
            if ((this.GetStrategiesOperationCompleted == null)) {
                this.GetStrategiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategiesOperationCompleted);
            }
            this.InvokeAsync("GetStrategies", new object[0], this.GetStrategiesOperationCompleted, userState);
        }
        
        private void OnGetStrategiesOperationCompleted(object arg) {
            if ((this.GetStrategiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategiesCompleted(this, new GetStrategiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStrategiesToSendTo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStrategiesToSendTo(string strategy, out string err) {
            object[] results = this.Invoke("GetStrategiesToSendTo", new object[] {
                        strategy});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStrategiesToSendTo(string strategy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStrategiesToSendTo", new object[] {
                        strategy}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStrategiesToSendTo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategiesToSendToAsync(string strategy) {
            this.GetStrategiesToSendToAsync(strategy, null);
        }
        
        /// <remarks/>
        public void GetStrategiesToSendToAsync(string strategy, object userState) {
            if ((this.GetStrategiesToSendToOperationCompleted == null)) {
                this.GetStrategiesToSendToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategiesToSendToOperationCompleted);
            }
            this.InvokeAsync("GetStrategiesToSendTo", new object[] {
                        strategy}, this.GetStrategiesToSendToOperationCompleted, userState);
        }
        
        private void OnGetStrategiesToSendToOperationCompleted(object arg) {
            if ((this.GetStrategiesToSendToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategiesToSendToCompleted(this, new GetStrategiesToSendToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStrategiesForBailiff", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStrategiesForBailiff(out string err) {
            object[] results = this.Invoke("GetStrategiesForBailiff", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStrategiesForBailiff(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStrategiesForBailiff", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStrategiesForBailiff(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategiesForBailiffAsync() {
            this.GetStrategiesForBailiffAsync(null);
        }
        
        /// <remarks/>
        public void GetStrategiesForBailiffAsync(object userState) {
            if ((this.GetStrategiesForBailiffOperationCompleted == null)) {
                this.GetStrategiesForBailiffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategiesForBailiffOperationCompleted);
            }
            this.InvokeAsync("GetStrategiesForBailiff", new object[0], this.GetStrategiesForBailiffOperationCompleted, userState);
        }
        
        private void OnGetStrategiesForBailiffOperationCompleted(object arg) {
            if ((this.GetStrategiesForBailiffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategiesForBailiffCompleted(this, new GetStrategiesForBailiffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetLetters", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLetters(out string err) {
            object[] results = this.Invoke("GetLetters", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLetters(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLetters", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLetters(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLettersAsync() {
            this.GetLettersAsync(null);
        }
        
        /// <remarks/>
        public void GetLettersAsync(object userState) {
            if ((this.GetLettersOperationCompleted == null)) {
                this.GetLettersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLettersOperationCompleted);
            }
            this.InvokeAsync("GetLetters", new object[0], this.GetLettersOperationCompleted, userState);
        }
        
        private void OnGetLettersOperationCompleted(object arg) {
            if ((this.GetLettersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLettersCompleted(this, new GetLettersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSMS", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSMS(out string err) {
            object[] results = this.Invoke("GetSMS", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSMS(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSMS", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSMS(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMSAsync() {
            this.GetSMSAsync(null);
        }
        
        /// <remarks/>
        public void GetSMSAsync(object userState) {
            if ((this.GetSMSOperationCompleted == null)) {
                this.GetSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMSOperationCompleted);
            }
            this.InvokeAsync("GetSMS", new object[0], this.GetSMSOperationCompleted, userState);
        }
        
        private void OnGetSMSOperationCompleted(object arg) {
            if ((this.GetSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMSCompleted(this, new GetSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWorklistDataSet", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorklistDataSet(out string err) {
            object[] results = this.Invoke("GetWorklistDataSet", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWorklistDataSet(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWorklistDataSet", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWorklistDataSet(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorklistDataSetAsync() {
            this.GetWorklistDataSetAsync(null);
        }
        
        /// <remarks/>
        public void GetWorklistDataSetAsync(object userState) {
            if ((this.GetWorklistDataSetOperationCompleted == null)) {
                this.GetWorklistDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorklistDataSetOperationCompleted);
            }
            this.InvokeAsync("GetWorklistDataSet", new object[0], this.GetWorklistDataSetOperationCompleted, userState);
        }
        
        private void OnGetWorklistDataSetOperationCompleted(object arg) {
            if ((this.GetWorklistDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorklistDataSetCompleted(this, new GetWorklistDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveStrategyCondition", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveStrategyCondition(string strategy, string description, System.Data.DataSet dsStrategy, bool canBeAllocated, bool manual, int empeeno, out string err) {
            object[] results = this.Invoke("SaveStrategyCondition", new object[] {
                        strategy,
                        description,
                        dsStrategy,
                        canBeAllocated,
                        manual,
                        empeeno});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveStrategyCondition(string strategy, string description, System.Data.DataSet dsStrategy, bool canBeAllocated, bool manual, int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveStrategyCondition", new object[] {
                        strategy,
                        description,
                        dsStrategy,
                        canBeAllocated,
                        manual,
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveStrategyCondition(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveStrategyConditionAsync(string strategy, string description, System.Data.DataSet dsStrategy, bool canBeAllocated, bool manual, int empeeno) {
            this.SaveStrategyConditionAsync(strategy, description, dsStrategy, canBeAllocated, manual, empeeno, null);
        }
        
        /// <remarks/>
        public void SaveStrategyConditionAsync(string strategy, string description, System.Data.DataSet dsStrategy, bool canBeAllocated, bool manual, int empeeno, object userState) {
            if ((this.SaveStrategyConditionOperationCompleted == null)) {
                this.SaveStrategyConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveStrategyConditionOperationCompleted);
            }
            this.InvokeAsync("SaveStrategyCondition", new object[] {
                        strategy,
                        description,
                        dsStrategy,
                        canBeAllocated,
                        manual,
                        empeeno}, this.SaveStrategyConditionOperationCompleted, userState);
        }
        
        private void OnSaveStrategyConditionOperationCompleted(object arg) {
            if ((this.SaveStrategyConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveStrategyConditionCompleted(this, new SaveStrategyConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveSMS", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveSMS(string smsName, string smsBody, string description, out string err) {
            object[] results = this.Invoke("SaveSMS", new object[] {
                        smsName,
                        smsBody,
                        description});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveSMS(string smsName, string smsBody, string description, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveSMS", new object[] {
                        smsName,
                        smsBody,
                        description}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveSMS(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSMSAsync(string smsName, string smsBody, string description) {
            this.SaveSMSAsync(smsName, smsBody, description, null);
        }
        
        /// <remarks/>
        public void SaveSMSAsync(string smsName, string smsBody, string description, object userState) {
            if ((this.SaveSMSOperationCompleted == null)) {
                this.SaveSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSMSOperationCompleted);
            }
            this.InvokeAsync("SaveSMS", new object[] {
                        smsName,
                        smsBody,
                        description}, this.SaveSMSOperationCompleted, userState);
        }
        
        private void OnSaveSMSOperationCompleted(object arg) {
            if ((this.SaveSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSMSCompleted(this, new SaveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SetStrategyActive", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetStrategyActive(string strategy, int activeValue, out string err) {
            object[] results = this.Invoke("SetStrategyActive", new object[] {
                        strategy,
                        activeValue});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetStrategyActive(string strategy, int activeValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetStrategyActive", new object[] {
                        strategy,
                        activeValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetStrategyActive(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetStrategyActiveAsync(string strategy, int activeValue) {
            this.SetStrategyActiveAsync(strategy, activeValue, null);
        }
        
        /// <remarks/>
        public void SetStrategyActiveAsync(string strategy, int activeValue, object userState) {
            if ((this.SetStrategyActiveOperationCompleted == null)) {
                this.SetStrategyActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetStrategyActiveOperationCompleted);
            }
            this.InvokeAsync("SetStrategyActive", new object[] {
                        strategy,
                        activeValue}, this.SetStrategyActiveOperationCompleted, userState);
        }
        
        private void OnSetStrategyActiveOperationCompleted(object arg) {
            if ((this.SetStrategyActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetStrategyActiveCompleted(this, new SetStrategyActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteWorkList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteWorkList(string worklist, out string err) {
            object[] results = this.Invoke("DeleteWorkList", new object[] {
                        worklist});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteWorkList(string worklist, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteWorkList", new object[] {
                        worklist}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteWorkList(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWorkListAsync(string worklist) {
            this.DeleteWorkListAsync(worklist, null);
        }
        
        /// <remarks/>
        public void DeleteWorkListAsync(string worklist, object userState) {
            if ((this.DeleteWorkListOperationCompleted == null)) {
                this.DeleteWorkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkListOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkList", new object[] {
                        worklist}, this.DeleteWorkListOperationCompleted, userState);
        }
        
        private void OnDeleteWorkListOperationCompleted(object arg) {
            if ((this.DeleteWorkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkListCompleted(this, new DeleteWorkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteSMS", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSMS(string sms, out string err) {
            object[] results = this.Invoke("DeleteSMS", new object[] {
                        sms});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSMS(string sms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSMS", new object[] {
                        sms}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteSMS(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSMSAsync(string sms) {
            this.DeleteSMSAsync(sms, null);
        }
        
        /// <remarks/>
        public void DeleteSMSAsync(string sms, object userState) {
            if ((this.DeleteSMSOperationCompleted == null)) {
                this.DeleteSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSMSOperationCompleted);
            }
            this.InvokeAsync("DeleteSMS", new object[] {
                        sms}, this.DeleteSMSOperationCompleted, userState);
        }
        
        private void OnDeleteSMSOperationCompleted(object arg) {
            if ((this.DeleteSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSMSCompleted(this, new DeleteSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateStrategyAccounts", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateStrategyAccounts(string strategy, string acct, string worklist, string reasonForWriteOff, int empeeno, out string err) {
            object[] results = this.Invoke("UpdateStrategyAccounts", new object[] {
                        strategy,
                        acct,
                        worklist,
                        reasonForWriteOff,
                        empeeno});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateStrategyAccounts(string strategy, string acct, string worklist, string reasonForWriteOff, int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateStrategyAccounts", new object[] {
                        strategy,
                        acct,
                        worklist,
                        reasonForWriteOff,
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateStrategyAccounts(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStrategyAccountsAsync(string strategy, string acct, string worklist, string reasonForWriteOff, int empeeno) {
            this.UpdateStrategyAccountsAsync(strategy, acct, worklist, reasonForWriteOff, empeeno, null);
        }
        
        /// <remarks/>
        public void UpdateStrategyAccountsAsync(string strategy, string acct, string worklist, string reasonForWriteOff, int empeeno, object userState) {
            if ((this.UpdateStrategyAccountsOperationCompleted == null)) {
                this.UpdateStrategyAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStrategyAccountsOperationCompleted);
            }
            this.InvokeAsync("UpdateStrategyAccounts", new object[] {
                        strategy,
                        acct,
                        worklist,
                        reasonForWriteOff,
                        empeeno}, this.UpdateStrategyAccountsOperationCompleted, userState);
        }
        
        private void OnUpdateStrategyAccountsOperationCompleted(object arg) {
            if ((this.UpdateStrategyAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStrategyAccountsCompleted(this, new UpdateStrategyAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LockAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LockAccount(string acct, int user, out string err) {
            object[] results = this.Invoke("LockAccount", new object[] {
                        acct,
                        user});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLockAccount(string acct, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LockAccount", new object[] {
                        acct,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndLockAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LockAccountAsync(string acct, int user) {
            this.LockAccountAsync(acct, user, null);
        }
        
        /// <remarks/>
        public void LockAccountAsync(string acct, int user, object userState) {
            if ((this.LockAccountOperationCompleted == null)) {
                this.LockAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockAccountOperationCompleted);
            }
            this.InvokeAsync("LockAccount", new object[] {
                        acct,
                        user}, this.LockAccountOperationCompleted, userState);
        }
        
        private void OnLockAccountOperationCompleted(object arg) {
            if ((this.LockAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockAccountCompleted(this, new LockAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnlockAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnlockAccount(string acct, int user, out string err) {
            object[] results = this.Invoke("UnlockAccount", new object[] {
                        acct,
                        user});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlockAccount(string acct, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlockAccount", new object[] {
                        acct,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUnlockAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockAccountAsync(string acct, int user) {
            this.UnlockAccountAsync(acct, user, null);
        }
        
        /// <remarks/>
        public void UnlockAccountAsync(string acct, int user, object userState) {
            if ((this.UnlockAccountOperationCompleted == null)) {
                this.UnlockAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockAccountOperationCompleted);
            }
            this.InvokeAsync("UnlockAccount", new object[] {
                        acct,
                        user}, this.UnlockAccountOperationCompleted, userState);
        }
        
        private void OnUnlockAccountOperationCompleted(object arg) {
            if ((this.UnlockAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockAccountCompleted(this, new UnlockAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteExistingStrategy", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteExistingStrategy(string strategy, out string err) {
            object[] results = this.Invoke("DeleteExistingStrategy", new object[] {
                        strategy});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteExistingStrategy(string strategy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteExistingStrategy", new object[] {
                        strategy}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteExistingStrategy(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExistingStrategyAsync(string strategy) {
            this.DeleteExistingStrategyAsync(strategy, null);
        }
        
        /// <remarks/>
        public void DeleteExistingStrategyAsync(string strategy, object userState) {
            if ((this.DeleteExistingStrategyOperationCompleted == null)) {
                this.DeleteExistingStrategyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExistingStrategyOperationCompleted);
            }
            this.InvokeAsync("DeleteExistingStrategy", new object[] {
                        strategy}, this.DeleteExistingStrategyOperationCompleted, userState);
        }
        
        private void OnDeleteExistingStrategyOperationCompleted(object arg) {
            if ((this.DeleteExistingStrategyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExistingStrategyCompleted(this, new DeleteExistingStrategyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStrategyActionsForEmployee", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStrategyActionsForEmployee(int empeeno, string strategy, bool checkForSupervisorRight, out string err) {
            object[] results = this.Invoke("GetStrategyActionsForEmployee", new object[] {
                        empeeno,
                        strategy,
                        checkForSupervisorRight});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStrategyActionsForEmployee(int empeeno, string strategy, bool checkForSupervisorRight, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStrategyActionsForEmployee", new object[] {
                        empeeno,
                        strategy,
                        checkForSupervisorRight}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStrategyActionsForEmployee(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategyActionsForEmployeeAsync(int empeeno, string strategy, bool checkForSupervisorRight) {
            this.GetStrategyActionsForEmployeeAsync(empeeno, strategy, checkForSupervisorRight, null);
        }
        
        /// <remarks/>
        public void GetStrategyActionsForEmployeeAsync(int empeeno, string strategy, bool checkForSupervisorRight, object userState) {
            if ((this.GetStrategyActionsForEmployeeOperationCompleted == null)) {
                this.GetStrategyActionsForEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategyActionsForEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetStrategyActionsForEmployee", new object[] {
                        empeeno,
                        strategy,
                        checkForSupervisorRight}, this.GetStrategyActionsForEmployeeOperationCompleted, userState);
        }
        
        private void OnGetStrategyActionsForEmployeeOperationCompleted(object arg) {
            if ((this.GetStrategyActionsForEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategyActionsForEmployeeCompleted(this, new GetStrategyActionsForEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateCustomerTelephoneNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomerTelephoneNo(string custid, string HTelNo, string HDialCode, string WTelNo, string WDialCode, string MTelNo, string MDialCode, int Empeeno, bool HomeTelephoneChanged, bool WorkTelephoneChanged, bool MobileTelephoneChanged, out string err) {
            object[] results = this.Invoke("UpdateCustomerTelephoneNo", new object[] {
                        custid,
                        HTelNo,
                        HDialCode,
                        WTelNo,
                        WDialCode,
                        MTelNo,
                        MDialCode,
                        Empeeno,
                        HomeTelephoneChanged,
                        WorkTelephoneChanged,
                        MobileTelephoneChanged});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCustomerTelephoneNo(string custid, string HTelNo, string HDialCode, string WTelNo, string WDialCode, string MTelNo, string MDialCode, int Empeeno, bool HomeTelephoneChanged, bool WorkTelephoneChanged, bool MobileTelephoneChanged, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCustomerTelephoneNo", new object[] {
                        custid,
                        HTelNo,
                        HDialCode,
                        WTelNo,
                        WDialCode,
                        MTelNo,
                        MDialCode,
                        Empeeno,
                        HomeTelephoneChanged,
                        WorkTelephoneChanged,
                        MobileTelephoneChanged}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateCustomerTelephoneNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerTelephoneNoAsync(string custid, string HTelNo, string HDialCode, string WTelNo, string WDialCode, string MTelNo, string MDialCode, int Empeeno, bool HomeTelephoneChanged, bool WorkTelephoneChanged, bool MobileTelephoneChanged) {
            this.UpdateCustomerTelephoneNoAsync(custid, HTelNo, HDialCode, WTelNo, WDialCode, MTelNo, MDialCode, Empeeno, HomeTelephoneChanged, WorkTelephoneChanged, MobileTelephoneChanged, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerTelephoneNoAsync(string custid, string HTelNo, string HDialCode, string WTelNo, string WDialCode, string MTelNo, string MDialCode, int Empeeno, bool HomeTelephoneChanged, bool WorkTelephoneChanged, bool MobileTelephoneChanged, object userState) {
            if ((this.UpdateCustomerTelephoneNoOperationCompleted == null)) {
                this.UpdateCustomerTelephoneNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerTelephoneNoOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerTelephoneNo", new object[] {
                        custid,
                        HTelNo,
                        HDialCode,
                        WTelNo,
                        WDialCode,
                        MTelNo,
                        MDialCode,
                        Empeeno,
                        HomeTelephoneChanged,
                        WorkTelephoneChanged,
                        MobileTelephoneChanged}, this.UpdateCustomerTelephoneNoOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerTelephoneNoOperationCompleted(object arg) {
            if ((this.UpdateCustomerTelephoneNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerTelephoneNoCompleted(this, new UpdateCustomerTelephoneNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveBailActionsWithTelephoneActions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveBailActionsWithTelephoneActions(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataSet dsExtraActionDetail, string callingSource, out string err) {
            object[] results = this.Invoke("SaveBailActionsWithTelephoneActions", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dsExtraActionDetail,
                        callingSource});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveBailActionsWithTelephoneActions(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataSet dsExtraActionDetail, string callingSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveBailActionsWithTelephoneActions", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dsExtraActionDetail,
                        callingSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveBailActionsWithTelephoneActions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBailActionsWithTelephoneActionsAsync(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataSet dsExtraActionDetail, string callingSource) {
            this.SaveBailActionsWithTelephoneActionsAsync(acctNo, empeeNo, code, notes, dateDue, actionValue, spaDateExpiry, spaReasonCode, spaInstal, reminderDateTime, cancelOutstandingReminders, dsExtraActionDetail, callingSource, null);
        }
        
        /// <remarks/>
        public void SaveBailActionsWithTelephoneActionsAsync(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataSet dsExtraActionDetail, string callingSource, object userState) {
            if ((this.SaveBailActionsWithTelephoneActionsOperationCompleted == null)) {
                this.SaveBailActionsWithTelephoneActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBailActionsWithTelephoneActionsOperationCompleted);
            }
            this.InvokeAsync("SaveBailActionsWithTelephoneActions", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dsExtraActionDetail,
                        callingSource}, this.SaveBailActionsWithTelephoneActionsOperationCompleted, userState);
        }
        
        private void OnSaveBailActionsWithTelephoneActionsOperationCompleted(object arg) {
            if ((this.SaveBailActionsWithTelephoneActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBailActionsWithTelephoneActionsCompleted(this, new SaveBailActionsWithTelephoneActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateWorkList_ActionRights", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWorkList_ActionRights(System.Data.DataSet dsRightsInfo, out string err) {
            object[] results = this.Invoke("UpdateWorkList_ActionRights", new object[] {
                        dsRightsInfo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateWorkList_ActionRights(System.Data.DataSet dsRightsInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateWorkList_ActionRights", new object[] {
                        dsRightsInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateWorkList_ActionRights(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkList_ActionRightsAsync(System.Data.DataSet dsRightsInfo) {
            this.UpdateWorkList_ActionRightsAsync(dsRightsInfo, null);
        }
        
        /// <remarks/>
        public void UpdateWorkList_ActionRightsAsync(System.Data.DataSet dsRightsInfo, object userState) {
            if ((this.UpdateWorkList_ActionRightsOperationCompleted == null)) {
                this.UpdateWorkList_ActionRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkList_ActionRightsOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkList_ActionRights", new object[] {
                        dsRightsInfo}, this.UpdateWorkList_ActionRightsOperationCompleted, userState);
        }
        
        private void OnUpdateWorkList_ActionRightsOperationCompleted(object arg) {
            if ((this.UpdateWorkList_ActionRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkList_ActionRightsCompleted(this, new UpdateWorkList_ActionRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveWorkLists", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveWorkLists(System.Data.DataSet dsWorkList, out string err) {
            object[] results = this.Invoke("SaveWorkLists", new object[] {
                        dsWorkList});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveWorkLists(System.Data.DataSet dsWorkList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveWorkLists", new object[] {
                        dsWorkList}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveWorkLists(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWorkListsAsync(System.Data.DataSet dsWorkList) {
            this.SaveWorkListsAsync(dsWorkList, null);
        }
        
        /// <remarks/>
        public void SaveWorkListsAsync(System.Data.DataSet dsWorkList, object userState) {
            if ((this.SaveWorkListsOperationCompleted == null)) {
                this.SaveWorkListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWorkListsOperationCompleted);
            }
            this.InvokeAsync("SaveWorkLists", new object[] {
                        dsWorkList}, this.SaveWorkListsOperationCompleted, userState);
        }
        
        private void OnSaveWorkListsOperationCompleted(object arg) {
            if ((this.SaveWorkListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWorkListsCompleted(this, new SaveWorkListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadWorkListOrderColumns", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadWorkListOrderColumns(out string err) {
            object[] results = this.Invoke("LoadWorkListOrderColumns", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadWorkListOrderColumns(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadWorkListOrderColumns", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadWorkListOrderColumns(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWorkListOrderColumnsAsync() {
            this.LoadWorkListOrderColumnsAsync(null);
        }
        
        /// <remarks/>
        public void LoadWorkListOrderColumnsAsync(object userState) {
            if ((this.LoadWorkListOrderColumnsOperationCompleted == null)) {
                this.LoadWorkListOrderColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWorkListOrderColumnsOperationCompleted);
            }
            this.InvokeAsync("LoadWorkListOrderColumns", new object[0], this.LoadWorkListOrderColumnsOperationCompleted, userState);
        }
        
        private void OnLoadWorkListOrderColumnsOperationCompleted(object arg) {
            if ((this.LoadWorkListOrderColumnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWorkListOrderColumnsCompleted(this, new LoadWorkListOrderColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadWorkListSortOrder", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadWorkListSortOrder(out string err) {
            object[] results = this.Invoke("LoadWorkListSortOrder", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadWorkListSortOrder(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadWorkListSortOrder", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadWorkListSortOrder(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWorkListSortOrderAsync() {
            this.LoadWorkListSortOrderAsync(null);
        }
        
        /// <remarks/>
        public void LoadWorkListSortOrderAsync(object userState) {
            if ((this.LoadWorkListSortOrderOperationCompleted == null)) {
                this.LoadWorkListSortOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWorkListSortOrderOperationCompleted);
            }
            this.InvokeAsync("LoadWorkListSortOrder", new object[0], this.LoadWorkListSortOrderOperationCompleted, userState);
        }
        
        private void OnLoadWorkListSortOrderOperationCompleted(object arg) {
            if ((this.LoadWorkListSortOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWorkListSortOrderCompleted(this, new LoadWorkListSortOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateWorkListSortOrder", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWorkListSortOrder(System.Data.DataSet dsSortOrder, out string err) {
            object[] results = this.Invoke("UpdateWorkListSortOrder", new object[] {
                        dsSortOrder});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateWorkListSortOrder(System.Data.DataSet dsSortOrder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateWorkListSortOrder", new object[] {
                        dsSortOrder}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateWorkListSortOrder(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkListSortOrderAsync(System.Data.DataSet dsSortOrder) {
            this.UpdateWorkListSortOrderAsync(dsSortOrder, null);
        }
        
        /// <remarks/>
        public void UpdateWorkListSortOrderAsync(System.Data.DataSet dsSortOrder, object userState) {
            if ((this.UpdateWorkListSortOrderOperationCompleted == null)) {
                this.UpdateWorkListSortOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkListSortOrderOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkListSortOrder", new object[] {
                        dsSortOrder}, this.UpdateWorkListSortOrderOperationCompleted, userState);
        }
        
        private void OnUpdateWorkListSortOrderOperationCompleted(object arg) {
            if ((this.UpdateWorkListSortOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkListSortOrderCompleted(this, new UpdateWorkListSortOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDistinctLetterCodesByRunNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDistinctLetterCodesByRunNo(int runNo, out string err) {
            object[] results = this.Invoke("GetDistinctLetterCodesByRunNo", new object[] {
                        runNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDistinctLetterCodesByRunNo(int runNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDistinctLetterCodesByRunNo", new object[] {
                        runNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDistinctLetterCodesByRunNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctLetterCodesByRunNoAsync(int runNo) {
            this.GetDistinctLetterCodesByRunNoAsync(runNo, null);
        }
        
        /// <remarks/>
        public void GetDistinctLetterCodesByRunNoAsync(int runNo, object userState) {
            if ((this.GetDistinctLetterCodesByRunNoOperationCompleted == null)) {
                this.GetDistinctLetterCodesByRunNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctLetterCodesByRunNoOperationCompleted);
            }
            this.InvokeAsync("GetDistinctLetterCodesByRunNo", new object[] {
                        runNo}, this.GetDistinctLetterCodesByRunNoOperationCompleted, userState);
        }
        
        private void OnGetDistinctLetterCodesByRunNoOperationCompleted(object arg) {
            if ((this.GetDistinctLetterCodesByRunNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctLetterCodesByRunNoCompleted(this, new GetDistinctLetterCodesByRunNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadLetterFieldsbyCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadLetterFieldsbyCode(string letterCode, int runNo, char storeType, bool spouseDetailRequired, bool guarantorDetailRequired, out string err) {
            object[] results = this.Invoke("LoadLetterFieldsbyCode", new object[] {
                        letterCode,
                        runNo,
                        storeType,
                        spouseDetailRequired,
                        guarantorDetailRequired});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadLetterFieldsbyCode(string letterCode, int runNo, char storeType, bool spouseDetailRequired, bool guarantorDetailRequired, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadLetterFieldsbyCode", new object[] {
                        letterCode,
                        runNo,
                        storeType,
                        spouseDetailRequired,
                        guarantorDetailRequired}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadLetterFieldsbyCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLetterFieldsbyCodeAsync(string letterCode, int runNo, char storeType, bool spouseDetailRequired, bool guarantorDetailRequired) {
            this.LoadLetterFieldsbyCodeAsync(letterCode, runNo, storeType, spouseDetailRequired, guarantorDetailRequired, null);
        }
        
        /// <remarks/>
        public void LoadLetterFieldsbyCodeAsync(string letterCode, int runNo, char storeType, bool spouseDetailRequired, bool guarantorDetailRequired, object userState) {
            if ((this.LoadLetterFieldsbyCodeOperationCompleted == null)) {
                this.LoadLetterFieldsbyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLetterFieldsbyCodeOperationCompleted);
            }
            this.InvokeAsync("LoadLetterFieldsbyCode", new object[] {
                        letterCode,
                        runNo,
                        storeType,
                        spouseDetailRequired,
                        guarantorDetailRequired}, this.LoadLetterFieldsbyCodeOperationCompleted, userState);
        }
        
        private void OnLoadLetterFieldsbyCodeOperationCompleted(object arg) {
            if ((this.LoadLetterFieldsbyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLetterFieldsbyCodeCompleted(this, new LoadLetterFieldsbyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBranchByStoreType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBranchByStoreType(char storeType, out string err) {
            object[] results = this.Invoke("GetBranchByStoreType", new object[] {
                        storeType});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBranchByStoreType(char storeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBranchByStoreType", new object[] {
                        storeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBranchByStoreType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchByStoreTypeAsync(char storeType) {
            this.GetBranchByStoreTypeAsync(storeType, null);
        }
        
        /// <remarks/>
        public void GetBranchByStoreTypeAsync(char storeType, object userState) {
            if ((this.GetBranchByStoreTypeOperationCompleted == null)) {
                this.GetBranchByStoreTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchByStoreTypeOperationCompleted);
            }
            this.InvokeAsync("GetBranchByStoreType", new object[] {
                        storeType}, this.GetBranchByStoreTypeOperationCompleted, userState);
        }
        
        private void OnGetBranchByStoreTypeOperationCompleted(object arg) {
            if ((this.GetBranchByStoreTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchByStoreTypeCompleted(this, new GetBranchByStoreTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetZones", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetZones(out string err) {
            object[] results = this.Invoke("GetZones", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetZones(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetZones", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetZones(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetZonesAsync() {
            this.GetZonesAsync(null);
        }
        
        /// <remarks/>
        public void GetZonesAsync(object userState) {
            if ((this.GetZonesOperationCompleted == null)) {
                this.GetZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZonesOperationCompleted);
            }
            this.InvokeAsync("GetZones", new object[0], this.GetZonesOperationCompleted, userState);
        }
        
        private void OnGetZonesOperationCompleted(object arg) {
            if ((this.GetZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZonesCompleted(this, new GetZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetZoneAllocatableEmployeeInfo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetZoneAllocatableEmployeeInfo(out string err) {
            object[] results = this.Invoke("GetZoneAllocatableEmployeeInfo", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetZoneAllocatableEmployeeInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetZoneAllocatableEmployeeInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetZoneAllocatableEmployeeInfo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetZoneAllocatableEmployeeInfoAsync() {
            this.GetZoneAllocatableEmployeeInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetZoneAllocatableEmployeeInfoAsync(object userState) {
            if ((this.GetZoneAllocatableEmployeeInfoOperationCompleted == null)) {
                this.GetZoneAllocatableEmployeeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZoneAllocatableEmployeeInfoOperationCompleted);
            }
            this.InvokeAsync("GetZoneAllocatableEmployeeInfo", new object[0], this.GetZoneAllocatableEmployeeInfoOperationCompleted, userState);
        }
        
        private void OnGetZoneAllocatableEmployeeInfoOperationCompleted(object arg) {
            if ((this.GetZoneAllocatableEmployeeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZoneAllocatableEmployeeInfoCompleted(this, new GetZoneAllocatableEmployeeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetActionRightsHierarchy", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActionRightsHierarchy(out string err) {
            object[] results = this.Invoke("GetActionRightsHierarchy", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetActionRightsHierarchy(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetActionRightsHierarchy", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetActionRightsHierarchy(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActionRightsHierarchyAsync() {
            this.GetActionRightsHierarchyAsync(null);
        }
        
        /// <remarks/>
        public void GetActionRightsHierarchyAsync(object userState) {
            if ((this.GetActionRightsHierarchyOperationCompleted == null)) {
                this.GetActionRightsHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActionRightsHierarchyOperationCompleted);
            }
            this.InvokeAsync("GetActionRightsHierarchy", new object[0], this.GetActionRightsHierarchyOperationCompleted, userState);
        }
        
        private void OnGetActionRightsHierarchyOperationCompleted(object arg) {
            if ((this.GetActionRightsHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActionRightsHierarchyCompleted(this, new GetActionRightsHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWorklistRightsHierarchy", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorklistRightsHierarchy(out string err) {
            object[] results = this.Invoke("GetWorklistRightsHierarchy", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWorklistRightsHierarchy(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWorklistRightsHierarchy", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWorklistRightsHierarchy(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorklistRightsHierarchyAsync() {
            this.GetWorklistRightsHierarchyAsync(null);
        }
        
        /// <remarks/>
        public void GetWorklistRightsHierarchyAsync(object userState) {
            if ((this.GetWorklistRightsHierarchyOperationCompleted == null)) {
                this.GetWorklistRightsHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorklistRightsHierarchyOperationCompleted);
            }
            this.InvokeAsync("GetWorklistRightsHierarchy", new object[0], this.GetWorklistRightsHierarchyOperationCompleted, userState);
        }
        
        private void OnGetWorklistRightsHierarchyOperationCompleted(object arg) {
            if ((this.GetWorklistRightsHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorklistRightsHierarchyCompleted(this, new GetWorklistRightsHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCallReminderInfo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallReminderInfo(string acctno, int empeeno, out string err) {
            object[] results = this.Invoke("GetCallReminderInfo", new object[] {
                        acctno,
                        empeeno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCallReminderInfo(string acctno, int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCallReminderInfo", new object[] {
                        acctno,
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCallReminderInfo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallReminderInfoAsync(string acctno, int empeeno) {
            this.GetCallReminderInfoAsync(acctno, empeeno, null);
        }
        
        /// <remarks/>
        public void GetCallReminderInfoAsync(string acctno, int empeeno, object userState) {
            if ((this.GetCallReminderInfoOperationCompleted == null)) {
                this.GetCallReminderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallReminderInfoOperationCompleted);
            }
            this.InvokeAsync("GetCallReminderInfo", new object[] {
                        acctno,
                        empeeno}, this.GetCallReminderInfoOperationCompleted, userState);
        }
        
        private void OnGetCallReminderInfoOperationCompleted(object arg) {
            if ((this.GetCallReminderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallReminderInfoCompleted(this, new GetCallReminderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetLegalFraudInsuranceDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLegalFraudInsuranceDetails(string acctno, out string err) {
            object[] results = this.Invoke("GetLegalFraudInsuranceDetails", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLegalFraudInsuranceDetails(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLegalFraudInsuranceDetails", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLegalFraudInsuranceDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLegalFraudInsuranceDetailsAsync(string acctno) {
            this.GetLegalFraudInsuranceDetailsAsync(acctno, null);
        }
        
        /// <remarks/>
        public void GetLegalFraudInsuranceDetailsAsync(string acctno, object userState) {
            if ((this.GetLegalFraudInsuranceDetailsOperationCompleted == null)) {
                this.GetLegalFraudInsuranceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLegalFraudInsuranceDetailsOperationCompleted);
            }
            this.InvokeAsync("GetLegalFraudInsuranceDetails", new object[] {
                        acctno}, this.GetLegalFraudInsuranceDetailsOperationCompleted, userState);
        }
        
        private void OnGetLegalFraudInsuranceDetailsOperationCompleted(object arg) {
            if ((this.GetLegalFraudInsuranceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLegalFraudInsuranceDetailsCompleted(this, new GetLegalFraudInsuranceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadAllocateableStaffandTypes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAllocateableStaffandTypes(out string err) {
            object[] results = this.Invoke("LoadAllocateableStaffandTypes", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAllocateableStaffandTypes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAllocateableStaffandTypes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAllocateableStaffandTypes(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllocateableStaffandTypesAsync() {
            this.LoadAllocateableStaffandTypesAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllocateableStaffandTypesAsync(object userState) {
            if ((this.LoadAllocateableStaffandTypesOperationCompleted == null)) {
                this.LoadAllocateableStaffandTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllocateableStaffandTypesOperationCompleted);
            }
            this.InvokeAsync("LoadAllocateableStaffandTypes", new object[0], this.LoadAllocateableStaffandTypesOperationCompleted, userState);
        }
        
        private void OnLoadAllocateableStaffandTypesOperationCompleted(object arg) {
            if ((this.LoadAllocateableStaffandTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllocateableStaffandTypesCompleted(this, new LoadAllocateableStaffandTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AccountGetCombinedSPADetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AccountGetCombinedSPADetails(string custID, out string err) {
            object[] results = this.Invoke("AccountGetCombinedSPADetails", new object[] {
                        custID});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAccountGetCombinedSPADetails(string custID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AccountGetCombinedSPADetails", new object[] {
                        custID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndAccountGetCombinedSPADetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AccountGetCombinedSPADetailsAsync(string custID) {
            this.AccountGetCombinedSPADetailsAsync(custID, null);
        }
        
        /// <remarks/>
        public void AccountGetCombinedSPADetailsAsync(string custID, object userState) {
            if ((this.AccountGetCombinedSPADetailsOperationCompleted == null)) {
                this.AccountGetCombinedSPADetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountGetCombinedSPADetailsOperationCompleted);
            }
            this.InvokeAsync("AccountGetCombinedSPADetails", new object[] {
                        custID}, this.AccountGetCombinedSPADetailsOperationCompleted, userState);
        }
        
        private void OnAccountGetCombinedSPADetailsOperationCompleted(object arg) {
            if ((this.AccountGetCombinedSPADetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountGetCombinedSPADetailsCompleted(this, new AccountGetCombinedSPADetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveBailActionsForSPA", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveBailActionsForSPA(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataTable dtSPADetails, string callingSource, out string err) {
            object[] results = this.Invoke("SaveBailActionsForSPA", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dtSPADetails,
                        callingSource});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveBailActionsForSPA(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataTable dtSPADetails, string callingSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveBailActionsForSPA", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dtSPADetails,
                        callingSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveBailActionsForSPA(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBailActionsForSPAAsync(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataTable dtSPADetails, string callingSource) {
            this.SaveBailActionsForSPAAsync(acctNo, empeeNo, code, notes, dateDue, actionValue, spaDateExpiry, spaReasonCode, spaInstal, reminderDateTime, cancelOutstandingReminders, dtSPADetails, callingSource, null);
        }
        
        /// <remarks/>
        public void SaveBailActionsForSPAAsync(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataTable dtSPADetails, string callingSource, object userState) {
            if ((this.SaveBailActionsForSPAOperationCompleted == null)) {
                this.SaveBailActionsForSPAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBailActionsForSPAOperationCompleted);
            }
            this.InvokeAsync("SaveBailActionsForSPA", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dtSPADetails,
                        callingSource}, this.SaveBailActionsForSPAOperationCompleted, userState);
        }
        
        private void OnSaveBailActionsForSPAOperationCompleted(object arg) {
            if ((this.SaveBailActionsForSPACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBailActionsForSPACompleted(this, new SaveBailActionsForSPACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SPAWriteRefinance", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SPAWriteRefinance(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataTable dtSPADetails, string callingSource, out string err) {
            object[] results = this.Invoke("SPAWriteRefinance", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dtSPADetails,
                        callingSource});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSPAWriteRefinance(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataTable dtSPADetails, string callingSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SPAWriteRefinance", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dtSPADetails,
                        callingSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSPAWriteRefinance(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SPAWriteRefinanceAsync(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataTable dtSPADetails, string callingSource) {
            this.SPAWriteRefinanceAsync(acctNo, empeeNo, code, notes, dateDue, actionValue, spaDateExpiry, spaReasonCode, spaInstal, reminderDateTime, cancelOutstandingReminders, dtSPADetails, callingSource, null);
        }
        
        /// <remarks/>
        public void SPAWriteRefinanceAsync(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, System.Data.DataTable dtSPADetails, string callingSource, object userState) {
            if ((this.SPAWriteRefinanceOperationCompleted == null)) {
                this.SPAWriteRefinanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSPAWriteRefinanceOperationCompleted);
            }
            this.InvokeAsync("SPAWriteRefinance", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        dtSPADetails,
                        callingSource}, this.SPAWriteRefinanceOperationCompleted, userState);
        }
        
        private void OnSPAWriteRefinanceOperationCompleted(object arg) {
            if ((this.SPAWriteRefinanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SPAWriteRefinanceCompleted(this, new SPAWriteRefinanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveZoneRule", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveZoneRule(string Zone, System.Data.DataSet dsZone, out string err) {
            object[] results = this.Invoke("SaveZoneRule", new object[] {
                        Zone,
                        dsZone});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveZoneRule(string Zone, System.Data.DataSet dsZone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveZoneRule", new object[] {
                        Zone,
                        dsZone}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveZoneRule(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveZoneRuleAsync(string Zone, System.Data.DataSet dsZone) {
            this.SaveZoneRuleAsync(Zone, dsZone, null);
        }
        
        /// <remarks/>
        public void SaveZoneRuleAsync(string Zone, System.Data.DataSet dsZone, object userState) {
            if ((this.SaveZoneRuleOperationCompleted == null)) {
                this.SaveZoneRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveZoneRuleOperationCompleted);
            }
            this.InvokeAsync("SaveZoneRule", new object[] {
                        Zone,
                        dsZone}, this.SaveZoneRuleOperationCompleted, userState);
        }
        
        private void OnSaveZoneRuleOperationCompleted(object arg) {
            if ((this.SaveZoneRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveZoneRuleCompleted(this, new SaveZoneRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveBailiffZoneAllocation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveBailiffZoneAllocation(int empeeNo, System.Data.DataSet dsZoneAllocation, out string err) {
            object[] results = this.Invoke("SaveBailiffZoneAllocation", new object[] {
                        empeeNo,
                        dsZoneAllocation});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveBailiffZoneAllocation(int empeeNo, System.Data.DataSet dsZoneAllocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveBailiffZoneAllocation", new object[] {
                        empeeNo,
                        dsZoneAllocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveBailiffZoneAllocation(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBailiffZoneAllocationAsync(int empeeNo, System.Data.DataSet dsZoneAllocation) {
            this.SaveBailiffZoneAllocationAsync(empeeNo, dsZoneAllocation, null);
        }
        
        /// <remarks/>
        public void SaveBailiffZoneAllocationAsync(int empeeNo, System.Data.DataSet dsZoneAllocation, object userState) {
            if ((this.SaveBailiffZoneAllocationOperationCompleted == null)) {
                this.SaveBailiffZoneAllocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBailiffZoneAllocationOperationCompleted);
            }
            this.InvokeAsync("SaveBailiffZoneAllocation", new object[] {
                        empeeNo,
                        dsZoneAllocation}, this.SaveBailiffZoneAllocationOperationCompleted, userState);
        }
        
        private void OnSaveBailiffZoneAllocationOperationCompleted(object arg) {
            if ((this.SaveBailiffZoneAllocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBailiffZoneAllocationCompleted(this, new SaveBailiffZoneAllocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteZone", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteZone(string Zone, out string err) {
            object[] results = this.Invoke("DeleteZone", new object[] {
                        Zone});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteZone(string Zone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteZone", new object[] {
                        Zone}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteZone(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteZoneAsync(string Zone) {
            this.DeleteZoneAsync(Zone, null);
        }
        
        /// <remarks/>
        public void DeleteZoneAsync(string Zone, object userState) {
            if ((this.DeleteZoneOperationCompleted == null)) {
                this.DeleteZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteZoneOperationCompleted);
            }
            this.InvokeAsync("DeleteZone", new object[] {
                        Zone}, this.DeleteZoneOperationCompleted, userState);
        }
        
        private void OnDeleteZoneOperationCompleted(object arg) {
            if ((this.DeleteZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteZoneCompleted(this, new DeleteZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveZones", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveZones(string code, string description, out string err) {
            object[] results = this.Invoke("SaveZones", new object[] {
                        code,
                        description});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveZones(string code, string description, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveZones", new object[] {
                        code,
                        description}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveZones(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveZonesAsync(string code, string description) {
            this.SaveZonesAsync(code, description, null);
        }
        
        /// <remarks/>
        public void SaveZonesAsync(string code, string description, object userState) {
            if ((this.SaveZonesOperationCompleted == null)) {
                this.SaveZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveZonesOperationCompleted);
            }
            this.InvokeAsync("SaveZones", new object[] {
                        code,
                        description}, this.SaveZonesOperationCompleted, userState);
        }
        
        private void OnSaveZonesOperationCompleted(object arg) {
            if ((this.SaveZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveZonesCompleted(this, new SaveZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ApplyZones", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ApplyZones(string zone, out string err) {
            object[] results = this.Invoke("ApplyZones", new object[] {
                        zone});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApplyZones(string zone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApplyZones", new object[] {
                        zone}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndApplyZones(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyZonesAsync(string zone) {
            this.ApplyZonesAsync(zone, null);
        }
        
        /// <remarks/>
        public void ApplyZonesAsync(string zone, object userState) {
            if ((this.ApplyZonesOperationCompleted == null)) {
                this.ApplyZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyZonesOperationCompleted);
            }
            this.InvokeAsync("ApplyZones", new object[] {
                        zone}, this.ApplyZonesOperationCompleted, userState);
        }
        
        private void OnApplyZonesOperationCompleted(object arg) {
            if ((this.ApplyZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyZonesCompleted(this, new ApplyZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadUnallocatedAddressZones", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadUnallocatedAddressZones(out string err) {
            object[] results = this.Invoke("LoadUnallocatedAddressZones", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadUnallocatedAddressZones(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadUnallocatedAddressZones", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadUnallocatedAddressZones(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadUnallocatedAddressZonesAsync() {
            this.LoadUnallocatedAddressZonesAsync(null);
        }
        
        /// <remarks/>
        public void LoadUnallocatedAddressZonesAsync(object userState) {
            if ((this.LoadUnallocatedAddressZonesOperationCompleted == null)) {
                this.LoadUnallocatedAddressZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadUnallocatedAddressZonesOperationCompleted);
            }
            this.InvokeAsync("LoadUnallocatedAddressZones", new object[0], this.LoadUnallocatedAddressZonesOperationCompleted, userState);
        }
        
        private void OnLoadUnallocatedAddressZonesOperationCompleted(object arg) {
            if ((this.LoadUnallocatedAddressZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadUnallocatedAddressZonesCompleted(this, new LoadUnallocatedAddressZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadZoneRules", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadZoneRules(string zone, out string err) {
            object[] results = this.Invoke("LoadZoneRules", new object[] {
                        zone});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadZoneRules(string zone, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadZoneRules", new object[] {
                        zone}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadZoneRules(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadZoneRulesAsync(string zone) {
            this.LoadZoneRulesAsync(zone, null);
        }
        
        /// <remarks/>
        public void LoadZoneRulesAsync(string zone, object userState) {
            if ((this.LoadZoneRulesOperationCompleted == null)) {
                this.LoadZoneRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadZoneRulesOperationCompleted);
            }
            this.InvokeAsync("LoadZoneRules", new object[] {
                        zone}, this.LoadZoneRulesOperationCompleted, userState);
        }
        
        private void OnLoadZoneRulesOperationCompleted(object arg) {
            if ((this.LoadZoneRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadZoneRulesCompleted(this, new LoadZoneRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/BailiffAllocationRulesLoad", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BailiffAllocationRulesLoad(out string err) {
            object[] results = this.Invoke("BailiffAllocationRulesLoad", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBailiffAllocationRulesLoad(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BailiffAllocationRulesLoad", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBailiffAllocationRulesLoad(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BailiffAllocationRulesLoadAsync() {
            this.BailiffAllocationRulesLoadAsync(null);
        }
        
        /// <remarks/>
        public void BailiffAllocationRulesLoadAsync(object userState) {
            if ((this.BailiffAllocationRulesLoadOperationCompleted == null)) {
                this.BailiffAllocationRulesLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBailiffAllocationRulesLoadOperationCompleted);
            }
            this.InvokeAsync("BailiffAllocationRulesLoad", new object[0], this.BailiffAllocationRulesLoadOperationCompleted, userState);
        }
        
        private void OnBailiffAllocationRulesLoadOperationCompleted(object arg) {
            if ((this.BailiffAllocationRulesLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BailiffAllocationRulesLoadCompleted(this, new BailiffAllocationRulesLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/RolesGet", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RolesGet(int permission) {
            object[] results = this.Invoke("RolesGet", new object[] {
                        permission});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRolesGet(int permission, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RolesGet", new object[] {
                        permission}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRolesGet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RolesGetAsync(int permission) {
            this.RolesGetAsync(permission, null);
        }
        
        /// <remarks/>
        public void RolesGetAsync(int permission, object userState) {
            if ((this.RolesGetOperationCompleted == null)) {
                this.RolesGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRolesGetOperationCompleted);
            }
            this.InvokeAsync("RolesGet", new object[] {
                        permission}, this.RolesGetOperationCompleted, userState);
        }
        
        private void OnRolesGetOperationCompleted(object arg) {
            if ((this.RolesGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RolesGetCompleted(this, new RolesGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetVillages", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVillages(out string err) {
            object[] results = this.Invoke("GetVillages", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVillages(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVillages", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetVillages(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVillagesAsync() {
            this.GetVillagesAsync(null);
        }
        
        /// <remarks/>
        public void GetVillagesAsync(object userState) {
            if ((this.GetVillagesOperationCompleted == null)) {
                this.GetVillagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVillagesOperationCompleted);
            }
            this.InvokeAsync("GetVillages", new object[0], this.GetVillagesOperationCompleted, userState);
        }
        
        private void OnGetVillagesOperationCompleted(object arg) {
            if ((this.GetVillagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVillagesCompleted(this, new GetVillagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRegions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRegions(string village, out string err) {
            object[] results = this.Invoke("GetRegions", new object[] {
                        village});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRegions(string village, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRegions", new object[] {
                        village}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRegions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionsAsync(string village) {
            this.GetRegionsAsync(village, null);
        }
        
        /// <remarks/>
        public void GetRegionsAsync(string village, object userState) {
            if ((this.GetRegionsOperationCompleted == null)) {
                this.GetRegionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionsOperationCompleted);
            }
            this.InvokeAsync("GetRegions", new object[] {
                        village}, this.GetRegionsOperationCompleted, userState);
        }
        
        private void OnGetRegionsOperationCompleted(object arg) {
            if ((this.GetRegionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionsCompleted(this, new GetRegionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetZipCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetZipCode(string region, string village, out string err) {
            object[] results = this.Invoke("GetZipCode", new object[] {
                        region,
                        village});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetZipCode(string region, string village, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetZipCode", new object[] {
                        region,
                        village}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetZipCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetZipCodeAsync(string region, string village) {
            this.GetZipCodeAsync(region, village, null);
        }
        
        /// <remarks/>
        public void GetZipCodeAsync(string region, string village, object userState) {
            if ((this.GetZipCodeOperationCompleted == null)) {
                this.GetZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetZipCode", new object[] {
                        region,
                        village}, this.GetZipCodeOperationCompleted, userState);
        }
        
        private void OnGetZipCodeOperationCompleted(object arg) {
            if ((this.GetZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipCodeCompleted(this, new GetZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetConditionsCompletedEventHandler(object sender, GetConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetActionsCompletedEventHandler(object sender, GetActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetActionsWithStrategyCompletedEventHandler(object sender, GetActionsWithStrategyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActionsWithStrategyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActionsWithStrategyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetStrategyActionsCompletedEventHandler(object sender, GetStrategyActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategyActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategyActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetWorkListsCompletedEventHandler(object sender, GetWorkListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetStrategyConditionsCompletedEventHandler(object sender, GetStrategyConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategyConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategyConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetStrategiesCompletedEventHandler(object sender, GetStrategiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetStrategiesToSendToCompletedEventHandler(object sender, GetStrategiesToSendToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategiesToSendToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategiesToSendToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetStrategiesForBailiffCompletedEventHandler(object sender, GetStrategiesForBailiffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategiesForBailiffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategiesForBailiffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetLettersCompletedEventHandler(object sender, GetLettersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLettersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLettersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetSMSCompletedEventHandler(object sender, GetSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetWorklistDataSetCompletedEventHandler(object sender, GetWorklistDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorklistDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorklistDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveStrategyConditionCompletedEventHandler(object sender, SaveStrategyConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveStrategyConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveStrategyConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveSMSCompletedEventHandler(object sender, SaveSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SetStrategyActiveCompletedEventHandler(object sender, SetStrategyActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetStrategyActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetStrategyActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteWorkListCompletedEventHandler(object sender, DeleteWorkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWorkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWorkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteSMSCompletedEventHandler(object sender, DeleteSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateStrategyAccountsCompletedEventHandler(object sender, UpdateStrategyAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStrategyAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStrategyAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LockAccountCompletedEventHandler(object sender, LockAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UnlockAccountCompletedEventHandler(object sender, UnlockAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteExistingStrategyCompletedEventHandler(object sender, DeleteExistingStrategyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExistingStrategyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExistingStrategyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetStrategyActionsForEmployeeCompletedEventHandler(object sender, GetStrategyActionsForEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategyActionsForEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategyActionsForEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateCustomerTelephoneNoCompletedEventHandler(object sender, UpdateCustomerTelephoneNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerTelephoneNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerTelephoneNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveBailActionsWithTelephoneActionsCompletedEventHandler(object sender, SaveBailActionsWithTelephoneActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBailActionsWithTelephoneActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBailActionsWithTelephoneActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateWorkList_ActionRightsCompletedEventHandler(object sender, UpdateWorkList_ActionRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkList_ActionRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkList_ActionRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveWorkListsCompletedEventHandler(object sender, SaveWorkListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWorkListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWorkListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadWorkListOrderColumnsCompletedEventHandler(object sender, LoadWorkListOrderColumnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWorkListOrderColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWorkListOrderColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadWorkListSortOrderCompletedEventHandler(object sender, LoadWorkListSortOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWorkListSortOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWorkListSortOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateWorkListSortOrderCompletedEventHandler(object sender, UpdateWorkListSortOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkListSortOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkListSortOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetDistinctLetterCodesByRunNoCompletedEventHandler(object sender, GetDistinctLetterCodesByRunNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctLetterCodesByRunNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctLetterCodesByRunNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadLetterFieldsbyCodeCompletedEventHandler(object sender, LoadLetterFieldsbyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLetterFieldsbyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLetterFieldsbyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetBranchByStoreTypeCompletedEventHandler(object sender, GetBranchByStoreTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchByStoreTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchByStoreTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetZonesCompletedEventHandler(object sender, GetZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetZoneAllocatableEmployeeInfoCompletedEventHandler(object sender, GetZoneAllocatableEmployeeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZoneAllocatableEmployeeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZoneAllocatableEmployeeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetActionRightsHierarchyCompletedEventHandler(object sender, GetActionRightsHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActionRightsHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActionRightsHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetWorklistRightsHierarchyCompletedEventHandler(object sender, GetWorklistRightsHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorklistRightsHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorklistRightsHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetCallReminderInfoCompletedEventHandler(object sender, GetCallReminderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallReminderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallReminderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetLegalFraudInsuranceDetailsCompletedEventHandler(object sender, GetLegalFraudInsuranceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLegalFraudInsuranceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLegalFraudInsuranceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadAllocateableStaffandTypesCompletedEventHandler(object sender, LoadAllocateableStaffandTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllocateableStaffandTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllocateableStaffandTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AccountGetCombinedSPADetailsCompletedEventHandler(object sender, AccountGetCombinedSPADetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountGetCombinedSPADetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountGetCombinedSPADetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveBailActionsForSPACompletedEventHandler(object sender, SaveBailActionsForSPACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBailActionsForSPACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBailActionsForSPACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SPAWriteRefinanceCompletedEventHandler(object sender, SPAWriteRefinanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SPAWriteRefinanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SPAWriteRefinanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveZoneRuleCompletedEventHandler(object sender, SaveZoneRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveZoneRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveZoneRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveBailiffZoneAllocationCompletedEventHandler(object sender, SaveBailiffZoneAllocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBailiffZoneAllocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBailiffZoneAllocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteZoneCompletedEventHandler(object sender, DeleteZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveZonesCompletedEventHandler(object sender, SaveZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ApplyZonesCompletedEventHandler(object sender, ApplyZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadUnallocatedAddressZonesCompletedEventHandler(object sender, LoadUnallocatedAddressZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadUnallocatedAddressZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadUnallocatedAddressZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadZoneRulesCompletedEventHandler(object sender, LoadZoneRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadZoneRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadZoneRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void BailiffAllocationRulesLoadCompletedEventHandler(object sender, BailiffAllocationRulesLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BailiffAllocationRulesLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BailiffAllocationRulesLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void RolesGetCompletedEventHandler(object sender, RolesGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RolesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RolesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetVillagesCompletedEventHandler(object sender, GetVillagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVillagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVillagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetRegionsCompletedEventHandler(object sender, GetRegionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetZipCodeCompletedEventHandler(object sender, GetZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591