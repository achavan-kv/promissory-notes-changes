//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace STL.PL.WS5 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WStaticDataManagerSoap", Namespace="http://strategicthought.com/webservices/")]
    public partial class WStaticDataManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback GetDropDownDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDynamicMenusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ControlPermissionCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback ControlPermissionPasswordCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback ControlPermissionPasswordCheckMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMandatoryFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMandatoryFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostCodeLookUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScoringOperandsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScreensOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveStockItemTranslationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockItemTranslationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCodesAndCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRepairCentreOperationCompleted;
        
        private System.Threading.SendOrPostCallback CodeDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CodeUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCountryMaintenanceChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryMaintenanceParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStcokItemCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTermsTypeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TermsTypeBandsOverviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback TermsTypeBandsAdjustOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchServiceLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTermsTypeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSystemStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoyaltyDropDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopSellingCashandGoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadZoneWithTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback NonStockDeletionDatesDataSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductAssociationGetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductAssociationSaveDetailsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WStaticDataManager() {
            this.Url = "http://localhost/Courts.NET.WS/WStaticDataManager.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDropDownDataCompletedEventHandler GetDropDownDataCompleted;
        
        /// <remarks/>
        public event GetDynamicMenusCompletedEventHandler GetDynamicMenusCompleted;
        
        /// <remarks/>
        public event ControlPermissionCheckCompletedEventHandler ControlPermissionCheckCompleted;
        
        /// <remarks/>
        public event ControlPermissionPasswordCheckCompletedEventHandler ControlPermissionPasswordCheckCompleted;
        
        /// <remarks/>
        public event ControlPermissionPasswordCheckMultipleCompletedEventHandler ControlPermissionPasswordCheckMultipleCompleted;
        
        /// <remarks/>
        public event GetMandatoryFieldsCompletedEventHandler GetMandatoryFieldsCompleted;
        
        /// <remarks/>
        public event SaveMandatoryFieldsCompletedEventHandler SaveMandatoryFieldsCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event PostCodeLookUpCompletedEventHandler PostCodeLookUpCompleted;
        
        /// <remarks/>
        public event GetScoringOperandsCompletedEventHandler GetScoringOperandsCompleted;
        
        /// <remarks/>
        public event GetScreensCompletedEventHandler GetScreensCompleted;
        
        /// <remarks/>
        public event SaveStockItemTranslationsCompletedEventHandler SaveStockItemTranslationsCompleted;
        
        /// <remarks/>
        public event GetStockItemTranslationsCompletedEventHandler GetStockItemTranslationsCompleted;
        
        /// <remarks/>
        public event GetDictionaryCompletedEventHandler GetDictionaryCompleted;
        
        /// <remarks/>
        public event SaveDictionaryCompletedEventHandler SaveDictionaryCompleted;
        
        /// <remarks/>
        public event GetAllCodesAndCategoriesCompletedEventHandler GetAllCodesAndCategoriesCompleted;
        
        /// <remarks/>
        public event GetAllRepairCentreCompletedEventHandler GetAllRepairCentreCompleted;
        
        /// <remarks/>
        public event CodeDeleteCompletedEventHandler CodeDeleteCompleted;
        
        /// <remarks/>
        public event CodeUpdateCompletedEventHandler CodeUpdateCompleted;
        
        /// <remarks/>
        public event SaveCountryMaintenanceChangesCompletedEventHandler SaveCountryMaintenanceChangesCompleted;
        
        /// <remarks/>
        public event GetCountryMaintenanceParametersCompletedEventHandler GetCountryMaintenanceParametersCompleted;
        
        /// <remarks/>
        public event GetStcokItemCacheCompletedEventHandler GetStcokItemCacheCompleted;
        
        /// <remarks/>
        public event LoadTermsTypeDetailsCompletedEventHandler LoadTermsTypeDetailsCompleted;
        
        /// <remarks/>
        public event TermsTypeBandsOverviewCompletedEventHandler TermsTypeBandsOverviewCompleted;
        
        /// <remarks/>
        public event TermsTypeBandsAdjustCompletedEventHandler TermsTypeBandsAdjustCompleted;
        
        /// <remarks/>
        public event GetBranchServiceLocationCompletedEventHandler GetBranchServiceLocationCompleted;
        
        /// <remarks/>
        public event GetServerDateTimeCompletedEventHandler GetServerDateTimeCompleted;
        
        /// <remarks/>
        public event GetServerDateCompletedEventHandler GetServerDateCompleted;
        
        /// <remarks/>
        public event SaveTermsTypeDetailsCompletedEventHandler SaveTermsTypeDetailsCompleted;
        
        /// <remarks/>
        public event SetSystemStatusCompletedEventHandler SetSystemStatusCompleted;
        
        /// <remarks/>
        public event GetBankDetailsCompletedEventHandler GetBankDetailsCompleted;
        
        /// <remarks/>
        public event UpdateBankCompletedEventHandler UpdateBankCompleted;
        
        /// <remarks/>
        public event DeleteBankCompletedEventHandler DeleteBankCompleted;
        
        /// <remarks/>
        public event GetLoyaltyDropDataCompletedEventHandler GetLoyaltyDropDataCompleted;
        
        /// <remarks/>
        public event GetTopSellingCashandGoCompletedEventHandler GetTopSellingCashandGoCompleted;
        
        /// <remarks/>
        public event LoadAllTechnicianCompletedEventHandler LoadAllTechnicianCompleted;
        
        /// <remarks/>
        public event LoadZoneWithTechnicianCompletedEventHandler LoadZoneWithTechnicianCompleted;
        
        /// <remarks/>
        public event NonStockDeletionDatesDataSaveCompletedEventHandler NonStockDeletionDatesDataSaveCompleted;
        
        /// <remarks/>
        public event ProductAssociationGetDetailsCompletedEventHandler ProductAssociationGetDetailsCompleted;
        
        /// <remarks/>
        public event ProductAssociationSaveDetailsCompletedEventHandler ProductAssociationSaveDetailsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDropDownData", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDropDownData(System.Xml.XmlNode dropDowns, out string err) {
            object[] results = this.Invoke("GetDropDownData", new object[] {
                        dropDowns});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDropDownData(System.Xml.XmlNode dropDowns, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDropDownData", new object[] {
                        dropDowns}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDropDownData(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDropDownDataAsync(System.Xml.XmlNode dropDowns) {
            this.GetDropDownDataAsync(dropDowns, null);
        }
        
        /// <remarks/>
        public void GetDropDownDataAsync(System.Xml.XmlNode dropDowns, object userState) {
            if ((this.GetDropDownDataOperationCompleted == null)) {
                this.GetDropDownDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDropDownDataOperationCompleted);
            }
            this.InvokeAsync("GetDropDownData", new object[] {
                        dropDowns}, this.GetDropDownDataOperationCompleted, userState);
        }
        
        private void OnGetDropDownDataOperationCompleted(object arg) {
            if ((this.GetDropDownDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDropDownDataCompleted(this, new GetDropDownDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDynamicMenus", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDynamicMenus(int id, string screen, out string err) {
            object[] results = this.Invoke("GetDynamicMenus", new object[] {
                        id,
                        screen});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDynamicMenus(int id, string screen, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDynamicMenus", new object[] {
                        id,
                        screen}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDynamicMenus(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDynamicMenusAsync(int id, string screen) {
            this.GetDynamicMenusAsync(id, screen, null);
        }
        
        /// <remarks/>
        public void GetDynamicMenusAsync(int id, string screen, object userState) {
            if ((this.GetDynamicMenusOperationCompleted == null)) {
                this.GetDynamicMenusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDynamicMenusOperationCompleted);
            }
            this.InvokeAsync("GetDynamicMenus", new object[] {
                        id,
                        screen}, this.GetDynamicMenusOperationCompleted, userState);
        }
        
        private void OnGetDynamicMenusOperationCompleted(object arg) {
            if ((this.GetDynamicMenusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDynamicMenusCompleted(this, new GetDynamicMenusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ControlPermissionCheck", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ControlPermissionCheck(string login, string screen, string control) {
            object[] results = this.Invoke("ControlPermissionCheck", new object[] {
                        login,
                        screen,
                        control});
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginControlPermissionCheck(string login, string screen, string control, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ControlPermissionCheck", new object[] {
                        login,
                        screen,
                        control}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Nullable<int> EndControlPermissionCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void ControlPermissionCheckAsync(string login, string screen, string control) {
            this.ControlPermissionCheckAsync(login, screen, control, null);
        }
        
        /// <remarks/>
        public void ControlPermissionCheckAsync(string login, string screen, string control, object userState) {
            if ((this.ControlPermissionCheckOperationCompleted == null)) {
                this.ControlPermissionCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnControlPermissionCheckOperationCompleted);
            }
            this.InvokeAsync("ControlPermissionCheck", new object[] {
                        login,
                        screen,
                        control}, this.ControlPermissionCheckOperationCompleted, userState);
        }
        
        private void OnControlPermissionCheckOperationCompleted(object arg) {
            if ((this.ControlPermissionCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ControlPermissionCheckCompleted(this, new ControlPermissionCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ControlPermissionPasswordCheck", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ControlPermissionPasswordCheck(string login, string password, string screen, string control) {
            object[] results = this.Invoke("ControlPermissionPasswordCheck", new object[] {
                        login,
                        password,
                        screen,
                        control});
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginControlPermissionPasswordCheck(string login, string password, string screen, string control, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ControlPermissionPasswordCheck", new object[] {
                        login,
                        password,
                        screen,
                        control}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Nullable<int> EndControlPermissionPasswordCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void ControlPermissionPasswordCheckAsync(string login, string password, string screen, string control) {
            this.ControlPermissionPasswordCheckAsync(login, password, screen, control, null);
        }
        
        /// <remarks/>
        public void ControlPermissionPasswordCheckAsync(string login, string password, string screen, string control, object userState) {
            if ((this.ControlPermissionPasswordCheckOperationCompleted == null)) {
                this.ControlPermissionPasswordCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnControlPermissionPasswordCheckOperationCompleted);
            }
            this.InvokeAsync("ControlPermissionPasswordCheck", new object[] {
                        login,
                        password,
                        screen,
                        control}, this.ControlPermissionPasswordCheckOperationCompleted, userState);
        }
        
        private void OnControlPermissionPasswordCheckOperationCompleted(object arg) {
            if ((this.ControlPermissionPasswordCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ControlPermissionPasswordCheckCompleted(this, new ControlPermissionPasswordCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ControlPermissionPasswordCheckMultiple", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ControlPermissionPasswordCheckMultiple(string login, string password, string screen, string[] controls) {
            object[] results = this.Invoke("ControlPermissionPasswordCheckMultiple", new object[] {
                        login,
                        password,
                        screen,
                        controls});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginControlPermissionPasswordCheckMultiple(string login, string password, string screen, string[] controls, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ControlPermissionPasswordCheckMultiple", new object[] {
                        login,
                        password,
                        screen,
                        controls}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndControlPermissionPasswordCheckMultiple(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ControlPermissionPasswordCheckMultipleAsync(string login, string password, string screen, string[] controls) {
            this.ControlPermissionPasswordCheckMultipleAsync(login, password, screen, controls, null);
        }
        
        /// <remarks/>
        public void ControlPermissionPasswordCheckMultipleAsync(string login, string password, string screen, string[] controls, object userState) {
            if ((this.ControlPermissionPasswordCheckMultipleOperationCompleted == null)) {
                this.ControlPermissionPasswordCheckMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnControlPermissionPasswordCheckMultipleOperationCompleted);
            }
            this.InvokeAsync("ControlPermissionPasswordCheckMultiple", new object[] {
                        login,
                        password,
                        screen,
                        controls}, this.ControlPermissionPasswordCheckMultipleOperationCompleted, userState);
        }
        
        private void OnControlPermissionPasswordCheckMultipleOperationCompleted(object arg) {
            if ((this.ControlPermissionPasswordCheckMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ControlPermissionPasswordCheckMultipleCompleted(this, new ControlPermissionPasswordCheckMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetMandatoryFields", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMandatoryFields(string country, string screen, out string err) {
            object[] results = this.Invoke("GetMandatoryFields", new object[] {
                        country,
                        screen});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMandatoryFields(string country, string screen, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMandatoryFields", new object[] {
                        country,
                        screen}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMandatoryFields(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMandatoryFieldsAsync(string country, string screen) {
            this.GetMandatoryFieldsAsync(country, screen, null);
        }
        
        /// <remarks/>
        public void GetMandatoryFieldsAsync(string country, string screen, object userState) {
            if ((this.GetMandatoryFieldsOperationCompleted == null)) {
                this.GetMandatoryFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMandatoryFieldsOperationCompleted);
            }
            this.InvokeAsync("GetMandatoryFields", new object[] {
                        country,
                        screen}, this.GetMandatoryFieldsOperationCompleted, userState);
        }
        
        private void OnGetMandatoryFieldsOperationCompleted(object arg) {
            if ((this.GetMandatoryFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMandatoryFieldsCompleted(this, new GetMandatoryFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveMandatoryFields", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveMandatoryFields(System.Data.DataSet fields, out string err) {
            object[] results = this.Invoke("SaveMandatoryFields", new object[] {
                        fields});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveMandatoryFields(System.Data.DataSet fields, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveMandatoryFields", new object[] {
                        fields}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveMandatoryFields(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMandatoryFieldsAsync(System.Data.DataSet fields) {
            this.SaveMandatoryFieldsAsync(fields, null);
        }
        
        /// <remarks/>
        public void SaveMandatoryFieldsAsync(System.Data.DataSet fields, object userState) {
            if ((this.SaveMandatoryFieldsOperationCompleted == null)) {
                this.SaveMandatoryFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMandatoryFieldsOperationCompleted);
            }
            this.InvokeAsync("SaveMandatoryFields", new object[] {
                        fields}, this.SaveMandatoryFieldsOperationCompleted, userState);
        }
        
        private void OnSaveMandatoryFieldsOperationCompleted(object arg) {
            if ((this.SaveMandatoryFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMandatoryFieldsCompleted(this, new SaveMandatoryFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetVersion", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVersion(out string server, out string db, out string dbVersion, out string err) {
            object[] results = this.Invoke("GetVersion", new object[0]);
            server = ((string)(results[1]));
            db = ((string)(results[2]));
            dbVersion = ((string)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetVersion(System.IAsyncResult asyncResult, out string server, out string db, out string dbVersion, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            server = ((string)(results[1]));
            db = ((string)(results[2]));
            dbVersion = ((string)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/PostCodeLookUp", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PostCodeLookUp(string postCode, out string err) {
            object[] results = this.Invoke("PostCodeLookUp", new object[] {
                        postCode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPostCodeLookUp(string postCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PostCodeLookUp", new object[] {
                        postCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndPostCodeLookUp(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PostCodeLookUpAsync(string postCode) {
            this.PostCodeLookUpAsync(postCode, null);
        }
        
        /// <remarks/>
        public void PostCodeLookUpAsync(string postCode, object userState) {
            if ((this.PostCodeLookUpOperationCompleted == null)) {
                this.PostCodeLookUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostCodeLookUpOperationCompleted);
            }
            this.InvokeAsync("PostCodeLookUp", new object[] {
                        postCode}, this.PostCodeLookUpOperationCompleted, userState);
        }
        
        private void OnPostCodeLookUpOperationCompleted(object arg) {
            if ((this.PostCodeLookUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostCodeLookUpCompleted(this, new PostCodeLookUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetScoringOperands", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScoringOperands(out string err) {
            object[] results = this.Invoke("GetScoringOperands", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScoringOperands(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScoringOperands", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetScoringOperands(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScoringOperandsAsync() {
            this.GetScoringOperandsAsync(null);
        }
        
        /// <remarks/>
        public void GetScoringOperandsAsync(object userState) {
            if ((this.GetScoringOperandsOperationCompleted == null)) {
                this.GetScoringOperandsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScoringOperandsOperationCompleted);
            }
            this.InvokeAsync("GetScoringOperands", new object[0], this.GetScoringOperandsOperationCompleted, userState);
        }
        
        private void OnGetScoringOperandsOperationCompleted(object arg) {
            if ((this.GetScoringOperandsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScoringOperandsCompleted(this, new GetScoringOperandsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetScreens", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScreens(System.Xml.XmlNode screens, out string err) {
            object[] results = this.Invoke("GetScreens", new object[] {
                        screens});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScreens(System.Xml.XmlNode screens, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScreens", new object[] {
                        screens}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetScreens(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScreensAsync(System.Xml.XmlNode screens) {
            this.GetScreensAsync(screens, null);
        }
        
        /// <remarks/>
        public void GetScreensAsync(System.Xml.XmlNode screens, object userState) {
            if ((this.GetScreensOperationCompleted == null)) {
                this.GetScreensOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScreensOperationCompleted);
            }
            this.InvokeAsync("GetScreens", new object[] {
                        screens}, this.GetScreensOperationCompleted, userState);
        }
        
        private void OnGetScreensOperationCompleted(object arg) {
            if ((this.GetScreensCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScreensCompleted(this, new GetScreensCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveStockItemTranslations", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveStockItemTranslations(System.Data.DataSet fields, out string err) {
            object[] results = this.Invoke("SaveStockItemTranslations", new object[] {
                        fields});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveStockItemTranslations(System.Data.DataSet fields, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveStockItemTranslations", new object[] {
                        fields}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveStockItemTranslations(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveStockItemTranslationsAsync(System.Data.DataSet fields) {
            this.SaveStockItemTranslationsAsync(fields, null);
        }
        
        /// <remarks/>
        public void SaveStockItemTranslationsAsync(System.Data.DataSet fields, object userState) {
            if ((this.SaveStockItemTranslationsOperationCompleted == null)) {
                this.SaveStockItemTranslationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveStockItemTranslationsOperationCompleted);
            }
            this.InvokeAsync("SaveStockItemTranslations", new object[] {
                        fields}, this.SaveStockItemTranslationsOperationCompleted, userState);
        }
        
        private void OnSaveStockItemTranslationsOperationCompleted(object arg) {
            if ((this.SaveStockItemTranslationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveStockItemTranslationsCompleted(this, new SaveStockItemTranslationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStockItemTranslations", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetStockItemTranslations(string itemno, string descr1_en, string descr1, string descr2_en, string descr2, out System.Data.DataSet fields, out string err) {
            object[] results = this.Invoke("GetStockItemTranslations", new object[] {
                        itemno,
                        descr1_en,
                        descr1,
                        descr2_en,
                        descr2});
            fields = ((System.Data.DataSet)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStockItemTranslations(string itemno, string descr1_en, string descr1, string descr2_en, string descr2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStockItemTranslations", new object[] {
                        itemno,
                        descr1_en,
                        descr1,
                        descr2_en,
                        descr2}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetStockItemTranslations(System.IAsyncResult asyncResult, out System.Data.DataSet fields, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            fields = ((System.Data.DataSet)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockItemTranslationsAsync(string itemno, string descr1_en, string descr1, string descr2_en, string descr2) {
            this.GetStockItemTranslationsAsync(itemno, descr1_en, descr1, descr2_en, descr2, null);
        }
        
        /// <remarks/>
        public void GetStockItemTranslationsAsync(string itemno, string descr1_en, string descr1, string descr2_en, string descr2, object userState) {
            if ((this.GetStockItemTranslationsOperationCompleted == null)) {
                this.GetStockItemTranslationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockItemTranslationsOperationCompleted);
            }
            this.InvokeAsync("GetStockItemTranslations", new object[] {
                        itemno,
                        descr1_en,
                        descr1,
                        descr2_en,
                        descr2}, this.GetStockItemTranslationsOperationCompleted, userState);
        }
        
        private void OnGetStockItemTranslationsOperationCompleted(object arg) {
            if ((this.GetStockItemTranslationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockItemTranslationsCompleted(this, new GetStockItemTranslationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDictionary", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDictionary(string culture, out string err) {
            object[] results = this.Invoke("GetDictionary", new object[] {
                        culture});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDictionary(string culture, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDictionary", new object[] {
                        culture}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDictionary(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDictionaryAsync(string culture) {
            this.GetDictionaryAsync(culture, null);
        }
        
        /// <remarks/>
        public void GetDictionaryAsync(string culture, object userState) {
            if ((this.GetDictionaryOperationCompleted == null)) {
                this.GetDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictionaryOperationCompleted);
            }
            this.InvokeAsync("GetDictionary", new object[] {
                        culture}, this.GetDictionaryOperationCompleted, userState);
        }
        
        private void OnGetDictionaryOperationCompleted(object arg) {
            if ((this.GetDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictionaryCompleted(this, new GetDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveDictionary", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDictionary(string culture, System.Data.DataSet translation, out string err) {
            object[] results = this.Invoke("SaveDictionary", new object[] {
                        culture,
                        translation});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveDictionary(string culture, System.Data.DataSet translation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveDictionary", new object[] {
                        culture,
                        translation}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveDictionary(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDictionaryAsync(string culture, System.Data.DataSet translation) {
            this.SaveDictionaryAsync(culture, translation, null);
        }
        
        /// <remarks/>
        public void SaveDictionaryAsync(string culture, System.Data.DataSet translation, object userState) {
            if ((this.SaveDictionaryOperationCompleted == null)) {
                this.SaveDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDictionaryOperationCompleted);
            }
            this.InvokeAsync("SaveDictionary", new object[] {
                        culture,
                        translation}, this.SaveDictionaryOperationCompleted, userState);
        }
        
        private void OnSaveDictionaryOperationCompleted(object arg) {
            if ((this.SaveDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDictionaryCompleted(this, new SaveDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAllCodesAndCategories", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCodesAndCategories(out string err) {
            object[] results = this.Invoke("GetAllCodesAndCategories", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllCodesAndCategories(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllCodesAndCategories", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllCodesAndCategories(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCodesAndCategoriesAsync() {
            this.GetAllCodesAndCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCodesAndCategoriesAsync(object userState) {
            if ((this.GetAllCodesAndCategoriesOperationCompleted == null)) {
                this.GetAllCodesAndCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCodesAndCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAllCodesAndCategories", new object[0], this.GetAllCodesAndCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAllCodesAndCategoriesOperationCompleted(object arg) {
            if ((this.GetAllCodesAndCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCodesAndCategoriesCompleted(this, new GetAllCodesAndCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAllRepairCentre", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRepairCentre(out string err) {
            object[] results = this.Invoke("GetAllRepairCentre", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllRepairCentre(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllRepairCentre", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllRepairCentre(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRepairCentreAsync() {
            this.GetAllRepairCentreAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRepairCentreAsync(object userState) {
            if ((this.GetAllRepairCentreOperationCompleted == null)) {
                this.GetAllRepairCentreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRepairCentreOperationCompleted);
            }
            this.InvokeAsync("GetAllRepairCentre", new object[0], this.GetAllRepairCentreOperationCompleted, userState);
        }
        
        private void OnGetAllRepairCentreOperationCompleted(object arg) {
            if ((this.GetAllRepairCentreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRepairCentreCompleted(this, new GetAllRepairCentreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CodeDelete", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CodeDelete(string Code, string Category, System.Data.DataSet Deletes, out string err) {
            object[] results = this.Invoke("CodeDelete", new object[] {
                        Code,
                        Category,
                        Deletes});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCodeDelete(string Code, string Category, System.Data.DataSet Deletes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CodeDelete", new object[] {
                        Code,
                        Category,
                        Deletes}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCodeDelete(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CodeDeleteAsync(string Code, string Category, System.Data.DataSet Deletes) {
            this.CodeDeleteAsync(Code, Category, Deletes, null);
        }
        
        /// <remarks/>
        public void CodeDeleteAsync(string Code, string Category, System.Data.DataSet Deletes, object userState) {
            if ((this.CodeDeleteOperationCompleted == null)) {
                this.CodeDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCodeDeleteOperationCompleted);
            }
            this.InvokeAsync("CodeDelete", new object[] {
                        Code,
                        Category,
                        Deletes}, this.CodeDeleteOperationCompleted, userState);
        }
        
        private void OnCodeDeleteOperationCompleted(object arg) {
            if ((this.CodeDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CodeDeleteCompleted(this, new CodeDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CodeUpdate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CodeUpdate(System.Data.DataSet Changes, out string err) {
            object[] results = this.Invoke("CodeUpdate", new object[] {
                        Changes});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCodeUpdate(System.Data.DataSet Changes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CodeUpdate", new object[] {
                        Changes}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCodeUpdate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CodeUpdateAsync(System.Data.DataSet Changes) {
            this.CodeUpdateAsync(Changes, null);
        }
        
        /// <remarks/>
        public void CodeUpdateAsync(System.Data.DataSet Changes, object userState) {
            if ((this.CodeUpdateOperationCompleted == null)) {
                this.CodeUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCodeUpdateOperationCompleted);
            }
            this.InvokeAsync("CodeUpdate", new object[] {
                        Changes}, this.CodeUpdateOperationCompleted, userState);
        }
        
        private void OnCodeUpdateOperationCompleted(object arg) {
            if ((this.CodeUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CodeUpdateCompleted(this, new CodeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCountryMaintenanceChanges", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCountryMaintenanceChanges(string countryCode, System.Data.DataSet changes, int user, out string err) {
            object[] results = this.Invoke("SaveCountryMaintenanceChanges", new object[] {
                        countryCode,
                        changes,
                        user});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCountryMaintenanceChanges(string countryCode, System.Data.DataSet changes, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCountryMaintenanceChanges", new object[] {
                        countryCode,
                        changes,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCountryMaintenanceChanges(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCountryMaintenanceChangesAsync(string countryCode, System.Data.DataSet changes, int user) {
            this.SaveCountryMaintenanceChangesAsync(countryCode, changes, user, null);
        }
        
        /// <remarks/>
        public void SaveCountryMaintenanceChangesAsync(string countryCode, System.Data.DataSet changes, int user, object userState) {
            if ((this.SaveCountryMaintenanceChangesOperationCompleted == null)) {
                this.SaveCountryMaintenanceChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCountryMaintenanceChangesOperationCompleted);
            }
            this.InvokeAsync("SaveCountryMaintenanceChanges", new object[] {
                        countryCode,
                        changes,
                        user}, this.SaveCountryMaintenanceChangesOperationCompleted, userState);
        }
        
        private void OnSaveCountryMaintenanceChangesOperationCompleted(object arg) {
            if ((this.SaveCountryMaintenanceChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCountryMaintenanceChangesCompleted(this, new SaveCountryMaintenanceChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCountryMaintenanceParameters", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCountryMaintenanceParameters(string countryCode, out string err) {
            object[] results = this.Invoke("GetCountryMaintenanceParameters", new object[] {
                        countryCode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCountryMaintenanceParameters(string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCountryMaintenanceParameters", new object[] {
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCountryMaintenanceParameters(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryMaintenanceParametersAsync(string countryCode) {
            this.GetCountryMaintenanceParametersAsync(countryCode, null);
        }
        
        /// <remarks/>
        public void GetCountryMaintenanceParametersAsync(string countryCode, object userState) {
            if ((this.GetCountryMaintenanceParametersOperationCompleted == null)) {
                this.GetCountryMaintenanceParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryMaintenanceParametersOperationCompleted);
            }
            this.InvokeAsync("GetCountryMaintenanceParameters", new object[] {
                        countryCode}, this.GetCountryMaintenanceParametersOperationCompleted, userState);
        }
        
        private void OnGetCountryMaintenanceParametersOperationCompleted(object arg) {
            if ((this.GetCountryMaintenanceParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryMaintenanceParametersCompleted(this, new GetCountryMaintenanceParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStcokItemCache", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStcokItemCache(out string err) {
            object[] results = this.Invoke("GetStcokItemCache", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStcokItemCache(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStcokItemCache", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStcokItemCache(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStcokItemCacheAsync() {
            this.GetStcokItemCacheAsync(null);
        }
        
        /// <remarks/>
        public void GetStcokItemCacheAsync(object userState) {
            if ((this.GetStcokItemCacheOperationCompleted == null)) {
                this.GetStcokItemCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStcokItemCacheOperationCompleted);
            }
            this.InvokeAsync("GetStcokItemCache", new object[0], this.GetStcokItemCacheOperationCompleted, userState);
        }
        
        private void OnGetStcokItemCacheOperationCompleted(object arg) {
            if ((this.GetStcokItemCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStcokItemCacheCompleted(this, new GetStcokItemCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadTermsTypeDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadTermsTypeDetails(string termsType, out string err) {
            object[] results = this.Invoke("LoadTermsTypeDetails", new object[] {
                        termsType});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadTermsTypeDetails(string termsType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadTermsTypeDetails", new object[] {
                        termsType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadTermsTypeDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTermsTypeDetailsAsync(string termsType) {
            this.LoadTermsTypeDetailsAsync(termsType, null);
        }
        
        /// <remarks/>
        public void LoadTermsTypeDetailsAsync(string termsType, object userState) {
            if ((this.LoadTermsTypeDetailsOperationCompleted == null)) {
                this.LoadTermsTypeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTermsTypeDetailsOperationCompleted);
            }
            this.InvokeAsync("LoadTermsTypeDetails", new object[] {
                        termsType}, this.LoadTermsTypeDetailsOperationCompleted, userState);
        }
        
        private void OnLoadTermsTypeDetailsOperationCompleted(object arg) {
            if ((this.LoadTermsTypeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTermsTypeDetailsCompleted(this, new LoadTermsTypeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TermsTypeBandsOverview", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TermsTypeBandsOverview(out string err) {
            object[] results = this.Invoke("TermsTypeBandsOverview", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTermsTypeBandsOverview(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TermsTypeBandsOverview", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndTermsTypeBandsOverview(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TermsTypeBandsOverviewAsync() {
            this.TermsTypeBandsOverviewAsync(null);
        }
        
        /// <remarks/>
        public void TermsTypeBandsOverviewAsync(object userState) {
            if ((this.TermsTypeBandsOverviewOperationCompleted == null)) {
                this.TermsTypeBandsOverviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTermsTypeBandsOverviewOperationCompleted);
            }
            this.InvokeAsync("TermsTypeBandsOverview", new object[0], this.TermsTypeBandsOverviewOperationCompleted, userState);
        }
        
        private void OnTermsTypeBandsOverviewOperationCompleted(object arg) {
            if ((this.TermsTypeBandsOverviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TermsTypeBandsOverviewCompleted(this, new TermsTypeBandsOverviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TermsTypeBandsAdjust", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TermsTypeBandsAdjust(System.DateTime adjustDate, decimal adjustIns, decimal adjustSC, out string err) {
            object[] results = this.Invoke("TermsTypeBandsAdjust", new object[] {
                        adjustDate,
                        adjustIns,
                        adjustSC});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTermsTypeBandsAdjust(System.DateTime adjustDate, decimal adjustIns, decimal adjustSC, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TermsTypeBandsAdjust", new object[] {
                        adjustDate,
                        adjustIns,
                        adjustSC}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndTermsTypeBandsAdjust(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TermsTypeBandsAdjustAsync(System.DateTime adjustDate, decimal adjustIns, decimal adjustSC) {
            this.TermsTypeBandsAdjustAsync(adjustDate, adjustIns, adjustSC, null);
        }
        
        /// <remarks/>
        public void TermsTypeBandsAdjustAsync(System.DateTime adjustDate, decimal adjustIns, decimal adjustSC, object userState) {
            if ((this.TermsTypeBandsAdjustOperationCompleted == null)) {
                this.TermsTypeBandsAdjustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTermsTypeBandsAdjustOperationCompleted);
            }
            this.InvokeAsync("TermsTypeBandsAdjust", new object[] {
                        adjustDate,
                        adjustIns,
                        adjustSC}, this.TermsTypeBandsAdjustOperationCompleted, userState);
        }
        
        private void OnTermsTypeBandsAdjustOperationCompleted(object arg) {
            if ((this.TermsTypeBandsAdjustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TermsTypeBandsAdjustCompleted(this, new TermsTypeBandsAdjustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBranchServiceLocation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public short GetBranchServiceLocation(short branchNo, out string err) {
            object[] results = this.Invoke("GetBranchServiceLocation", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBranchServiceLocation(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBranchServiceLocation", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public short EndGetBranchServiceLocation(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchServiceLocationAsync(short branchNo) {
            this.GetBranchServiceLocationAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetBranchServiceLocationAsync(short branchNo, object userState) {
            if ((this.GetBranchServiceLocationOperationCompleted == null)) {
                this.GetBranchServiceLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchServiceLocationOperationCompleted);
            }
            this.InvokeAsync("GetBranchServiceLocation", new object[] {
                        branchNo}, this.GetBranchServiceLocationOperationCompleted, userState);
        }
        
        private void OnGetBranchServiceLocationOperationCompleted(object arg) {
            if ((this.GetBranchServiceLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchServiceLocationCompleted(this, new GetBranchServiceLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetServerDateTime", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDateTime() {
            object[] results = this.Invoke("GetServerDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServerDateTime(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServerDateTime", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetServerDateTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync() {
            this.GetServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync(object userState) {
            if ((this.GetServerDateTimeOperationCompleted == null)) {
                this.GetServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerDateTime", new object[0], this.GetServerDateTimeOperationCompleted, userState);
        }
        
        private void OnGetServerDateTimeOperationCompleted(object arg) {
            if ((this.GetServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateTimeCompleted(this, new GetServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetServerDate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDate() {
            object[] results = this.Invoke("GetServerDate", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServerDate(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServerDate", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetServerDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateAsync() {
            this.GetServerDateAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateAsync(object userState) {
            if ((this.GetServerDateOperationCompleted == null)) {
                this.GetServerDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateOperationCompleted);
            }
            this.InvokeAsync("GetServerDate", new object[0], this.GetServerDateOperationCompleted, userState);
        }
        
        private void OnGetServerDateOperationCompleted(object arg) {
            if ((this.GetServerDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateCompleted(this, new GetServerDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveTermsTypeDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveTermsTypeDetails(string termsType, System.Data.DataSet termsTypeDetails, out string err) {
            object[] results = this.Invoke("SaveTermsTypeDetails", new object[] {
                        termsType,
                        termsTypeDetails});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveTermsTypeDetails(string termsType, System.Data.DataSet termsTypeDetails, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveTermsTypeDetails", new object[] {
                        termsType,
                        termsTypeDetails}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveTermsTypeDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTermsTypeDetailsAsync(string termsType, System.Data.DataSet termsTypeDetails) {
            this.SaveTermsTypeDetailsAsync(termsType, termsTypeDetails, null);
        }
        
        /// <remarks/>
        public void SaveTermsTypeDetailsAsync(string termsType, System.Data.DataSet termsTypeDetails, object userState) {
            if ((this.SaveTermsTypeDetailsOperationCompleted == null)) {
                this.SaveTermsTypeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTermsTypeDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveTermsTypeDetails", new object[] {
                        termsType,
                        termsTypeDetails}, this.SaveTermsTypeDetailsOperationCompleted, userState);
        }
        
        private void OnSaveTermsTypeDetailsOperationCompleted(object arg) {
            if ((this.SaveTermsTypeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTermsTypeDetailsCompleted(this, new SaveTermsTypeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SetSystemStatus", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetSystemStatus(string countryCode, string status, out string err) {
            object[] results = this.Invoke("SetSystemStatus", new object[] {
                        countryCode,
                        status});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSystemStatus(string countryCode, string status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSystemStatus", new object[] {
                        countryCode,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetSystemStatus(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetSystemStatusAsync(string countryCode, string status) {
            this.SetSystemStatusAsync(countryCode, status, null);
        }
        
        /// <remarks/>
        public void SetSystemStatusAsync(string countryCode, string status, object userState) {
            if ((this.SetSystemStatusOperationCompleted == null)) {
                this.SetSystemStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSystemStatusOperationCompleted);
            }
            this.InvokeAsync("SetSystemStatus", new object[] {
                        countryCode,
                        status}, this.SetSystemStatusOperationCompleted, userState);
        }
        
        private void OnSetSystemStatusOperationCompleted(object arg) {
            if ((this.SetSystemStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSystemStatusCompleted(this, new SetSystemStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBankDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBankDetails(out string err) {
            object[] results = this.Invoke("GetBankDetails", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBankDetails(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBankDetails", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBankDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDetailsAsync() {
            this.GetBankDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetBankDetailsAsync(object userState) {
            if ((this.GetBankDetailsOperationCompleted == null)) {
                this.GetBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBankDetails", new object[0], this.GetBankDetailsOperationCompleted, userState);
        }
        
        private void OnGetBankDetailsOperationCompleted(object arg) {
            if ((this.GetBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDetailsCompleted(this, new GetBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateBank", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateBank(string bankcode, string bankname, string bankaddr1, string bankaddr2, string bankaddr3, string bankpocode, out string err) {
            object[] results = this.Invoke("UpdateBank", new object[] {
                        bankcode,
                        bankname,
                        bankaddr1,
                        bankaddr2,
                        bankaddr3,
                        bankpocode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateBank(string bankcode, string bankname, string bankaddr1, string bankaddr2, string bankaddr3, string bankpocode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateBank", new object[] {
                        bankcode,
                        bankname,
                        bankaddr1,
                        bankaddr2,
                        bankaddr3,
                        bankpocode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateBank(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBankAsync(string bankcode, string bankname, string bankaddr1, string bankaddr2, string bankaddr3, string bankpocode) {
            this.UpdateBankAsync(bankcode, bankname, bankaddr1, bankaddr2, bankaddr3, bankpocode, null);
        }
        
        /// <remarks/>
        public void UpdateBankAsync(string bankcode, string bankname, string bankaddr1, string bankaddr2, string bankaddr3, string bankpocode, object userState) {
            if ((this.UpdateBankOperationCompleted == null)) {
                this.UpdateBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankOperationCompleted);
            }
            this.InvokeAsync("UpdateBank", new object[] {
                        bankcode,
                        bankname,
                        bankaddr1,
                        bankaddr2,
                        bankaddr3,
                        bankpocode}, this.UpdateBankOperationCompleted, userState);
        }
        
        private void OnUpdateBankOperationCompleted(object arg) {
            if ((this.UpdateBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankCompleted(this, new UpdateBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteBank", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteBank(string bankcode, out string err) {
            object[] results = this.Invoke("DeleteBank", new object[] {
                        bankcode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteBank(string bankcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteBank", new object[] {
                        bankcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteBank(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBankAsync(string bankcode) {
            this.DeleteBankAsync(bankcode, null);
        }
        
        /// <remarks/>
        public void DeleteBankAsync(string bankcode, object userState) {
            if ((this.DeleteBankOperationCompleted == null)) {
                this.DeleteBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBankOperationCompleted);
            }
            this.InvokeAsync("DeleteBank", new object[] {
                        bankcode}, this.DeleteBankOperationCompleted, userState);
        }
        
        private void OnDeleteBankOperationCompleted(object arg) {
            if ((this.DeleteBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBankCompleted(this, new DeleteBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetLoyaltyDropData", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLoyaltyDropData() {
            object[] results = this.Invoke("GetLoyaltyDropData", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLoyaltyDropData(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLoyaltyDropData", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLoyaltyDropData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoyaltyDropDataAsync() {
            this.GetLoyaltyDropDataAsync(null);
        }
        
        /// <remarks/>
        public void GetLoyaltyDropDataAsync(object userState) {
            if ((this.GetLoyaltyDropDataOperationCompleted == null)) {
                this.GetLoyaltyDropDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoyaltyDropDataOperationCompleted);
            }
            this.InvokeAsync("GetLoyaltyDropData", new object[0], this.GetLoyaltyDropDataOperationCompleted, userState);
        }
        
        private void OnGetLoyaltyDropDataOperationCompleted(object arg) {
            if ((this.GetLoyaltyDropDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoyaltyDropDataCompleted(this, new GetLoyaltyDropDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTopSellingCashandGo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTopSellingCashandGo(short branchNo, out string err) {
            object[] results = this.Invoke("GetTopSellingCashandGo", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTopSellingCashandGo(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTopSellingCashandGo", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTopSellingCashandGo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopSellingCashandGoAsync(short branchNo) {
            this.GetTopSellingCashandGoAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetTopSellingCashandGoAsync(short branchNo, object userState) {
            if ((this.GetTopSellingCashandGoOperationCompleted == null)) {
                this.GetTopSellingCashandGoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopSellingCashandGoOperationCompleted);
            }
            this.InvokeAsync("GetTopSellingCashandGo", new object[] {
                        branchNo}, this.GetTopSellingCashandGoOperationCompleted, userState);
        }
        
        private void OnGetTopSellingCashandGoOperationCompleted(object arg) {
            if ((this.GetTopSellingCashandGoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopSellingCashandGoCompleted(this, new GetTopSellingCashandGoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadAllTechnician", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DropDownItem[] LoadAllTechnician(out string err) {
            object[] results = this.Invoke("LoadAllTechnician", new object[0]);
            err = ((string)(results[1]));
            return ((DropDownItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAllTechnician(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAllTechnician", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DropDownItem[] EndLoadAllTechnician(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((DropDownItem[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllTechnicianAsync() {
            this.LoadAllTechnicianAsync(null);
        }
        
        /// <remarks/>
        public void LoadAllTechnicianAsync(object userState) {
            if ((this.LoadAllTechnicianOperationCompleted == null)) {
                this.LoadAllTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllTechnicianOperationCompleted);
            }
            this.InvokeAsync("LoadAllTechnician", new object[0], this.LoadAllTechnicianOperationCompleted, userState);
        }
        
        private void OnLoadAllTechnicianOperationCompleted(object arg) {
            if ((this.LoadAllTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllTechnicianCompleted(this, new LoadAllTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadZoneWithTechnician", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ZonedTechniciansResult[] LoadZoneWithTechnician(out string err) {
            object[] results = this.Invoke("LoadZoneWithTechnician", new object[0]);
            err = ((string)(results[1]));
            return ((ZonedTechniciansResult[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadZoneWithTechnician(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadZoneWithTechnician", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ZonedTechniciansResult[] EndLoadZoneWithTechnician(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((ZonedTechniciansResult[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadZoneWithTechnicianAsync() {
            this.LoadZoneWithTechnicianAsync(null);
        }
        
        /// <remarks/>
        public void LoadZoneWithTechnicianAsync(object userState) {
            if ((this.LoadZoneWithTechnicianOperationCompleted == null)) {
                this.LoadZoneWithTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadZoneWithTechnicianOperationCompleted);
            }
            this.InvokeAsync("LoadZoneWithTechnician", new object[0], this.LoadZoneWithTechnicianOperationCompleted, userState);
        }
        
        private void OnLoadZoneWithTechnicianOperationCompleted(object arg) {
            if ((this.LoadZoneWithTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadZoneWithTechnicianCompleted(this, new LoadZoneWithTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/NonStockDeletionDatesDataSave", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string NonStockDeletionDatesDataSave(short branchno, string itemno, System.DateTime deletionDate) {
            object[] results = this.Invoke("NonStockDeletionDatesDataSave", new object[] {
                        branchno,
                        itemno,
                        deletionDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNonStockDeletionDatesDataSave(short branchno, string itemno, System.DateTime deletionDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NonStockDeletionDatesDataSave", new object[] {
                        branchno,
                        itemno,
                        deletionDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndNonStockDeletionDatesDataSave(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NonStockDeletionDatesDataSaveAsync(short branchno, string itemno, System.DateTime deletionDate) {
            this.NonStockDeletionDatesDataSaveAsync(branchno, itemno, deletionDate, null);
        }
        
        /// <remarks/>
        public void NonStockDeletionDatesDataSaveAsync(short branchno, string itemno, System.DateTime deletionDate, object userState) {
            if ((this.NonStockDeletionDatesDataSaveOperationCompleted == null)) {
                this.NonStockDeletionDatesDataSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNonStockDeletionDatesDataSaveOperationCompleted);
            }
            this.InvokeAsync("NonStockDeletionDatesDataSave", new object[] {
                        branchno,
                        itemno,
                        deletionDate}, this.NonStockDeletionDatesDataSaveOperationCompleted, userState);
        }
        
        private void OnNonStockDeletionDatesDataSaveOperationCompleted(object arg) {
            if ((this.NonStockDeletionDatesDataSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NonStockDeletionDatesDataSaveCompleted(this, new NonStockDeletionDatesDataSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ProductAssociationGetDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ProductAssociationGetDetails() {
            object[] results = this.Invoke("ProductAssociationGetDetails", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductAssociationGetDetails(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductAssociationGetDetails", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndProductAssociationGetDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProductAssociationGetDetailsAsync() {
            this.ProductAssociationGetDetailsAsync(null);
        }
        
        /// <remarks/>
        public void ProductAssociationGetDetailsAsync(object userState) {
            if ((this.ProductAssociationGetDetailsOperationCompleted == null)) {
                this.ProductAssociationGetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductAssociationGetDetailsOperationCompleted);
            }
            this.InvokeAsync("ProductAssociationGetDetails", new object[0], this.ProductAssociationGetDetailsOperationCompleted, userState);
        }
        
        private void OnProductAssociationGetDetailsOperationCompleted(object arg) {
            if ((this.ProductAssociationGetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductAssociationGetDetailsCompleted(this, new ProductAssociationGetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ProductAssociationSaveDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductAssociationSaveDetails(System.Data.DataTable associated) {
            this.Invoke("ProductAssociationSaveDetails", new object[] {
                        associated});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductAssociationSaveDetails(System.Data.DataTable associated, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductAssociationSaveDetails", new object[] {
                        associated}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndProductAssociationSaveDetails(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ProductAssociationSaveDetailsAsync(System.Data.DataTable associated) {
            this.ProductAssociationSaveDetailsAsync(associated, null);
        }
        
        /// <remarks/>
        public void ProductAssociationSaveDetailsAsync(System.Data.DataTable associated, object userState) {
            if ((this.ProductAssociationSaveDetailsOperationCompleted == null)) {
                this.ProductAssociationSaveDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductAssociationSaveDetailsOperationCompleted);
            }
            this.InvokeAsync("ProductAssociationSaveDetails", new object[] {
                        associated}, this.ProductAssociationSaveDetailsOperationCompleted, userState);
        }
        
        private void OnProductAssociationSaveDetailsOperationCompleted(object arg) {
            if ((this.ProductAssociationSaveDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductAssociationSaveDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class ZonedTechniciansResult {
        
        private string zoneCodeField;
        
        private string zoneNameField;
        
        private DropDownItem[] techniciansField;
        
        /// <remarks/>
        public string ZoneCode {
            get {
                return this.zoneCodeField;
            }
            set {
                this.zoneCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ZoneName {
            get {
                return this.zoneNameField;
            }
            set {
                this.zoneNameField = value;
            }
        }
        
        /// <remarks/>
        public DropDownItem[] Technicians {
            get {
                return this.techniciansField;
            }
            set {
                this.techniciansField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class DropDownItem {
        
        private int valueMemberField;
        
        private string displayMemberField;
        
        /// <remarks/>
        public int ValueMember {
            get {
                return this.valueMemberField;
            }
            set {
                this.valueMemberField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayMember {
            get {
                return this.displayMemberField;
            }
            set {
                this.displayMemberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDropDownDataCompletedEventHandler(object sender, GetDropDownDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDropDownDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDropDownDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDynamicMenusCompletedEventHandler(object sender, GetDynamicMenusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDynamicMenusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDynamicMenusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ControlPermissionCheckCompletedEventHandler(object sender, ControlPermissionCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ControlPermissionCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ControlPermissionCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ControlPermissionPasswordCheckCompletedEventHandler(object sender, ControlPermissionPasswordCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ControlPermissionPasswordCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ControlPermissionPasswordCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ControlPermissionPasswordCheckMultipleCompletedEventHandler(object sender, ControlPermissionPasswordCheckMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ControlPermissionPasswordCheckMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ControlPermissionPasswordCheckMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMandatoryFieldsCompletedEventHandler(object sender, GetMandatoryFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMandatoryFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMandatoryFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveMandatoryFieldsCompletedEventHandler(object sender, SaveMandatoryFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMandatoryFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMandatoryFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string server {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string db {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string dbVersion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PostCodeLookUpCompletedEventHandler(object sender, PostCodeLookUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostCodeLookUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostCodeLookUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScoringOperandsCompletedEventHandler(object sender, GetScoringOperandsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScoringOperandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScoringOperandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScreensCompletedEventHandler(object sender, GetScreensCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScreensCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScreensCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveStockItemTranslationsCompletedEventHandler(object sender, SaveStockItemTranslationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveStockItemTranslationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveStockItemTranslationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStockItemTranslationsCompletedEventHandler(object sender, GetStockItemTranslationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockItemTranslationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockItemTranslationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet fields {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDictionaryCompletedEventHandler(object sender, GetDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDictionaryCompletedEventHandler(object sender, SaveDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllCodesAndCategoriesCompletedEventHandler(object sender, GetAllCodesAndCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCodesAndCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCodesAndCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRepairCentreCompletedEventHandler(object sender, GetAllRepairCentreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRepairCentreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRepairCentreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CodeDeleteCompletedEventHandler(object sender, CodeDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CodeDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CodeDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CodeUpdateCompletedEventHandler(object sender, CodeUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CodeUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CodeUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveCountryMaintenanceChangesCompletedEventHandler(object sender, SaveCountryMaintenanceChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCountryMaintenanceChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCountryMaintenanceChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCountryMaintenanceParametersCompletedEventHandler(object sender, GetCountryMaintenanceParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryMaintenanceParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryMaintenanceParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStcokItemCacheCompletedEventHandler(object sender, GetStcokItemCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStcokItemCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStcokItemCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadTermsTypeDetailsCompletedEventHandler(object sender, LoadTermsTypeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTermsTypeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTermsTypeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TermsTypeBandsOverviewCompletedEventHandler(object sender, TermsTypeBandsOverviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TermsTypeBandsOverviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TermsTypeBandsOverviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TermsTypeBandsAdjustCompletedEventHandler(object sender, TermsTypeBandsAdjustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TermsTypeBandsAdjustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TermsTypeBandsAdjustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBranchServiceLocationCompletedEventHandler(object sender, GetBranchServiceLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchServiceLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchServiceLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServerDateTimeCompletedEventHandler(object sender, GetServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServerDateCompletedEventHandler(object sender, GetServerDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTermsTypeDetailsCompletedEventHandler(object sender, SaveTermsTypeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTermsTypeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTermsTypeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetSystemStatusCompletedEventHandler(object sender, SetSystemStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSystemStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSystemStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBankDetailsCompletedEventHandler(object sender, GetBankDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateBankCompletedEventHandler(object sender, UpdateBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteBankCompletedEventHandler(object sender, DeleteBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLoyaltyDropDataCompletedEventHandler(object sender, GetLoyaltyDropDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoyaltyDropDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoyaltyDropDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTopSellingCashandGoCompletedEventHandler(object sender, GetTopSellingCashandGoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopSellingCashandGoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopSellingCashandGoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadAllTechnicianCompletedEventHandler(object sender, LoadAllTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DropDownItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DropDownItem[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadZoneWithTechnicianCompletedEventHandler(object sender, LoadZoneWithTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadZoneWithTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadZoneWithTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ZonedTechniciansResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ZonedTechniciansResult[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NonStockDeletionDatesDataSaveCompletedEventHandler(object sender, NonStockDeletionDatesDataSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NonStockDeletionDatesDataSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NonStockDeletionDatesDataSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProductAssociationGetDetailsCompletedEventHandler(object sender, ProductAssociationGetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductAssociationGetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductAssociationGetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProductAssociationSaveDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591