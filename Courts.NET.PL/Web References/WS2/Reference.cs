//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace STL.PL.WS2 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WAccountManagerSoap", Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Entity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveNewAccountCreditParameters))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class WAccountManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback OracledataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvoiceAccountsSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeliveryNoteAndItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonStockLinkedToDNItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOracleOutboundSalesOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStockInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStockPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStockQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePromoPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePurchaseOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWarrantyBandOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFreightCarrierOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCanReallocateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDAHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPaidAndTakenAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockCheckbyAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashAndGoLastPayMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchDefaultPrintLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProvisionGetForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback MaxActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSRAcctOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonStockByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveNonStockItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantyReturnCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWarrantyReturnCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewAccountCreditSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllWarrantyItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountLockingFindandLockForCallerOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSRInstSpecialAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLatestAccountforCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReturnItemIDForItemCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateCashLoanTermsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CashLoanDeliverAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CashLoanPromissoryNoteStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintAuditCashAndGoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBookingFailureOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelRedeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnlineProductSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReviseBookingFailureOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstantReplacementCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsReadyAssistContractDateSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeSalesCommissionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchSalesCommissionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashLoanDisbursementDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCashLoanDisbursementBankTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCashLoanBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsItemScheduledOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiscountDeliveryMonthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormatWarrantyReturnCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllocatedCourtsPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAccountToCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduledForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTranstypeByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTransTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForWOReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptForWOOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePendingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRejectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsForTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSundryCreditAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSundryAccountTransactionTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanReverseOverageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOveragesAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceivableAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultTermsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRebatesTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRebatesAsAtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstalmentAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDateFirstOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsItemInstantReplacementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountAuditDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRepossessedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateManualAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateManualRFAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDueDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivitySegmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateItemLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDeliveryNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRebateTotalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsForLocationChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduledDelNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCancelledOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualCDVExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPeriodEndDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRebateForecastReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunRebateForecastReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPaidAndTakenWarrantyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBookingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryNotesForAcctOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutstandingDeliveriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelatedItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantyRenewalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantyProductsByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWarrantRenewalCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllocationsForReprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAllocationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAllocForReprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepossessedItemDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextPicklistNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeliveryNotesLoadByLoadNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeReqDeliveryDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAcctNoCtrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDeliveryNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLineItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeItemQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAcctNoCtrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScheduleRedelRepoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransportListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduledLoadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsInRegionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPurchaseOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoadContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransportSchedAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeliveryScheduleUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAvailablePicklistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTransportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransportOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTransportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryScheduleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLoadFromContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickListScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountGetAccountNoByBuffNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditReprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditDiscountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SUCBGetDelTotalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SUCBGetDelDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDotNetWarehouseOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsThirdPartyWarehouseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliverySchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAvailableTransPicklistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransPickListDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRevisedSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRevisedScheduleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRevisedScheduleChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmScheduleChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdditionalItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeliveryLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiroPendingOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsWarrantyRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidDecimalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FincoBalancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSpiffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpiffsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WarrantySalesReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FincoTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoreTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstantCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveInstantCreditFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoDAOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCollectionsByacctnoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgreementNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsGiftItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIRItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDiscountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAdditionalSpiffOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveInsuranceWarrantyReturnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorklistAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorklistAccountsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountHasBDWOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountScheduleExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountStatusGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDetailsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SPACalculateArrangementScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnarchiveUnsettleOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvoicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Receipt_1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Customer_1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatementLastTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsAwaitingClearanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstantCreditAwaitingClearanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargeableCashPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargesByAcctNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArrearsDailyByAcctNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnpaidAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinTransQueryResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearProposalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHoldFlagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetICFlagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockAccount1OperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockAccount1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductWarrantiesByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductWarrantiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddKitToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountsSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncompleteCreditsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFollowUpHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Getacctsforalloc5_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetacctsforallocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategyAccountsToAllocateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateInstalPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateServiceChargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTermsTypeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TermsTypeGetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveNewAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCodesOnAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCodesToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLetterToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoiceAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountForRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLineItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasReturnsItensOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsDeliveredAndScheduledOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduledDeliveriesForItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeliverySchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Schedule_GetByBuffNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delivery_DeliverImmediatelyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delivery_DeliverImmediatelyFailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeadlockTest1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeadlockTest2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLineItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedCustomerIDbyTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustomerToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRFAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateSalesTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWarrantyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelRFAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertRFToHPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentCardDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaidAndTakenAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockAccountsLockedAtOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRepossArrearsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReposessionAndRedeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelCollectionNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateScheduleForPicklistOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScheduleAssignNewBufferNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForRepoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRepoDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCollectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBuffNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentCardTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoWarrantyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPaymentCardPrintedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashAndGoAcctsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsAllocatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrategyAccountsAllocatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBailActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBailActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSPAHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSPAAcctDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeAllocateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocateDeallocateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterestRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAllocDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterByAcctNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BranchUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BranchGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLettersAndStatuesByAcctNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeliveryNotesReprintLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateAddToOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessAddToOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountFullyDeliveredOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContractNoUniqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback AffinityContractNoUniqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasAddToOrDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SettledByAddToOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseAddToOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateTaxAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateTaxAmount1OperationCompleted;
        
        private System.Threading.SendOrPostCallback IsTaxExemptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociatedWarrantiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProductFaultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantyReturnItemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WAccountManager() {
            this.Url = global::STL.PL.Properties.Settings.Default.Courts_NET_PL_WS2_WAccountManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event OracledataCompletedEventHandler OracledataCompleted;
        
        /// <remarks/>
        public event InvoiceAccountsSearchCompletedEventHandler InvoiceAccountsSearchCompleted;
        
        /// <remarks/>
        public event DeleteDeliveryNoteAndItemsCompletedEventHandler DeleteDeliveryNoteAndItemsCompleted;
        
        /// <remarks/>
        public event GetNonStockLinkedToDNItemsCompletedEventHandler GetNonStockLinkedToDNItemsCompleted;
        
        /// <remarks/>
        public event GetOracleOutboundSalesOrderCompletedEventHandler GetOracleOutboundSalesOrderCompleted;
        
        /// <remarks/>
        public event UpdateStockInfoCompletedEventHandler UpdateStockInfoCompleted;
        
        /// <remarks/>
        public event UpdateStockPriceCompletedEventHandler UpdateStockPriceCompleted;
        
        /// <remarks/>
        public event UpdateStockQuantityCompletedEventHandler UpdateStockQuantityCompleted;
        
        /// <remarks/>
        public event UpdatePromoPriceCompletedEventHandler UpdatePromoPriceCompleted;
        
        /// <remarks/>
        public event UpdatePurchaseOrderCompletedEventHandler UpdatePurchaseOrderCompleted;
        
        /// <remarks/>
        public event UpdateWarrantyBandCompletedEventHandler UpdateWarrantyBandCompleted;
        
        /// <remarks/>
        public event UpdateFreightCarrierCompletedEventHandler UpdateFreightCarrierCompleted;
        
        /// <remarks/>
        public event CheckCanReallocateCompletedEventHandler CheckCanReallocateCompleted;
        
        /// <remarks/>
        public event LoadDAHistoryCompletedEventHandler LoadDAHistoryCompleted;
        
        /// <remarks/>
        public event IsPaidAndTakenAccountCompletedEventHandler IsPaidAndTakenAccountCompleted;
        
        /// <remarks/>
        public event LockCheckbyAccountCompletedEventHandler LockCheckbyAccountCompleted;
        
        /// <remarks/>
        public event GetCashAndGoLastPayMethodCompletedEventHandler GetCashAndGoLastPayMethodCompleted;
        
        /// <remarks/>
        public event GetBranchDefaultPrintLocationCompletedEventHandler GetBranchDefaultPrintLocationCompleted;
        
        /// <remarks/>
        public event ProvisionGetForAccountCompletedEventHandler ProvisionGetForAccountCompleted;
        
        /// <remarks/>
        public event MaxActionCompletedEventHandler MaxActionCompleted;
        
        /// <remarks/>
        public event CheckSRAcctCompletedEventHandler CheckSRAcctCompleted;
        
        /// <remarks/>
        public event GetNonStockByCodeCompletedEventHandler GetNonStockByCodeCompleted;
        
        /// <remarks/>
        public event GetCategoriesCompletedEventHandler GetCategoriesCompleted;
        
        /// <remarks/>
        public event SaveNonStockItemCompletedEventHandler SaveNonStockItemCompleted;
        
        /// <remarks/>
        public event GetWarrantyReturnCodesCompletedEventHandler GetWarrantyReturnCodesCompleted;
        
        /// <remarks/>
        public event SaveWarrantyReturnCodesCompletedEventHandler SaveWarrantyReturnCodesCompleted;
        
        /// <remarks/>
        public event NewAccountCreditSaveCompletedEventHandler NewAccountCreditSaveCompleted;
        
        /// <remarks/>
        public event GetAllWarrantyItemsCompletedEventHandler GetAllWarrantyItemsCompleted;
        
        /// <remarks/>
        public event AccountLockingFindandLockForCallerCompletedEventHandler AccountLockingFindandLockForCallerCompleted;
        
        /// <remarks/>
        public event IsSRInstSpecialAccountCompletedEventHandler IsSRInstSpecialAccountCompleted;
        
        /// <remarks/>
        public event IsLatestAccountforCustomerCompletedEventHandler IsLatestAccountforCustomerCompleted;
        
        /// <remarks/>
        public event GetReturnItemIDForItemCodeCompletedEventHandler GetReturnItemIDForItemCodeCompleted;
        
        /// <remarks/>
        public event CalculateCashLoanTermsCompletedEventHandler CalculateCashLoanTermsCompleted;
        
        /// <remarks/>
        public event CashLoanDeliverAccountCompletedEventHandler CashLoanDeliverAccountCompleted;
        
        /// <remarks/>
        public event CashLoanPromissoryNoteStatusCompletedEventHandler CashLoanPromissoryNoteStatusCompleted;
        
        /// <remarks/>
        public event PrintAuditCashAndGoCompletedEventHandler PrintAuditCashAndGoCompleted;
        
        /// <remarks/>
        public event SubmitBookingFailureCompletedEventHandler SubmitBookingFailureCompleted;
        
        /// <remarks/>
        public event CancelRedeliveryCompletedEventHandler CancelRedeliveryCompleted;
        
        /// <remarks/>
        public event OnlineProductSearchCompletedEventHandler OnlineProductSearchCompleted;
        
        /// <remarks/>
        public event ReviseBookingFailureCompletedEventHandler ReviseBookingFailureCompleted;
        
        /// <remarks/>
        public event InstantReplacementCollectionCompletedEventHandler InstantReplacementCollectionCompleted;
        
        /// <remarks/>
        public event IsReadyAssistContractDateSetCompletedEventHandler IsReadyAssistContractDateSetCompleted;
        
        /// <remarks/>
        public event GeSalesCommissionDetailsCompletedEventHandler GeSalesCommissionDetailsCompleted;
        
        /// <remarks/>
        public event GetBranchSalesCommissionDetailsCompletedEventHandler GetBranchSalesCommissionDetailsCompleted;
        
        /// <remarks/>
        public event GetCashLoanDisbursementDetailsCompletedEventHandler GetCashLoanDisbursementDetailsCompleted;
        
        /// <remarks/>
        public event SaveCashLoanDisbursementBankTransferCompletedEventHandler SaveCashLoanDisbursementBankTransferCompleted;
        
        /// <remarks/>
        public event UpdateCashLoanBankDetailsCompletedEventHandler UpdateCashLoanBankDetailsCompleted;
        
        /// <remarks/>
        public event IsItemScheduledCompletedEventHandler IsItemScheduledCompleted;
        
        /// <remarks/>
        public event GetDiscountDeliveryMonthsCompletedEventHandler GetDiscountDeliveryMonthsCompleted;
        
        /// <remarks/>
        public event FormatWarrantyReturnCodeCompletedEventHandler FormatWarrantyReturnCodeCompleted;
        
        /// <remarks/>
        public event GetAllocatedCourtsPersonCompletedEventHandler GetAllocatedCourtsPersonCompleted;
        
        /// <remarks/>
        public event CheckAccountToCancelCompletedEventHandler CheckAccountToCancelCompleted;
        
        /// <remarks/>
        public event GetScheduledForAccountCompletedEventHandler GetScheduledForAccountCompleted;
        
        /// <remarks/>
        public event GetTranstypeByCodeCompletedEventHandler GetTranstypeByCodeCompleted;
        
        /// <remarks/>
        public event SaveTransTypeCompletedEventHandler SaveTransTypeCompleted;
        
        /// <remarks/>
        public event UpdateStatusCompletedEventHandler UpdateStatusCompleted;
        
        /// <remarks/>
        public event GetStatusForAccountCompletedEventHandler GetStatusForAccountCompleted;
        
        /// <remarks/>
        public event GetForWOReviewCompletedEventHandler GetForWOReviewCompleted;
        
        /// <remarks/>
        public event AcceptForWOCompletedEventHandler AcceptForWOCompleted;
        
        /// <remarks/>
        public event SavePendingCompletedEventHandler SavePendingCompleted;
        
        /// <remarks/>
        public event SaveRejectionCompletedEventHandler SaveRejectionCompleted;
        
        /// <remarks/>
        public event GetTransactionsForTransferCompletedEventHandler GetTransactionsForTransferCompleted;
        
        /// <remarks/>
        public event GetSundryCreditAccountCompletedEventHandler GetSundryCreditAccountCompleted;
        
        /// <remarks/>
        public event TransferTransactionCompletedEventHandler TransferTransactionCompleted;
        
        /// <remarks/>
        public event GetSundryAccountTransactionTotalCompletedEventHandler GetSundryAccountTransactionTotalCompleted;
        
        /// <remarks/>
        public event CanReverseOverageCompletedEventHandler CanReverseOverageCompleted;
        
        /// <remarks/>
        public event GetOveragesAccountCompletedEventHandler GetOveragesAccountCompleted;
        
        /// <remarks/>
        public event GetReceivableAccountCompletedEventHandler GetReceivableAccountCompleted;
        
        /// <remarks/>
        public event GetDefaultTermsTypeCompletedEventHandler GetDefaultTermsTypeCompleted;
        
        /// <remarks/>
        public event GetRebatesTotalCompletedEventHandler GetRebatesTotalCompleted;
        
        /// <remarks/>
        public event GetRebatesAsAtCompletedEventHandler GetRebatesAsAtCompleted;
        
        /// <remarks/>
        public event GetAccountStatusesCompletedEventHandler GetAccountStatusesCompleted;
        
        /// <remarks/>
        public event GetInstalmentAccountsCompletedEventHandler GetInstalmentAccountsCompleted;
        
        /// <remarks/>
        public event UpdateDateFirstCompletedEventHandler UpdateDateFirstCompleted;
        
        /// <remarks/>
        public event IsItemInstantReplacementCompletedEventHandler IsItemInstantReplacementCompleted;
        
        /// <remarks/>
        public event GetAccountAuditDataCompletedEventHandler GetAccountAuditDataCompleted;
        
        /// <remarks/>
        public event IsRepossessedCompletedEventHandler IsRepossessedCompleted;
        
        /// <remarks/>
        public event CreateManualAccountCompletedEventHandler CreateManualAccountCompleted;
        
        /// <remarks/>
        public event CreateManualRFAccountCompletedEventHandler CreateManualRFAccountCompleted;
        
        /// <remarks/>
        public event GetDueDayCompletedEventHandler GetDueDayCompleted;
        
        /// <remarks/>
        public event GetActivitySegmentsCompletedEventHandler GetActivitySegmentsCompleted;
        
        /// <remarks/>
        public event UpdateItemLocationCompletedEventHandler UpdateItemLocationCompleted;
        
        /// <remarks/>
        public event CancelDeliveryNoteCompletedEventHandler CancelDeliveryNoteCompleted;
        
        /// <remarks/>
        public event UpdateRebateTotalsCompletedEventHandler UpdateRebateTotalsCompleted;
        
        /// <remarks/>
        public event GetItemsForLocationChangeCompletedEventHandler GetItemsForLocationChangeCompleted;
        
        /// <remarks/>
        public event GetScheduledDelNoteCompletedEventHandler GetScheduledDelNoteCompleted;
        
        /// <remarks/>
        public event IsCancelledCompletedEventHandler IsCancelledCompleted;
        
        /// <remarks/>
        public event ReverseCancellationCompletedEventHandler ReverseCancellationCompleted;
        
        /// <remarks/>
        public event ManualCDVExistsCompletedEventHandler ManualCDVExistsCompleted;
        
        /// <remarks/>
        public event GetPeriodEndDatesCompletedEventHandler GetPeriodEndDatesCompleted;
        
        /// <remarks/>
        public event GetRebateForecastReportsCompletedEventHandler GetRebateForecastReportsCompleted;
        
        /// <remarks/>
        public event RunRebateForecastReportsCompletedEventHandler RunRebateForecastReportsCompleted;
        
        /// <remarks/>
        public event IsPaidAndTakenWarrantyCompletedEventHandler IsPaidAndTakenWarrantyCompleted;
        
        /// <remarks/>
        public event GetBookingsCompletedEventHandler GetBookingsCompleted;
        
        /// <remarks/>
        public event GetDeliveryOrdersCompletedEventHandler GetDeliveryOrdersCompleted;
        
        /// <remarks/>
        public event GetDeliveryNotesForAcctCompletedEventHandler GetDeliveryNotesForAcctCompleted;
        
        /// <remarks/>
        public event GetOutstandingDeliveriesCompletedEventHandler GetOutstandingDeliveriesCompleted;
        
        /// <remarks/>
        public event GetRelatedItemsCompletedEventHandler GetRelatedItemsCompleted;
        
        /// <remarks/>
        public event GetWarrantyRenewalsCompletedEventHandler GetWarrantyRenewalsCompleted;
        
        /// <remarks/>
        public event GetWarrantyProductsByAccountCompletedEventHandler GetWarrantyProductsByAccountCompleted;
        
        /// <remarks/>
        public event AddWarrantRenewalCodeCompletedEventHandler AddWarrantRenewalCodeCompleted;
        
        /// <remarks/>
        public event LoadAllocationsForReprintCompletedEventHandler LoadAllocationsForReprintCompleted;
        
        /// <remarks/>
        public event LoadAllocationDetailsCompletedEventHandler LoadAllocationDetailsCompleted;
        
        /// <remarks/>
        public event UpdateAllocForReprintCompletedEventHandler UpdateAllocForReprintCompleted;
        
        /// <remarks/>
        public event GetRepossessedItemDetailsCompletedEventHandler GetRepossessedItemDetailsCompleted;
        
        /// <remarks/>
        public event GetNextPicklistNoCompletedEventHandler GetNextPicklistNoCompleted;
        
        /// <remarks/>
        public event DeliveryNotesLoadByLoadNoCompletedEventHandler DeliveryNotesLoadByLoadNoCompleted;
        
        /// <remarks/>
        public event ChangeReqDeliveryDateCompletedEventHandler ChangeReqDeliveryDateCompleted;
        
        /// <remarks/>
        public event GetAcctNoCtrlCompletedEventHandler GetAcctNoCtrlCompleted;
        
        /// <remarks/>
        public event RemoveDeliveryNoteCompletedEventHandler RemoveDeliveryNoteCompleted;
        
        /// <remarks/>
        public event RemoveLineItemCompletedEventHandler RemoveLineItemCompleted;
        
        /// <remarks/>
        public event ChangeItemQuantityCompletedEventHandler ChangeItemQuantityCompleted;
        
        /// <remarks/>
        public event SaveAcctNoCtrlCompletedEventHandler SaveAcctNoCtrlCompleted;
        
        /// <remarks/>
        public event ScheduleRedelRepoCompletedEventHandler ScheduleRedelRepoCompleted;
        
        /// <remarks/>
        public event GetTransportListCompletedEventHandler GetTransportListCompleted;
        
        /// <remarks/>
        public event GetScheduledLoadsCompletedEventHandler GetScheduledLoadsCompleted;
        
        /// <remarks/>
        public event GetItemsInRegionCompletedEventHandler GetItemsInRegionCompleted;
        
        /// <remarks/>
        public event GetPurchaseOrdersCompletedEventHandler GetPurchaseOrdersCompleted;
        
        /// <remarks/>
        public event GetLoadContentsCompletedEventHandler GetLoadContentsCompleted;
        
        /// <remarks/>
        public event TransportSchedAddCompletedEventHandler TransportSchedAddCompleted;
        
        /// <remarks/>
        public event DeliveryScheduleUpdateCompletedEventHandler DeliveryScheduleUpdateCompleted;
        
        /// <remarks/>
        public event LoadAvailablePicklistsCompletedEventHandler LoadAvailablePicklistsCompleted;
        
        /// <remarks/>
        public event LockItemCompletedEventHandler LockItemCompleted;
        
        /// <remarks/>
        public event UnlockItemCompletedEventHandler UnlockItemCompleted;
        
        /// <remarks/>
        public event SaveTransportCompletedEventHandler SaveTransportCompleted;
        
        /// <remarks/>
        public event GetTransportCompletedEventHandler GetTransportCompleted;
        
        /// <remarks/>
        public event DeleteTransportCompletedEventHandler DeleteTransportCompleted;
        
        /// <remarks/>
        public event GetDeliveryScheduleDetailsCompletedEventHandler GetDeliveryScheduleDetailsCompleted;
        
        /// <remarks/>
        public event RemoveLoadFromContentsCompletedEventHandler RemoveLoadFromContentsCompleted;
        
        /// <remarks/>
        public event GetPickListScheduleCompletedEventHandler GetPickListScheduleCompleted;
        
        /// <remarks/>
        public event AccountGetAccountNoByBuffNoCompletedEventHandler AccountGetAccountNoByBuffNoCompleted;
        
        /// <remarks/>
        public event AuditReprintCompletedEventHandler AuditReprintCompleted;
        
        /// <remarks/>
        public event AuditDiscountCompletedEventHandler AuditDiscountCompleted;
        
        /// <remarks/>
        public event SUCBGetDelTotalsCompletedEventHandler SUCBGetDelTotalsCompleted;
        
        /// <remarks/>
        public event SUCBGetDelDetailsCompletedEventHandler SUCBGetDelDetailsCompleted;
        
        /// <remarks/>
        public event GetExchangeDetailsCompletedEventHandler GetExchangeDetailsCompleted;
        
        /// <remarks/>
        public event IsDotNetWarehouseCompletedEventHandler IsDotNetWarehouseCompleted;
        
        /// <remarks/>
        public event IsThirdPartyWarehouseCompletedEventHandler IsThirdPartyWarehouseCompleted;
        
        /// <remarks/>
        public event GetDeliverySchedulesCompletedEventHandler GetDeliverySchedulesCompleted;
        
        /// <remarks/>
        public event LoadAvailableTransPicklistsCompletedEventHandler LoadAvailableTransPicklistsCompleted;
        
        /// <remarks/>
        public event GetTransPickListDetailsCompletedEventHandler GetTransPickListDetailsCompleted;
        
        /// <remarks/>
        public event GetRevisedSchedulesCompletedEventHandler GetRevisedSchedulesCompleted;
        
        /// <remarks/>
        public event GetRevisedScheduleDetailsCompletedEventHandler GetRevisedScheduleDetailsCompleted;
        
        /// <remarks/>
        public event GetRevisedScheduleChangesCompletedEventHandler GetRevisedScheduleChangesCompleted;
        
        /// <remarks/>
        public event ConfirmScheduleChangesCompletedEventHandler ConfirmScheduleChangesCompleted;
        
        /// <remarks/>
        public event GetAdditionalItemsCompletedEventHandler GetAdditionalItemsCompleted;
        
        /// <remarks/>
        public event DeleteDeliveryLoadCompletedEventHandler DeleteDeliveryLoadCompleted;
        
        /// <remarks/>
        public event GetGiroPendingCompletedEventHandler GetGiroPendingCompleted;
        
        /// <remarks/>
        public event IsWarrantyRenewalCompletedEventHandler IsWarrantyRenewalCompleted;
        
        /// <remarks/>
        public event ValidDecimalCompletedEventHandler ValidDecimalCompleted;
        
        /// <remarks/>
        public event FincoBalancesCompletedEventHandler FincoBalancesCompleted;
        
        /// <remarks/>
        public event DeleteSpiffCompletedEventHandler DeleteSpiffCompleted;
        
        /// <remarks/>
        public event GetSpiffsCompletedEventHandler GetSpiffsCompleted;
        
        /// <remarks/>
        public event WarrantySalesReportCompletedEventHandler WarrantySalesReportCompleted;
        
        /// <remarks/>
        public event FincoTransactionsCompletedEventHandler FincoTransactionsCompleted;
        
        /// <remarks/>
        public event GetStoreTypeCompletedEventHandler GetStoreTypeCompleted;
        
        /// <remarks/>
        public event InstantCreditCompletedEventHandler InstantCreditCompleted;
        
        /// <remarks/>
        public event SaveInstantCreditFlagCompletedEventHandler SaveInstantCreditFlagCompleted;
        
        /// <remarks/>
        public event AutoDACompletedEventHandler AutoDACompleted;
        
        /// <remarks/>
        public event LoadCollectionsByacctnoCompletedEventHandler LoadCollectionsByacctnoCompleted;
        
        /// <remarks/>
        public event GetAgreementNoCompletedEventHandler GetAgreementNoCompleted;
        
        /// <remarks/>
        public event IsGiftItemCompletedEventHandler IsGiftItemCompleted;
        
        /// <remarks/>
        public event GetIRItemsCompletedEventHandler GetIRItemsCompleted;
        
        /// <remarks/>
        public event IsDiscountCompletedEventHandler IsDiscountCompleted;
        
        /// <remarks/>
        public event AddAdditionalSpiffCompletedEventHandler AddAdditionalSpiffCompleted;
        
        /// <remarks/>
        public event SaveInsuranceWarrantyReturnsCompletedEventHandler SaveInsuranceWarrantyReturnsCompleted;
        
        /// <remarks/>
        public event GetWorklistAccountsCompletedEventHandler GetWorklistAccountsCompleted;
        
        /// <remarks/>
        public event GetWorklistAccountsDataCompletedEventHandler GetWorklistAccountsDataCompleted;
        
        /// <remarks/>
        public event GetAccountHasBDWCompletedEventHandler GetAccountHasBDWCompleted;
        
        /// <remarks/>
        public event AccountScheduleExistsCompletedEventHandler AccountScheduleExistsCompleted;
        
        /// <remarks/>
        public event AccountStatusGetCompletedEventHandler AccountStatusGetCompleted;
        
        /// <remarks/>
        public event GetAccountDetailsDataCompletedEventHandler GetAccountDetailsDataCompleted;
        
        /// <remarks/>
        public event SPACalculateArrangementScheduleCompletedEventHandler SPACalculateArrangementScheduleCompleted;
        
        /// <remarks/>
        public event UnarchiveUnsettleCompletedEventHandler UnarchiveUnsettleCompleted;
        
        /// <remarks/>
        public event InvoicesCompletedEventHandler InvoicesCompleted;
        
        /// <remarks/>
        public event Receipt_1CompletedEventHandler Receipt_1Completed;
        
        /// <remarks/>
        public event Customer_1CompletedEventHandler Customer_1Completed;
        
        /// <remarks/>
        public event GetCustomerStatementCompletedEventHandler GetCustomerStatementCompleted;
        
        /// <remarks/>
        public event GetAccountStatementCompletedEventHandler GetAccountStatementCompleted;
        
        /// <remarks/>
        public event GetAccountStatementLastTransactionsCompletedEventHandler GetAccountStatementLastTransactionsCompleted;
        
        /// <remarks/>
        public event GetAccountsAwaitingClearanceCompletedEventHandler GetAccountsAwaitingClearanceCompleted;
        
        /// <remarks/>
        public event GetInstantCreditAwaitingClearanceCompletedEventHandler GetInstantCreditAwaitingClearanceCompleted;
        
        /// <remarks/>
        public event GetChargeableCashPriceCompletedEventHandler GetChargeableCashPriceCompleted;
        
        /// <remarks/>
        public event GetChargesByAcctNoCompletedEventHandler GetChargesByAcctNoCompleted;
        
        /// <remarks/>
        public event GetArrearsDailyByAcctNoCompletedEventHandler GetArrearsDailyByAcctNoCompleted;
        
        /// <remarks/>
        public event GetUnpaidAccountsCompletedEventHandler GetUnpaidAccountsCompleted;
        
        /// <remarks/>
        public event GetFinTransQueryResultsCompletedEventHandler GetFinTransQueryResultsCompleted;
        
        /// <remarks/>
        public event ClearProposalCompletedEventHandler ClearProposalCompleted;
        
        /// <remarks/>
        public event GetHoldFlagsCompletedEventHandler GetHoldFlagsCompleted;
        
        /// <remarks/>
        public event GetICFlagsCompletedEventHandler GetICFlagsCompleted;
        
        /// <remarks/>
        public event GenerateAccountNumberCompletedEventHandler GenerateAccountNumberCompleted;
        
        /// <remarks/>
        public event GetStockByLocationCompletedEventHandler GetStockByLocationCompleted;
        
        /// <remarks/>
        public event GetStockByCodeCompletedEventHandler GetStockByCodeCompleted;
        
        /// <remarks/>
        public event GetItemDetailsCompletedEventHandler GetItemDetailsCompleted;
        
        /// <remarks/>
        public event LockAccountCompletedEventHandler LockAccountCompleted;
        
        /// <remarks/>
        public event LockAccount1CompletedEventHandler LockAccount1Completed;
        
        /// <remarks/>
        public event UnlockAccountCompletedEventHandler UnlockAccountCompleted;
        
        /// <remarks/>
        public event UnlockAccount1CompletedEventHandler UnlockAccount1Completed;
        
        /// <remarks/>
        public event GetProductWarrantiesByCodeCompletedEventHandler GetProductWarrantiesByCodeCompleted;
        
        /// <remarks/>
        public event GetProductWarrantiesCompletedEventHandler GetProductWarrantiesCompleted;
        
        /// <remarks/>
        public event AddKitToAccountCompletedEventHandler AddKitToAccountCompleted;
        
        /// <remarks/>
        public event AccountsSearchCompletedEventHandler AccountsSearchCompleted;
        
        /// <remarks/>
        public event IncompleteCreditsCompletedEventHandler IncompleteCreditsCompleted;
        
        /// <remarks/>
        public event GetFollowUpHistoryCompletedEventHandler GetFollowUpHistoryCompleted;
        
        /// <remarks/>
        public event Getacctsforalloc5_2CompletedEventHandler Getacctsforalloc5_2Completed;
        
        /// <remarks/>
        public event GetacctsforallocCompletedEventHandler GetacctsforallocCompleted;
        
        /// <remarks/>
        public event GetStrategyAccountsToAllocateCompletedEventHandler GetStrategyAccountsToAllocateCompleted;
        
        /// <remarks/>
        public event GetAccountDetailsCompletedEventHandler GetAccountDetailsCompleted;
        
        /// <remarks/>
        public event CalculateInstalPlanCompletedEventHandler CalculateInstalPlanCompleted;
        
        /// <remarks/>
        public event CalculateServiceChargeCompletedEventHandler CalculateServiceChargeCompleted;
        
        /// <remarks/>
        public event GetTermsTypeDetailsCompletedEventHandler GetTermsTypeDetailsCompleted;
        
        /// <remarks/>
        public event TermsTypeGetDetailsCompletedEventHandler TermsTypeGetDetailsCompleted;
        
        /// <remarks/>
        public event SaveNewAccountCompletedEventHandler SaveNewAccountCompleted;
        
        /// <remarks/>
        public event GetAccountNameCompletedEventHandler GetAccountNameCompleted;
        
        /// <remarks/>
        public event GetCodesOnAccountCompletedEventHandler GetCodesOnAccountCompleted;
        
        /// <remarks/>
        public event AddCodesToAccountCompletedEventHandler AddCodesToAccountCompleted;
        
        /// <remarks/>
        public event AddLetterToAccountCompletedEventHandler AddLetterToAccountCompleted;
        
        /// <remarks/>
        public event GetAgreementCompletedEventHandler GetAgreementCompleted;
        
        /// <remarks/>
        public event GetInvoiceAccountDetailsCompletedEventHandler GetInvoiceAccountDetailsCompleted;
        
        /// <remarks/>
        public event GetAccountForRevisionCompletedEventHandler GetAccountForRevisionCompleted;
        
        /// <remarks/>
        public event GetLineItemsCompletedEventHandler GetLineItemsCompleted;
        
        /// <remarks/>
        public event HasReturnsItensCompletedEventHandler HasReturnsItensCompleted;
        
        /// <remarks/>
        public event GetItemsDeliveredAndScheduledCompletedEventHandler GetItemsDeliveredAndScheduledCompleted;
        
        /// <remarks/>
        public event GetScheduledDeliveriesForItemCompletedEventHandler GetScheduledDeliveriesForItemCompleted;
        
        /// <remarks/>
        public event DeleteDeliverySchedulesCompletedEventHandler DeleteDeliverySchedulesCompleted;
        
        /// <remarks/>
        public event Schedule_GetByBuffNoCompletedEventHandler Schedule_GetByBuffNoCompleted;
        
        /// <remarks/>
        public event Delivery_DeliverImmediatelyCompletedEventHandler Delivery_DeliverImmediatelyCompleted;
        
        /// <remarks/>
        public event Delivery_DeliverImmediatelyFailedCompletedEventHandler Delivery_DeliverImmediatelyFailedCompleted;
        
        /// <remarks/>
        public event DeadlockTest1CompletedEventHandler DeadlockTest1Completed;
        
        /// <remarks/>
        public event DeadlockTest2CompletedEventHandler DeadlockTest2Completed;
        
        /// <remarks/>
        public event DeleteLineItemCompletedEventHandler DeleteLineItemCompleted;
        
        /// <remarks/>
        public event GetTransactionsCompletedEventHandler GetTransactionsCompleted;
        
        /// <remarks/>
        public event GetLinkedCustomerIDCompletedEventHandler GetLinkedCustomerIDCompleted;
        
        /// <remarks/>
        public event GetLinkedCustomerIDbyTypeCompletedEventHandler GetLinkedCustomerIDbyTypeCompleted;
        
        /// <remarks/>
        public event AddCustomerToAccountCompletedEventHandler AddCustomerToAccountCompleted;
        
        /// <remarks/>
        public event ValidateAccountNumberCompletedEventHandler ValidateAccountNumberCompleted;
        
        /// <remarks/>
        public event CreateRFAccountCompletedEventHandler CreateRFAccountCompleted;
        
        /// <remarks/>
        public event CreateCustomerAccountCompletedEventHandler CreateCustomerAccountCompleted;
        
        /// <remarks/>
        public event CalculateSalesTaxCompletedEventHandler CalculateSalesTaxCompleted;
        
        /// <remarks/>
        public event DeleteWarrantyCompletedEventHandler DeleteWarrantyCompleted;
        
        /// <remarks/>
        public event GetBranchAddressCompletedEventHandler GetBranchAddressCompleted;
        
        /// <remarks/>
        public event CancelRFAccountCompletedEventHandler CancelRFAccountCompleted;
        
        /// <remarks/>
        public event CancelAccountCompletedEventHandler CancelAccountCompleted;
        
        /// <remarks/>
        public event ConvertRFToHPCompletedEventHandler ConvertRFToHPCompleted;
        
        /// <remarks/>
        public event GetPaymentCardDetailsCompletedEventHandler GetPaymentCardDetailsCompleted;
        
        /// <remarks/>
        public event ClearFlagCompletedEventHandler ClearFlagCompleted;
        
        /// <remarks/>
        public event GetPaidAndTakenAccountCompletedEventHandler GetPaidAndTakenAccountCompleted;
        
        /// <remarks/>
        public event GetDeliveryNotesCompletedEventHandler GetDeliveryNotesCompleted;
        
        /// <remarks/>
        public event GetDeliveryAccountsCompletedEventHandler GetDeliveryAccountsCompleted;
        
        /// <remarks/>
        public event UnlockAccountsLockedAtCompletedEventHandler UnlockAccountsLockedAtCompleted;
        
        /// <remarks/>
        public event SaveRepossArrearsCompletedEventHandler SaveRepossArrearsCompleted;
        
        /// <remarks/>
        public event GetReposessionAndRedeliveryCompletedEventHandler GetReposessionAndRedeliveryCompleted;
        
        /// <remarks/>
        public event SaveDeliveryCompletedEventHandler SaveDeliveryCompleted;
        
        /// <remarks/>
        public event SaveScheduleCompletedEventHandler SaveScheduleCompleted;
        
        /// <remarks/>
        public event CancelCollectionNoteCompletedEventHandler CancelCollectionNoteCompleted;
        
        /// <remarks/>
        public event UpdateSchedulesCompletedEventHandler UpdateSchedulesCompleted;
        
        /// <remarks/>
        public event UpdateScheduleForPicklistCompletedEventHandler UpdateScheduleForPicklistCompleted;
        
        /// <remarks/>
        public event ScheduleAssignNewBufferNoCompletedEventHandler ScheduleAssignNewBufferNoCompleted;
        
        /// <remarks/>
        public event GetForRepoCompletedEventHandler GetForRepoCompleted;
        
        /// <remarks/>
        public event SaveItemsCompletedEventHandler SaveItemsCompleted;
        
        /// <remarks/>
        public event SaveRepoDetailsCompletedEventHandler SaveRepoDetailsCompleted;
        
        /// <remarks/>
        public event GetItemCountCompletedEventHandler GetItemCountCompleted;
        
        /// <remarks/>
        public event GetItemsForAccountCompletedEventHandler GetItemsForAccountCompleted;
        
        /// <remarks/>
        public event GetDeliveriesCompletedEventHandler GetDeliveriesCompleted;
        
        /// <remarks/>
        public event GetCollectionsCompletedEventHandler GetCollectionsCompleted;
        
        /// <remarks/>
        public event GetBuffNoCompletedEventHandler GetBuffNoCompleted;
        
        /// <remarks/>
        public event GetPaymentCardTypeCompletedEventHandler GetPaymentCardTypeCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event AutoWarrantyCompletedEventHandler AutoWarrantyCompleted;
        
        /// <remarks/>
        public event SetPaymentCardPrintedCompletedEventHandler SetPaymentCardPrintedCompleted;
        
        /// <remarks/>
        public event GetCashAndGoAcctsCompletedEventHandler GetCashAndGoAcctsCompleted;
        
        /// <remarks/>
        public event GetAccountsAllocatedCompletedEventHandler GetAccountsAllocatedCompleted;
        
        /// <remarks/>
        public event GetStrategyAccountsAllocatedCompletedEventHandler GetStrategyAccountsAllocatedCompleted;
        
        /// <remarks/>
        public event GetBailActionsCompletedEventHandler GetBailActionsCompleted;
        
        /// <remarks/>
        public event SaveBailActionsCompletedEventHandler SaveBailActionsCompleted;
        
        /// <remarks/>
        public event GetSPAHistoryCompletedEventHandler GetSPAHistoryCompleted;
        
        /// <remarks/>
        public event GetSPAAcctDetailsCompletedEventHandler GetSPAAcctDetailsCompleted;
        
        /// <remarks/>
        public event GetStockLocationsCompletedEventHandler GetStockLocationsCompleted;
        
        /// <remarks/>
        public event AllocateAccountCompletedEventHandler AllocateAccountCompleted;
        
        /// <remarks/>
        public event DeAllocateAccountCompletedEventHandler DeAllocateAccountCompleted;
        
        /// <remarks/>
        public event AllocateDeallocateAccountCompletedEventHandler AllocateDeallocateAccountCompleted;
        
        /// <remarks/>
        public event GetInterestRateCompletedEventHandler GetInterestRateCompleted;
        
        /// <remarks/>
        public event SetAllocDateCompletedEventHandler SetAllocDateCompleted;
        
        /// <remarks/>
        public event AccountApplicationStatusCompletedEventHandler AccountApplicationStatusCompleted;
        
        /// <remarks/>
        public event GetLetterByAcctNoCompletedEventHandler GetLetterByAcctNoCompleted;
        
        /// <remarks/>
        public event BranchUpdateCompletedEventHandler BranchUpdateCompleted;
        
        /// <remarks/>
        public event BranchGetCompletedEventHandler BranchGetCompleted;
        
        /// <remarks/>
        public event LoadLettersAndStatuesByAcctNoCompletedEventHandler LoadLettersAndStatuesByAcctNoCompleted;
        
        /// <remarks/>
        public event DeliveryNotesReprintLoadCompletedEventHandler DeliveryNotesReprintLoadCompleted;
        
        /// <remarks/>
        public event CalculateAddToCompletedEventHandler CalculateAddToCompleted;
        
        /// <remarks/>
        public event ProcessAddToCompletedEventHandler ProcessAddToCompleted;
        
        /// <remarks/>
        public event AccountFullyDeliveredCompletedEventHandler AccountFullyDeliveredCompleted;
        
        /// <remarks/>
        public event ContractNoUniqueCompletedEventHandler ContractNoUniqueCompleted;
        
        /// <remarks/>
        public event AffinityContractNoUniqueCompletedEventHandler AffinityContractNoUniqueCompleted;
        
        /// <remarks/>
        public event HasAddToOrDeliveryCompletedEventHandler HasAddToOrDeliveryCompleted;
        
        /// <remarks/>
        public event SettledByAddToCompletedEventHandler SettledByAddToCompleted;
        
        /// <remarks/>
        public event ReverseAddToCompletedEventHandler ReverseAddToCompleted;
        
        /// <remarks/>
        public event CalculateTaxAmountCompletedEventHandler CalculateTaxAmountCompleted;
        
        /// <remarks/>
        public event CalculateTaxAmount1CompletedEventHandler CalculateTaxAmount1Completed;
        
        /// <remarks/>
        public event IsTaxExemptCompletedEventHandler IsTaxExemptCompleted;
        
        /// <remarks/>
        public event GetAssociatedWarrantiesCompletedEventHandler GetAssociatedWarrantiesCompleted;
        
        /// <remarks/>
        public event SaveProductFaultsCompletedEventHandler SaveProductFaultsCompleted;
        
        /// <remarks/>
        public event GetWarrantyReturnItemCompletedEventHandler GetWarrantyReturnItemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Oracledata", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataContainer Oracledata() {
            object[] results = this.Invoke("Oracledata", new object[0]);
            return ((DataContainer)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOracledata(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Oracledata", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataContainer EndOracledata(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataContainer)(results[0]));
        }
        
        /// <remarks/>
        public void OracledataAsync() {
            this.OracledataAsync(null);
        }
        
        /// <remarks/>
        public void OracledataAsync(object userState) {
            if ((this.OracledataOperationCompleted == null)) {
                this.OracledataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOracledataOperationCompleted);
            }
            this.InvokeAsync("Oracledata", new object[0], this.OracledataOperationCompleted, userState);
        }
        
        private void OnOracledataOperationCompleted(object arg) {
            if ((this.OracledataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OracledataCompleted(this, new OracledataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/InvoiceAccountsSearch", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InvoiceAccountsSearch(int BranchNo, System.DateTime InvoiceDateFrom, System.DateTime InvoiceDateTo, string InvoiceNo, string accountNo) {
            object[] results = this.Invoke("InvoiceAccountsSearch", new object[] {
                        BranchNo,
                        InvoiceDateFrom,
                        InvoiceDateTo,
                        InvoiceNo,
                        accountNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInvoiceAccountsSearch(int BranchNo, System.DateTime InvoiceDateFrom, System.DateTime InvoiceDateTo, string InvoiceNo, string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InvoiceAccountsSearch", new object[] {
                        BranchNo,
                        InvoiceDateFrom,
                        InvoiceDateTo,
                        InvoiceNo,
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndInvoiceAccountsSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InvoiceAccountsSearchAsync(int BranchNo, System.DateTime InvoiceDateFrom, System.DateTime InvoiceDateTo, string InvoiceNo, string accountNo) {
            this.InvoiceAccountsSearchAsync(BranchNo, InvoiceDateFrom, InvoiceDateTo, InvoiceNo, accountNo, null);
        }
        
        /// <remarks/>
        public void InvoiceAccountsSearchAsync(int BranchNo, System.DateTime InvoiceDateFrom, System.DateTime InvoiceDateTo, string InvoiceNo, string accountNo, object userState) {
            if ((this.InvoiceAccountsSearchOperationCompleted == null)) {
                this.InvoiceAccountsSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvoiceAccountsSearchOperationCompleted);
            }
            this.InvokeAsync("InvoiceAccountsSearch", new object[] {
                        BranchNo,
                        InvoiceDateFrom,
                        InvoiceDateTo,
                        InvoiceNo,
                        accountNo}, this.InvoiceAccountsSearchOperationCompleted, userState);
        }
        
        private void OnInvoiceAccountsSearchOperationCompleted(object arg) {
            if ((this.InvoiceAccountsSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvoiceAccountsSearchCompleted(this, new InvoiceAccountsSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteDeliveryNoteAndItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteDeliveryNoteAndItems(short branchNo, string countryCode, System.Data.DataTable dnItemsToDelete, System.Data.DataTable dnItemsLinkedNonStocks, short stockLocn, int buffNo, int empeeNo, string reason, ref bool allItemsCollected, out string err) {
            object[] results = this.Invoke("DeleteDeliveryNoteAndItems", new object[] {
                        branchNo,
                        countryCode,
                        dnItemsToDelete,
                        dnItemsLinkedNonStocks,
                        stockLocn,
                        buffNo,
                        empeeNo,
                        reason,
                        allItemsCollected});
            allItemsCollected = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteDeliveryNoteAndItems(short branchNo, string countryCode, System.Data.DataTable dnItemsToDelete, System.Data.DataTable dnItemsLinkedNonStocks, short stockLocn, int buffNo, int empeeNo, string reason, bool allItemsCollected, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteDeliveryNoteAndItems", new object[] {
                        branchNo,
                        countryCode,
                        dnItemsToDelete,
                        dnItemsLinkedNonStocks,
                        stockLocn,
                        buffNo,
                        empeeNo,
                        reason,
                        allItemsCollected}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteDeliveryNoteAndItems(System.IAsyncResult asyncResult, out bool allItemsCollected, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            allItemsCollected = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeliveryNoteAndItemsAsync(short branchNo, string countryCode, System.Data.DataTable dnItemsToDelete, System.Data.DataTable dnItemsLinkedNonStocks, short stockLocn, int buffNo, int empeeNo, string reason, bool allItemsCollected) {
            this.DeleteDeliveryNoteAndItemsAsync(branchNo, countryCode, dnItemsToDelete, dnItemsLinkedNonStocks, stockLocn, buffNo, empeeNo, reason, allItemsCollected, null);
        }
        
        /// <remarks/>
        public void DeleteDeliveryNoteAndItemsAsync(short branchNo, string countryCode, System.Data.DataTable dnItemsToDelete, System.Data.DataTable dnItemsLinkedNonStocks, short stockLocn, int buffNo, int empeeNo, string reason, bool allItemsCollected, object userState) {
            if ((this.DeleteDeliveryNoteAndItemsOperationCompleted == null)) {
                this.DeleteDeliveryNoteAndItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeliveryNoteAndItemsOperationCompleted);
            }
            this.InvokeAsync("DeleteDeliveryNoteAndItems", new object[] {
                        branchNo,
                        countryCode,
                        dnItemsToDelete,
                        dnItemsLinkedNonStocks,
                        stockLocn,
                        buffNo,
                        empeeNo,
                        reason,
                        allItemsCollected}, this.DeleteDeliveryNoteAndItemsOperationCompleted, userState);
        }
        
        private void OnDeleteDeliveryNoteAndItemsOperationCompleted(object arg) {
            if ((this.DeleteDeliveryNoteAndItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeliveryNoteAndItemsCompleted(this, new DeleteDeliveryNoteAndItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetNonStockLinkedToDNItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNonStockLinkedToDNItems(short branchNo, int buffNo, out string err) {
            object[] results = this.Invoke("GetNonStockLinkedToDNItems", new object[] {
                        branchNo,
                        buffNo});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNonStockLinkedToDNItems(short branchNo, int buffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNonStockLinkedToDNItems", new object[] {
                        branchNo,
                        buffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetNonStockLinkedToDNItems(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonStockLinkedToDNItemsAsync(short branchNo, int buffNo) {
            this.GetNonStockLinkedToDNItemsAsync(branchNo, buffNo, null);
        }
        
        /// <remarks/>
        public void GetNonStockLinkedToDNItemsAsync(short branchNo, int buffNo, object userState) {
            if ((this.GetNonStockLinkedToDNItemsOperationCompleted == null)) {
                this.GetNonStockLinkedToDNItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonStockLinkedToDNItemsOperationCompleted);
            }
            this.InvokeAsync("GetNonStockLinkedToDNItems", new object[] {
                        branchNo,
                        buffNo}, this.GetNonStockLinkedToDNItemsOperationCompleted, userState);
        }
        
        private void OnGetNonStockLinkedToDNItemsOperationCompleted(object arg) {
            if ((this.GetNonStockLinkedToDNItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonStockLinkedToDNItemsCompleted(this, new GetNonStockLinkedToDNItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetOracleOutboundSalesOrder", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutboundDataContainer GetOracleOutboundSalesOrder(int runNo) {
            object[] results = this.Invoke("GetOracleOutboundSalesOrder", new object[] {
                        runNo});
            return ((OutboundDataContainer)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOracleOutboundSalesOrder(int runNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOracleOutboundSalesOrder", new object[] {
                        runNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public OutboundDataContainer EndGetOracleOutboundSalesOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OutboundDataContainer)(results[0]));
        }
        
        /// <remarks/>
        public void GetOracleOutboundSalesOrderAsync(int runNo) {
            this.GetOracleOutboundSalesOrderAsync(runNo, null);
        }
        
        /// <remarks/>
        public void GetOracleOutboundSalesOrderAsync(int runNo, object userState) {
            if ((this.GetOracleOutboundSalesOrderOperationCompleted == null)) {
                this.GetOracleOutboundSalesOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOracleOutboundSalesOrderOperationCompleted);
            }
            this.InvokeAsync("GetOracleOutboundSalesOrder", new object[] {
                        runNo}, this.GetOracleOutboundSalesOrderOperationCompleted, userState);
        }
        
        private void OnGetOracleOutboundSalesOrderOperationCompleted(object arg) {
            if ((this.GetOracleOutboundSalesOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOracleOutboundSalesOrderCompleted(this, new GetOracleOutboundSalesOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateStockInfo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateStockInfo(string strCSV) {
            object[] results = this.Invoke("UpdateStockInfo", new object[] {
                        strCSV});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateStockInfo(string strCSV, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateStockInfo", new object[] {
                        strCSV}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateStockInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStockInfoAsync(string strCSV) {
            this.UpdateStockInfoAsync(strCSV, null);
        }
        
        /// <remarks/>
        public void UpdateStockInfoAsync(string strCSV, object userState) {
            if ((this.UpdateStockInfoOperationCompleted == null)) {
                this.UpdateStockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStockInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateStockInfo", new object[] {
                        strCSV}, this.UpdateStockInfoOperationCompleted, userState);
        }
        
        private void OnUpdateStockInfoOperationCompleted(object arg) {
            if ((this.UpdateStockInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStockInfoCompleted(this, new UpdateStockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateStockPrice", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateStockPrice(string strCSV) {
            object[] results = this.Invoke("UpdateStockPrice", new object[] {
                        strCSV});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateStockPrice(string strCSV, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateStockPrice", new object[] {
                        strCSV}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateStockPrice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStockPriceAsync(string strCSV) {
            this.UpdateStockPriceAsync(strCSV, null);
        }
        
        /// <remarks/>
        public void UpdateStockPriceAsync(string strCSV, object userState) {
            if ((this.UpdateStockPriceOperationCompleted == null)) {
                this.UpdateStockPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStockPriceOperationCompleted);
            }
            this.InvokeAsync("UpdateStockPrice", new object[] {
                        strCSV}, this.UpdateStockPriceOperationCompleted, userState);
        }
        
        private void OnUpdateStockPriceOperationCompleted(object arg) {
            if ((this.UpdateStockPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStockPriceCompleted(this, new UpdateStockPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateStockQuantity", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateStockQuantity(string strCSV) {
            object[] results = this.Invoke("UpdateStockQuantity", new object[] {
                        strCSV});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateStockQuantity(string strCSV, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateStockQuantity", new object[] {
                        strCSV}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateStockQuantity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStockQuantityAsync(string strCSV) {
            this.UpdateStockQuantityAsync(strCSV, null);
        }
        
        /// <remarks/>
        public void UpdateStockQuantityAsync(string strCSV, object userState) {
            if ((this.UpdateStockQuantityOperationCompleted == null)) {
                this.UpdateStockQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStockQuantityOperationCompleted);
            }
            this.InvokeAsync("UpdateStockQuantity", new object[] {
                        strCSV}, this.UpdateStockQuantityOperationCompleted, userState);
        }
        
        private void OnUpdateStockQuantityOperationCompleted(object arg) {
            if ((this.UpdateStockQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStockQuantityCompleted(this, new UpdateStockQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdatePromoPrice", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePromoPrice(string strCSV) {
            object[] results = this.Invoke("UpdatePromoPrice", new object[] {
                        strCSV});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePromoPrice(string strCSV, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePromoPrice", new object[] {
                        strCSV}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdatePromoPrice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePromoPriceAsync(string strCSV) {
            this.UpdatePromoPriceAsync(strCSV, null);
        }
        
        /// <remarks/>
        public void UpdatePromoPriceAsync(string strCSV, object userState) {
            if ((this.UpdatePromoPriceOperationCompleted == null)) {
                this.UpdatePromoPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePromoPriceOperationCompleted);
            }
            this.InvokeAsync("UpdatePromoPrice", new object[] {
                        strCSV}, this.UpdatePromoPriceOperationCompleted, userState);
        }
        
        private void OnUpdatePromoPriceOperationCompleted(object arg) {
            if ((this.UpdatePromoPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePromoPriceCompleted(this, new UpdatePromoPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdatePurchaseOrder", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePurchaseOrder(string strCSV) {
            object[] results = this.Invoke("UpdatePurchaseOrder", new object[] {
                        strCSV});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePurchaseOrder(string strCSV, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePurchaseOrder", new object[] {
                        strCSV}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdatePurchaseOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePurchaseOrderAsync(string strCSV) {
            this.UpdatePurchaseOrderAsync(strCSV, null);
        }
        
        /// <remarks/>
        public void UpdatePurchaseOrderAsync(string strCSV, object userState) {
            if ((this.UpdatePurchaseOrderOperationCompleted == null)) {
                this.UpdatePurchaseOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePurchaseOrderOperationCompleted);
            }
            this.InvokeAsync("UpdatePurchaseOrder", new object[] {
                        strCSV}, this.UpdatePurchaseOrderOperationCompleted, userState);
        }
        
        private void OnUpdatePurchaseOrderOperationCompleted(object arg) {
            if ((this.UpdatePurchaseOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePurchaseOrderCompleted(this, new UpdatePurchaseOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateWarrantyBand", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWarrantyBand(string strCSV) {
            object[] results = this.Invoke("UpdateWarrantyBand", new object[] {
                        strCSV});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateWarrantyBand(string strCSV, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateWarrantyBand", new object[] {
                        strCSV}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateWarrantyBand(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWarrantyBandAsync(string strCSV) {
            this.UpdateWarrantyBandAsync(strCSV, null);
        }
        
        /// <remarks/>
        public void UpdateWarrantyBandAsync(string strCSV, object userState) {
            if ((this.UpdateWarrantyBandOperationCompleted == null)) {
                this.UpdateWarrantyBandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWarrantyBandOperationCompleted);
            }
            this.InvokeAsync("UpdateWarrantyBand", new object[] {
                        strCSV}, this.UpdateWarrantyBandOperationCompleted, userState);
        }
        
        private void OnUpdateWarrantyBandOperationCompleted(object arg) {
            if ((this.UpdateWarrantyBandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWarrantyBandCompleted(this, new UpdateWarrantyBandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateFreightCarrier", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateFreightCarrier(string strCSV) {
            object[] results = this.Invoke("UpdateFreightCarrier", new object[] {
                        strCSV});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFreightCarrier(string strCSV, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFreightCarrier", new object[] {
                        strCSV}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateFreightCarrier(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFreightCarrierAsync(string strCSV) {
            this.UpdateFreightCarrierAsync(strCSV, null);
        }
        
        /// <remarks/>
        public void UpdateFreightCarrierAsync(string strCSV, object userState) {
            if ((this.UpdateFreightCarrierOperationCompleted == null)) {
                this.UpdateFreightCarrierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFreightCarrierOperationCompleted);
            }
            this.InvokeAsync("UpdateFreightCarrier", new object[] {
                        strCSV}, this.UpdateFreightCarrierOperationCompleted, userState);
        }
        
        private void OnUpdateFreightCarrierOperationCompleted(object arg) {
            if ((this.UpdateFreightCarrierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFreightCarrierCompleted(this, new UpdateFreightCarrierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckCanReallocate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckCanReallocate(int countAcctsToRealloc, int EmployeeNo, ref int noCanAlloc, out string err) {
            object[] results = this.Invoke("CheckCanReallocate", new object[] {
                        countAcctsToRealloc,
                        EmployeeNo,
                        noCanAlloc});
            noCanAlloc = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckCanReallocate(int countAcctsToRealloc, int EmployeeNo, int noCanAlloc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckCanReallocate", new object[] {
                        countAcctsToRealloc,
                        EmployeeNo,
                        noCanAlloc}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckCanReallocate(System.IAsyncResult asyncResult, out int noCanAlloc, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            noCanAlloc = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCanReallocateAsync(int countAcctsToRealloc, int EmployeeNo, int noCanAlloc) {
            this.CheckCanReallocateAsync(countAcctsToRealloc, EmployeeNo, noCanAlloc, null);
        }
        
        /// <remarks/>
        public void CheckCanReallocateAsync(int countAcctsToRealloc, int EmployeeNo, int noCanAlloc, object userState) {
            if ((this.CheckCanReallocateOperationCompleted == null)) {
                this.CheckCanReallocateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCanReallocateOperationCompleted);
            }
            this.InvokeAsync("CheckCanReallocate", new object[] {
                        countAcctsToRealloc,
                        EmployeeNo,
                        noCanAlloc}, this.CheckCanReallocateOperationCompleted, userState);
        }
        
        private void OnCheckCanReallocateOperationCompleted(object arg) {
            if ((this.CheckCanReallocateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCanReallocateCompleted(this, new CheckCanReallocateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadDAHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadDAHistory(string acctno, out string err) {
            object[] results = this.Invoke("LoadDAHistory", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadDAHistory(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadDAHistory", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndLoadDAHistory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDAHistoryAsync(string acctno) {
            this.LoadDAHistoryAsync(acctno, null);
        }
        
        /// <remarks/>
        public void LoadDAHistoryAsync(string acctno, object userState) {
            if ((this.LoadDAHistoryOperationCompleted == null)) {
                this.LoadDAHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDAHistoryOperationCompleted);
            }
            this.InvokeAsync("LoadDAHistory", new object[] {
                        acctno}, this.LoadDAHistoryOperationCompleted, userState);
        }
        
        private void OnLoadDAHistoryOperationCompleted(object arg) {
            if ((this.LoadDAHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDAHistoryCompleted(this, new LoadDAHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsPaidAndTakenAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsPaidAndTakenAccount(string accountNo, out string err) {
            object[] results = this.Invoke("IsPaidAndTakenAccount", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsPaidAndTakenAccount(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsPaidAndTakenAccount", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsPaidAndTakenAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsPaidAndTakenAccountAsync(string accountNo) {
            this.IsPaidAndTakenAccountAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void IsPaidAndTakenAccountAsync(string accountNo, object userState) {
            if ((this.IsPaidAndTakenAccountOperationCompleted == null)) {
                this.IsPaidAndTakenAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPaidAndTakenAccountOperationCompleted);
            }
            this.InvokeAsync("IsPaidAndTakenAccount", new object[] {
                        accountNo}, this.IsPaidAndTakenAccountOperationCompleted, userState);
        }
        
        private void OnIsPaidAndTakenAccountOperationCompleted(object arg) {
            if ((this.IsPaidAndTakenAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPaidAndTakenAccountCompleted(this, new IsPaidAndTakenAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LockCheckbyAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LockCheckbyAccount(string acctno, string user) {
            object[] results = this.Invoke("LockCheckbyAccount", new object[] {
                        acctno,
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLockCheckbyAccount(string acctno, string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LockCheckbyAccount", new object[] {
                        acctno,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLockCheckbyAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LockCheckbyAccountAsync(string acctno, string user) {
            this.LockCheckbyAccountAsync(acctno, user, null);
        }
        
        /// <remarks/>
        public void LockCheckbyAccountAsync(string acctno, string user, object userState) {
            if ((this.LockCheckbyAccountOperationCompleted == null)) {
                this.LockCheckbyAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockCheckbyAccountOperationCompleted);
            }
            this.InvokeAsync("LockCheckbyAccount", new object[] {
                        acctno,
                        user}, this.LockCheckbyAccountOperationCompleted, userState);
        }
        
        private void OnLockCheckbyAccountOperationCompleted(object arg) {
            if ((this.LockCheckbyAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockCheckbyAccountCompleted(this, new LockCheckbyAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashAndGoLastPayMethod", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashAndGoLastPayMethod(string acctNo, int agrmtNo, out string err) {
            object[] results = this.Invoke("GetCashAndGoLastPayMethod", new object[] {
                        acctNo,
                        agrmtNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashAndGoLastPayMethod(string acctNo, int agrmtNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashAndGoLastPayMethod", new object[] {
                        acctNo,
                        agrmtNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashAndGoLastPayMethod(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashAndGoLastPayMethodAsync(string acctNo, int agrmtNo) {
            this.GetCashAndGoLastPayMethodAsync(acctNo, agrmtNo, null);
        }
        
        /// <remarks/>
        public void GetCashAndGoLastPayMethodAsync(string acctNo, int agrmtNo, object userState) {
            if ((this.GetCashAndGoLastPayMethodOperationCompleted == null)) {
                this.GetCashAndGoLastPayMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashAndGoLastPayMethodOperationCompleted);
            }
            this.InvokeAsync("GetCashAndGoLastPayMethod", new object[] {
                        acctNo,
                        agrmtNo}, this.GetCashAndGoLastPayMethodOperationCompleted, userState);
        }
        
        private void OnGetCashAndGoLastPayMethodOperationCompleted(object arg) {
            if ((this.GetCashAndGoLastPayMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashAndGoLastPayMethodCompleted(this, new GetCashAndGoLastPayMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBranchDefaultPrintLocation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("bdpl")]
        public BranchDefaultPrintLocation[] GetBranchDefaultPrintLocation() {
            object[] results = this.Invoke("GetBranchDefaultPrintLocation", new object[0]);
            return ((BranchDefaultPrintLocation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBranchDefaultPrintLocation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBranchDefaultPrintLocation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public BranchDefaultPrintLocation[] EndGetBranchDefaultPrintLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BranchDefaultPrintLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchDefaultPrintLocationAsync() {
            this.GetBranchDefaultPrintLocationAsync(null);
        }
        
        /// <remarks/>
        public void GetBranchDefaultPrintLocationAsync(object userState) {
            if ((this.GetBranchDefaultPrintLocationOperationCompleted == null)) {
                this.GetBranchDefaultPrintLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchDefaultPrintLocationOperationCompleted);
            }
            this.InvokeAsync("GetBranchDefaultPrintLocation", new object[0], this.GetBranchDefaultPrintLocationOperationCompleted, userState);
        }
        
        private void OnGetBranchDefaultPrintLocationOperationCompleted(object arg) {
            if ((this.GetBranchDefaultPrintLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchDefaultPrintLocationCompleted(this, new GetBranchDefaultPrintLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ProvisionGetForAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal ProvisionGetForAccount(string acctno) {
            object[] results = this.Invoke("ProvisionGetForAccount", new object[] {
                        acctno});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProvisionGetForAccount(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProvisionGetForAccount", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndProvisionGetForAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void ProvisionGetForAccountAsync(string acctno) {
            this.ProvisionGetForAccountAsync(acctno, null);
        }
        
        /// <remarks/>
        public void ProvisionGetForAccountAsync(string acctno, object userState) {
            if ((this.ProvisionGetForAccountOperationCompleted == null)) {
                this.ProvisionGetForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvisionGetForAccountOperationCompleted);
            }
            this.InvokeAsync("ProvisionGetForAccount", new object[] {
                        acctno}, this.ProvisionGetForAccountOperationCompleted, userState);
        }
        
        private void OnProvisionGetForAccountOperationCompleted(object arg) {
            if ((this.ProvisionGetForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProvisionGetForAccountCompleted(this, new ProvisionGetForAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/MaxAction", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable MaxAction(string accountNo) {
            object[] results = this.Invoke("MaxAction", new object[] {
                        accountNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMaxAction(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MaxAction", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndMaxAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void MaxActionAsync(string accountNo) {
            this.MaxActionAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void MaxActionAsync(string accountNo, object userState) {
            if ((this.MaxActionOperationCompleted == null)) {
                this.MaxActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMaxActionOperationCompleted);
            }
            this.InvokeAsync("MaxAction", new object[] {
                        accountNo}, this.MaxActionOperationCompleted, userState);
        }
        
        private void OnMaxActionOperationCompleted(object arg) {
            if ((this.MaxActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MaxActionCompleted(this, new MaxActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckSRAcct", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSRAcct(string acctno) {
            object[] results = this.Invoke("CheckSRAcct", new object[] {
                        acctno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckSRAcct(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckSRAcct", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckSRAcct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSRAcctAsync(string acctno) {
            this.CheckSRAcctAsync(acctno, null);
        }
        
        /// <remarks/>
        public void CheckSRAcctAsync(string acctno, object userState) {
            if ((this.CheckSRAcctOperationCompleted == null)) {
                this.CheckSRAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSRAcctOperationCompleted);
            }
            this.InvokeAsync("CheckSRAcct", new object[] {
                        acctno}, this.CheckSRAcctOperationCompleted, userState);
        }
        
        private void OnCheckSRAcctOperationCompleted(object arg) {
            if ((this.CheckSRAcctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSRAcctCompleted(this, new CheckSRAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetNonStockByCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNonStockByCode(string itemno, out string err) {
            object[] results = this.Invoke("GetNonStockByCode", new object[] {
                        itemno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNonStockByCode(string itemno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNonStockByCode", new object[] {
                        itemno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetNonStockByCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonStockByCodeAsync(string itemno) {
            this.GetNonStockByCodeAsync(itemno, null);
        }
        
        /// <remarks/>
        public void GetNonStockByCodeAsync(string itemno, object userState) {
            if ((this.GetNonStockByCodeOperationCompleted == null)) {
                this.GetNonStockByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonStockByCodeOperationCompleted);
            }
            this.InvokeAsync("GetNonStockByCode", new object[] {
                        itemno}, this.GetNonStockByCodeOperationCompleted, userState);
        }
        
        private void OnGetNonStockByCodeOperationCompleted(object arg) {
            if ((this.GetNonStockByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonStockByCodeCompleted(this, new GetNonStockByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCategories", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCategories(out string err) {
            object[] results = this.Invoke("GetCategories", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCategories(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCategories", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetCategories(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesAsync() {
            this.GetCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(object userState) {
            if ((this.GetCategoriesOperationCompleted == null)) {
                this.GetCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetCategories", new object[0], this.GetCategoriesOperationCompleted, userState);
        }
        
        private void OnGetCategoriesOperationCompleted(object arg) {
            if ((this.GetCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesCompleted(this, new GetCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveNonStockItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveNonStockItem(System.Data.DataTable nonstock, System.Data.DataTable prices) {
            this.Invoke("SaveNonStockItem", new object[] {
                        nonstock,
                        prices});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveNonStockItem(System.Data.DataTable nonstock, System.Data.DataTable prices, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveNonStockItem", new object[] {
                        nonstock,
                        prices}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSaveNonStockItem(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SaveNonStockItemAsync(System.Data.DataTable nonstock, System.Data.DataTable prices) {
            this.SaveNonStockItemAsync(nonstock, prices, null);
        }
        
        /// <remarks/>
        public void SaveNonStockItemAsync(System.Data.DataTable nonstock, System.Data.DataTable prices, object userState) {
            if ((this.SaveNonStockItemOperationCompleted == null)) {
                this.SaveNonStockItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveNonStockItemOperationCompleted);
            }
            this.InvokeAsync("SaveNonStockItem", new object[] {
                        nonstock,
                        prices}, this.SaveNonStockItemOperationCompleted, userState);
        }
        
        private void OnSaveNonStockItemOperationCompleted(object arg) {
            if ((this.SaveNonStockItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveNonStockItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWarrantyReturnCodes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarrantyReturnCodes(out string err) {
            object[] results = this.Invoke("GetWarrantyReturnCodes", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarrantyReturnCodes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarrantyReturnCodes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetWarrantyReturnCodes(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantyReturnCodesAsync() {
            this.GetWarrantyReturnCodesAsync(null);
        }
        
        /// <remarks/>
        public void GetWarrantyReturnCodesAsync(object userState) {
            if ((this.GetWarrantyReturnCodesOperationCompleted == null)) {
                this.GetWarrantyReturnCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantyReturnCodesOperationCompleted);
            }
            this.InvokeAsync("GetWarrantyReturnCodes", new object[0], this.GetWarrantyReturnCodesOperationCompleted, userState);
        }
        
        private void OnGetWarrantyReturnCodesOperationCompleted(object arg) {
            if ((this.GetWarrantyReturnCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantyReturnCodesCompleted(this, new GetWarrantyReturnCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveWarrantyReturnCodes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string SaveWarrantyReturnCodes(System.Data.DataTable returnCodes, System.DateTime dateNow) {
            object[] results = this.Invoke("SaveWarrantyReturnCodes", new object[] {
                        returnCodes,
                        dateNow});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveWarrantyReturnCodes(System.Data.DataTable returnCodes, System.DateTime dateNow, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveWarrantyReturnCodes", new object[] {
                        returnCodes,
                        dateNow}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSaveWarrantyReturnCodes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWarrantyReturnCodesAsync(System.Data.DataTable returnCodes, System.DateTime dateNow) {
            this.SaveWarrantyReturnCodesAsync(returnCodes, dateNow, null);
        }
        
        /// <remarks/>
        public void SaveWarrantyReturnCodesAsync(System.Data.DataTable returnCodes, System.DateTime dateNow, object userState) {
            if ((this.SaveWarrantyReturnCodesOperationCompleted == null)) {
                this.SaveWarrantyReturnCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWarrantyReturnCodesOperationCompleted);
            }
            this.InvokeAsync("SaveWarrantyReturnCodes", new object[] {
                        returnCodes,
                        dateNow}, this.SaveWarrantyReturnCodesOperationCompleted, userState);
        }
        
        private void OnSaveWarrantyReturnCodesOperationCompleted(object arg) {
            if ((this.SaveWarrantyReturnCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWarrantyReturnCodesCompleted(this, new SaveWarrantyReturnCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/NewAccountCreditSave", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NewAccountCreditSave(ref CreditParameters Parms) {
            object[] results = this.Invoke("NewAccountCreditSave", new object[] {
                        Parms});
            Parms = ((CreditParameters)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNewAccountCreditSave(CreditParameters Parms, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NewAccountCreditSave", new object[] {
                        Parms}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndNewAccountCreditSave(System.IAsyncResult asyncResult, out CreditParameters Parms) {
            object[] results = this.EndInvoke(asyncResult);
            Parms = ((CreditParameters)(results[0]));
        }
        
        /// <remarks/>
        public void NewAccountCreditSaveAsync(CreditParameters Parms) {
            this.NewAccountCreditSaveAsync(Parms, null);
        }
        
        /// <remarks/>
        public void NewAccountCreditSaveAsync(CreditParameters Parms, object userState) {
            if ((this.NewAccountCreditSaveOperationCompleted == null)) {
                this.NewAccountCreditSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewAccountCreditSaveOperationCompleted);
            }
            this.InvokeAsync("NewAccountCreditSave", new object[] {
                        Parms}, this.NewAccountCreditSaveOperationCompleted, userState);
        }
        
        private void OnNewAccountCreditSaveOperationCompleted(object arg) {
            if ((this.NewAccountCreditSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewAccountCreditSaveCompleted(this, new NewAccountCreditSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAllWarrantyItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllWarrantyItems(out string err) {
            object[] results = this.Invoke("GetAllWarrantyItems", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllWarrantyItems(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllWarrantyItems", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetAllWarrantyItems(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllWarrantyItemsAsync() {
            this.GetAllWarrantyItemsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllWarrantyItemsAsync(object userState) {
            if ((this.GetAllWarrantyItemsOperationCompleted == null)) {
                this.GetAllWarrantyItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllWarrantyItemsOperationCompleted);
            }
            this.InvokeAsync("GetAllWarrantyItems", new object[0], this.GetAllWarrantyItemsOperationCompleted, userState);
        }
        
        private void OnGetAllWarrantyItemsOperationCompleted(object arg) {
            if ((this.GetAllWarrantyItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllWarrantyItemsCompleted(this, new GetAllWarrantyItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AccountLockingFindandLockForCaller", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AccountLockingFindandLockForCaller(string acctlist, string user, out string err) {
            object[] results = this.Invoke("AccountLockingFindandLockForCaller", new object[] {
                        acctlist,
                        user});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAccountLockingFindandLockForCaller(string acctlist, string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AccountLockingFindandLockForCaller", new object[] {
                        acctlist,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAccountLockingFindandLockForCaller(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountLockingFindandLockForCallerAsync(string acctlist, string user) {
            this.AccountLockingFindandLockForCallerAsync(acctlist, user, null);
        }
        
        /// <remarks/>
        public void AccountLockingFindandLockForCallerAsync(string acctlist, string user, object userState) {
            if ((this.AccountLockingFindandLockForCallerOperationCompleted == null)) {
                this.AccountLockingFindandLockForCallerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountLockingFindandLockForCallerOperationCompleted);
            }
            this.InvokeAsync("AccountLockingFindandLockForCaller", new object[] {
                        acctlist,
                        user}, this.AccountLockingFindandLockForCallerOperationCompleted, userState);
        }
        
        private void OnAccountLockingFindandLockForCallerOperationCompleted(object arg) {
            if ((this.AccountLockingFindandLockForCallerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountLockingFindandLockForCallerCompleted(this, new AccountLockingFindandLockForCallerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsSRInstSpecialAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsSRInstSpecialAccount(string accountNo, out string err) {
            object[] results = this.Invoke("IsSRInstSpecialAccount", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Nullable<bool>)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsSRInstSpecialAccount(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsSRInstSpecialAccount", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Nullable<bool> EndIsSRInstSpecialAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Nullable<bool>)(results[0]));
        }
        
        /// <remarks/>
        public void IsSRInstSpecialAccountAsync(string accountNo) {
            this.IsSRInstSpecialAccountAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void IsSRInstSpecialAccountAsync(string accountNo, object userState) {
            if ((this.IsSRInstSpecialAccountOperationCompleted == null)) {
                this.IsSRInstSpecialAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSRInstSpecialAccountOperationCompleted);
            }
            this.InvokeAsync("IsSRInstSpecialAccount", new object[] {
                        accountNo}, this.IsSRInstSpecialAccountOperationCompleted, userState);
        }
        
        private void OnIsSRInstSpecialAccountOperationCompleted(object arg) {
            if ((this.IsSRInstSpecialAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSRInstSpecialAccountCompleted(this, new IsSRInstSpecialAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsLatestAccountforCustomer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsLatestAccountforCustomer(string accountNo, string CustomerId, out string err) {
            object[] results = this.Invoke("IsLatestAccountforCustomer", new object[] {
                        accountNo,
                        CustomerId});
            err = ((string)(results[1]));
            return ((System.Nullable<bool>)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsLatestAccountforCustomer(string accountNo, string CustomerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsLatestAccountforCustomer", new object[] {
                        accountNo,
                        CustomerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Nullable<bool> EndIsLatestAccountforCustomer(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Nullable<bool>)(results[0]));
        }
        
        /// <remarks/>
        public void IsLatestAccountforCustomerAsync(string accountNo, string CustomerId) {
            this.IsLatestAccountforCustomerAsync(accountNo, CustomerId, null);
        }
        
        /// <remarks/>
        public void IsLatestAccountforCustomerAsync(string accountNo, string CustomerId, object userState) {
            if ((this.IsLatestAccountforCustomerOperationCompleted == null)) {
                this.IsLatestAccountforCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLatestAccountforCustomerOperationCompleted);
            }
            this.InvokeAsync("IsLatestAccountforCustomer", new object[] {
                        accountNo,
                        CustomerId}, this.IsLatestAccountforCustomerOperationCompleted, userState);
        }
        
        private void OnIsLatestAccountforCustomerOperationCompleted(object arg) {
            if ((this.IsLatestAccountforCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLatestAccountforCustomerCompleted(this, new IsLatestAccountforCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetReturnItemIDForItemCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReturnItemIDForItemCode(string itemNo, short stockLocn, out string err) {
            object[] results = this.Invoke("GetReturnItemIDForItemCode", new object[] {
                        itemNo,
                        stockLocn});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReturnItemIDForItemCode(string itemNo, short stockLocn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReturnItemIDForItemCode", new object[] {
                        itemNo,
                        stockLocn}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetReturnItemIDForItemCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReturnItemIDForItemCodeAsync(string itemNo, short stockLocn) {
            this.GetReturnItemIDForItemCodeAsync(itemNo, stockLocn, null);
        }
        
        /// <remarks/>
        public void GetReturnItemIDForItemCodeAsync(string itemNo, short stockLocn, object userState) {
            if ((this.GetReturnItemIDForItemCodeOperationCompleted == null)) {
                this.GetReturnItemIDForItemCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReturnItemIDForItemCodeOperationCompleted);
            }
            this.InvokeAsync("GetReturnItemIDForItemCode", new object[] {
                        itemNo,
                        stockLocn}, this.GetReturnItemIDForItemCodeOperationCompleted, userState);
        }
        
        private void OnGetReturnItemIDForItemCodeOperationCompleted(object arg) {
            if ((this.GetReturnItemIDForItemCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReturnItemIDForItemCodeCompleted(this, new GetReturnItemIDForItemCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalculateCashLoanTerms", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string CalculateCashLoanTerms(string countryCode, ref CashLoanDetails det, short branchNo, bool calledFromCashLoanPopulateScreen) {
            object[] results = this.Invoke("CalculateCashLoanTerms", new object[] {
                        countryCode,
                        det,
                        branchNo,
                        calledFromCashLoanPopulateScreen});
            det = ((CashLoanDetails)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateCashLoanTerms(string countryCode, CashLoanDetails det, short branchNo, bool calledFromCashLoanPopulateScreen, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateCashLoanTerms", new object[] {
                        countryCode,
                        det,
                        branchNo,
                        calledFromCashLoanPopulateScreen}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCalculateCashLoanTerms(System.IAsyncResult asyncResult, out CashLoanDetails det) {
            object[] results = this.EndInvoke(asyncResult);
            det = ((CashLoanDetails)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateCashLoanTermsAsync(string countryCode, CashLoanDetails det, short branchNo, bool calledFromCashLoanPopulateScreen) {
            this.CalculateCashLoanTermsAsync(countryCode, det, branchNo, calledFromCashLoanPopulateScreen, null);
        }
        
        /// <remarks/>
        public void CalculateCashLoanTermsAsync(string countryCode, CashLoanDetails det, short branchNo, bool calledFromCashLoanPopulateScreen, object userState) {
            if ((this.CalculateCashLoanTermsOperationCompleted == null)) {
                this.CalculateCashLoanTermsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateCashLoanTermsOperationCompleted);
            }
            this.InvokeAsync("CalculateCashLoanTerms", new object[] {
                        countryCode,
                        det,
                        branchNo,
                        calledFromCashLoanPopulateScreen}, this.CalculateCashLoanTermsOperationCompleted, userState);
        }
        
        private void OnCalculateCashLoanTermsOperationCompleted(object arg) {
            if ((this.CalculateCashLoanTermsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateCashLoanTermsCompleted(this, new CalculateCashLoanTermsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CashLoanDeliverAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string CashLoanDeliverAccount(ref CashLoanDetails det, short branchNo, CashLoanDisbursementDetails CashLoanDisbursementDet) {
            object[] results = this.Invoke("CashLoanDeliverAccount", new object[] {
                        det,
                        branchNo,
                        CashLoanDisbursementDet});
            det = ((CashLoanDetails)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCashLoanDeliverAccount(CashLoanDetails det, short branchNo, CashLoanDisbursementDetails CashLoanDisbursementDet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CashLoanDeliverAccount", new object[] {
                        det,
                        branchNo,
                        CashLoanDisbursementDet}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCashLoanDeliverAccount(System.IAsyncResult asyncResult, out CashLoanDetails det) {
            object[] results = this.EndInvoke(asyncResult);
            det = ((CashLoanDetails)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CashLoanDeliverAccountAsync(CashLoanDetails det, short branchNo, CashLoanDisbursementDetails CashLoanDisbursementDet) {
            this.CashLoanDeliverAccountAsync(det, branchNo, CashLoanDisbursementDet, null);
        }
        
        /// <remarks/>
        public void CashLoanDeliverAccountAsync(CashLoanDetails det, short branchNo, CashLoanDisbursementDetails CashLoanDisbursementDet, object userState) {
            if ((this.CashLoanDeliverAccountOperationCompleted == null)) {
                this.CashLoanDeliverAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCashLoanDeliverAccountOperationCompleted);
            }
            this.InvokeAsync("CashLoanDeliverAccount", new object[] {
                        det,
                        branchNo,
                        CashLoanDisbursementDet}, this.CashLoanDeliverAccountOperationCompleted, userState);
        }
        
        private void OnCashLoanDeliverAccountOperationCompleted(object arg) {
            if ((this.CashLoanDeliverAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CashLoanDeliverAccountCompleted(this, new CashLoanDeliverAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CashLoanPromissoryNoteStatus", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string CashLoanPromissoryNoteStatus(ref CashLoanDetails det) {
            object[] results = this.Invoke("CashLoanPromissoryNoteStatus", new object[] {
                        det});
            det = ((CashLoanDetails)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCashLoanPromissoryNoteStatus(CashLoanDetails det, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CashLoanPromissoryNoteStatus", new object[] {
                        det}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCashLoanPromissoryNoteStatus(System.IAsyncResult asyncResult, out CashLoanDetails det) {
            object[] results = this.EndInvoke(asyncResult);
            det = ((CashLoanDetails)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CashLoanPromissoryNoteStatusAsync(CashLoanDetails det) {
            this.CashLoanPromissoryNoteStatusAsync(det, null);
        }
        
        /// <remarks/>
        public void CashLoanPromissoryNoteStatusAsync(CashLoanDetails det, object userState) {
            if ((this.CashLoanPromissoryNoteStatusOperationCompleted == null)) {
                this.CashLoanPromissoryNoteStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCashLoanPromissoryNoteStatusOperationCompleted);
            }
            this.InvokeAsync("CashLoanPromissoryNoteStatus", new object[] {
                        det}, this.CashLoanPromissoryNoteStatusOperationCompleted, userState);
        }
        
        private void OnCashLoanPromissoryNoteStatusOperationCompleted(object arg) {
            if ((this.CashLoanPromissoryNoteStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CashLoanPromissoryNoteStatusCompleted(this, new CashLoanPromissoryNoteStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/PrintAuditCashAndGo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string PrintAuditCashAndGo(string acctno, int agrmtNo, int empeeno, string type, bool taxExempt, decimal change, int payMethod) {
            object[] results = this.Invoke("PrintAuditCashAndGo", new object[] {
                        acctno,
                        agrmtNo,
                        empeeno,
                        type,
                        taxExempt,
                        change,
                        payMethod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrintAuditCashAndGo(string acctno, int agrmtNo, int empeeno, string type, bool taxExempt, decimal change, int payMethod, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintAuditCashAndGo", new object[] {
                        acctno,
                        agrmtNo,
                        empeeno,
                        type,
                        taxExempt,
                        change,
                        payMethod}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPrintAuditCashAndGo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintAuditCashAndGoAsync(string acctno, int agrmtNo, int empeeno, string type, bool taxExempt, decimal change, int payMethod) {
            this.PrintAuditCashAndGoAsync(acctno, agrmtNo, empeeno, type, taxExempt, change, payMethod, null);
        }
        
        /// <remarks/>
        public void PrintAuditCashAndGoAsync(string acctno, int agrmtNo, int empeeno, string type, bool taxExempt, decimal change, int payMethod, object userState) {
            if ((this.PrintAuditCashAndGoOperationCompleted == null)) {
                this.PrintAuditCashAndGoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintAuditCashAndGoOperationCompleted);
            }
            this.InvokeAsync("PrintAuditCashAndGo", new object[] {
                        acctno,
                        agrmtNo,
                        empeeno,
                        type,
                        taxExempt,
                        change,
                        payMethod}, this.PrintAuditCashAndGoOperationCompleted, userState);
        }
        
        private void OnPrintAuditCashAndGoOperationCompleted(object arg) {
            if ((this.PrintAuditCashAndGoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintAuditCashAndGoCompleted(this, new PrintAuditCashAndGoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SubmitBookingFailure", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitBookingFailure(int failureId, int failedQty, int lineItemId, int retItemId, decimal retVal, int retStockLocn, int originalId, out string err) {
            object[] results = this.Invoke("SubmitBookingFailure", new object[] {
                        failureId,
                        failedQty,
                        lineItemId,
                        retItemId,
                        retVal,
                        retStockLocn,
                        originalId});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubmitBookingFailure(int failureId, int failedQty, int lineItemId, int retItemId, decimal retVal, int retStockLocn, int originalId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubmitBookingFailure", new object[] {
                        failureId,
                        failedQty,
                        lineItemId,
                        retItemId,
                        retVal,
                        retStockLocn,
                        originalId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSubmitBookingFailure(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBookingFailureAsync(int failureId, int failedQty, int lineItemId, int retItemId, decimal retVal, int retStockLocn, int originalId) {
            this.SubmitBookingFailureAsync(failureId, failedQty, lineItemId, retItemId, retVal, retStockLocn, originalId, null);
        }
        
        /// <remarks/>
        public void SubmitBookingFailureAsync(int failureId, int failedQty, int lineItemId, int retItemId, decimal retVal, int retStockLocn, int originalId, object userState) {
            if ((this.SubmitBookingFailureOperationCompleted == null)) {
                this.SubmitBookingFailureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBookingFailureOperationCompleted);
            }
            this.InvokeAsync("SubmitBookingFailure", new object[] {
                        failureId,
                        failedQty,
                        lineItemId,
                        retItemId,
                        retVal,
                        retStockLocn,
                        originalId}, this.SubmitBookingFailureOperationCompleted, userState);
        }
        
        private void OnSubmitBookingFailureOperationCompleted(object arg) {
            if ((this.SubmitBookingFailureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBookingFailureCompleted(this, new SubmitBookingFailureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CancelRedelivery", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string CancelRedelivery(int origBookingId, int bookingId) {
            object[] results = this.Invoke("CancelRedelivery", new object[] {
                        origBookingId,
                        bookingId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelRedelivery(int origBookingId, int bookingId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelRedelivery", new object[] {
                        origBookingId,
                        bookingId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCancelRedelivery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelRedeliveryAsync(int origBookingId, int bookingId) {
            this.CancelRedeliveryAsync(origBookingId, bookingId, null);
        }
        
        /// <remarks/>
        public void CancelRedeliveryAsync(int origBookingId, int bookingId, object userState) {
            if ((this.CancelRedeliveryOperationCompleted == null)) {
                this.CancelRedeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelRedeliveryOperationCompleted);
            }
            this.InvokeAsync("CancelRedelivery", new object[] {
                        origBookingId,
                        bookingId}, this.CancelRedeliveryOperationCompleted, userState);
        }
        
        private void OnCancelRedeliveryOperationCompleted(object arg) {
            if ((this.CancelRedeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelRedeliveryCompleted(this, new CancelRedeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/OnlineProductSearch", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OnlineProductSearch(OnlineProductSearchRequest r, out string err) {
            object[] results = this.Invoke("OnlineProductSearch", new object[] {
                        r});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOnlineProductSearch(OnlineProductSearchRequest r, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OnlineProductSearch", new object[] {
                        r}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndOnlineProductSearch(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OnlineProductSearchAsync(OnlineProductSearchRequest r) {
            this.OnlineProductSearchAsync(r, null);
        }
        
        /// <remarks/>
        public void OnlineProductSearchAsync(OnlineProductSearchRequest r, object userState) {
            if ((this.OnlineProductSearchOperationCompleted == null)) {
                this.OnlineProductSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnlineProductSearchOperationCompleted);
            }
            this.InvokeAsync("OnlineProductSearch", new object[] {
                        r}, this.OnlineProductSearchOperationCompleted, userState);
        }
        
        private void OnOnlineProductSearchOperationCompleted(object arg) {
            if ((this.OnlineProductSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnlineProductSearchCompleted(this, new OnlineProductSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ReviseBookingFailure", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReviseBookingFailure(int originalId, out string err) {
            object[] results = this.Invoke("ReviseBookingFailure", new object[] {
                        originalId});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReviseBookingFailure(int originalId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReviseBookingFailure", new object[] {
                        originalId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndReviseBookingFailure(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReviseBookingFailureAsync(int originalId) {
            this.ReviseBookingFailureAsync(originalId, null);
        }
        
        /// <remarks/>
        public void ReviseBookingFailureAsync(int originalId, object userState) {
            if ((this.ReviseBookingFailureOperationCompleted == null)) {
                this.ReviseBookingFailureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReviseBookingFailureOperationCompleted);
            }
            this.InvokeAsync("ReviseBookingFailure", new object[] {
                        originalId}, this.ReviseBookingFailureOperationCompleted, userState);
        }
        
        private void OnReviseBookingFailureOperationCompleted(object arg) {
            if ((this.ReviseBookingFailureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReviseBookingFailureCompleted(this, new ReviseBookingFailureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/InstantReplacementCollection", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InstantReplacementCollection(System.Xml.XmlNode replacementxml, string accountno, short branchno, string countrycode, out string err) {
            object[] results = this.Invoke("InstantReplacementCollection", new object[] {
                        replacementxml,
                        accountno,
                        branchno,
                        countrycode});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstantReplacementCollection(System.Xml.XmlNode replacementxml, string accountno, short branchno, string countrycode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstantReplacementCollection", new object[] {
                        replacementxml,
                        accountno,
                        branchno,
                        countrycode}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndInstantReplacementCollection(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InstantReplacementCollectionAsync(System.Xml.XmlNode replacementxml, string accountno, short branchno, string countrycode) {
            this.InstantReplacementCollectionAsync(replacementxml, accountno, branchno, countrycode, null);
        }
        
        /// <remarks/>
        public void InstantReplacementCollectionAsync(System.Xml.XmlNode replacementxml, string accountno, short branchno, string countrycode, object userState) {
            if ((this.InstantReplacementCollectionOperationCompleted == null)) {
                this.InstantReplacementCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstantReplacementCollectionOperationCompleted);
            }
            this.InvokeAsync("InstantReplacementCollection", new object[] {
                        replacementxml,
                        accountno,
                        branchno,
                        countrycode}, this.InstantReplacementCollectionOperationCompleted, userState);
        }
        
        private void OnInstantReplacementCollectionOperationCompleted(object arg) {
            if ((this.InstantReplacementCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstantReplacementCollectionCompleted(this, new InstantReplacementCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsReadyAssistContractDateSet", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsReadyAssistContractDateSet(string accountno, int agreementNo, out string err) {
            object[] results = this.Invoke("IsReadyAssistContractDateSet", new object[] {
                        accountno,
                        agreementNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsReadyAssistContractDateSet(string accountno, int agreementNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsReadyAssistContractDateSet", new object[] {
                        accountno,
                        agreementNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsReadyAssistContractDateSet(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsReadyAssistContractDateSetAsync(string accountno, int agreementNo) {
            this.IsReadyAssistContractDateSetAsync(accountno, agreementNo, null);
        }
        
        /// <remarks/>
        public void IsReadyAssistContractDateSetAsync(string accountno, int agreementNo, object userState) {
            if ((this.IsReadyAssistContractDateSetOperationCompleted == null)) {
                this.IsReadyAssistContractDateSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsReadyAssistContractDateSetOperationCompleted);
            }
            this.InvokeAsync("IsReadyAssistContractDateSet", new object[] {
                        accountno,
                        agreementNo}, this.IsReadyAssistContractDateSetOperationCompleted, userState);
        }
        
        private void OnIsReadyAssistContractDateSetOperationCompleted(object arg) {
            if ((this.IsReadyAssistContractDateSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsReadyAssistContractDateSetCompleted(this, new IsReadyAssistContractDateSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GeSalesCommissionDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesCommissionDetails GeSalesCommissionDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> branchNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> empeeNo, System.DateTime dateFrom, System.DateTime dateTo) {
            object[] results = this.Invoke("GeSalesCommissionDetails", new object[] {
                        branchNo,
                        empeeNo,
                        dateFrom,
                        dateTo});
            return ((SalesCommissionDetails)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGeSalesCommissionDetails(System.Nullable<int> branchNo, System.Nullable<int> empeeNo, System.DateTime dateFrom, System.DateTime dateTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GeSalesCommissionDetails", new object[] {
                        branchNo,
                        empeeNo,
                        dateFrom,
                        dateTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public SalesCommissionDetails EndGeSalesCommissionDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SalesCommissionDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GeSalesCommissionDetailsAsync(System.Nullable<int> branchNo, System.Nullable<int> empeeNo, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GeSalesCommissionDetailsAsync(branchNo, empeeNo, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GeSalesCommissionDetailsAsync(System.Nullable<int> branchNo, System.Nullable<int> empeeNo, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GeSalesCommissionDetailsOperationCompleted == null)) {
                this.GeSalesCommissionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeSalesCommissionDetailsOperationCompleted);
            }
            this.InvokeAsync("GeSalesCommissionDetails", new object[] {
                        branchNo,
                        empeeNo,
                        dateFrom,
                        dateTo}, this.GeSalesCommissionDetailsOperationCompleted, userState);
        }
        
        private void OnGeSalesCommissionDetailsOperationCompleted(object arg) {
            if ((this.GeSalesCommissionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeSalesCommissionDetailsCompleted(this, new GeSalesCommissionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBranchSalesCommissionDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesCommissionDetails GetBranchSalesCommissionDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> branchNo, System.DateTime dateFrom, System.DateTime dateTo) {
            object[] results = this.Invoke("GetBranchSalesCommissionDetails", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo});
            return ((SalesCommissionDetails)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBranchSalesCommissionDetails(System.Nullable<int> branchNo, System.DateTime dateFrom, System.DateTime dateTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBranchSalesCommissionDetails", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public SalesCommissionDetails EndGetBranchSalesCommissionDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SalesCommissionDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchSalesCommissionDetailsAsync(System.Nullable<int> branchNo, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetBranchSalesCommissionDetailsAsync(branchNo, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetBranchSalesCommissionDetailsAsync(System.Nullable<int> branchNo, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetBranchSalesCommissionDetailsOperationCompleted == null)) {
                this.GetBranchSalesCommissionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchSalesCommissionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBranchSalesCommissionDetails", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo}, this.GetBranchSalesCommissionDetailsOperationCompleted, userState);
        }
        
        private void OnGetBranchSalesCommissionDetailsOperationCompleted(object arg) {
            if ((this.GetBranchSalesCommissionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchSalesCommissionDetailsCompleted(this, new GetBranchSalesCommissionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashLoanDisbursementDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CashLoanDisbursementDetailsView GetCashLoanDisbursementDetails(string acctNo, out string err) {
            object[] results = this.Invoke("GetCashLoanDisbursementDetails", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((CashLoanDisbursementDetailsView)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashLoanDisbursementDetails(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashLoanDisbursementDetails", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public CashLoanDisbursementDetailsView EndGetCashLoanDisbursementDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((CashLoanDisbursementDetailsView)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashLoanDisbursementDetailsAsync(string acctNo) {
            this.GetCashLoanDisbursementDetailsAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetCashLoanDisbursementDetailsAsync(string acctNo, object userState) {
            if ((this.GetCashLoanDisbursementDetailsOperationCompleted == null)) {
                this.GetCashLoanDisbursementDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashLoanDisbursementDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCashLoanDisbursementDetails", new object[] {
                        acctNo}, this.GetCashLoanDisbursementDetailsOperationCompleted, userState);
        }
        
        private void OnGetCashLoanDisbursementDetailsOperationCompleted(object arg) {
            if ((this.GetCashLoanDisbursementDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashLoanDisbursementDetailsCompleted(this, new GetCashLoanDisbursementDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCashLoanDisbursementBankTransfer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string SaveCashLoanDisbursementBankTransfer(string acctNo, string bankTransRef, System.DateTime transferDate) {
            object[] results = this.Invoke("SaveCashLoanDisbursementBankTransfer", new object[] {
                        acctNo,
                        bankTransRef,
                        transferDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCashLoanDisbursementBankTransfer(string acctNo, string bankTransRef, System.DateTime transferDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCashLoanDisbursementBankTransfer", new object[] {
                        acctNo,
                        bankTransRef,
                        transferDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSaveCashLoanDisbursementBankTransfer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCashLoanDisbursementBankTransferAsync(string acctNo, string bankTransRef, System.DateTime transferDate) {
            this.SaveCashLoanDisbursementBankTransferAsync(acctNo, bankTransRef, transferDate, null);
        }
        
        /// <remarks/>
        public void SaveCashLoanDisbursementBankTransferAsync(string acctNo, string bankTransRef, System.DateTime transferDate, object userState) {
            if ((this.SaveCashLoanDisbursementBankTransferOperationCompleted == null)) {
                this.SaveCashLoanDisbursementBankTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCashLoanDisbursementBankTransferOperationCompleted);
            }
            this.InvokeAsync("SaveCashLoanDisbursementBankTransfer", new object[] {
                        acctNo,
                        bankTransRef,
                        transferDate}, this.SaveCashLoanDisbursementBankTransferOperationCompleted, userState);
        }
        
        private void OnSaveCashLoanDisbursementBankTransferOperationCompleted(object arg) {
            if ((this.SaveCashLoanDisbursementBankTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCashLoanDisbursementBankTransferCompleted(this, new SaveCashLoanDisbursementBankTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateCashLoanBankDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string UpdateCashLoanBankDetails(string custID, string acctNo, string Bank, string BankAccountType, string BankBranch, string BankAcctNo, string Notes, string BankReferenceNo, string BankAccountName) {
            object[] results = this.Invoke("UpdateCashLoanBankDetails", new object[] {
                        custID,
                        acctNo,
                        Bank,
                        BankAccountType,
                        BankBranch,
                        BankAcctNo,
                        Notes,
                        BankReferenceNo,
                        BankAccountName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCashLoanBankDetails(string custID, string acctNo, string Bank, string BankAccountType, string BankBranch, string BankAcctNo, string Notes, string BankReferenceNo, string BankAccountName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCashLoanBankDetails", new object[] {
                        custID,
                        acctNo,
                        Bank,
                        BankAccountType,
                        BankBranch,
                        BankAcctNo,
                        Notes,
                        BankReferenceNo,
                        BankAccountName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateCashLoanBankDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCashLoanBankDetailsAsync(string custID, string acctNo, string Bank, string BankAccountType, string BankBranch, string BankAcctNo, string Notes, string BankReferenceNo, string BankAccountName) {
            this.UpdateCashLoanBankDetailsAsync(custID, acctNo, Bank, BankAccountType, BankBranch, BankAcctNo, Notes, BankReferenceNo, BankAccountName, null);
        }
        
        /// <remarks/>
        public void UpdateCashLoanBankDetailsAsync(string custID, string acctNo, string Bank, string BankAccountType, string BankBranch, string BankAcctNo, string Notes, string BankReferenceNo, string BankAccountName, object userState) {
            if ((this.UpdateCashLoanBankDetailsOperationCompleted == null)) {
                this.UpdateCashLoanBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCashLoanBankDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCashLoanBankDetails", new object[] {
                        custID,
                        acctNo,
                        Bank,
                        BankAccountType,
                        BankBranch,
                        BankAcctNo,
                        Notes,
                        BankReferenceNo,
                        BankAccountName}, this.UpdateCashLoanBankDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCashLoanBankDetailsOperationCompleted(object arg) {
            if ((this.UpdateCashLoanBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCashLoanBankDetailsCompleted(this, new UpdateCashLoanBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsItemScheduled", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsItemScheduled(int lineItemId, out string err) {
            object[] results = this.Invoke("IsItemScheduled", new object[] {
                        lineItemId});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsItemScheduled(int lineItemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsItemScheduled", new object[] {
                        lineItemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsItemScheduled(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsItemScheduledAsync(int lineItemId) {
            this.IsItemScheduledAsync(lineItemId, null);
        }
        
        /// <remarks/>
        public void IsItemScheduledAsync(int lineItemId, object userState) {
            if ((this.IsItemScheduledOperationCompleted == null)) {
                this.IsItemScheduledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsItemScheduledOperationCompleted);
            }
            this.InvokeAsync("IsItemScheduled", new object[] {
                        lineItemId}, this.IsItemScheduledOperationCompleted, userState);
        }
        
        private void OnIsItemScheduledOperationCompleted(object arg) {
            if ((this.IsItemScheduledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsItemScheduledCompleted(this, new IsItemScheduledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDiscountDeliveryMonths", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDiscountDeliveryMonths(string custid, int itemId) {
            object[] results = this.Invoke("GetDiscountDeliveryMonths", new object[] {
                        custid,
                        itemId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDiscountDeliveryMonths(string custid, int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDiscountDeliveryMonths", new object[] {
                        custid,
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetDiscountDeliveryMonths(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiscountDeliveryMonthsAsync(string custid, int itemId) {
            this.GetDiscountDeliveryMonthsAsync(custid, itemId, null);
        }
        
        /// <remarks/>
        public void GetDiscountDeliveryMonthsAsync(string custid, int itemId, object userState) {
            if ((this.GetDiscountDeliveryMonthsOperationCompleted == null)) {
                this.GetDiscountDeliveryMonthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiscountDeliveryMonthsOperationCompleted);
            }
            this.InvokeAsync("GetDiscountDeliveryMonths", new object[] {
                        custid,
                        itemId}, this.GetDiscountDeliveryMonthsOperationCompleted, userState);
        }
        
        private void OnGetDiscountDeliveryMonthsOperationCompleted(object arg) {
            if ((this.GetDiscountDeliveryMonthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiscountDeliveryMonthsCompleted(this, new GetDiscountDeliveryMonthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/FormatWarrantyReturnCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FormatWarrantyReturnCode(string itemNo, System.DateTime deliveryDate, out string err) {
            object[] results = this.Invoke("FormatWarrantyReturnCode", new object[] {
                        itemNo,
                        deliveryDate});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFormatWarrantyReturnCode(string itemNo, System.DateTime deliveryDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FormatWarrantyReturnCode", new object[] {
                        itemNo,
                        deliveryDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndFormatWarrantyReturnCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FormatWarrantyReturnCodeAsync(string itemNo, System.DateTime deliveryDate) {
            this.FormatWarrantyReturnCodeAsync(itemNo, deliveryDate, null);
        }
        
        /// <remarks/>
        public void FormatWarrantyReturnCodeAsync(string itemNo, System.DateTime deliveryDate, object userState) {
            if ((this.FormatWarrantyReturnCodeOperationCompleted == null)) {
                this.FormatWarrantyReturnCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormatWarrantyReturnCodeOperationCompleted);
            }
            this.InvokeAsync("FormatWarrantyReturnCode", new object[] {
                        itemNo,
                        deliveryDate}, this.FormatWarrantyReturnCodeOperationCompleted, userState);
        }
        
        private void OnFormatWarrantyReturnCodeOperationCompleted(object arg) {
            if ((this.FormatWarrantyReturnCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormatWarrantyReturnCodeCompleted(this, new FormatWarrantyReturnCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAllocatedCourtsPerson", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllocatedCourtsPerson(string accountNo, ref int empNo, ref string empType, ref string empName, out string err) {
            object[] results = this.Invoke("GetAllocatedCourtsPerson", new object[] {
                        accountNo,
                        empNo,
                        empType,
                        empName});
            empNo = ((int)(results[1]));
            empType = ((string)(results[2]));
            empName = ((string)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllocatedCourtsPerson(string accountNo, int empNo, string empType, string empName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllocatedCourtsPerson", new object[] {
                        accountNo,
                        empNo,
                        empType,
                        empName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetAllocatedCourtsPerson(System.IAsyncResult asyncResult, out int empNo, out string empType, out string empName, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            empNo = ((int)(results[1]));
            empType = ((string)(results[2]));
            empName = ((string)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllocatedCourtsPersonAsync(string accountNo, int empNo, string empType, string empName) {
            this.GetAllocatedCourtsPersonAsync(accountNo, empNo, empType, empName, null);
        }
        
        /// <remarks/>
        public void GetAllocatedCourtsPersonAsync(string accountNo, int empNo, string empType, string empName, object userState) {
            if ((this.GetAllocatedCourtsPersonOperationCompleted == null)) {
                this.GetAllocatedCourtsPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllocatedCourtsPersonOperationCompleted);
            }
            this.InvokeAsync("GetAllocatedCourtsPerson", new object[] {
                        accountNo,
                        empNo,
                        empType,
                        empName}, this.GetAllocatedCourtsPersonOperationCompleted, userState);
        }
        
        private void OnGetAllocatedCourtsPersonOperationCompleted(object arg) {
            if ((this.GetAllocatedCourtsPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllocatedCourtsPersonCompleted(this, new GetAllocatedCourtsPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckAccountToCancel", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckAccountToCancel(string accountNo, string countryCode, ref decimal outstBalance, ref bool outstPayments, out string err) {
            object[] results = this.Invoke("CheckAccountToCancel", new object[] {
                        accountNo,
                        countryCode,
                        outstBalance,
                        outstPayments});
            outstBalance = ((decimal)(results[1]));
            outstPayments = ((bool)(results[2]));
            err = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckAccountToCancel(string accountNo, string countryCode, decimal outstBalance, bool outstPayments, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckAccountToCancel", new object[] {
                        accountNo,
                        countryCode,
                        outstBalance,
                        outstPayments}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCheckAccountToCancel(System.IAsyncResult asyncResult, out decimal outstBalance, out bool outstPayments, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            outstBalance = ((decimal)(results[1]));
            outstPayments = ((bool)(results[2]));
            err = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAccountToCancelAsync(string accountNo, string countryCode, decimal outstBalance, bool outstPayments) {
            this.CheckAccountToCancelAsync(accountNo, countryCode, outstBalance, outstPayments, null);
        }
        
        /// <remarks/>
        public void CheckAccountToCancelAsync(string accountNo, string countryCode, decimal outstBalance, bool outstPayments, object userState) {
            if ((this.CheckAccountToCancelOperationCompleted == null)) {
                this.CheckAccountToCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAccountToCancelOperationCompleted);
            }
            this.InvokeAsync("CheckAccountToCancel", new object[] {
                        accountNo,
                        countryCode,
                        outstBalance,
                        outstPayments}, this.CheckAccountToCancelOperationCompleted, userState);
        }
        
        private void OnCheckAccountToCancelOperationCompleted(object arg) {
            if ((this.CheckAccountToCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAccountToCancelCompleted(this, new CheckAccountToCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetScheduledForAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScheduledForAccount(string acctno, bool deleteDelLoad, out string err) {
            object[] results = this.Invoke("GetScheduledForAccount", new object[] {
                        acctno,
                        deleteDelLoad});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScheduledForAccount(string acctno, bool deleteDelLoad, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScheduledForAccount", new object[] {
                        acctno,
                        deleteDelLoad}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetScheduledForAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduledForAccountAsync(string acctno, bool deleteDelLoad) {
            this.GetScheduledForAccountAsync(acctno, deleteDelLoad, null);
        }
        
        /// <remarks/>
        public void GetScheduledForAccountAsync(string acctno, bool deleteDelLoad, object userState) {
            if ((this.GetScheduledForAccountOperationCompleted == null)) {
                this.GetScheduledForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduledForAccountOperationCompleted);
            }
            this.InvokeAsync("GetScheduledForAccount", new object[] {
                        acctno,
                        deleteDelLoad}, this.GetScheduledForAccountOperationCompleted, userState);
        }
        
        private void OnGetScheduledForAccountOperationCompleted(object arg) {
            if ((this.GetScheduledForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduledForAccountCompleted(this, new GetScheduledForAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTranstypeByCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTranstypeByCode(string transTypeCode, out string err) {
            object[] results = this.Invoke("GetTranstypeByCode", new object[] {
                        transTypeCode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTranstypeByCode(string transTypeCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTranstypeByCode", new object[] {
                        transTypeCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTranstypeByCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTranstypeByCodeAsync(string transTypeCode) {
            this.GetTranstypeByCodeAsync(transTypeCode, null);
        }
        
        /// <remarks/>
        public void GetTranstypeByCodeAsync(string transTypeCode, object userState) {
            if ((this.GetTranstypeByCodeOperationCompleted == null)) {
                this.GetTranstypeByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTranstypeByCodeOperationCompleted);
            }
            this.InvokeAsync("GetTranstypeByCode", new object[] {
                        transTypeCode}, this.GetTranstypeByCodeOperationCompleted, userState);
        }
        
        private void OnGetTranstypeByCodeOperationCompleted(object arg) {
            if ((this.GetTranstypeByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTranstypeByCodeCompleted(this, new GetTranstypeByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveTransType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveTransType(string transTypeCode, string description, short includeINGFT, string intfaceSecAccount, string intfaceAccount, short branchSplit, short isDeposit, string intfaceBalancing, short isMandatory, short isUnique, string intfaceSecBalancing, short branchSplitBalancing, string scInterfaceAccount, string scInterfaceBalancing, out string err) {
            object[] results = this.Invoke("SaveTransType", new object[] {
                        transTypeCode,
                        description,
                        includeINGFT,
                        intfaceSecAccount,
                        intfaceAccount,
                        branchSplit,
                        isDeposit,
                        intfaceBalancing,
                        isMandatory,
                        isUnique,
                        intfaceSecBalancing,
                        branchSplitBalancing,
                        scInterfaceAccount,
                        scInterfaceBalancing});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveTransType(
                    string transTypeCode, 
                    string description, 
                    short includeINGFT, 
                    string intfaceSecAccount, 
                    string intfaceAccount, 
                    short branchSplit, 
                    short isDeposit, 
                    string intfaceBalancing, 
                    short isMandatory, 
                    short isUnique, 
                    string intfaceSecBalancing, 
                    short branchSplitBalancing, 
                    string scInterfaceAccount, 
                    string scInterfaceBalancing, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("SaveTransType", new object[] {
                        transTypeCode,
                        description,
                        includeINGFT,
                        intfaceSecAccount,
                        intfaceAccount,
                        branchSplit,
                        isDeposit,
                        intfaceBalancing,
                        isMandatory,
                        isUnique,
                        intfaceSecBalancing,
                        branchSplitBalancing,
                        scInterfaceAccount,
                        scInterfaceBalancing}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveTransType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTransTypeAsync(string transTypeCode, string description, short includeINGFT, string intfaceSecAccount, string intfaceAccount, short branchSplit, short isDeposit, string intfaceBalancing, short isMandatory, short isUnique, string intfaceSecBalancing, short branchSplitBalancing, string scInterfaceAccount, string scInterfaceBalancing) {
            this.SaveTransTypeAsync(transTypeCode, description, includeINGFT, intfaceSecAccount, intfaceAccount, branchSplit, isDeposit, intfaceBalancing, isMandatory, isUnique, intfaceSecBalancing, branchSplitBalancing, scInterfaceAccount, scInterfaceBalancing, null);
        }
        
        /// <remarks/>
        public void SaveTransTypeAsync(string transTypeCode, string description, short includeINGFT, string intfaceSecAccount, string intfaceAccount, short branchSplit, short isDeposit, string intfaceBalancing, short isMandatory, short isUnique, string intfaceSecBalancing, short branchSplitBalancing, string scInterfaceAccount, string scInterfaceBalancing, object userState) {
            if ((this.SaveTransTypeOperationCompleted == null)) {
                this.SaveTransTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTransTypeOperationCompleted);
            }
            this.InvokeAsync("SaveTransType", new object[] {
                        transTypeCode,
                        description,
                        includeINGFT,
                        intfaceSecAccount,
                        intfaceAccount,
                        branchSplit,
                        isDeposit,
                        intfaceBalancing,
                        isMandatory,
                        isUnique,
                        intfaceSecBalancing,
                        branchSplitBalancing,
                        scInterfaceAccount,
                        scInterfaceBalancing}, this.SaveTransTypeOperationCompleted, userState);
        }
        
        private void OnSaveTransTypeOperationCompleted(object arg) {
            if ((this.SaveTransTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTransTypeCompleted(this, new SaveTransTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateStatus", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateStatus(string accountNo, string status, out string err) {
            object[] results = this.Invoke("UpdateStatus", new object[] {
                        accountNo,
                        status});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateStatus(string accountNo, string status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateStatus", new object[] {
                        accountNo,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateStatus(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(string accountNo, string status) {
            this.UpdateStatusAsync(accountNo, status, null);
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(string accountNo, string status, object userState) {
            if ((this.UpdateStatusOperationCompleted == null)) {
                this.UpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateStatus", new object[] {
                        accountNo,
                        status}, this.UpdateStatusOperationCompleted, userState);
        }
        
        private void OnUpdateStatusOperationCompleted(object arg) {
            if ((this.UpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusCompleted(this, new UpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStatusForAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStatusForAccount(string accountNo, out string err) {
            object[] results = this.Invoke("GetStatusForAccount", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStatusForAccount(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStatusForAccount", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStatusForAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusForAccountAsync(string accountNo) {
            this.GetStatusForAccountAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetStatusForAccountAsync(string accountNo, object userState) {
            if ((this.GetStatusForAccountOperationCompleted == null)) {
                this.GetStatusForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusForAccountOperationCompleted);
            }
            this.InvokeAsync("GetStatusForAccount", new object[] {
                        accountNo}, this.GetStatusForAccountOperationCompleted, userState);
        }
        
        private void OnGetStatusForAccountOperationCompleted(object arg) {
            if ((this.GetStatusForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusForAccountCompleted(this, new GetStatusForAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetForWOReview", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetForWOReview(string code, string branchFilter, int excludeAccepted, int limit, string category, out string err) {
            object[] results = this.Invoke("GetForWOReview", new object[] {
                        code,
                        branchFilter,
                        excludeAccepted,
                        limit,
                        category});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetForWOReview(string code, string branchFilter, int excludeAccepted, int limit, string category, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetForWOReview", new object[] {
                        code,
                        branchFilter,
                        excludeAccepted,
                        limit,
                        category}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetForWOReview(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetForWOReviewAsync(string code, string branchFilter, int excludeAccepted, int limit, string category) {
            this.GetForWOReviewAsync(code, branchFilter, excludeAccepted, limit, category, null);
        }
        
        /// <remarks/>
        public void GetForWOReviewAsync(string code, string branchFilter, int excludeAccepted, int limit, string category, object userState) {
            if ((this.GetForWOReviewOperationCompleted == null)) {
                this.GetForWOReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForWOReviewOperationCompleted);
            }
            this.InvokeAsync("GetForWOReview", new object[] {
                        code,
                        branchFilter,
                        excludeAccepted,
                        limit,
                        category}, this.GetForWOReviewOperationCompleted, userState);
        }
        
        private void OnGetForWOReviewOperationCompleted(object arg) {
            if ((this.GetForWOReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForWOReviewCompleted(this, new GetForWOReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AcceptForWO", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AcceptForWO(string accountNo, out int accepted, out string err) {
            object[] results = this.Invoke("AcceptForWO", new object[] {
                        accountNo});
            accepted = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAcceptForWO(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AcceptForWO", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAcceptForWO(System.IAsyncResult asyncResult, out int accepted, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            accepted = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptForWOAsync(string accountNo) {
            this.AcceptForWOAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void AcceptForWOAsync(string accountNo, object userState) {
            if ((this.AcceptForWOOperationCompleted == null)) {
                this.AcceptForWOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptForWOOperationCompleted);
            }
            this.InvokeAsync("AcceptForWO", new object[] {
                        accountNo}, this.AcceptForWOOperationCompleted, userState);
        }
        
        private void OnAcceptForWOOperationCompleted(object arg) {
            if ((this.AcceptForWOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptForWOCompleted(this, new AcceptForWOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SavePending", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SavePending(string acctNo, int user, string code, int runno, int manualUser, out string err) {
            object[] results = this.Invoke("SavePending", new object[] {
                        acctNo,
                        user,
                        code,
                        runno,
                        manualUser});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSavePending(string acctNo, int user, string code, int runno, int manualUser, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SavePending", new object[] {
                        acctNo,
                        user,
                        code,
                        runno,
                        manualUser}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSavePending(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SavePendingAsync(string acctNo, int user, string code, int runno, int manualUser) {
            this.SavePendingAsync(acctNo, user, code, runno, manualUser, null);
        }
        
        /// <remarks/>
        public void SavePendingAsync(string acctNo, int user, string code, int runno, int manualUser, object userState) {
            if ((this.SavePendingOperationCompleted == null)) {
                this.SavePendingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePendingOperationCompleted);
            }
            this.InvokeAsync("SavePending", new object[] {
                        acctNo,
                        user,
                        code,
                        runno,
                        manualUser}, this.SavePendingOperationCompleted, userState);
        }
        
        private void OnSavePendingOperationCompleted(object arg) {
            if ((this.SavePendingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePendingCompleted(this, new SavePendingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveRejection", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveRejection(string acctNo, string rejectcode, out string err) {
            object[] results = this.Invoke("SaveRejection", new object[] {
                        acctNo,
                        rejectcode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveRejection(string acctNo, string rejectcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveRejection", new object[] {
                        acctNo,
                        rejectcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveRejection(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRejectionAsync(string acctNo, string rejectcode) {
            this.SaveRejectionAsync(acctNo, rejectcode, null);
        }
        
        /// <remarks/>
        public void SaveRejectionAsync(string acctNo, string rejectcode, object userState) {
            if ((this.SaveRejectionOperationCompleted == null)) {
                this.SaveRejectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRejectionOperationCompleted);
            }
            this.InvokeAsync("SaveRejection", new object[] {
                        acctNo,
                        rejectcode}, this.SaveRejectionOperationCompleted, userState);
        }
        
        private void OnSaveRejectionOperationCompleted(object arg) {
            if ((this.SaveRejectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRejectionCompleted(this, new SaveRejectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTransactionsForTransfer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransactionsForTransfer(string acctno, System.DateTime beforeDate, bool limitRows, out decimal availableTransfer, out string err) {
            object[] results = this.Invoke("GetTransactionsForTransfer", new object[] {
                        acctno,
                        beforeDate,
                        limitRows});
            availableTransfer = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransactionsForTransfer(string acctno, System.DateTime beforeDate, bool limitRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransactionsForTransfer", new object[] {
                        acctno,
                        beforeDate,
                        limitRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransactionsForTransfer(System.IAsyncResult asyncResult, out decimal availableTransfer, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            availableTransfer = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsForTransferAsync(string acctno, System.DateTime beforeDate, bool limitRows) {
            this.GetTransactionsForTransferAsync(acctno, beforeDate, limitRows, null);
        }
        
        /// <remarks/>
        public void GetTransactionsForTransferAsync(string acctno, System.DateTime beforeDate, bool limitRows, object userState) {
            if ((this.GetTransactionsForTransferOperationCompleted == null)) {
                this.GetTransactionsForTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsForTransferOperationCompleted);
            }
            this.InvokeAsync("GetTransactionsForTransfer", new object[] {
                        acctno,
                        beforeDate,
                        limitRows}, this.GetTransactionsForTransferOperationCompleted, userState);
        }
        
        private void OnGetTransactionsForTransferOperationCompleted(object arg) {
            if ((this.GetTransactionsForTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsForTransferCompleted(this, new GetTransactionsForTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSundryCreditAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSundryCreditAccount(short branchNo, out string err) {
            object[] results = this.Invoke("GetSundryCreditAccount", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSundryCreditAccount(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSundryCreditAccount", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetSundryCreditAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSundryCreditAccountAsync(short branchNo) {
            this.GetSundryCreditAccountAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetSundryCreditAccountAsync(short branchNo, object userState) {
            if ((this.GetSundryCreditAccountOperationCompleted == null)) {
                this.GetSundryCreditAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSundryCreditAccountOperationCompleted);
            }
            this.InvokeAsync("GetSundryCreditAccount", new object[] {
                        branchNo}, this.GetSundryCreditAccountOperationCompleted, userState);
        }
        
        private void OnGetSundryCreditAccountOperationCompleted(object arg) {
            if ((this.GetSundryCreditAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSundryCreditAccountCompleted(this, new GetSundryCreditAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TransferTransaction", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferTransaction(string fromAccountNo, string toAccountNo, string transType, decimal transValue, short branchNo, string countryCode, System.DateTime dateTrans, string reasonCode, int oldRefNo, int agrmtNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> storeCardNo, string cashierTotID, out string err) {
            object[] results = this.Invoke("TransferTransaction", new object[] {
                        fromAccountNo,
                        toAccountNo,
                        transType,
                        transValue,
                        branchNo,
                        countryCode,
                        dateTrans,
                        reasonCode,
                        oldRefNo,
                        agrmtNo,
                        storeCardNo,
                        cashierTotID});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTransferTransaction(string fromAccountNo, string toAccountNo, string transType, decimal transValue, short branchNo, string countryCode, System.DateTime dateTrans, string reasonCode, int oldRefNo, int agrmtNo, System.Nullable<long> storeCardNo, string cashierTotID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TransferTransaction", new object[] {
                        fromAccountNo,
                        toAccountNo,
                        transType,
                        transValue,
                        branchNo,
                        countryCode,
                        dateTrans,
                        reasonCode,
                        oldRefNo,
                        agrmtNo,
                        storeCardNo,
                        cashierTotID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndTransferTransaction(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferTransactionAsync(string fromAccountNo, string toAccountNo, string transType, decimal transValue, short branchNo, string countryCode, System.DateTime dateTrans, string reasonCode, int oldRefNo, int agrmtNo, System.Nullable<long> storeCardNo, string cashierTotID) {
            this.TransferTransactionAsync(fromAccountNo, toAccountNo, transType, transValue, branchNo, countryCode, dateTrans, reasonCode, oldRefNo, agrmtNo, storeCardNo, cashierTotID, null);
        }
        
        /// <remarks/>
        public void TransferTransactionAsync(string fromAccountNo, string toAccountNo, string transType, decimal transValue, short branchNo, string countryCode, System.DateTime dateTrans, string reasonCode, int oldRefNo, int agrmtNo, System.Nullable<long> storeCardNo, string cashierTotID, object userState) {
            if ((this.TransferTransactionOperationCompleted == null)) {
                this.TransferTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferTransactionOperationCompleted);
            }
            this.InvokeAsync("TransferTransaction", new object[] {
                        fromAccountNo,
                        toAccountNo,
                        transType,
                        transValue,
                        branchNo,
                        countryCode,
                        dateTrans,
                        reasonCode,
                        oldRefNo,
                        agrmtNo,
                        storeCardNo,
                        cashierTotID}, this.TransferTransactionOperationCompleted, userState);
        }
        
        private void OnTransferTransactionOperationCompleted(object arg) {
            if ((this.TransferTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferTransactionCompleted(this, new TransferTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSundryAccountTransactionTotal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSundryAccountTransactionTotal(int branchno, System.DateTime before, out decimal total, out string err) {
            object[] results = this.Invoke("GetSundryAccountTransactionTotal", new object[] {
                        branchno,
                        before});
            total = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSundryAccountTransactionTotal(int branchno, System.DateTime before, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSundryAccountTransactionTotal", new object[] {
                        branchno,
                        before}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetSundryAccountTransactionTotal(System.IAsyncResult asyncResult, out decimal total, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            total = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSundryAccountTransactionTotalAsync(int branchno, System.DateTime before) {
            this.GetSundryAccountTransactionTotalAsync(branchno, before, null);
        }
        
        /// <remarks/>
        public void GetSundryAccountTransactionTotalAsync(int branchno, System.DateTime before, object userState) {
            if ((this.GetSundryAccountTransactionTotalOperationCompleted == null)) {
                this.GetSundryAccountTransactionTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSundryAccountTransactionTotalOperationCompleted);
            }
            this.InvokeAsync("GetSundryAccountTransactionTotal", new object[] {
                        branchno,
                        before}, this.GetSundryAccountTransactionTotalOperationCompleted, userState);
        }
        
        private void OnGetSundryAccountTransactionTotalOperationCompleted(object arg) {
            if ((this.GetSundryAccountTransactionTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSundryAccountTransactionTotalCompleted(this, new GetSundryAccountTransactionTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CanReverseOverage", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanReverseOverage(int empeeno, decimal overage, out string err) {
            object[] results = this.Invoke("CanReverseOverage", new object[] {
                        empeeno,
                        overage});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCanReverseOverage(int empeeno, decimal overage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CanReverseOverage", new object[] {
                        empeeno,
                        overage}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCanReverseOverage(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanReverseOverageAsync(int empeeno, decimal overage) {
            this.CanReverseOverageAsync(empeeno, overage, null);
        }
        
        /// <remarks/>
        public void CanReverseOverageAsync(int empeeno, decimal overage, object userState) {
            if ((this.CanReverseOverageOperationCompleted == null)) {
                this.CanReverseOverageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanReverseOverageOperationCompleted);
            }
            this.InvokeAsync("CanReverseOverage", new object[] {
                        empeeno,
                        overage}, this.CanReverseOverageOperationCompleted, userState);
        }
        
        private void OnCanReverseOverageOperationCompleted(object arg) {
            if ((this.CanReverseOverageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanReverseOverageCompleted(this, new CanReverseOverageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetOveragesAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOveragesAccount(short branchno, out string err) {
            object[] results = this.Invoke("GetOveragesAccount", new object[] {
                        branchno});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOveragesAccount(short branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOveragesAccount", new object[] {
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetOveragesAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOveragesAccountAsync(short branchno) {
            this.GetOveragesAccountAsync(branchno, null);
        }
        
        /// <remarks/>
        public void GetOveragesAccountAsync(short branchno, object userState) {
            if ((this.GetOveragesAccountOperationCompleted == null)) {
                this.GetOveragesAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOveragesAccountOperationCompleted);
            }
            this.InvokeAsync("GetOveragesAccount", new object[] {
                        branchno}, this.GetOveragesAccountOperationCompleted, userState);
        }
        
        private void OnGetOveragesAccountOperationCompleted(object arg) {
            if ((this.GetOveragesAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOveragesAccountCompleted(this, new GetOveragesAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetReceivableAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReceivableAccount(int empeeno, out string err) {
            object[] results = this.Invoke("GetReceivableAccount", new object[] {
                        empeeno});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReceivableAccount(int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReceivableAccount", new object[] {
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetReceivableAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceivableAccountAsync(int empeeno) {
            this.GetReceivableAccountAsync(empeeno, null);
        }
        
        /// <remarks/>
        public void GetReceivableAccountAsync(int empeeno, object userState) {
            if ((this.GetReceivableAccountOperationCompleted == null)) {
                this.GetReceivableAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceivableAccountOperationCompleted);
            }
            this.InvokeAsync("GetReceivableAccount", new object[] {
                        empeeno}, this.GetReceivableAccountOperationCompleted, userState);
        }
        
        private void OnGetReceivableAccountOperationCompleted(object arg) {
            if ((this.GetReceivableAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceivableAccountCompleted(this, new GetReceivableAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDefaultTermsType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDefaultTermsType(bool isLoan, out string err) {
            object[] results = this.Invoke("GetDefaultTermsType", new object[] {
                        isLoan});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultTermsType(bool isLoan, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultTermsType", new object[] {
                        isLoan}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDefaultTermsType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultTermsTypeAsync(bool isLoan) {
            this.GetDefaultTermsTypeAsync(isLoan, null);
        }
        
        /// <remarks/>
        public void GetDefaultTermsTypeAsync(bool isLoan, object userState) {
            if ((this.GetDefaultTermsTypeOperationCompleted == null)) {
                this.GetDefaultTermsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultTermsTypeOperationCompleted);
            }
            this.InvokeAsync("GetDefaultTermsType", new object[] {
                        isLoan}, this.GetDefaultTermsTypeOperationCompleted, userState);
        }
        
        private void OnGetDefaultTermsTypeOperationCompleted(object arg) {
            if ((this.GetDefaultTermsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultTermsTypeCompleted(this, new GetDefaultTermsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRebatesTotal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRebatesTotal(int branchNo, out string err) {
            object[] results = this.Invoke("GetRebatesTotal", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRebatesTotal(int branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRebatesTotal", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRebatesTotal(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRebatesTotalAsync(int branchNo) {
            this.GetRebatesTotalAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetRebatesTotalAsync(int branchNo, object userState) {
            if ((this.GetRebatesTotalOperationCompleted == null)) {
                this.GetRebatesTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRebatesTotalOperationCompleted);
            }
            this.InvokeAsync("GetRebatesTotal", new object[] {
                        branchNo}, this.GetRebatesTotalOperationCompleted, userState);
        }
        
        private void OnGetRebatesTotalOperationCompleted(object arg) {
            if ((this.GetRebatesTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRebatesTotalCompleted(this, new GetRebatesTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRebatesAsAt", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetRebatesAsAt(out string err) {
            object[] results = this.Invoke("GetRebatesAsAt", new object[0]);
            err = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRebatesAsAt(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRebatesAsAt", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetRebatesAsAt(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetRebatesAsAtAsync() {
            this.GetRebatesAsAtAsync(null);
        }
        
        /// <remarks/>
        public void GetRebatesAsAtAsync(object userState) {
            if ((this.GetRebatesAsAtOperationCompleted == null)) {
                this.GetRebatesAsAtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRebatesAsAtOperationCompleted);
            }
            this.InvokeAsync("GetRebatesAsAt", new object[0], this.GetRebatesAsAtOperationCompleted, userState);
        }
        
        private void OnGetRebatesAsAtOperationCompleted(object arg) {
            if ((this.GetRebatesAsAtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRebatesAsAtCompleted(this, new GetRebatesAsAtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountStatuses", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAccountStatuses(string[] accounts, out string err) {
            object[] results = this.Invoke("GetAccountStatuses", new object[] {
                        accounts});
            err = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountStatuses(string[] accounts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountStatuses", new object[] {
                        accounts}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetAccountStatuses(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatusesAsync(string[] accounts) {
            this.GetAccountStatusesAsync(accounts, null);
        }
        
        /// <remarks/>
        public void GetAccountStatusesAsync(string[] accounts, object userState) {
            if ((this.GetAccountStatusesOperationCompleted == null)) {
                this.GetAccountStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatusesOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatuses", new object[] {
                        accounts}, this.GetAccountStatusesOperationCompleted, userState);
        }
        
        private void OnGetAccountStatusesOperationCompleted(object arg) {
            if ((this.GetAccountStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatusesCompleted(this, new GetAccountStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetInstalmentAccounts", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInstalmentAccounts(string acctno, out string err) {
            object[] results = this.Invoke("GetInstalmentAccounts", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInstalmentAccounts(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInstalmentAccounts", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInstalmentAccounts(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstalmentAccountsAsync(string acctno) {
            this.GetInstalmentAccountsAsync(acctno, null);
        }
        
        /// <remarks/>
        public void GetInstalmentAccountsAsync(string acctno, object userState) {
            if ((this.GetInstalmentAccountsOperationCompleted == null)) {
                this.GetInstalmentAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstalmentAccountsOperationCompleted);
            }
            this.InvokeAsync("GetInstalmentAccounts", new object[] {
                        acctno}, this.GetInstalmentAccountsOperationCompleted, userState);
        }
        
        private void OnGetInstalmentAccountsOperationCompleted(object arg) {
            if ((this.GetInstalmentAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstalmentAccountsCompleted(this, new GetInstalmentAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateDateFirst", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDateFirst(System.Data.DataSet ds, out string err) {
            object[] results = this.Invoke("UpdateDateFirst", new object[] {
                        ds});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDateFirst(System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDateFirst", new object[] {
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateDateFirst(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDateFirstAsync(System.Data.DataSet ds) {
            this.UpdateDateFirstAsync(ds, null);
        }
        
        /// <remarks/>
        public void UpdateDateFirstAsync(System.Data.DataSet ds, object userState) {
            if ((this.UpdateDateFirstOperationCompleted == null)) {
                this.UpdateDateFirstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDateFirstOperationCompleted);
            }
            this.InvokeAsync("UpdateDateFirst", new object[] {
                        ds}, this.UpdateDateFirstOperationCompleted, userState);
        }
        
        private void OnUpdateDateFirstOperationCompleted(object arg) {
            if ((this.UpdateDateFirstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDateFirstCompleted(this, new UpdateDateFirstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsItemInstantReplacement", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IsItemInstantReplacement(int itemId, short branchNo, out bool ir, out string err) {
            object[] results = this.Invoke("IsItemInstantReplacement", new object[] {
                        itemId,
                        branchNo});
            ir = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsItemInstantReplacement(int itemId, short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsItemInstantReplacement", new object[] {
                        itemId,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndIsItemInstantReplacement(System.IAsyncResult asyncResult, out bool ir, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            ir = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IsItemInstantReplacementAsync(int itemId, short branchNo) {
            this.IsItemInstantReplacementAsync(itemId, branchNo, null);
        }
        
        /// <remarks/>
        public void IsItemInstantReplacementAsync(int itemId, short branchNo, object userState) {
            if ((this.IsItemInstantReplacementOperationCompleted == null)) {
                this.IsItemInstantReplacementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsItemInstantReplacementOperationCompleted);
            }
            this.InvokeAsync("IsItemInstantReplacement", new object[] {
                        itemId,
                        branchNo}, this.IsItemInstantReplacementOperationCompleted, userState);
        }
        
        private void OnIsItemInstantReplacementOperationCompleted(object arg) {
            if ((this.IsItemInstantReplacementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsItemInstantReplacementCompleted(this, new IsItemInstantReplacementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountAuditData", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountAuditData(string accountNo, out string err) {
            object[] results = this.Invoke("GetAccountAuditData", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountAuditData(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountAuditData", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAccountAuditData(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountAuditDataAsync(string accountNo) {
            this.GetAccountAuditDataAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetAccountAuditDataAsync(string accountNo, object userState) {
            if ((this.GetAccountAuditDataOperationCompleted == null)) {
                this.GetAccountAuditDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountAuditDataOperationCompleted);
            }
            this.InvokeAsync("GetAccountAuditData", new object[] {
                        accountNo}, this.GetAccountAuditDataOperationCompleted, userState);
        }
        
        private void OnGetAccountAuditDataOperationCompleted(object arg) {
            if ((this.GetAccountAuditDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountAuditDataCompleted(this, new GetAccountAuditDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsRepossessed", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsRepossessed(string accountNo, out string err) {
            object[] results = this.Invoke("IsRepossessed", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsRepossessed(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsRepossessed", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsRepossessed(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsRepossessedAsync(string accountNo) {
            this.IsRepossessedAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void IsRepossessedAsync(string accountNo, object userState) {
            if ((this.IsRepossessedOperationCompleted == null)) {
                this.IsRepossessedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRepossessedOperationCompleted);
            }
            this.InvokeAsync("IsRepossessed", new object[] {
                        accountNo}, this.IsRepossessedOperationCompleted, userState);
        }
        
        private void OnIsRepossessedOperationCompleted(object arg) {
            if ((this.IsRepossessedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRepossessedCompleted(this, new IsRepossessedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CreateManualAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateManualAccount(string countryCode, short branchNo, string customerID, string acctNo, string accountType, bool isLoan, out bool rescore, out string err) {
            object[] results = this.Invoke("CreateManualAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        acctNo,
                        accountType,
                        isLoan});
            rescore = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateManualAccount(string countryCode, short branchNo, string customerID, string acctNo, string accountType, bool isLoan, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateManualAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        acctNo,
                        accountType,
                        isLoan}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateManualAccount(System.IAsyncResult asyncResult, out bool rescore, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            rescore = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateManualAccountAsync(string countryCode, short branchNo, string customerID, string acctNo, string accountType, bool isLoan) {
            this.CreateManualAccountAsync(countryCode, branchNo, customerID, acctNo, accountType, isLoan, null);
        }
        
        /// <remarks/>
        public void CreateManualAccountAsync(string countryCode, short branchNo, string customerID, string acctNo, string accountType, bool isLoan, object userState) {
            if ((this.CreateManualAccountOperationCompleted == null)) {
                this.CreateManualAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateManualAccountOperationCompleted);
            }
            this.InvokeAsync("CreateManualAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        acctNo,
                        accountType,
                        isLoan}, this.CreateManualAccountOperationCompleted, userState);
        }
        
        private void OnCreateManualAccountOperationCompleted(object arg) {
            if ((this.CreateManualAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateManualAccountCompleted(this, new CreateManualAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CreateManualRFAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateManualRFAccount(string countryCode, short branchNo, string customerID, string acctNo, bool isLoan, out bool rescore, out string err) {
            object[] results = this.Invoke("CreateManualRFAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        acctNo,
                        isLoan});
            rescore = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateManualRFAccount(string countryCode, short branchNo, string customerID, string acctNo, bool isLoan, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateManualRFAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        acctNo,
                        isLoan}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateManualRFAccount(System.IAsyncResult asyncResult, out bool rescore, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            rescore = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateManualRFAccountAsync(string countryCode, short branchNo, string customerID, string acctNo, bool isLoan) {
            this.CreateManualRFAccountAsync(countryCode, branchNo, customerID, acctNo, isLoan, null);
        }
        
        /// <remarks/>
        public void CreateManualRFAccountAsync(string countryCode, short branchNo, string customerID, string acctNo, bool isLoan, object userState) {
            if ((this.CreateManualRFAccountOperationCompleted == null)) {
                this.CreateManualRFAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateManualRFAccountOperationCompleted);
            }
            this.InvokeAsync("CreateManualRFAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        acctNo,
                        isLoan}, this.CreateManualRFAccountOperationCompleted, userState);
        }
        
        private void OnCreateManualRFAccountOperationCompleted(object arg) {
            if ((this.CreateManualRFAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateManualRFAccountCompleted(this, new CreateManualRFAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDueDay", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public short GetDueDay(string custID, out string err) {
            object[] results = this.Invoke("GetDueDay", new object[] {
                        custID});
            err = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDueDay(string custID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDueDay", new object[] {
                        custID}, callback, asyncState);
        }
        
        /// <remarks/>
        public short EndGetDueDay(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void GetDueDayAsync(string custID) {
            this.GetDueDayAsync(custID, null);
        }
        
        /// <remarks/>
        public void GetDueDayAsync(string custID, object userState) {
            if ((this.GetDueDayOperationCompleted == null)) {
                this.GetDueDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDueDayOperationCompleted);
            }
            this.InvokeAsync("GetDueDay", new object[] {
                        custID}, this.GetDueDayOperationCompleted, userState);
        }
        
        private void OnGetDueDayOperationCompleted(object arg) {
            if ((this.GetDueDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDueDayCompleted(this, new GetDueDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetActivitySegments", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActivitySegments(string acctNo, out string err) {
            object[] results = this.Invoke("GetActivitySegments", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetActivitySegments(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetActivitySegments", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetActivitySegments(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivitySegmentsAsync(string acctNo) {
            this.GetActivitySegmentsAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetActivitySegmentsAsync(string acctNo, object userState) {
            if ((this.GetActivitySegmentsOperationCompleted == null)) {
                this.GetActivitySegmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivitySegmentsOperationCompleted);
            }
            this.InvokeAsync("GetActivitySegments", new object[] {
                        acctNo}, this.GetActivitySegmentsOperationCompleted, userState);
        }
        
        private void OnGetActivitySegmentsOperationCompleted(object arg) {
            if ((this.GetActivitySegmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivitySegmentsCompleted(this, new GetActivitySegmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateItemLocation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateItemLocation(System.Data.DataSet ds, bool newDelNote, out string err) {
            object[] results = this.Invoke("UpdateItemLocation", new object[] {
                        ds,
                        newDelNote});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateItemLocation(System.Data.DataSet ds, bool newDelNote, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateItemLocation", new object[] {
                        ds,
                        newDelNote}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateItemLocation(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateItemLocationAsync(System.Data.DataSet ds, bool newDelNote) {
            this.UpdateItemLocationAsync(ds, newDelNote, null);
        }
        
        /// <remarks/>
        public void UpdateItemLocationAsync(System.Data.DataSet ds, bool newDelNote, object userState) {
            if ((this.UpdateItemLocationOperationCompleted == null)) {
                this.UpdateItemLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateItemLocationOperationCompleted);
            }
            this.InvokeAsync("UpdateItemLocation", new object[] {
                        ds,
                        newDelNote}, this.UpdateItemLocationOperationCompleted, userState);
        }
        
        private void OnUpdateItemLocationOperationCompleted(object arg) {
            if ((this.UpdateItemLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateItemLocationCompleted(this, new UpdateItemLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CancelDeliveryNote", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelDeliveryNote(string accountNo, System.Data.DataSet ds, bool isDotNetWarehouse, out string err) {
            object[] results = this.Invoke("CancelDeliveryNote", new object[] {
                        accountNo,
                        ds,
                        isDotNetWarehouse});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelDeliveryNote(string accountNo, System.Data.DataSet ds, bool isDotNetWarehouse, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelDeliveryNote", new object[] {
                        accountNo,
                        ds,
                        isDotNetWarehouse}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCancelDeliveryNote(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelDeliveryNoteAsync(string accountNo, System.Data.DataSet ds, bool isDotNetWarehouse) {
            this.CancelDeliveryNoteAsync(accountNo, ds, isDotNetWarehouse, null);
        }
        
        /// <remarks/>
        public void CancelDeliveryNoteAsync(string accountNo, System.Data.DataSet ds, bool isDotNetWarehouse, object userState) {
            if ((this.CancelDeliveryNoteOperationCompleted == null)) {
                this.CancelDeliveryNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDeliveryNoteOperationCompleted);
            }
            this.InvokeAsync("CancelDeliveryNote", new object[] {
                        accountNo,
                        ds,
                        isDotNetWarehouse}, this.CancelDeliveryNoteOperationCompleted, userState);
        }
        
        private void OnCancelDeliveryNoteOperationCompleted(object arg) {
            if ((this.CancelDeliveryNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDeliveryNoteCompleted(this, new CancelDeliveryNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateRebateTotals", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRebateTotals(string acctNo, System.DateTime fromThresDate, System.DateTime toThresDate, System.DateTime acctsFromDate, System.DateTime ruleChangeDate, System.DateTime rebateDate, out decimal poRebate, out decimal poRebateWithin12Mths, out decimal poRebateAfter12Mths, out string err) {
            object[] results = this.Invoke("UpdateRebateTotals", new object[] {
                        acctNo,
                        fromThresDate,
                        toThresDate,
                        acctsFromDate,
                        ruleChangeDate,
                        rebateDate});
            poRebate = ((decimal)(results[1]));
            poRebateWithin12Mths = ((decimal)(results[2]));
            poRebateAfter12Mths = ((decimal)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateRebateTotals(string acctNo, System.DateTime fromThresDate, System.DateTime toThresDate, System.DateTime acctsFromDate, System.DateTime ruleChangeDate, System.DateTime rebateDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateRebateTotals", new object[] {
                        acctNo,
                        fromThresDate,
                        toThresDate,
                        acctsFromDate,
                        ruleChangeDate,
                        rebateDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateRebateTotals(System.IAsyncResult asyncResult, out decimal poRebate, out decimal poRebateWithin12Mths, out decimal poRebateAfter12Mths, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            poRebate = ((decimal)(results[1]));
            poRebateWithin12Mths = ((decimal)(results[2]));
            poRebateAfter12Mths = ((decimal)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRebateTotalsAsync(string acctNo, System.DateTime fromThresDate, System.DateTime toThresDate, System.DateTime acctsFromDate, System.DateTime ruleChangeDate, System.DateTime rebateDate) {
            this.UpdateRebateTotalsAsync(acctNo, fromThresDate, toThresDate, acctsFromDate, ruleChangeDate, rebateDate, null);
        }
        
        /// <remarks/>
        public void UpdateRebateTotalsAsync(string acctNo, System.DateTime fromThresDate, System.DateTime toThresDate, System.DateTime acctsFromDate, System.DateTime ruleChangeDate, System.DateTime rebateDate, object userState) {
            if ((this.UpdateRebateTotalsOperationCompleted == null)) {
                this.UpdateRebateTotalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRebateTotalsOperationCompleted);
            }
            this.InvokeAsync("UpdateRebateTotals", new object[] {
                        acctNo,
                        fromThresDate,
                        toThresDate,
                        acctsFromDate,
                        ruleChangeDate,
                        rebateDate}, this.UpdateRebateTotalsOperationCompleted, userState);
        }
        
        private void OnUpdateRebateTotalsOperationCompleted(object arg) {
            if ((this.UpdateRebateTotalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRebateTotalsCompleted(this, new UpdateRebateTotalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetItemsForLocationChange", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemsForLocationChange(string acctno, bool loadBeforeDA, out string err) {
            object[] results = this.Invoke("GetItemsForLocationChange", new object[] {
                        acctno,
                        loadBeforeDA});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemsForLocationChange(string acctno, bool loadBeforeDA, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemsForLocationChange", new object[] {
                        acctno,
                        loadBeforeDA}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetItemsForLocationChange(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsForLocationChangeAsync(string acctno, bool loadBeforeDA) {
            this.GetItemsForLocationChangeAsync(acctno, loadBeforeDA, null);
        }
        
        /// <remarks/>
        public void GetItemsForLocationChangeAsync(string acctno, bool loadBeforeDA, object userState) {
            if ((this.GetItemsForLocationChangeOperationCompleted == null)) {
                this.GetItemsForLocationChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsForLocationChangeOperationCompleted);
            }
            this.InvokeAsync("GetItemsForLocationChange", new object[] {
                        acctno,
                        loadBeforeDA}, this.GetItemsForLocationChangeOperationCompleted, userState);
        }
        
        private void OnGetItemsForLocationChangeOperationCompleted(object arg) {
            if ((this.GetItemsForLocationChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsForLocationChangeCompleted(this, new GetItemsForLocationChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetScheduledDelNote", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetScheduledDelNote(string accountNo, int agreementNo, int itemID, short location, out bool onPickList, out bool delNotePrinted, out bool onLoad, out string err) {
            object[] results = this.Invoke("GetScheduledDelNote", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location});
            onPickList = ((bool)(results[1]));
            delNotePrinted = ((bool)(results[2]));
            onLoad = ((bool)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScheduledDelNote(string accountNo, int agreementNo, int itemID, short location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScheduledDelNote", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetScheduledDelNote(System.IAsyncResult asyncResult, out bool onPickList, out bool delNotePrinted, out bool onLoad, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            onPickList = ((bool)(results[1]));
            delNotePrinted = ((bool)(results[2]));
            onLoad = ((bool)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduledDelNoteAsync(string accountNo, int agreementNo, int itemID, short location) {
            this.GetScheduledDelNoteAsync(accountNo, agreementNo, itemID, location, null);
        }
        
        /// <remarks/>
        public void GetScheduledDelNoteAsync(string accountNo, int agreementNo, int itemID, short location, object userState) {
            if ((this.GetScheduledDelNoteOperationCompleted == null)) {
                this.GetScheduledDelNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduledDelNoteOperationCompleted);
            }
            this.InvokeAsync("GetScheduledDelNote", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location}, this.GetScheduledDelNoteOperationCompleted, userState);
        }
        
        private void OnGetScheduledDelNoteOperationCompleted(object arg) {
            if ((this.GetScheduledDelNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduledDelNoteCompleted(this, new GetScheduledDelNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsCancelled", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCancelled(string accountNo, out string err) {
            object[] results = this.Invoke("IsCancelled", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsCancelled(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsCancelled", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsCancelled(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCancelledAsync(string accountNo) {
            this.IsCancelledAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void IsCancelledAsync(string accountNo, object userState) {
            if ((this.IsCancelledOperationCompleted == null)) {
                this.IsCancelledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCancelledOperationCompleted);
            }
            this.InvokeAsync("IsCancelled", new object[] {
                        accountNo}, this.IsCancelledOperationCompleted, userState);
        }
        
        private void OnIsCancelledOperationCompleted(object arg) {
            if ((this.IsCancelledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCancelledCompleted(this, new IsCancelledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ReverseCancellation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReverseCancellation(string accountNo, string code, string notes, out string err) {
            object[] results = this.Invoke("ReverseCancellation", new object[] {
                        accountNo,
                        code,
                        notes});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReverseCancellation(string accountNo, string code, string notes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReverseCancellation", new object[] {
                        accountNo,
                        code,
                        notes}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndReverseCancellation(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseCancellationAsync(string accountNo, string code, string notes) {
            this.ReverseCancellationAsync(accountNo, code, notes, null);
        }
        
        /// <remarks/>
        public void ReverseCancellationAsync(string accountNo, string code, string notes, object userState) {
            if ((this.ReverseCancellationOperationCompleted == null)) {
                this.ReverseCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseCancellationOperationCompleted);
            }
            this.InvokeAsync("ReverseCancellation", new object[] {
                        accountNo,
                        code,
                        notes}, this.ReverseCancellationOperationCompleted, userState);
        }
        
        private void OnReverseCancellationOperationCompleted(object arg) {
            if ((this.ReverseCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseCancellationCompleted(this, new ReverseCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ManualCDVExists", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ManualCDVExists(string accountNo, out string err) {
            object[] results = this.Invoke("ManualCDVExists", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginManualCDVExists(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ManualCDVExists", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndManualCDVExists(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ManualCDVExistsAsync(string accountNo) {
            this.ManualCDVExistsAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void ManualCDVExistsAsync(string accountNo, object userState) {
            if ((this.ManualCDVExistsOperationCompleted == null)) {
                this.ManualCDVExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualCDVExistsOperationCompleted);
            }
            this.InvokeAsync("ManualCDVExists", new object[] {
                        accountNo}, this.ManualCDVExistsOperationCompleted, userState);
        }
        
        private void OnManualCDVExistsOperationCompleted(object arg) {
            if ((this.ManualCDVExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualCDVExistsCompleted(this, new ManualCDVExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPeriodEndDates", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPeriodEndDates(out string nextPeriodEnd, out string err) {
            object[] results = this.Invoke("GetPeriodEndDates", new object[0]);
            nextPeriodEnd = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPeriodEndDates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPeriodEndDates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPeriodEndDates(System.IAsyncResult asyncResult, out string nextPeriodEnd, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            nextPeriodEnd = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPeriodEndDatesAsync() {
            this.GetPeriodEndDatesAsync(null);
        }
        
        /// <remarks/>
        public void GetPeriodEndDatesAsync(object userState) {
            if ((this.GetPeriodEndDatesOperationCompleted == null)) {
                this.GetPeriodEndDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPeriodEndDatesOperationCompleted);
            }
            this.InvokeAsync("GetPeriodEndDates", new object[0], this.GetPeriodEndDatesOperationCompleted, userState);
        }
        
        private void OnGetPeriodEndDatesOperationCompleted(object arg) {
            if ((this.GetPeriodEndDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPeriodEndDatesCompleted(this, new GetPeriodEndDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRebateForecastReports", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRebateForecastReports(string periodEnd, int branchNo, out string err) {
            object[] results = this.Invoke("GetRebateForecastReports", new object[] {
                        periodEnd,
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRebateForecastReports(string periodEnd, int branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRebateForecastReports", new object[] {
                        periodEnd,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRebateForecastReports(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRebateForecastReportsAsync(string periodEnd, int branchNo) {
            this.GetRebateForecastReportsAsync(periodEnd, branchNo, null);
        }
        
        /// <remarks/>
        public void GetRebateForecastReportsAsync(string periodEnd, int branchNo, object userState) {
            if ((this.GetRebateForecastReportsOperationCompleted == null)) {
                this.GetRebateForecastReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRebateForecastReportsOperationCompleted);
            }
            this.InvokeAsync("GetRebateForecastReports", new object[] {
                        periodEnd,
                        branchNo}, this.GetRebateForecastReportsOperationCompleted, userState);
        }
        
        private void OnGetRebateForecastReportsOperationCompleted(object arg) {
            if ((this.GetRebateForecastReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRebateForecastReportsCompleted(this, new GetRebateForecastReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/RunRebateForecastReports", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RunRebateForecastReports(string periodEnd, out string err) {
            object[] results = this.Invoke("RunRebateForecastReports", new object[] {
                        periodEnd});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRunRebateForecastReports(string periodEnd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RunRebateForecastReports", new object[] {
                        periodEnd}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRunRebateForecastReports(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RunRebateForecastReportsAsync(string periodEnd) {
            this.RunRebateForecastReportsAsync(periodEnd, null);
        }
        
        /// <remarks/>
        public void RunRebateForecastReportsAsync(string periodEnd, object userState) {
            if ((this.RunRebateForecastReportsOperationCompleted == null)) {
                this.RunRebateForecastReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunRebateForecastReportsOperationCompleted);
            }
            this.InvokeAsync("RunRebateForecastReports", new object[] {
                        periodEnd}, this.RunRebateForecastReportsOperationCompleted, userState);
        }
        
        private void OnRunRebateForecastReportsOperationCompleted(object arg) {
            if ((this.RunRebateForecastReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunRebateForecastReportsCompleted(this, new RunRebateForecastReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsPaidAndTakenWarranty", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsPaidAndTakenWarranty(string accountNo, out string err) {
            object[] results = this.Invoke("IsPaidAndTakenWarranty", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsPaidAndTakenWarranty(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsPaidAndTakenWarranty", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndIsPaidAndTakenWarranty(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsPaidAndTakenWarrantyAsync(string accountNo) {
            this.IsPaidAndTakenWarrantyAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void IsPaidAndTakenWarrantyAsync(string accountNo, object userState) {
            if ((this.IsPaidAndTakenWarrantyOperationCompleted == null)) {
                this.IsPaidAndTakenWarrantyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPaidAndTakenWarrantyOperationCompleted);
            }
            this.InvokeAsync("IsPaidAndTakenWarranty", new object[] {
                        accountNo}, this.IsPaidAndTakenWarrantyOperationCompleted, userState);
        }
        
        private void OnIsPaidAndTakenWarrantyOperationCompleted(object arg) {
            if ((this.IsPaidAndTakenWarrantyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPaidAndTakenWarrantyCompleted(this, new IsPaidAndTakenWarrantyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBookings", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBookings(string branchNo, string empeeNo, System.DateTime fromDate, System.DateTime toDate, int includeCash, int includeHP, int includeNonSec, int includePaidTaken, int includeRf, int includeSec, int rollUpResults, int liveDatabase, out string err) {
            object[] results = this.Invoke("GetBookings", new object[] {
                        branchNo,
                        empeeNo,
                        fromDate,
                        toDate,
                        includeCash,
                        includeHP,
                        includeNonSec,
                        includePaidTaken,
                        includeRf,
                        includeSec,
                        rollUpResults,
                        liveDatabase});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBookings(string branchNo, string empeeNo, System.DateTime fromDate, System.DateTime toDate, int includeCash, int includeHP, int includeNonSec, int includePaidTaken, int includeRf, int includeSec, int rollUpResults, int liveDatabase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBookings", new object[] {
                        branchNo,
                        empeeNo,
                        fromDate,
                        toDate,
                        includeCash,
                        includeHP,
                        includeNonSec,
                        includePaidTaken,
                        includeRf,
                        includeSec,
                        rollUpResults,
                        liveDatabase}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBookings(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBookingsAsync(string branchNo, string empeeNo, System.DateTime fromDate, System.DateTime toDate, int includeCash, int includeHP, int includeNonSec, int includePaidTaken, int includeRf, int includeSec, int rollUpResults, int liveDatabase) {
            this.GetBookingsAsync(branchNo, empeeNo, fromDate, toDate, includeCash, includeHP, includeNonSec, includePaidTaken, includeRf, includeSec, rollUpResults, liveDatabase, null);
        }
        
        /// <remarks/>
        public void GetBookingsAsync(string branchNo, string empeeNo, System.DateTime fromDate, System.DateTime toDate, int includeCash, int includeHP, int includeNonSec, int includePaidTaken, int includeRf, int includeSec, int rollUpResults, int liveDatabase, object userState) {
            if ((this.GetBookingsOperationCompleted == null)) {
                this.GetBookingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBookingsOperationCompleted);
            }
            this.InvokeAsync("GetBookings", new object[] {
                        branchNo,
                        empeeNo,
                        fromDate,
                        toDate,
                        includeCash,
                        includeHP,
                        includeNonSec,
                        includePaidTaken,
                        includeRf,
                        includeSec,
                        rollUpResults,
                        liveDatabase}, this.GetBookingsOperationCompleted, userState);
        }
        
        private void OnGetBookingsOperationCompleted(object arg) {
            if ((this.GetBookingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBookingsCompleted(this, new GetBookingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDeliveryOrders", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliveryOrders(
                    System.DateTime fromDate, 
                    System.DateTime toDate, 
                    string deliveryArea, 
                    int includeDeliveries, 
                    int includeCollections, 
                    int includeAddresses, 
                    int includeLinkedItems, 
                    string deliveryProcess, 
                    string majorProductCategory, 
                    string minorProductCategory, 
                    string acctNo, 
                    int user, 
                    int branchNo, 
                    int delNotBranchNo, 
                    bool reqDelSearch, 
                    bool includeAssembly, 
                    bool includeNonAssembly, 
                    out System.DateTime timeLocked, 
                    out string err) {
            object[] results = this.Invoke("GetDeliveryOrders", new object[] {
                        fromDate,
                        toDate,
                        deliveryArea,
                        includeDeliveries,
                        includeCollections,
                        includeAddresses,
                        includeLinkedItems,
                        deliveryProcess,
                        majorProductCategory,
                        minorProductCategory,
                        acctNo,
                        user,
                        branchNo,
                        delNotBranchNo,
                        reqDelSearch,
                        includeAssembly,
                        includeNonAssembly});
            timeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeliveryOrders(
                    System.DateTime fromDate, 
                    System.DateTime toDate, 
                    string deliveryArea, 
                    int includeDeliveries, 
                    int includeCollections, 
                    int includeAddresses, 
                    int includeLinkedItems, 
                    string deliveryProcess, 
                    string majorProductCategory, 
                    string minorProductCategory, 
                    string acctNo, 
                    int user, 
                    int branchNo, 
                    int delNotBranchNo, 
                    bool reqDelSearch, 
                    bool includeAssembly, 
                    bool includeNonAssembly, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetDeliveryOrders", new object[] {
                        fromDate,
                        toDate,
                        deliveryArea,
                        includeDeliveries,
                        includeCollections,
                        includeAddresses,
                        includeLinkedItems,
                        deliveryProcess,
                        majorProductCategory,
                        minorProductCategory,
                        acctNo,
                        user,
                        branchNo,
                        delNotBranchNo,
                        reqDelSearch,
                        includeAssembly,
                        includeNonAssembly}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDeliveryOrders(System.IAsyncResult asyncResult, out System.DateTime timeLocked, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            timeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryOrdersAsync(
                    System.DateTime fromDate, 
                    System.DateTime toDate, 
                    string deliveryArea, 
                    int includeDeliveries, 
                    int includeCollections, 
                    int includeAddresses, 
                    int includeLinkedItems, 
                    string deliveryProcess, 
                    string majorProductCategory, 
                    string minorProductCategory, 
                    string acctNo, 
                    int user, 
                    int branchNo, 
                    int delNotBranchNo, 
                    bool reqDelSearch, 
                    bool includeAssembly, 
                    bool includeNonAssembly) {
            this.GetDeliveryOrdersAsync(fromDate, toDate, deliveryArea, includeDeliveries, includeCollections, includeAddresses, includeLinkedItems, deliveryProcess, majorProductCategory, minorProductCategory, acctNo, user, branchNo, delNotBranchNo, reqDelSearch, includeAssembly, includeNonAssembly, null);
        }
        
        /// <remarks/>
        public void GetDeliveryOrdersAsync(
                    System.DateTime fromDate, 
                    System.DateTime toDate, 
                    string deliveryArea, 
                    int includeDeliveries, 
                    int includeCollections, 
                    int includeAddresses, 
                    int includeLinkedItems, 
                    string deliveryProcess, 
                    string majorProductCategory, 
                    string minorProductCategory, 
                    string acctNo, 
                    int user, 
                    int branchNo, 
                    int delNotBranchNo, 
                    bool reqDelSearch, 
                    bool includeAssembly, 
                    bool includeNonAssembly, 
                    object userState) {
            if ((this.GetDeliveryOrdersOperationCompleted == null)) {
                this.GetDeliveryOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOrdersOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryOrders", new object[] {
                        fromDate,
                        toDate,
                        deliveryArea,
                        includeDeliveries,
                        includeCollections,
                        includeAddresses,
                        includeLinkedItems,
                        deliveryProcess,
                        majorProductCategory,
                        minorProductCategory,
                        acctNo,
                        user,
                        branchNo,
                        delNotBranchNo,
                        reqDelSearch,
                        includeAssembly,
                        includeNonAssembly}, this.GetDeliveryOrdersOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOrdersOperationCompleted(object arg) {
            if ((this.GetDeliveryOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryOrdersCompleted(this, new GetDeliveryOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDeliveryNotesForAcct", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliveryNotesForAcct(string acctNo, int user, bool collectionsOnly, out System.DateTime timeLocked, out string err) {
            object[] results = this.Invoke("GetDeliveryNotesForAcct", new object[] {
                        acctNo,
                        user,
                        collectionsOnly});
            timeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeliveryNotesForAcct(string acctNo, int user, bool collectionsOnly, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeliveryNotesForAcct", new object[] {
                        acctNo,
                        user,
                        collectionsOnly}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDeliveryNotesForAcct(System.IAsyncResult asyncResult, out System.DateTime timeLocked, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            timeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryNotesForAcctAsync(string acctNo, int user, bool collectionsOnly) {
            this.GetDeliveryNotesForAcctAsync(acctNo, user, collectionsOnly, null);
        }
        
        /// <remarks/>
        public void GetDeliveryNotesForAcctAsync(string acctNo, int user, bool collectionsOnly, object userState) {
            if ((this.GetDeliveryNotesForAcctOperationCompleted == null)) {
                this.GetDeliveryNotesForAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryNotesForAcctOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryNotesForAcct", new object[] {
                        acctNo,
                        user,
                        collectionsOnly}, this.GetDeliveryNotesForAcctOperationCompleted, userState);
        }
        
        private void OnGetDeliveryNotesForAcctOperationCompleted(object arg) {
            if ((this.GetDeliveryNotesForAcctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryNotesForAcctCompleted(this, new GetDeliveryNotesForAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetOutstandingDeliveries", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOutstandingDeliveries(int bufferNo, int warehouseNo, System.DateTime fromDate, System.DateTime toDate, int includeSec, int includeNonSec, string operand, out string err) {
            object[] results = this.Invoke("GetOutstandingDeliveries", new object[] {
                        bufferNo,
                        warehouseNo,
                        fromDate,
                        toDate,
                        includeSec,
                        includeNonSec,
                        operand});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOutstandingDeliveries(int bufferNo, int warehouseNo, System.DateTime fromDate, System.DateTime toDate, int includeSec, int includeNonSec, string operand, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOutstandingDeliveries", new object[] {
                        bufferNo,
                        warehouseNo,
                        fromDate,
                        toDate,
                        includeSec,
                        includeNonSec,
                        operand}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOutstandingDeliveries(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutstandingDeliveriesAsync(int bufferNo, int warehouseNo, System.DateTime fromDate, System.DateTime toDate, int includeSec, int includeNonSec, string operand) {
            this.GetOutstandingDeliveriesAsync(bufferNo, warehouseNo, fromDate, toDate, includeSec, includeNonSec, operand, null);
        }
        
        /// <remarks/>
        public void GetOutstandingDeliveriesAsync(int bufferNo, int warehouseNo, System.DateTime fromDate, System.DateTime toDate, int includeSec, int includeNonSec, string operand, object userState) {
            if ((this.GetOutstandingDeliveriesOperationCompleted == null)) {
                this.GetOutstandingDeliveriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutstandingDeliveriesOperationCompleted);
            }
            this.InvokeAsync("GetOutstandingDeliveries", new object[] {
                        bufferNo,
                        warehouseNo,
                        fromDate,
                        toDate,
                        includeSec,
                        includeNonSec,
                        operand}, this.GetOutstandingDeliveriesOperationCompleted, userState);
        }
        
        private void OnGetOutstandingDeliveriesOperationCompleted(object arg) {
            if ((this.GetOutstandingDeliveriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutstandingDeliveriesCompleted(this, new GetOutstandingDeliveriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRelatedItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRelatedItems(int itemId, short location, out string err) {
            object[] results = this.Invoke("GetRelatedItems", new object[] {
                        itemId,
                        location});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRelatedItems(int itemId, short location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRelatedItems", new object[] {
                        itemId,
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRelatedItems(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelatedItemsAsync(int itemId, short location) {
            this.GetRelatedItemsAsync(itemId, location, null);
        }
        
        /// <remarks/>
        public void GetRelatedItemsAsync(int itemId, short location, object userState) {
            if ((this.GetRelatedItemsOperationCompleted == null)) {
                this.GetRelatedItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelatedItemsOperationCompleted);
            }
            this.InvokeAsync("GetRelatedItems", new object[] {
                        itemId,
                        location}, this.GetRelatedItemsOperationCompleted, userState);
        }
        
        private void OnGetRelatedItemsOperationCompleted(object arg) {
            if ((this.GetRelatedItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelatedItemsCompleted(this, new GetRelatedItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWarrantyRenewals", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWarrantyRenewals(string acctNo, bool settled, bool ismenu, ref string custID, out string err) {
            object[] results = this.Invoke("GetWarrantyRenewals", new object[] {
                        acctNo,
                        settled,
                        ismenu,
                        custID});
            custID = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarrantyRenewals(string acctNo, bool settled, bool ismenu, string custID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarrantyRenewals", new object[] {
                        acctNo,
                        settled,
                        ismenu,
                        custID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWarrantyRenewals(System.IAsyncResult asyncResult, out string custID, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            custID = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantyRenewalsAsync(string acctNo, bool settled, bool ismenu, string custID) {
            this.GetWarrantyRenewalsAsync(acctNo, settled, ismenu, custID, null);
        }
        
        /// <remarks/>
        public void GetWarrantyRenewalsAsync(string acctNo, bool settled, bool ismenu, string custID, object userState) {
            if ((this.GetWarrantyRenewalsOperationCompleted == null)) {
                this.GetWarrantyRenewalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantyRenewalsOperationCompleted);
            }
            this.InvokeAsync("GetWarrantyRenewals", new object[] {
                        acctNo,
                        settled,
                        ismenu,
                        custID}, this.GetWarrantyRenewalsOperationCompleted, userState);
        }
        
        private void OnGetWarrantyRenewalsOperationCompleted(object arg) {
            if ((this.GetWarrantyRenewalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantyRenewalsCompleted(this, new GetWarrantyRenewalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWarrantyProductsByAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWarrantyProductsByAccount(string accNo, out string err) {
            object[] results = this.Invoke("GetWarrantyProductsByAccount", new object[] {
                        accNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarrantyProductsByAccount(string accNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarrantyProductsByAccount", new object[] {
                        accNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWarrantyProductsByAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantyProductsByAccountAsync(string accNo) {
            this.GetWarrantyProductsByAccountAsync(accNo, null);
        }
        
        /// <remarks/>
        public void GetWarrantyProductsByAccountAsync(string accNo, object userState) {
            if ((this.GetWarrantyProductsByAccountOperationCompleted == null)) {
                this.GetWarrantyProductsByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantyProductsByAccountOperationCompleted);
            }
            this.InvokeAsync("GetWarrantyProductsByAccount", new object[] {
                        accNo}, this.GetWarrantyProductsByAccountOperationCompleted, userState);
        }
        
        private void OnGetWarrantyProductsByAccountOperationCompleted(object arg) {
            if ((this.GetWarrantyProductsByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantyProductsByAccountCompleted(this, new GetWarrantyProductsByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AddWarrantRenewalCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddWarrantRenewalCode(string acctNo, string contractNo, out string err) {
            object[] results = this.Invoke("AddWarrantRenewalCode", new object[] {
                        acctNo,
                        contractNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddWarrantRenewalCode(string acctNo, string contractNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddWarrantRenewalCode", new object[] {
                        acctNo,
                        contractNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddWarrantRenewalCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddWarrantRenewalCodeAsync(string acctNo, string contractNo) {
            this.AddWarrantRenewalCodeAsync(acctNo, contractNo, null);
        }
        
        /// <remarks/>
        public void AddWarrantRenewalCodeAsync(string acctNo, string contractNo, object userState) {
            if ((this.AddWarrantRenewalCodeOperationCompleted == null)) {
                this.AddWarrantRenewalCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWarrantRenewalCodeOperationCompleted);
            }
            this.InvokeAsync("AddWarrantRenewalCode", new object[] {
                        acctNo,
                        contractNo}, this.AddWarrantRenewalCodeOperationCompleted, userState);
        }
        
        private void OnAddWarrantRenewalCodeOperationCompleted(object arg) {
            if ((this.AddWarrantRenewalCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWarrantRenewalCodeCompleted(this, new AddWarrantRenewalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadAllocationsForReprint", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAllocationsForReprint(int empeeNo, out string err) {
            object[] results = this.Invoke("LoadAllocationsForReprint", new object[] {
                        empeeNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAllocationsForReprint(int empeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAllocationsForReprint", new object[] {
                        empeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAllocationsForReprint(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllocationsForReprintAsync(int empeeNo) {
            this.LoadAllocationsForReprintAsync(empeeNo, null);
        }
        
        /// <remarks/>
        public void LoadAllocationsForReprintAsync(int empeeNo, object userState) {
            if ((this.LoadAllocationsForReprintOperationCompleted == null)) {
                this.LoadAllocationsForReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllocationsForReprintOperationCompleted);
            }
            this.InvokeAsync("LoadAllocationsForReprint", new object[] {
                        empeeNo}, this.LoadAllocationsForReprintOperationCompleted, userState);
        }
        
        private void OnLoadAllocationsForReprintOperationCompleted(object arg) {
            if ((this.LoadAllocationsForReprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllocationsForReprintCompleted(this, new LoadAllocationsForReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadAllocationDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAllocationDetails(int empeeNo, System.DateTime dateAllocated, out string err) {
            object[] results = this.Invoke("LoadAllocationDetails", new object[] {
                        empeeNo,
                        dateAllocated});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAllocationDetails(int empeeNo, System.DateTime dateAllocated, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAllocationDetails", new object[] {
                        empeeNo,
                        dateAllocated}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAllocationDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAllocationDetailsAsync(int empeeNo, System.DateTime dateAllocated) {
            this.LoadAllocationDetailsAsync(empeeNo, dateAllocated, null);
        }
        
        /// <remarks/>
        public void LoadAllocationDetailsAsync(int empeeNo, System.DateTime dateAllocated, object userState) {
            if ((this.LoadAllocationDetailsOperationCompleted == null)) {
                this.LoadAllocationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAllocationDetailsOperationCompleted);
            }
            this.InvokeAsync("LoadAllocationDetails", new object[] {
                        empeeNo,
                        dateAllocated}, this.LoadAllocationDetailsOperationCompleted, userState);
        }
        
        private void OnLoadAllocationDetailsOperationCompleted(object arg) {
            if ((this.LoadAllocationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAllocationDetailsCompleted(this, new LoadAllocationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateAllocForReprint", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAllocForReprint(string acctNo, int empeeNo, System.DateTime dateAllocated, bool batch, out string err) {
            object[] results = this.Invoke("UpdateAllocForReprint", new object[] {
                        acctNo,
                        empeeNo,
                        dateAllocated,
                        batch});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAllocForReprint(string acctNo, int empeeNo, System.DateTime dateAllocated, bool batch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAllocForReprint", new object[] {
                        acctNo,
                        empeeNo,
                        dateAllocated,
                        batch}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateAllocForReprint(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAllocForReprintAsync(string acctNo, int empeeNo, System.DateTime dateAllocated, bool batch) {
            this.UpdateAllocForReprintAsync(acctNo, empeeNo, dateAllocated, batch, null);
        }
        
        /// <remarks/>
        public void UpdateAllocForReprintAsync(string acctNo, int empeeNo, System.DateTime dateAllocated, bool batch, object userState) {
            if ((this.UpdateAllocForReprintOperationCompleted == null)) {
                this.UpdateAllocForReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAllocForReprintOperationCompleted);
            }
            this.InvokeAsync("UpdateAllocForReprint", new object[] {
                        acctNo,
                        empeeNo,
                        dateAllocated,
                        batch}, this.UpdateAllocForReprintOperationCompleted, userState);
        }
        
        private void OnUpdateAllocForReprintOperationCompleted(object arg) {
            if ((this.UpdateAllocForReprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAllocForReprintCompleted(this, new UpdateAllocForReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRepossessedItemDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRepossessedItemDetails(string acctNo, out string err) {
            object[] results = this.Invoke("GetRepossessedItemDetails", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRepossessedItemDetails(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRepossessedItemDetails", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRepossessedItemDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepossessedItemDetailsAsync(string acctNo) {
            this.GetRepossessedItemDetailsAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetRepossessedItemDetailsAsync(string acctNo, object userState) {
            if ((this.GetRepossessedItemDetailsOperationCompleted == null)) {
                this.GetRepossessedItemDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepossessedItemDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRepossessedItemDetails", new object[] {
                        acctNo}, this.GetRepossessedItemDetailsOperationCompleted, userState);
        }
        
        private void OnGetRepossessedItemDetailsOperationCompleted(object arg) {
            if ((this.GetRepossessedItemDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepossessedItemDetailsCompleted(this, new GetRepossessedItemDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetNextPicklistNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNextPicklistNo(int branchNo, int user, string pickListType, out int pickListNo, out string err) {
            object[] results = this.Invoke("GetNextPicklistNo", new object[] {
                        branchNo,
                        user,
                        pickListType});
            pickListNo = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNextPicklistNo(int branchNo, int user, string pickListType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextPicklistNo", new object[] {
                        branchNo,
                        user,
                        pickListType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetNextPicklistNo(System.IAsyncResult asyncResult, out int pickListNo, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            pickListNo = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextPicklistNoAsync(int branchNo, int user, string pickListType) {
            this.GetNextPicklistNoAsync(branchNo, user, pickListType, null);
        }
        
        /// <remarks/>
        public void GetNextPicklistNoAsync(int branchNo, int user, string pickListType, object userState) {
            if ((this.GetNextPicklistNoOperationCompleted == null)) {
                this.GetNextPicklistNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextPicklistNoOperationCompleted);
            }
            this.InvokeAsync("GetNextPicklistNo", new object[] {
                        branchNo,
                        user,
                        pickListType}, this.GetNextPicklistNoOperationCompleted, userState);
        }
        
        private void OnGetNextPicklistNoOperationCompleted(object arg) {
            if ((this.GetNextPicklistNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextPicklistNoCompleted(this, new GetNextPicklistNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeliveryNotesLoadByLoadNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DeliveryNotesLoadByLoadNo(short branchNo, int loadNo, System.DateTime dateDel, out System.DateTime minDelDate, out string[] acctExceedsAgr, out string err) {
            object[] results = this.Invoke("DeliveryNotesLoadByLoadNo", new object[] {
                        branchNo,
                        loadNo,
                        dateDel});
            minDelDate = ((System.DateTime)(results[1]));
            acctExceedsAgr = ((string[])(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeliveryNotesLoadByLoadNo(short branchNo, int loadNo, System.DateTime dateDel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeliveryNotesLoadByLoadNo", new object[] {
                        branchNo,
                        loadNo,
                        dateDel}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDeliveryNotesLoadByLoadNo(System.IAsyncResult asyncResult, out System.DateTime minDelDate, out string[] acctExceedsAgr, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            minDelDate = ((System.DateTime)(results[1]));
            acctExceedsAgr = ((string[])(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DeliveryNotesLoadByLoadNoAsync(short branchNo, int loadNo, System.DateTime dateDel) {
            this.DeliveryNotesLoadByLoadNoAsync(branchNo, loadNo, dateDel, null);
        }
        
        /// <remarks/>
        public void DeliveryNotesLoadByLoadNoAsync(short branchNo, int loadNo, System.DateTime dateDel, object userState) {
            if ((this.DeliveryNotesLoadByLoadNoOperationCompleted == null)) {
                this.DeliveryNotesLoadByLoadNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeliveryNotesLoadByLoadNoOperationCompleted);
            }
            this.InvokeAsync("DeliveryNotesLoadByLoadNo", new object[] {
                        branchNo,
                        loadNo,
                        dateDel}, this.DeliveryNotesLoadByLoadNoOperationCompleted, userState);
        }
        
        private void OnDeliveryNotesLoadByLoadNoOperationCompleted(object arg) {
            if ((this.DeliveryNotesLoadByLoadNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeliveryNotesLoadByLoadNoCompleted(this, new DeliveryNotesLoadByLoadNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ChangeReqDeliveryDate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeReqDeliveryDate(string acctNo, int agrmtNo, int itemId, string contractNo, short stockLocn, System.DateTime reqDeliveryDate, int buffNo, string reason, out string err) {
            object[] results = this.Invoke("ChangeReqDeliveryDate", new object[] {
                        acctNo,
                        agrmtNo,
                        itemId,
                        contractNo,
                        stockLocn,
                        reqDeliveryDate,
                        buffNo,
                        reason});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeReqDeliveryDate(string acctNo, int agrmtNo, int itemId, string contractNo, short stockLocn, System.DateTime reqDeliveryDate, int buffNo, string reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeReqDeliveryDate", new object[] {
                        acctNo,
                        agrmtNo,
                        itemId,
                        contractNo,
                        stockLocn,
                        reqDeliveryDate,
                        buffNo,
                        reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndChangeReqDeliveryDate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeReqDeliveryDateAsync(string acctNo, int agrmtNo, int itemId, string contractNo, short stockLocn, System.DateTime reqDeliveryDate, int buffNo, string reason) {
            this.ChangeReqDeliveryDateAsync(acctNo, agrmtNo, itemId, contractNo, stockLocn, reqDeliveryDate, buffNo, reason, null);
        }
        
        /// <remarks/>
        public void ChangeReqDeliveryDateAsync(string acctNo, int agrmtNo, int itemId, string contractNo, short stockLocn, System.DateTime reqDeliveryDate, int buffNo, string reason, object userState) {
            if ((this.ChangeReqDeliveryDateOperationCompleted == null)) {
                this.ChangeReqDeliveryDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeReqDeliveryDateOperationCompleted);
            }
            this.InvokeAsync("ChangeReqDeliveryDate", new object[] {
                        acctNo,
                        agrmtNo,
                        itemId,
                        contractNo,
                        stockLocn,
                        reqDeliveryDate,
                        buffNo,
                        reason}, this.ChangeReqDeliveryDateOperationCompleted, userState);
        }
        
        private void OnChangeReqDeliveryDateOperationCompleted(object arg) {
            if ((this.ChangeReqDeliveryDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeReqDeliveryDateCompleted(this, new ChangeReqDeliveryDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAcctNoCtrl", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAcctNoCtrl(int branchNo, out string err) {
            object[] results = this.Invoke("GetAcctNoCtrl", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAcctNoCtrl(int branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAcctNoCtrl", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAcctNoCtrl(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAcctNoCtrlAsync(int branchNo) {
            this.GetAcctNoCtrlAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetAcctNoCtrlAsync(int branchNo, object userState) {
            if ((this.GetAcctNoCtrlOperationCompleted == null)) {
                this.GetAcctNoCtrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAcctNoCtrlOperationCompleted);
            }
            this.InvokeAsync("GetAcctNoCtrl", new object[] {
                        branchNo}, this.GetAcctNoCtrlOperationCompleted, userState);
        }
        
        private void OnGetAcctNoCtrlOperationCompleted(object arg) {
            if ((this.GetAcctNoCtrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAcctNoCtrlCompleted(this, new GetAcctNoCtrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/RemoveDeliveryNote", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveDeliveryNote(short branchNo, int buffNo, int empeeNo, string reason, out string err) {
            object[] results = this.Invoke("RemoveDeliveryNote", new object[] {
                        branchNo,
                        buffNo,
                        empeeNo,
                        reason});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveDeliveryNote(short branchNo, int buffNo, int empeeNo, string reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveDeliveryNote", new object[] {
                        branchNo,
                        buffNo,
                        empeeNo,
                        reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemoveDeliveryNote(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDeliveryNoteAsync(short branchNo, int buffNo, int empeeNo, string reason) {
            this.RemoveDeliveryNoteAsync(branchNo, buffNo, empeeNo, reason, null);
        }
        
        /// <remarks/>
        public void RemoveDeliveryNoteAsync(short branchNo, int buffNo, int empeeNo, string reason, object userState) {
            if ((this.RemoveDeliveryNoteOperationCompleted == null)) {
                this.RemoveDeliveryNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDeliveryNoteOperationCompleted);
            }
            this.InvokeAsync("RemoveDeliveryNote", new object[] {
                        branchNo,
                        buffNo,
                        empeeNo,
                        reason}, this.RemoveDeliveryNoteOperationCompleted, userState);
        }
        
        private void OnRemoveDeliveryNoteOperationCompleted(object arg) {
            if ((this.RemoveDeliveryNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDeliveryNoteCompleted(this, new RemoveDeliveryNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/RemoveLineItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveLineItem(short stockLocn, int buffNo, string acctNo, int agrmtNo, int itemId, int empeeNo, string reason, out string err) {
            object[] results = this.Invoke("RemoveLineItem", new object[] {
                        stockLocn,
                        buffNo,
                        acctNo,
                        agrmtNo,
                        itemId,
                        empeeNo,
                        reason});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveLineItem(short stockLocn, int buffNo, string acctNo, int agrmtNo, int itemId, int empeeNo, string reason, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveLineItem", new object[] {
                        stockLocn,
                        buffNo,
                        acctNo,
                        agrmtNo,
                        itemId,
                        empeeNo,
                        reason}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemoveLineItem(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveLineItemAsync(short stockLocn, int buffNo, string acctNo, int agrmtNo, int itemId, int empeeNo, string reason) {
            this.RemoveLineItemAsync(stockLocn, buffNo, acctNo, agrmtNo, itemId, empeeNo, reason, null);
        }
        
        /// <remarks/>
        public void RemoveLineItemAsync(short stockLocn, int buffNo, string acctNo, int agrmtNo, int itemId, int empeeNo, string reason, object userState) {
            if ((this.RemoveLineItemOperationCompleted == null)) {
                this.RemoveLineItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLineItemOperationCompleted);
            }
            this.InvokeAsync("RemoveLineItem", new object[] {
                        stockLocn,
                        buffNo,
                        acctNo,
                        agrmtNo,
                        itemId,
                        empeeNo,
                        reason}, this.RemoveLineItemOperationCompleted, userState);
        }
        
        private void OnRemoveLineItemOperationCompleted(object arg) {
            if ((this.RemoveLineItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLineItemCompleted(this, new RemoveLineItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ChangeItemQuantity", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeItemQuantity(double newQuantity, short stockLocn, int buffNo, string acctNo, int agrmtNo, int itemID, short curBranchNo, int parentItemId, out string err) {
            object[] results = this.Invoke("ChangeItemQuantity", new object[] {
                        newQuantity,
                        stockLocn,
                        buffNo,
                        acctNo,
                        agrmtNo,
                        itemID,
                        curBranchNo,
                        parentItemId});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeItemQuantity(double newQuantity, short stockLocn, int buffNo, string acctNo, int agrmtNo, int itemID, short curBranchNo, int parentItemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeItemQuantity", new object[] {
                        newQuantity,
                        stockLocn,
                        buffNo,
                        acctNo,
                        agrmtNo,
                        itemID,
                        curBranchNo,
                        parentItemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndChangeItemQuantity(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeItemQuantityAsync(double newQuantity, short stockLocn, int buffNo, string acctNo, int agrmtNo, int itemID, short curBranchNo, int parentItemId) {
            this.ChangeItemQuantityAsync(newQuantity, stockLocn, buffNo, acctNo, agrmtNo, itemID, curBranchNo, parentItemId, null);
        }
        
        /// <remarks/>
        public void ChangeItemQuantityAsync(double newQuantity, short stockLocn, int buffNo, string acctNo, int agrmtNo, int itemID, short curBranchNo, int parentItemId, object userState) {
            if ((this.ChangeItemQuantityOperationCompleted == null)) {
                this.ChangeItemQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeItemQuantityOperationCompleted);
            }
            this.InvokeAsync("ChangeItemQuantity", new object[] {
                        newQuantity,
                        stockLocn,
                        buffNo,
                        acctNo,
                        agrmtNo,
                        itemID,
                        curBranchNo,
                        parentItemId}, this.ChangeItemQuantityOperationCompleted, userState);
        }
        
        private void OnChangeItemQuantityOperationCompleted(object arg) {
            if ((this.ChangeItemQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeItemQuantityCompleted(this, new ChangeItemQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveAcctNoCtrl", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveAcctNoCtrl(int branchNo, string acctCat, string acctCatDesc, int hiAllocated, int hiAllowed, out string err) {
            object[] results = this.Invoke("SaveAcctNoCtrl", new object[] {
                        branchNo,
                        acctCat,
                        acctCatDesc,
                        hiAllocated,
                        hiAllowed});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveAcctNoCtrl(int branchNo, string acctCat, string acctCatDesc, int hiAllocated, int hiAllowed, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAcctNoCtrl", new object[] {
                        branchNo,
                        acctCat,
                        acctCatDesc,
                        hiAllocated,
                        hiAllowed}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveAcctNoCtrl(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAcctNoCtrlAsync(int branchNo, string acctCat, string acctCatDesc, int hiAllocated, int hiAllowed) {
            this.SaveAcctNoCtrlAsync(branchNo, acctCat, acctCatDesc, hiAllocated, hiAllowed, null);
        }
        
        /// <remarks/>
        public void SaveAcctNoCtrlAsync(int branchNo, string acctCat, string acctCatDesc, int hiAllocated, int hiAllowed, object userState) {
            if ((this.SaveAcctNoCtrlOperationCompleted == null)) {
                this.SaveAcctNoCtrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAcctNoCtrlOperationCompleted);
            }
            this.InvokeAsync("SaveAcctNoCtrl", new object[] {
                        branchNo,
                        acctCat,
                        acctCatDesc,
                        hiAllocated,
                        hiAllowed}, this.SaveAcctNoCtrlOperationCompleted, userState);
        }
        
        private void OnSaveAcctNoCtrlOperationCompleted(object arg) {
            if ((this.SaveAcctNoCtrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAcctNoCtrlCompleted(this, new SaveAcctNoCtrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ScheduleRedelRepo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ScheduleRedelRepo(
                    short origbr, 
                    string acctno, 
                    System.DateTime datedelplan, 
                    char delorcoll, 
                    int itemID, 
                    short stocklocn, 
                    short quantity, 
                    short retstocklocn, 
                    int retItemID, 
                    decimal retval, 
                    int buffbranchno, 
                    int buffno, 
                    string delArea, 
                    int agrmtNo, 
                    string contractNo, 
                    int parentItemID, 
                    int lineItemId, 
                    int user, 
                    string deliveryAddress, 
                    out string err) {
            object[] results = this.Invoke("ScheduleRedelRepo", new object[] {
                        origbr,
                        acctno,
                        datedelplan,
                        delorcoll,
                        itemID,
                        stocklocn,
                        quantity,
                        retstocklocn,
                        retItemID,
                        retval,
                        buffbranchno,
                        buffno,
                        delArea,
                        agrmtNo,
                        contractNo,
                        parentItemID,
                        lineItemId,
                        user,
                        deliveryAddress});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginScheduleRedelRepo(
                    short origbr, 
                    string acctno, 
                    System.DateTime datedelplan, 
                    char delorcoll, 
                    int itemID, 
                    short stocklocn, 
                    short quantity, 
                    short retstocklocn, 
                    int retItemID, 
                    decimal retval, 
                    int buffbranchno, 
                    int buffno, 
                    string delArea, 
                    int agrmtNo, 
                    string contractNo, 
                    int parentItemID, 
                    int lineItemId, 
                    int user, 
                    string deliveryAddress, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("ScheduleRedelRepo", new object[] {
                        origbr,
                        acctno,
                        datedelplan,
                        delorcoll,
                        itemID,
                        stocklocn,
                        quantity,
                        retstocklocn,
                        retItemID,
                        retval,
                        buffbranchno,
                        buffno,
                        delArea,
                        agrmtNo,
                        contractNo,
                        parentItemID,
                        lineItemId,
                        user,
                        deliveryAddress}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndScheduleRedelRepo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ScheduleRedelRepoAsync(
                    short origbr, 
                    string acctno, 
                    System.DateTime datedelplan, 
                    char delorcoll, 
                    int itemID, 
                    short stocklocn, 
                    short quantity, 
                    short retstocklocn, 
                    int retItemID, 
                    decimal retval, 
                    int buffbranchno, 
                    int buffno, 
                    string delArea, 
                    int agrmtNo, 
                    string contractNo, 
                    int parentItemID, 
                    int lineItemId, 
                    int user, 
                    string deliveryAddress) {
            this.ScheduleRedelRepoAsync(origbr, acctno, datedelplan, delorcoll, itemID, stocklocn, quantity, retstocklocn, retItemID, retval, buffbranchno, buffno, delArea, agrmtNo, contractNo, parentItemID, lineItemId, user, deliveryAddress, null);
        }
        
        /// <remarks/>
        public void ScheduleRedelRepoAsync(
                    short origbr, 
                    string acctno, 
                    System.DateTime datedelplan, 
                    char delorcoll, 
                    int itemID, 
                    short stocklocn, 
                    short quantity, 
                    short retstocklocn, 
                    int retItemID, 
                    decimal retval, 
                    int buffbranchno, 
                    int buffno, 
                    string delArea, 
                    int agrmtNo, 
                    string contractNo, 
                    int parentItemID, 
                    int lineItemId, 
                    int user, 
                    string deliveryAddress, 
                    object userState) {
            if ((this.ScheduleRedelRepoOperationCompleted == null)) {
                this.ScheduleRedelRepoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScheduleRedelRepoOperationCompleted);
            }
            this.InvokeAsync("ScheduleRedelRepo", new object[] {
                        origbr,
                        acctno,
                        datedelplan,
                        delorcoll,
                        itemID,
                        stocklocn,
                        quantity,
                        retstocklocn,
                        retItemID,
                        retval,
                        buffbranchno,
                        buffno,
                        delArea,
                        agrmtNo,
                        contractNo,
                        parentItemID,
                        lineItemId,
                        user,
                        deliveryAddress}, this.ScheduleRedelRepoOperationCompleted, userState);
        }
        
        private void OnScheduleRedelRepoOperationCompleted(object arg) {
            if ((this.ScheduleRedelRepoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScheduleRedelRepoCompleted(this, new ScheduleRedelRepoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTransportList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransportList(out string err) {
            object[] results = this.Invoke("GetTransportList", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransportList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransportList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransportList(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransportListAsync() {
            this.GetTransportListAsync(null);
        }
        
        /// <remarks/>
        public void GetTransportListAsync(object userState) {
            if ((this.GetTransportListOperationCompleted == null)) {
                this.GetTransportListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransportListOperationCompleted);
            }
            this.InvokeAsync("GetTransportList", new object[0], this.GetTransportListOperationCompleted, userState);
        }
        
        private void OnGetTransportListOperationCompleted(object arg) {
            if ((this.GetTransportListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransportListCompleted(this, new GetTransportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetScheduledLoads", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScheduledLoads(short branchNo, System.DateTime dateFrom, System.DateTime dateTo, short printed, short loadNo, short withSchedules, out string err) {
            object[] results = this.Invoke("GetScheduledLoads", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo,
                        printed,
                        loadNo,
                        withSchedules});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScheduledLoads(short branchNo, System.DateTime dateFrom, System.DateTime dateTo, short printed, short loadNo, short withSchedules, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScheduledLoads", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo,
                        printed,
                        loadNo,
                        withSchedules}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetScheduledLoads(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduledLoadsAsync(short branchNo, System.DateTime dateFrom, System.DateTime dateTo, short printed, short loadNo, short withSchedules) {
            this.GetScheduledLoadsAsync(branchNo, dateFrom, dateTo, printed, loadNo, withSchedules, null);
        }
        
        /// <remarks/>
        public void GetScheduledLoadsAsync(short branchNo, System.DateTime dateFrom, System.DateTime dateTo, short printed, short loadNo, short withSchedules, object userState) {
            if ((this.GetScheduledLoadsOperationCompleted == null)) {
                this.GetScheduledLoadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduledLoadsOperationCompleted);
            }
            this.InvokeAsync("GetScheduledLoads", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo,
                        printed,
                        loadNo,
                        withSchedules}, this.GetScheduledLoadsOperationCompleted, userState);
        }
        
        private void OnGetScheduledLoadsOperationCompleted(object arg) {
            if ((this.GetScheduledLoadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduledLoadsCompleted(this, new GetScheduledLoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetItemsInRegion", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemsInRegion(int itemId, short branchNo, out string err) {
            object[] results = this.Invoke("GetItemsInRegion", new object[] {
                        itemId,
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemsInRegion(int itemId, short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemsInRegion", new object[] {
                        itemId,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetItemsInRegion(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsInRegionAsync(int itemId, short branchNo) {
            this.GetItemsInRegionAsync(itemId, branchNo, null);
        }
        
        /// <remarks/>
        public void GetItemsInRegionAsync(int itemId, short branchNo, object userState) {
            if ((this.GetItemsInRegionOperationCompleted == null)) {
                this.GetItemsInRegionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsInRegionOperationCompleted);
            }
            this.InvokeAsync("GetItemsInRegion", new object[] {
                        itemId,
                        branchNo}, this.GetItemsInRegionOperationCompleted, userState);
        }
        
        private void OnGetItemsInRegionOperationCompleted(object arg) {
            if ((this.GetItemsInRegionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsInRegionCompleted(this, new GetItemsInRegionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPurchaseOrders", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPurchaseOrders(int itemId, short branchNo, out string err) {
            object[] results = this.Invoke("GetPurchaseOrders", new object[] {
                        itemId,
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPurchaseOrders(int itemId, short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPurchaseOrders", new object[] {
                        itemId,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPurchaseOrders(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPurchaseOrdersAsync(int itemId, short branchNo) {
            this.GetPurchaseOrdersAsync(itemId, branchNo, null);
        }
        
        /// <remarks/>
        public void GetPurchaseOrdersAsync(int itemId, short branchNo, object userState) {
            if ((this.GetPurchaseOrdersOperationCompleted == null)) {
                this.GetPurchaseOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPurchaseOrdersOperationCompleted);
            }
            this.InvokeAsync("GetPurchaseOrders", new object[] {
                        itemId,
                        branchNo}, this.GetPurchaseOrdersOperationCompleted, userState);
        }
        
        private void OnGetPurchaseOrdersOperationCompleted(object arg) {
            if ((this.GetPurchaseOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPurchaseOrdersCompleted(this, new GetPurchaseOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetLoadContents", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLoadContents(short loadNo, System.DateTime dateDel, short branchNo, out string err) {
            object[] results = this.Invoke("GetLoadContents", new object[] {
                        loadNo,
                        dateDel,
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLoadContents(short loadNo, System.DateTime dateDel, short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLoadContents", new object[] {
                        loadNo,
                        dateDel,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLoadContents(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoadContentsAsync(short loadNo, System.DateTime dateDel, short branchNo) {
            this.GetLoadContentsAsync(loadNo, dateDel, branchNo, null);
        }
        
        /// <remarks/>
        public void GetLoadContentsAsync(short loadNo, System.DateTime dateDel, short branchNo, object userState) {
            if ((this.GetLoadContentsOperationCompleted == null)) {
                this.GetLoadContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoadContentsOperationCompleted);
            }
            this.InvokeAsync("GetLoadContents", new object[] {
                        loadNo,
                        dateDel,
                        branchNo}, this.GetLoadContentsOperationCompleted, userState);
        }
        
        private void OnGetLoadContentsOperationCompleted(object arg) {
            if ((this.GetLoadContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoadContentsCompleted(this, new GetLoadContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TransportSchedAdd", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransportSchedAdd(short branchNo, System.DateTime dateDel, short loadNo, string TruckId, out string err) {
            object[] results = this.Invoke("TransportSchedAdd", new object[] {
                        branchNo,
                        dateDel,
                        loadNo,
                        TruckId});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTransportSchedAdd(short branchNo, System.DateTime dateDel, short loadNo, string TruckId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TransportSchedAdd", new object[] {
                        branchNo,
                        dateDel,
                        loadNo,
                        TruckId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndTransportSchedAdd(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransportSchedAddAsync(short branchNo, System.DateTime dateDel, short loadNo, string TruckId) {
            this.TransportSchedAddAsync(branchNo, dateDel, loadNo, TruckId, null);
        }
        
        /// <remarks/>
        public void TransportSchedAddAsync(short branchNo, System.DateTime dateDel, short loadNo, string TruckId, object userState) {
            if ((this.TransportSchedAddOperationCompleted == null)) {
                this.TransportSchedAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransportSchedAddOperationCompleted);
            }
            this.InvokeAsync("TransportSchedAdd", new object[] {
                        branchNo,
                        dateDel,
                        loadNo,
                        TruckId}, this.TransportSchedAddOperationCompleted, userState);
        }
        
        private void OnTransportSchedAddOperationCompleted(object arg) {
            if ((this.TransportSchedAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransportSchedAddCompleted(this, new TransportSchedAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeliveryScheduleUpdate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeliveryScheduleUpdate(int loadNo, int buffNo, int filter, int branchNo, int pickListNo, System.DateTime dateDel, out string err) {
            object[] results = this.Invoke("DeliveryScheduleUpdate", new object[] {
                        loadNo,
                        buffNo,
                        filter,
                        branchNo,
                        pickListNo,
                        dateDel});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeliveryScheduleUpdate(int loadNo, int buffNo, int filter, int branchNo, int pickListNo, System.DateTime dateDel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeliveryScheduleUpdate", new object[] {
                        loadNo,
                        buffNo,
                        filter,
                        branchNo,
                        pickListNo,
                        dateDel}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeliveryScheduleUpdate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeliveryScheduleUpdateAsync(int loadNo, int buffNo, int filter, int branchNo, int pickListNo, System.DateTime dateDel) {
            this.DeliveryScheduleUpdateAsync(loadNo, buffNo, filter, branchNo, pickListNo, dateDel, null);
        }
        
        /// <remarks/>
        public void DeliveryScheduleUpdateAsync(int loadNo, int buffNo, int filter, int branchNo, int pickListNo, System.DateTime dateDel, object userState) {
            if ((this.DeliveryScheduleUpdateOperationCompleted == null)) {
                this.DeliveryScheduleUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeliveryScheduleUpdateOperationCompleted);
            }
            this.InvokeAsync("DeliveryScheduleUpdate", new object[] {
                        loadNo,
                        buffNo,
                        filter,
                        branchNo,
                        pickListNo,
                        dateDel}, this.DeliveryScheduleUpdateOperationCompleted, userState);
        }
        
        private void OnDeliveryScheduleUpdateOperationCompleted(object arg) {
            if ((this.DeliveryScheduleUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeliveryScheduleUpdateCompleted(this, new DeliveryScheduleUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadAvailablePicklists", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAvailablePicklists(short branchNo, char type, out string err) {
            object[] results = this.Invoke("LoadAvailablePicklists", new object[] {
                        branchNo,
                        type});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAvailablePicklists(short branchNo, char type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAvailablePicklists", new object[] {
                        branchNo,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAvailablePicklists(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAvailablePicklistsAsync(short branchNo, char type) {
            this.LoadAvailablePicklistsAsync(branchNo, type, null);
        }
        
        /// <remarks/>
        public void LoadAvailablePicklistsAsync(short branchNo, char type, object userState) {
            if ((this.LoadAvailablePicklistsOperationCompleted == null)) {
                this.LoadAvailablePicklistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAvailablePicklistsOperationCompleted);
            }
            this.InvokeAsync("LoadAvailablePicklists", new object[] {
                        branchNo,
                        type}, this.LoadAvailablePicklistsOperationCompleted, userState);
        }
        
        private void OnLoadAvailablePicklistsOperationCompleted(object arg) {
            if ((this.LoadAvailablePicklistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAvailablePicklistsCompleted(this, new LoadAvailablePicklistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LockItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LockItem(string itemNo, short stockLocn, ref string lockString, out string err) {
            object[] results = this.Invoke("LockItem", new object[] {
                        itemNo,
                        stockLocn,
                        lockString});
            lockString = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLockItem(string itemNo, short stockLocn, string lockString, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LockItem", new object[] {
                        itemNo,
                        stockLocn,
                        lockString}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndLockItem(System.IAsyncResult asyncResult, out string lockString, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            lockString = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LockItemAsync(string itemNo, short stockLocn, string lockString) {
            this.LockItemAsync(itemNo, stockLocn, lockString, null);
        }
        
        /// <remarks/>
        public void LockItemAsync(string itemNo, short stockLocn, string lockString, object userState) {
            if ((this.LockItemOperationCompleted == null)) {
                this.LockItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockItemOperationCompleted);
            }
            this.InvokeAsync("LockItem", new object[] {
                        itemNo,
                        stockLocn,
                        lockString}, this.LockItemOperationCompleted, userState);
        }
        
        private void OnLockItemOperationCompleted(object arg) {
            if ((this.LockItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockItemCompleted(this, new LockItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnlockItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnlockItem(int user, out string err) {
            object[] results = this.Invoke("UnlockItem", new object[] {
                        user});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlockItem(int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlockItem", new object[] {
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUnlockItem(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockItemAsync(int user) {
            this.UnlockItemAsync(user, null);
        }
        
        /// <remarks/>
        public void UnlockItemAsync(int user, object userState) {
            if ((this.UnlockItemOperationCompleted == null)) {
                this.UnlockItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockItemOperationCompleted);
            }
            this.InvokeAsync("UnlockItem", new object[] {
                        user}, this.UnlockItemOperationCompleted, userState);
        }
        
        private void OnUnlockItemOperationCompleted(object arg) {
            if ((this.UnlockItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockItemCompleted(this, new UnlockItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveTransport", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveTransport(string truckId, string driverName, string phoneNo, string carrierNumber, out string err) {
            object[] results = this.Invoke("SaveTransport", new object[] {
                        truckId,
                        driverName,
                        phoneNo,
                        carrierNumber});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveTransport(string truckId, string driverName, string phoneNo, string carrierNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveTransport", new object[] {
                        truckId,
                        driverName,
                        phoneNo,
                        carrierNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveTransport(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTransportAsync(string truckId, string driverName, string phoneNo, string carrierNumber) {
            this.SaveTransportAsync(truckId, driverName, phoneNo, carrierNumber, null);
        }
        
        /// <remarks/>
        public void SaveTransportAsync(string truckId, string driverName, string phoneNo, string carrierNumber, object userState) {
            if ((this.SaveTransportOperationCompleted == null)) {
                this.SaveTransportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTransportOperationCompleted);
            }
            this.InvokeAsync("SaveTransport", new object[] {
                        truckId,
                        driverName,
                        phoneNo,
                        carrierNumber}, this.SaveTransportOperationCompleted, userState);
        }
        
        private void OnSaveTransportOperationCompleted(object arg) {
            if ((this.SaveTransportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTransportCompleted(this, new SaveTransportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTransport", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransport(string truckId, out string err) {
            object[] results = this.Invoke("GetTransport", new object[] {
                        truckId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransport(string truckId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransport", new object[] {
                        truckId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransport(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransportAsync(string truckId) {
            this.GetTransportAsync(truckId, null);
        }
        
        /// <remarks/>
        public void GetTransportAsync(string truckId, object userState) {
            if ((this.GetTransportOperationCompleted == null)) {
                this.GetTransportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransportOperationCompleted);
            }
            this.InvokeAsync("GetTransport", new object[] {
                        truckId}, this.GetTransportOperationCompleted, userState);
        }
        
        private void OnGetTransportOperationCompleted(object arg) {
            if ((this.GetTransportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransportCompleted(this, new GetTransportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteTransport", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteTransport(string truckId, out string err) {
            object[] results = this.Invoke("DeleteTransport", new object[] {
                        truckId});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteTransport(string truckId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteTransport", new object[] {
                        truckId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteTransport(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTransportAsync(string truckId) {
            this.DeleteTransportAsync(truckId, null);
        }
        
        /// <remarks/>
        public void DeleteTransportAsync(string truckId, object userState) {
            if ((this.DeleteTransportOperationCompleted == null)) {
                this.DeleteTransportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTransportOperationCompleted);
            }
            this.InvokeAsync("DeleteTransport", new object[] {
                        truckId}, this.DeleteTransportOperationCompleted, userState);
        }
        
        private void OnDeleteTransportOperationCompleted(object arg) {
            if ((this.DeleteTransportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTransportCompleted(this, new DeleteTransportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDeliveryScheduleDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliveryScheduleDetails(short branchNo, System.DateTime dateDel, short loadNo, out string err) {
            object[] results = this.Invoke("GetDeliveryScheduleDetails", new object[] {
                        branchNo,
                        dateDel,
                        loadNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeliveryScheduleDetails(short branchNo, System.DateTime dateDel, short loadNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeliveryScheduleDetails", new object[] {
                        branchNo,
                        dateDel,
                        loadNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDeliveryScheduleDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryScheduleDetailsAsync(short branchNo, System.DateTime dateDel, short loadNo) {
            this.GetDeliveryScheduleDetailsAsync(branchNo, dateDel, loadNo, null);
        }
        
        /// <remarks/>
        public void GetDeliveryScheduleDetailsAsync(short branchNo, System.DateTime dateDel, short loadNo, object userState) {
            if ((this.GetDeliveryScheduleDetailsOperationCompleted == null)) {
                this.GetDeliveryScheduleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryScheduleDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryScheduleDetails", new object[] {
                        branchNo,
                        dateDel,
                        loadNo}, this.GetDeliveryScheduleDetailsOperationCompleted, userState);
        }
        
        private void OnGetDeliveryScheduleDetailsOperationCompleted(object arg) {
            if ((this.GetDeliveryScheduleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryScheduleDetailsCompleted(this, new GetDeliveryScheduleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/RemoveLoadFromContents", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveLoadFromContents(System.DateTime dateDel, short bufferBranchNo, int buffNo, short loadNo, string accountNo, string notes, out string err) {
            object[] results = this.Invoke("RemoveLoadFromContents", new object[] {
                        dateDel,
                        bufferBranchNo,
                        buffNo,
                        loadNo,
                        accountNo,
                        notes});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveLoadFromContents(System.DateTime dateDel, short bufferBranchNo, int buffNo, short loadNo, string accountNo, string notes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveLoadFromContents", new object[] {
                        dateDel,
                        bufferBranchNo,
                        buffNo,
                        loadNo,
                        accountNo,
                        notes}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemoveLoadFromContents(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveLoadFromContentsAsync(System.DateTime dateDel, short bufferBranchNo, int buffNo, short loadNo, string accountNo, string notes) {
            this.RemoveLoadFromContentsAsync(dateDel, bufferBranchNo, buffNo, loadNo, accountNo, notes, null);
        }
        
        /// <remarks/>
        public void RemoveLoadFromContentsAsync(System.DateTime dateDel, short bufferBranchNo, int buffNo, short loadNo, string accountNo, string notes, object userState) {
            if ((this.RemoveLoadFromContentsOperationCompleted == null)) {
                this.RemoveLoadFromContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLoadFromContentsOperationCompleted);
            }
            this.InvokeAsync("RemoveLoadFromContents", new object[] {
                        dateDel,
                        bufferBranchNo,
                        buffNo,
                        loadNo,
                        accountNo,
                        notes}, this.RemoveLoadFromContentsOperationCompleted, userState);
        }
        
        private void OnRemoveLoadFromContentsOperationCompleted(object arg) {
            if ((this.RemoveLoadFromContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLoadFromContentsCompleted(this, new RemoveLoadFromContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPickListSchedule", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPickListSchedule(int filter, int PickListNo, int BuffNo, out string err) {
            object[] results = this.Invoke("GetPickListSchedule", new object[] {
                        filter,
                        PickListNo,
                        BuffNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickListSchedule(int filter, int PickListNo, int BuffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickListSchedule", new object[] {
                        filter,
                        PickListNo,
                        BuffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPickListSchedule(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickListScheduleAsync(int filter, int PickListNo, int BuffNo) {
            this.GetPickListScheduleAsync(filter, PickListNo, BuffNo, null);
        }
        
        /// <remarks/>
        public void GetPickListScheduleAsync(int filter, int PickListNo, int BuffNo, object userState) {
            if ((this.GetPickListScheduleOperationCompleted == null)) {
                this.GetPickListScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickListScheduleOperationCompleted);
            }
            this.InvokeAsync("GetPickListSchedule", new object[] {
                        filter,
                        PickListNo,
                        BuffNo}, this.GetPickListScheduleOperationCompleted, userState);
        }
        
        private void OnGetPickListScheduleOperationCompleted(object arg) {
            if ((this.GetPickListScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickListScheduleCompleted(this, new GetPickListScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AccountGetAccountNoByBuffNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AccountGetAccountNoByBuffNo(int stockLocn, int BuffNo, out string err) {
            object[] results = this.Invoke("AccountGetAccountNoByBuffNo", new object[] {
                        stockLocn,
                        BuffNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAccountGetAccountNoByBuffNo(int stockLocn, int BuffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AccountGetAccountNoByBuffNo", new object[] {
                        stockLocn,
                        BuffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAccountGetAccountNoByBuffNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountGetAccountNoByBuffNoAsync(int stockLocn, int BuffNo) {
            this.AccountGetAccountNoByBuffNoAsync(stockLocn, BuffNo, null);
        }
        
        /// <remarks/>
        public void AccountGetAccountNoByBuffNoAsync(int stockLocn, int BuffNo, object userState) {
            if ((this.AccountGetAccountNoByBuffNoOperationCompleted == null)) {
                this.AccountGetAccountNoByBuffNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountGetAccountNoByBuffNoOperationCompleted);
            }
            this.InvokeAsync("AccountGetAccountNoByBuffNo", new object[] {
                        stockLocn,
                        BuffNo}, this.AccountGetAccountNoByBuffNoOperationCompleted, userState);
        }
        
        private void OnAccountGetAccountNoByBuffNoOperationCompleted(object arg) {
            if ((this.AccountGetAccountNoByBuffNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountGetAccountNoByBuffNoCompleted(this, new AccountGetAccountNoByBuffNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AuditReprint", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string AuditReprint(string accountNo, int agreementNo, string docType) {
            object[] results = this.Invoke("AuditReprint", new object[] {
                        accountNo,
                        agreementNo,
                        docType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuditReprint(string accountNo, int agreementNo, string docType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuditReprint", new object[] {
                        accountNo,
                        agreementNo,
                        docType}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAuditReprint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuditReprintAsync(string accountNo, int agreementNo, string docType) {
            this.AuditReprintAsync(accountNo, agreementNo, docType, null);
        }
        
        /// <remarks/>
        public void AuditReprintAsync(string accountNo, int agreementNo, string docType, object userState) {
            if ((this.AuditReprintOperationCompleted == null)) {
                this.AuditReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditReprintOperationCompleted);
            }
            this.InvokeAsync("AuditReprint", new object[] {
                        accountNo,
                        agreementNo,
                        docType}, this.AuditReprintOperationCompleted, userState);
        }
        
        private void OnAuditReprintOperationCompleted(object arg) {
            if ((this.AuditReprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditReprintCompleted(this, new AuditReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AuditDiscount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string AuditDiscount(string accountNo, int agreementNo, string discountItemNo, string parentItemNo, short stockLocn, decimal amount, int salesPerson, int authorisedBy) {
            object[] results = this.Invoke("AuditDiscount", new object[] {
                        accountNo,
                        agreementNo,
                        discountItemNo,
                        parentItemNo,
                        stockLocn,
                        amount,
                        salesPerson,
                        authorisedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuditDiscount(string accountNo, int agreementNo, string discountItemNo, string parentItemNo, short stockLocn, decimal amount, int salesPerson, int authorisedBy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuditDiscount", new object[] {
                        accountNo,
                        agreementNo,
                        discountItemNo,
                        parentItemNo,
                        stockLocn,
                        amount,
                        salesPerson,
                        authorisedBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAuditDiscount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuditDiscountAsync(string accountNo, int agreementNo, string discountItemNo, string parentItemNo, short stockLocn, decimal amount, int salesPerson, int authorisedBy) {
            this.AuditDiscountAsync(accountNo, agreementNo, discountItemNo, parentItemNo, stockLocn, amount, salesPerson, authorisedBy, null);
        }
        
        /// <remarks/>
        public void AuditDiscountAsync(string accountNo, int agreementNo, string discountItemNo, string parentItemNo, short stockLocn, decimal amount, int salesPerson, int authorisedBy, object userState) {
            if ((this.AuditDiscountOperationCompleted == null)) {
                this.AuditDiscountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditDiscountOperationCompleted);
            }
            this.InvokeAsync("AuditDiscount", new object[] {
                        accountNo,
                        agreementNo,
                        discountItemNo,
                        parentItemNo,
                        stockLocn,
                        amount,
                        salesPerson,
                        authorisedBy}, this.AuditDiscountOperationCompleted, userState);
        }
        
        private void OnAuditDiscountOperationCompleted(object arg) {
            if ((this.AuditDiscountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditDiscountCompleted(this, new AuditDiscountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SUCBGetDelTotals", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SUCBGetDelTotals(int runno, bool liveDatabase, out decimal delTotal, out string err) {
            object[] results = this.Invoke("SUCBGetDelTotals", new object[] {
                        runno,
                        liveDatabase});
            delTotal = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSUCBGetDelTotals(int runno, bool liveDatabase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SUCBGetDelTotals", new object[] {
                        runno,
                        liveDatabase}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSUCBGetDelTotals(System.IAsyncResult asyncResult, out decimal delTotal, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            delTotal = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SUCBGetDelTotalsAsync(int runno, bool liveDatabase) {
            this.SUCBGetDelTotalsAsync(runno, liveDatabase, null);
        }
        
        /// <remarks/>
        public void SUCBGetDelTotalsAsync(int runno, bool liveDatabase, object userState) {
            if ((this.SUCBGetDelTotalsOperationCompleted == null)) {
                this.SUCBGetDelTotalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSUCBGetDelTotalsOperationCompleted);
            }
            this.InvokeAsync("SUCBGetDelTotals", new object[] {
                        runno,
                        liveDatabase}, this.SUCBGetDelTotalsOperationCompleted, userState);
        }
        
        private void OnSUCBGetDelTotalsOperationCompleted(object arg) {
            if ((this.SUCBGetDelTotalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SUCBGetDelTotalsCompleted(this, new SUCBGetDelTotalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SUCBGetDelDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SUCBGetDelDetails(string datetrans, string branchNo, out string err) {
            object[] results = this.Invoke("SUCBGetDelDetails", new object[] {
                        datetrans,
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSUCBGetDelDetails(string datetrans, string branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SUCBGetDelDetails", new object[] {
                        datetrans,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSUCBGetDelDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SUCBGetDelDetailsAsync(string datetrans, string branchNo) {
            this.SUCBGetDelDetailsAsync(datetrans, branchNo, null);
        }
        
        /// <remarks/>
        public void SUCBGetDelDetailsAsync(string datetrans, string branchNo, object userState) {
            if ((this.SUCBGetDelDetailsOperationCompleted == null)) {
                this.SUCBGetDelDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSUCBGetDelDetailsOperationCompleted);
            }
            this.InvokeAsync("SUCBGetDelDetails", new object[] {
                        datetrans,
                        branchNo}, this.SUCBGetDelDetailsOperationCompleted, userState);
        }
        
        private void OnSUCBGetDelDetailsOperationCompleted(object arg) {
            if ((this.SUCBGetDelDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SUCBGetDelDetailsCompleted(this, new SUCBGetDelDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetExchangeDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExchangeDetails(string acctNo, int agrmtNo, out string err) {
            object[] results = this.Invoke("GetExchangeDetails", new object[] {
                        acctNo,
                        agrmtNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExchangeDetails(string acctNo, int agrmtNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExchangeDetails", new object[] {
                        acctNo,
                        agrmtNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetExchangeDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeDetailsAsync(string acctNo, int agrmtNo) {
            this.GetExchangeDetailsAsync(acctNo, agrmtNo, null);
        }
        
        /// <remarks/>
        public void GetExchangeDetailsAsync(string acctNo, int agrmtNo, object userState) {
            if ((this.GetExchangeDetailsOperationCompleted == null)) {
                this.GetExchangeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetExchangeDetails", new object[] {
                        acctNo,
                        agrmtNo}, this.GetExchangeDetailsOperationCompleted, userState);
        }
        
        private void OnGetExchangeDetailsOperationCompleted(object arg) {
            if ((this.GetExchangeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeDetailsCompleted(this, new GetExchangeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsDotNetWarehouse", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDotNetWarehouse(short branchNo, out string err) {
            object[] results = this.Invoke("IsDotNetWarehouse", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsDotNetWarehouse(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsDotNetWarehouse", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsDotNetWarehouse(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDotNetWarehouseAsync(short branchNo) {
            this.IsDotNetWarehouseAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void IsDotNetWarehouseAsync(short branchNo, object userState) {
            if ((this.IsDotNetWarehouseOperationCompleted == null)) {
                this.IsDotNetWarehouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDotNetWarehouseOperationCompleted);
            }
            this.InvokeAsync("IsDotNetWarehouse", new object[] {
                        branchNo}, this.IsDotNetWarehouseOperationCompleted, userState);
        }
        
        private void OnIsDotNetWarehouseOperationCompleted(object arg) {
            if ((this.IsDotNetWarehouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDotNetWarehouseCompleted(this, new IsDotNetWarehouseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsThirdPartyWarehouse", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsThirdPartyWarehouse(short branchNo, out string err) {
            object[] results = this.Invoke("IsThirdPartyWarehouse", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsThirdPartyWarehouse(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsThirdPartyWarehouse", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsThirdPartyWarehouse(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsThirdPartyWarehouseAsync(short branchNo) {
            this.IsThirdPartyWarehouseAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void IsThirdPartyWarehouseAsync(short branchNo, object userState) {
            if ((this.IsThirdPartyWarehouseOperationCompleted == null)) {
                this.IsThirdPartyWarehouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsThirdPartyWarehouseOperationCompleted);
            }
            this.InvokeAsync("IsThirdPartyWarehouse", new object[] {
                        branchNo}, this.IsThirdPartyWarehouseOperationCompleted, userState);
        }
        
        private void OnIsThirdPartyWarehouseOperationCompleted(object arg) {
            if ((this.IsThirdPartyWarehouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsThirdPartyWarehouseCompleted(this, new IsThirdPartyWarehouseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDeliverySchedules", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliverySchedules(
                    System.DateTime fromDate, 
                    System.DateTime toDate, 
                    string deliveryArea, 
                    int includeDeliveries, 
                    int includeCollections, 
                    string majorProductCategory, 
                    string minorProductCategory, 
                    string acctNo, 
                    int user, 
                    int branchNo, 
                    int delNotBranchNo, 
                    string truckID, 
                    bool includeAssembly, 
                    bool includeNonAssembly, 
                    out System.DateTime timeLocked, 
                    out string err) {
            object[] results = this.Invoke("GetDeliverySchedules", new object[] {
                        fromDate,
                        toDate,
                        deliveryArea,
                        includeDeliveries,
                        includeCollections,
                        majorProductCategory,
                        minorProductCategory,
                        acctNo,
                        user,
                        branchNo,
                        delNotBranchNo,
                        truckID,
                        includeAssembly,
                        includeNonAssembly});
            timeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeliverySchedules(
                    System.DateTime fromDate, 
                    System.DateTime toDate, 
                    string deliveryArea, 
                    int includeDeliveries, 
                    int includeCollections, 
                    string majorProductCategory, 
                    string minorProductCategory, 
                    string acctNo, 
                    int user, 
                    int branchNo, 
                    int delNotBranchNo, 
                    string truckID, 
                    bool includeAssembly, 
                    bool includeNonAssembly, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetDeliverySchedules", new object[] {
                        fromDate,
                        toDate,
                        deliveryArea,
                        includeDeliveries,
                        includeCollections,
                        majorProductCategory,
                        minorProductCategory,
                        acctNo,
                        user,
                        branchNo,
                        delNotBranchNo,
                        truckID,
                        includeAssembly,
                        includeNonAssembly}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDeliverySchedules(System.IAsyncResult asyncResult, out System.DateTime timeLocked, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            timeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliverySchedulesAsync(System.DateTime fromDate, System.DateTime toDate, string deliveryArea, int includeDeliveries, int includeCollections, string majorProductCategory, string minorProductCategory, string acctNo, int user, int branchNo, int delNotBranchNo, string truckID, bool includeAssembly, bool includeNonAssembly) {
            this.GetDeliverySchedulesAsync(fromDate, toDate, deliveryArea, includeDeliveries, includeCollections, majorProductCategory, minorProductCategory, acctNo, user, branchNo, delNotBranchNo, truckID, includeAssembly, includeNonAssembly, null);
        }
        
        /// <remarks/>
        public void GetDeliverySchedulesAsync(System.DateTime fromDate, System.DateTime toDate, string deliveryArea, int includeDeliveries, int includeCollections, string majorProductCategory, string minorProductCategory, string acctNo, int user, int branchNo, int delNotBranchNo, string truckID, bool includeAssembly, bool includeNonAssembly, object userState) {
            if ((this.GetDeliverySchedulesOperationCompleted == null)) {
                this.GetDeliverySchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliverySchedulesOperationCompleted);
            }
            this.InvokeAsync("GetDeliverySchedules", new object[] {
                        fromDate,
                        toDate,
                        deliveryArea,
                        includeDeliveries,
                        includeCollections,
                        majorProductCategory,
                        minorProductCategory,
                        acctNo,
                        user,
                        branchNo,
                        delNotBranchNo,
                        truckID,
                        includeAssembly,
                        includeNonAssembly}, this.GetDeliverySchedulesOperationCompleted, userState);
        }
        
        private void OnGetDeliverySchedulesOperationCompleted(object arg) {
            if ((this.GetDeliverySchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliverySchedulesCompleted(this, new GetDeliverySchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadAvailableTransPicklists", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadAvailableTransPicklists(short branchNo, out string err) {
            object[] results = this.Invoke("LoadAvailableTransPicklists", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadAvailableTransPicklists(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadAvailableTransPicklists", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadAvailableTransPicklists(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAvailableTransPicklistsAsync(short branchNo) {
            this.LoadAvailableTransPicklistsAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void LoadAvailableTransPicklistsAsync(short branchNo, object userState) {
            if ((this.LoadAvailableTransPicklistsOperationCompleted == null)) {
                this.LoadAvailableTransPicklistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAvailableTransPicklistsOperationCompleted);
            }
            this.InvokeAsync("LoadAvailableTransPicklists", new object[] {
                        branchNo}, this.LoadAvailableTransPicklistsOperationCompleted, userState);
        }
        
        private void OnLoadAvailableTransPicklistsOperationCompleted(object arg) {
            if ((this.LoadAvailableTransPicklistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAvailableTransPicklistsCompleted(this, new LoadAvailableTransPicklistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTransPickListDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransPickListDetails(short branchNo, int transPickickListNo, out string err) {
            object[] results = this.Invoke("GetTransPickListDetails", new object[] {
                        branchNo,
                        transPickickListNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransPickListDetails(short branchNo, int transPickickListNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransPickListDetails", new object[] {
                        branchNo,
                        transPickickListNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransPickListDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransPickListDetailsAsync(short branchNo, int transPickickListNo) {
            this.GetTransPickListDetailsAsync(branchNo, transPickickListNo, null);
        }
        
        /// <remarks/>
        public void GetTransPickListDetailsAsync(short branchNo, int transPickickListNo, object userState) {
            if ((this.GetTransPickListDetailsOperationCompleted == null)) {
                this.GetTransPickListDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransPickListDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTransPickListDetails", new object[] {
                        branchNo,
                        transPickickListNo}, this.GetTransPickListDetailsOperationCompleted, userState);
        }
        
        private void OnGetTransPickListDetailsOperationCompleted(object arg) {
            if ((this.GetTransPickListDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransPickListDetailsCompleted(this, new GetTransPickListDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRevisedSchedules", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRevisedSchedules(short branchNo, int loadNo, int pickNo, System.DateTime reviseFrom, System.DateTime reviseTo, int user, out System.DateTime timeLocked, out string err) {
            object[] results = this.Invoke("GetRevisedSchedules", new object[] {
                        branchNo,
                        loadNo,
                        pickNo,
                        reviseFrom,
                        reviseTo,
                        user});
            timeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRevisedSchedules(short branchNo, int loadNo, int pickNo, System.DateTime reviseFrom, System.DateTime reviseTo, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRevisedSchedules", new object[] {
                        branchNo,
                        loadNo,
                        pickNo,
                        reviseFrom,
                        reviseTo,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRevisedSchedules(System.IAsyncResult asyncResult, out System.DateTime timeLocked, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            timeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRevisedSchedulesAsync(short branchNo, int loadNo, int pickNo, System.DateTime reviseFrom, System.DateTime reviseTo, int user) {
            this.GetRevisedSchedulesAsync(branchNo, loadNo, pickNo, reviseFrom, reviseTo, user, null);
        }
        
        /// <remarks/>
        public void GetRevisedSchedulesAsync(short branchNo, int loadNo, int pickNo, System.DateTime reviseFrom, System.DateTime reviseTo, int user, object userState) {
            if ((this.GetRevisedSchedulesOperationCompleted == null)) {
                this.GetRevisedSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRevisedSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetRevisedSchedules", new object[] {
                        branchNo,
                        loadNo,
                        pickNo,
                        reviseFrom,
                        reviseTo,
                        user}, this.GetRevisedSchedulesOperationCompleted, userState);
        }
        
        private void OnGetRevisedSchedulesOperationCompleted(object arg) {
            if ((this.GetRevisedSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRevisedSchedulesCompleted(this, new GetRevisedSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRevisedScheduleDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRevisedScheduleDetails(string acctNo, int buffNo, out string err) {
            object[] results = this.Invoke("GetRevisedScheduleDetails", new object[] {
                        acctNo,
                        buffNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRevisedScheduleDetails(string acctNo, int buffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRevisedScheduleDetails", new object[] {
                        acctNo,
                        buffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRevisedScheduleDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRevisedScheduleDetailsAsync(string acctNo, int buffNo) {
            this.GetRevisedScheduleDetailsAsync(acctNo, buffNo, null);
        }
        
        /// <remarks/>
        public void GetRevisedScheduleDetailsAsync(string acctNo, int buffNo, object userState) {
            if ((this.GetRevisedScheduleDetailsOperationCompleted == null)) {
                this.GetRevisedScheduleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRevisedScheduleDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRevisedScheduleDetails", new object[] {
                        acctNo,
                        buffNo}, this.GetRevisedScheduleDetailsOperationCompleted, userState);
        }
        
        private void OnGetRevisedScheduleDetailsOperationCompleted(object arg) {
            if ((this.GetRevisedScheduleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRevisedScheduleDetailsCompleted(this, new GetRevisedScheduleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetRevisedScheduleChanges", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRevisedScheduleChanges(string acctNo, int buffNo, int itemID, short locn, out string err) {
            object[] results = this.Invoke("GetRevisedScheduleChanges", new object[] {
                        acctNo,
                        buffNo,
                        itemID,
                        locn});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRevisedScheduleChanges(string acctNo, int buffNo, int itemID, short locn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRevisedScheduleChanges", new object[] {
                        acctNo,
                        buffNo,
                        itemID,
                        locn}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRevisedScheduleChanges(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRevisedScheduleChangesAsync(string acctNo, int buffNo, int itemID, short locn) {
            this.GetRevisedScheduleChangesAsync(acctNo, buffNo, itemID, locn, null);
        }
        
        /// <remarks/>
        public void GetRevisedScheduleChangesAsync(string acctNo, int buffNo, int itemID, short locn, object userState) {
            if ((this.GetRevisedScheduleChangesOperationCompleted == null)) {
                this.GetRevisedScheduleChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRevisedScheduleChangesOperationCompleted);
            }
            this.InvokeAsync("GetRevisedScheduleChanges", new object[] {
                        acctNo,
                        buffNo,
                        itemID,
                        locn}, this.GetRevisedScheduleChangesOperationCompleted, userState);
        }
        
        private void OnGetRevisedScheduleChangesOperationCompleted(object arg) {
            if ((this.GetRevisedScheduleChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRevisedScheduleChangesCompleted(this, new GetRevisedScheduleChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ConfirmScheduleChanges", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ConfirmScheduleChanges(short loadNo, int pickListNo, int pickListBranch, string acctNo, int agrmtno, int itemID, short locn, int buffNo, int origBuffNo, string removal, int origItemID, int tranSchedNo, int tranSchedNoBranch, out string err) {
            object[] results = this.Invoke("ConfirmScheduleChanges", new object[] {
                        loadNo,
                        pickListNo,
                        pickListBranch,
                        acctNo,
                        agrmtno,
                        itemID,
                        locn,
                        buffNo,
                        origBuffNo,
                        removal,
                        origItemID,
                        tranSchedNo,
                        tranSchedNoBranch});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConfirmScheduleChanges(short loadNo, int pickListNo, int pickListBranch, string acctNo, int agrmtno, int itemID, short locn, int buffNo, int origBuffNo, string removal, int origItemID, int tranSchedNo, int tranSchedNoBranch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConfirmScheduleChanges", new object[] {
                        loadNo,
                        pickListNo,
                        pickListBranch,
                        acctNo,
                        agrmtno,
                        itemID,
                        locn,
                        buffNo,
                        origBuffNo,
                        removal,
                        origItemID,
                        tranSchedNo,
                        tranSchedNoBranch}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndConfirmScheduleChanges(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmScheduleChangesAsync(short loadNo, int pickListNo, int pickListBranch, string acctNo, int agrmtno, int itemID, short locn, int buffNo, int origBuffNo, string removal, int origItemID, int tranSchedNo, int tranSchedNoBranch) {
            this.ConfirmScheduleChangesAsync(loadNo, pickListNo, pickListBranch, acctNo, agrmtno, itemID, locn, buffNo, origBuffNo, removal, origItemID, tranSchedNo, tranSchedNoBranch, null);
        }
        
        /// <remarks/>
        public void ConfirmScheduleChangesAsync(short loadNo, int pickListNo, int pickListBranch, string acctNo, int agrmtno, int itemID, short locn, int buffNo, int origBuffNo, string removal, int origItemID, int tranSchedNo, int tranSchedNoBranch, object userState) {
            if ((this.ConfirmScheduleChangesOperationCompleted == null)) {
                this.ConfirmScheduleChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmScheduleChangesOperationCompleted);
            }
            this.InvokeAsync("ConfirmScheduleChanges", new object[] {
                        loadNo,
                        pickListNo,
                        pickListBranch,
                        acctNo,
                        agrmtno,
                        itemID,
                        locn,
                        buffNo,
                        origBuffNo,
                        removal,
                        origItemID,
                        tranSchedNo,
                        tranSchedNoBranch}, this.ConfirmScheduleChangesOperationCompleted, userState);
        }
        
        private void OnConfirmScheduleChangesOperationCompleted(object arg) {
            if ((this.ConfirmScheduleChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmScheduleChangesCompleted(this, new ConfirmScheduleChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAdditionalItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAdditionalItems(string acctNo, short loadNo, int pickListNo, int pickListBranch, out string err) {
            object[] results = this.Invoke("GetAdditionalItems", new object[] {
                        acctNo,
                        loadNo,
                        pickListNo,
                        pickListBranch});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAdditionalItems(string acctNo, short loadNo, int pickListNo, int pickListBranch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAdditionalItems", new object[] {
                        acctNo,
                        loadNo,
                        pickListNo,
                        pickListBranch}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAdditionalItems(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdditionalItemsAsync(string acctNo, short loadNo, int pickListNo, int pickListBranch) {
            this.GetAdditionalItemsAsync(acctNo, loadNo, pickListNo, pickListBranch, null);
        }
        
        /// <remarks/>
        public void GetAdditionalItemsAsync(string acctNo, short loadNo, int pickListNo, int pickListBranch, object userState) {
            if ((this.GetAdditionalItemsOperationCompleted == null)) {
                this.GetAdditionalItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdditionalItemsOperationCompleted);
            }
            this.InvokeAsync("GetAdditionalItems", new object[] {
                        acctNo,
                        loadNo,
                        pickListNo,
                        pickListBranch}, this.GetAdditionalItemsOperationCompleted, userState);
        }
        
        private void OnGetAdditionalItemsOperationCompleted(object arg) {
            if ((this.GetAdditionalItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdditionalItemsCompleted(this, new GetAdditionalItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteDeliveryLoad", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteDeliveryLoad(short stockLocn, int buffNo, out string err) {
            object[] results = this.Invoke("DeleteDeliveryLoad", new object[] {
                        stockLocn,
                        buffNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteDeliveryLoad(short stockLocn, int buffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteDeliveryLoad", new object[] {
                        stockLocn,
                        buffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteDeliveryLoad(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeliveryLoadAsync(short stockLocn, int buffNo) {
            this.DeleteDeliveryLoadAsync(stockLocn, buffNo, null);
        }
        
        /// <remarks/>
        public void DeleteDeliveryLoadAsync(short stockLocn, int buffNo, object userState) {
            if ((this.DeleteDeliveryLoadOperationCompleted == null)) {
                this.DeleteDeliveryLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeliveryLoadOperationCompleted);
            }
            this.InvokeAsync("DeleteDeliveryLoad", new object[] {
                        stockLocn,
                        buffNo}, this.DeleteDeliveryLoadOperationCompleted, userState);
        }
        
        private void OnDeleteDeliveryLoadOperationCompleted(object arg) {
            if ((this.DeleteDeliveryLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeliveryLoadCompleted(this, new DeleteDeliveryLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetGiroPending", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetGiroPending(string accountNo, out string err) {
            object[] results = this.Invoke("GetGiroPending", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGiroPending(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGiroPending", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndGetGiroPending(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiroPendingAsync(string accountNo) {
            this.GetGiroPendingAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetGiroPendingAsync(string accountNo, object userState) {
            if ((this.GetGiroPendingOperationCompleted == null)) {
                this.GetGiroPendingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiroPendingOperationCompleted);
            }
            this.InvokeAsync("GetGiroPending", new object[] {
                        accountNo}, this.GetGiroPendingOperationCompleted, userState);
        }
        
        private void OnGetGiroPendingOperationCompleted(object arg) {
            if ((this.GetGiroPendingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiroPendingCompleted(this, new GetGiroPendingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsWarrantyRenewal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsWarrantyRenewal(string accountNo, out string err) {
            object[] results = this.Invoke("IsWarrantyRenewal", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsWarrantyRenewal(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsWarrantyRenewal", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsWarrantyRenewal(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsWarrantyRenewalAsync(string accountNo) {
            this.IsWarrantyRenewalAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void IsWarrantyRenewalAsync(string accountNo, object userState) {
            if ((this.IsWarrantyRenewalOperationCompleted == null)) {
                this.IsWarrantyRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsWarrantyRenewalOperationCompleted);
            }
            this.InvokeAsync("IsWarrantyRenewal", new object[] {
                        accountNo}, this.IsWarrantyRenewalOperationCompleted, userState);
        }
        
        private void OnIsWarrantyRenewalOperationCompleted(object arg) {
            if ((this.IsWarrantyRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsWarrantyRenewalCompleted(this, new IsWarrantyRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ValidDecimal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidDecimal(int itemId, out string err) {
            object[] results = this.Invoke("ValidDecimal", new object[] {
                        itemId});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidDecimal(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidDecimal", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndValidDecimal(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidDecimalAsync(int itemId) {
            this.ValidDecimalAsync(itemId, null);
        }
        
        /// <remarks/>
        public void ValidDecimalAsync(int itemId, object userState) {
            if ((this.ValidDecimalOperationCompleted == null)) {
                this.ValidDecimalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidDecimalOperationCompleted);
            }
            this.InvokeAsync("ValidDecimal", new object[] {
                        itemId}, this.ValidDecimalOperationCompleted, userState);
        }
        
        private void OnValidDecimalOperationCompleted(object arg) {
            if ((this.ValidDecimalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidDecimalCompleted(this, new ValidDecimalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/FincoBalances", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FincoBalances(System.DateTime datefrom, System.DateTime dateto, out string err) {
            object[] results = this.Invoke("FincoBalances", new object[] {
                        datefrom,
                        dateto});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFincoBalances(System.DateTime datefrom, System.DateTime dateto, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FincoBalances", new object[] {
                        datefrom,
                        dateto}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndFincoBalances(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FincoBalancesAsync(System.DateTime datefrom, System.DateTime dateto) {
            this.FincoBalancesAsync(datefrom, dateto, null);
        }
        
        /// <remarks/>
        public void FincoBalancesAsync(System.DateTime datefrom, System.DateTime dateto, object userState) {
            if ((this.FincoBalancesOperationCompleted == null)) {
                this.FincoBalancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFincoBalancesOperationCompleted);
            }
            this.InvokeAsync("FincoBalances", new object[] {
                        datefrom,
                        dateto}, this.FincoBalancesOperationCompleted, userState);
        }
        
        private void OnFincoBalancesOperationCompleted(object arg) {
            if ((this.FincoBalancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FincoBalancesCompleted(this, new FincoBalancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteSpiff", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSpiff(string acctNo, string itemNo, short stockLocn, out string err) {
            object[] results = this.Invoke("DeleteSpiff", new object[] {
                        acctNo,
                        itemNo,
                        stockLocn});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSpiff(string acctNo, string itemNo, short stockLocn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSpiff", new object[] {
                        acctNo,
                        itemNo,
                        stockLocn}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteSpiff(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSpiffAsync(string acctNo, string itemNo, short stockLocn) {
            this.DeleteSpiffAsync(acctNo, itemNo, stockLocn, null);
        }
        
        /// <remarks/>
        public void DeleteSpiffAsync(string acctNo, string itemNo, short stockLocn, object userState) {
            if ((this.DeleteSpiffOperationCompleted == null)) {
                this.DeleteSpiffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSpiffOperationCompleted);
            }
            this.InvokeAsync("DeleteSpiff", new object[] {
                        acctNo,
                        itemNo,
                        stockLocn}, this.DeleteSpiffOperationCompleted, userState);
        }
        
        private void OnDeleteSpiffOperationCompleted(object arg) {
            if ((this.DeleteSpiffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSpiffCompleted(this, new DeleteSpiffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSpiffs", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpiffs(string itemNo, short stocklocn, int itemId, out string err) {
            object[] results = this.Invoke("GetSpiffs", new object[] {
                        itemNo,
                        stocklocn,
                        itemId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSpiffs(string itemNo, short stocklocn, int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSpiffs", new object[] {
                        itemNo,
                        stocklocn,
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSpiffs(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpiffsAsync(string itemNo, short stocklocn, int itemId) {
            this.GetSpiffsAsync(itemNo, stocklocn, itemId, null);
        }
        
        /// <remarks/>
        public void GetSpiffsAsync(string itemNo, short stocklocn, int itemId, object userState) {
            if ((this.GetSpiffsOperationCompleted == null)) {
                this.GetSpiffsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpiffsOperationCompleted);
            }
            this.InvokeAsync("GetSpiffs", new object[] {
                        itemNo,
                        stocklocn,
                        itemId}, this.GetSpiffsOperationCompleted, userState);
        }
        
        private void OnGetSpiffsOperationCompleted(object arg) {
            if ((this.GetSpiffsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpiffsCompleted(this, new GetSpiffsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/WarrantySalesReport", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet WarrantySalesReport(
                    string warrantyType, 
                    string branch, 
                    string salesPerson, 
                    string categorySet, 
                    short includeCash, 
                    short includeCredit, 
                    short includeSpecial, 
                    System.DateTime dateFrom, 
                    System.DateTime dateTo, 
                    short branchTotal, 
                    short categoryTotal, 
                    short salesPersonTotal, 
                    short acctTypeTotal, 
                    string datesAre, 
                    int liveDatabase, 
                    short includeRep, 
                    short includeCanc, 
                    out string err) {
            object[] results = this.Invoke("WarrantySalesReport", new object[] {
                        warrantyType,
                        branch,
                        salesPerson,
                        categorySet,
                        includeCash,
                        includeCredit,
                        includeSpecial,
                        dateFrom,
                        dateTo,
                        branchTotal,
                        categoryTotal,
                        salesPersonTotal,
                        acctTypeTotal,
                        datesAre,
                        liveDatabase,
                        includeRep,
                        includeCanc});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWarrantySalesReport(
                    string warrantyType, 
                    string branch, 
                    string salesPerson, 
                    string categorySet, 
                    short includeCash, 
                    short includeCredit, 
                    short includeSpecial, 
                    System.DateTime dateFrom, 
                    System.DateTime dateTo, 
                    short branchTotal, 
                    short categoryTotal, 
                    short salesPersonTotal, 
                    short acctTypeTotal, 
                    string datesAre, 
                    int liveDatabase, 
                    short includeRep, 
                    short includeCanc, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("WarrantySalesReport", new object[] {
                        warrantyType,
                        branch,
                        salesPerson,
                        categorySet,
                        includeCash,
                        includeCredit,
                        includeSpecial,
                        dateFrom,
                        dateTo,
                        branchTotal,
                        categoryTotal,
                        salesPersonTotal,
                        acctTypeTotal,
                        datesAre,
                        liveDatabase,
                        includeRep,
                        includeCanc}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndWarrantySalesReport(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void WarrantySalesReportAsync(
                    string warrantyType, 
                    string branch, 
                    string salesPerson, 
                    string categorySet, 
                    short includeCash, 
                    short includeCredit, 
                    short includeSpecial, 
                    System.DateTime dateFrom, 
                    System.DateTime dateTo, 
                    short branchTotal, 
                    short categoryTotal, 
                    short salesPersonTotal, 
                    short acctTypeTotal, 
                    string datesAre, 
                    int liveDatabase, 
                    short includeRep, 
                    short includeCanc) {
            this.WarrantySalesReportAsync(warrantyType, branch, salesPerson, categorySet, includeCash, includeCredit, includeSpecial, dateFrom, dateTo, branchTotal, categoryTotal, salesPersonTotal, acctTypeTotal, datesAre, liveDatabase, includeRep, includeCanc, null);
        }
        
        /// <remarks/>
        public void WarrantySalesReportAsync(
                    string warrantyType, 
                    string branch, 
                    string salesPerson, 
                    string categorySet, 
                    short includeCash, 
                    short includeCredit, 
                    short includeSpecial, 
                    System.DateTime dateFrom, 
                    System.DateTime dateTo, 
                    short branchTotal, 
                    short categoryTotal, 
                    short salesPersonTotal, 
                    short acctTypeTotal, 
                    string datesAre, 
                    int liveDatabase, 
                    short includeRep, 
                    short includeCanc, 
                    object userState) {
            if ((this.WarrantySalesReportOperationCompleted == null)) {
                this.WarrantySalesReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWarrantySalesReportOperationCompleted);
            }
            this.InvokeAsync("WarrantySalesReport", new object[] {
                        warrantyType,
                        branch,
                        salesPerson,
                        categorySet,
                        includeCash,
                        includeCredit,
                        includeSpecial,
                        dateFrom,
                        dateTo,
                        branchTotal,
                        categoryTotal,
                        salesPersonTotal,
                        acctTypeTotal,
                        datesAre,
                        liveDatabase,
                        includeRep,
                        includeCanc}, this.WarrantySalesReportOperationCompleted, userState);
        }
        
        private void OnWarrantySalesReportOperationCompleted(object arg) {
            if ((this.WarrantySalesReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WarrantySalesReportCompleted(this, new WarrantySalesReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/FincoTransactions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FincoTransactions(System.DateTime datefrom, System.DateTime dateto, string transtypeset, out string err) {
            object[] results = this.Invoke("FincoTransactions", new object[] {
                        datefrom,
                        dateto,
                        transtypeset});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFincoTransactions(System.DateTime datefrom, System.DateTime dateto, string transtypeset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FincoTransactions", new object[] {
                        datefrom,
                        dateto,
                        transtypeset}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndFincoTransactions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FincoTransactionsAsync(System.DateTime datefrom, System.DateTime dateto, string transtypeset) {
            this.FincoTransactionsAsync(datefrom, dateto, transtypeset, null);
        }
        
        /// <remarks/>
        public void FincoTransactionsAsync(System.DateTime datefrom, System.DateTime dateto, string transtypeset, object userState) {
            if ((this.FincoTransactionsOperationCompleted == null)) {
                this.FincoTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFincoTransactionsOperationCompleted);
            }
            this.InvokeAsync("FincoTransactions", new object[] {
                        datefrom,
                        dateto,
                        transtypeset}, this.FincoTransactionsOperationCompleted, userState);
        }
        
        private void OnFincoTransactionsOperationCompleted(object arg) {
            if ((this.FincoTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FincoTransactionsCompleted(this, new FincoTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStoreType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStoreType(short branchNo, out string err) {
            object[] results = this.Invoke("GetStoreType", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStoreType(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStoreType", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetStoreType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreTypeAsync(short branchNo) {
            this.GetStoreTypeAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetStoreTypeAsync(short branchNo, object userState) {
            if ((this.GetStoreTypeOperationCompleted == null)) {
                this.GetStoreTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreTypeOperationCompleted);
            }
            this.InvokeAsync("GetStoreType", new object[] {
                        branchNo}, this.GetStoreTypeOperationCompleted, userState);
        }
        
        private void OnGetStoreTypeOperationCompleted(object arg) {
            if ((this.GetStoreTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreTypeCompleted(this, new GetStoreTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/InstantCredit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InstantCredit(string customerID, string accountNo, out string err) {
            object[] results = this.Invoke("InstantCredit", new object[] {
                        customerID,
                        accountNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInstantCredit(string customerID, string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InstantCredit", new object[] {
                        customerID,
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndInstantCredit(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstantCreditAsync(string customerID, string accountNo) {
            this.InstantCreditAsync(customerID, accountNo, null);
        }
        
        /// <remarks/>
        public void InstantCreditAsync(string customerID, string accountNo, object userState) {
            if ((this.InstantCreditOperationCompleted == null)) {
                this.InstantCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstantCreditOperationCompleted);
            }
            this.InvokeAsync("InstantCredit", new object[] {
                        customerID,
                        accountNo}, this.InstantCreditOperationCompleted, userState);
        }
        
        private void OnInstantCreditOperationCompleted(object arg) {
            if ((this.InstantCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstantCreditCompleted(this, new InstantCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveInstantCreditFlag", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveInstantCreditFlag(string custID, string chkType, string accountNo, out string err) {
            object[] results = this.Invoke("SaveInstantCreditFlag", new object[] {
                        custID,
                        chkType,
                        accountNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveInstantCreditFlag(string custID, string chkType, string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveInstantCreditFlag", new object[] {
                        custID,
                        chkType,
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveInstantCreditFlag(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveInstantCreditFlagAsync(string custID, string chkType, string accountNo) {
            this.SaveInstantCreditFlagAsync(custID, chkType, accountNo, null);
        }
        
        /// <remarks/>
        public void SaveInstantCreditFlagAsync(string custID, string chkType, string accountNo, object userState) {
            if ((this.SaveInstantCreditFlagOperationCompleted == null)) {
                this.SaveInstantCreditFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveInstantCreditFlagOperationCompleted);
            }
            this.InvokeAsync("SaveInstantCreditFlag", new object[] {
                        custID,
                        chkType,
                        accountNo}, this.SaveInstantCreditFlagOperationCompleted, userState);
        }
        
        private void OnSaveInstantCreditFlagOperationCompleted(object arg) {
            if ((this.SaveInstantCreditFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveInstantCreditFlagCompleted(this, new SaveInstantCreditFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AutoDA", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AutoDA(string accountNo, out string err) {
            object[] results = this.Invoke("AutoDA", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAutoDA(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AutoDA", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAutoDA(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AutoDAAsync(string accountNo) {
            this.AutoDAAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void AutoDAAsync(string accountNo, object userState) {
            if ((this.AutoDAOperationCompleted == null)) {
                this.AutoDAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoDAOperationCompleted);
            }
            this.InvokeAsync("AutoDA", new object[] {
                        accountNo}, this.AutoDAOperationCompleted, userState);
        }
        
        private void OnAutoDAOperationCompleted(object arg) {
            if ((this.AutoDACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoDACompleted(this, new AutoDACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadCollectionsByacctno", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadCollectionsByacctno(string acctNo, out bool strategyHasWorklists, out string err) {
            object[] results = this.Invoke("LoadCollectionsByacctno", new object[] {
                        acctNo});
            strategyHasWorklists = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadCollectionsByacctno(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadCollectionsByacctno", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadCollectionsByacctno(System.IAsyncResult asyncResult, out bool strategyHasWorklists, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            strategyHasWorklists = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCollectionsByacctnoAsync(string acctNo) {
            this.LoadCollectionsByacctnoAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void LoadCollectionsByacctnoAsync(string acctNo, object userState) {
            if ((this.LoadCollectionsByacctnoOperationCompleted == null)) {
                this.LoadCollectionsByacctnoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCollectionsByacctnoOperationCompleted);
            }
            this.InvokeAsync("LoadCollectionsByacctno", new object[] {
                        acctNo}, this.LoadCollectionsByacctnoOperationCompleted, userState);
        }
        
        private void OnLoadCollectionsByacctnoOperationCompleted(object arg) {
            if ((this.LoadCollectionsByacctnoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCollectionsByacctnoCompleted(this, new LoadCollectionsByacctnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAgreementNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAgreementNo(string accountNo, out string err) {
            object[] results = this.Invoke("GetAgreementNo", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAgreementNo(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAgreementNo", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetAgreementNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgreementNoAsync(string accountNo) {
            this.GetAgreementNoAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetAgreementNoAsync(string accountNo, object userState) {
            if ((this.GetAgreementNoOperationCompleted == null)) {
                this.GetAgreementNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgreementNoOperationCompleted);
            }
            this.InvokeAsync("GetAgreementNo", new object[] {
                        accountNo}, this.GetAgreementNoOperationCompleted, userState);
        }
        
        private void OnGetAgreementNoOperationCompleted(object arg) {
            if ((this.GetAgreementNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgreementNoCompleted(this, new GetAgreementNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsGiftItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsGiftItem(int itemId, string location, out string err) {
            object[] results = this.Invoke("IsGiftItem", new object[] {
                        itemId,
                        location});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsGiftItem(int itemId, string location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsGiftItem", new object[] {
                        itemId,
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsGiftItem(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsGiftItemAsync(int itemId, string location) {
            this.IsGiftItemAsync(itemId, location, null);
        }
        
        /// <remarks/>
        public void IsGiftItemAsync(int itemId, string location, object userState) {
            if ((this.IsGiftItemOperationCompleted == null)) {
                this.IsGiftItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsGiftItemOperationCompleted);
            }
            this.InvokeAsync("IsGiftItem", new object[] {
                        itemId,
                        location}, this.IsGiftItemOperationCompleted, userState);
        }
        
        private void OnIsGiftItemOperationCompleted(object arg) {
            if ((this.IsGiftItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsGiftItemCompleted(this, new IsGiftItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetIRItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIRItems(string acctNo, string custID, int buffNo, System.DateTime dateFrom, System.DateTime dateTo, string acctType, out string err) {
            object[] results = this.Invoke("GetIRItems", new object[] {
                        acctNo,
                        custID,
                        buffNo,
                        dateFrom,
                        dateTo,
                        acctType});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetIRItems(string acctNo, string custID, int buffNo, System.DateTime dateFrom, System.DateTime dateTo, string acctType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetIRItems", new object[] {
                        acctNo,
                        custID,
                        buffNo,
                        dateFrom,
                        dateTo,
                        acctType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetIRItems(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIRItemsAsync(string acctNo, string custID, int buffNo, System.DateTime dateFrom, System.DateTime dateTo, string acctType) {
            this.GetIRItemsAsync(acctNo, custID, buffNo, dateFrom, dateTo, acctType, null);
        }
        
        /// <remarks/>
        public void GetIRItemsAsync(string acctNo, string custID, int buffNo, System.DateTime dateFrom, System.DateTime dateTo, string acctType, object userState) {
            if ((this.GetIRItemsOperationCompleted == null)) {
                this.GetIRItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIRItemsOperationCompleted);
            }
            this.InvokeAsync("GetIRItems", new object[] {
                        acctNo,
                        custID,
                        buffNo,
                        dateFrom,
                        dateTo,
                        acctType}, this.GetIRItemsOperationCompleted, userState);
        }
        
        private void OnGetIRItemsOperationCompleted(object arg) {
            if ((this.GetIRItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIRItemsCompleted(this, new GetIRItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsDiscount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDiscount(string itemNo, out string err) {
            object[] results = this.Invoke("IsDiscount", new object[] {
                        itemNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsDiscount(string itemNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsDiscount", new object[] {
                        itemNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsDiscount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDiscountAsync(string itemNo) {
            this.IsDiscountAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void IsDiscountAsync(string itemNo, object userState) {
            if ((this.IsDiscountOperationCompleted == null)) {
                this.IsDiscountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDiscountOperationCompleted);
            }
            this.InvokeAsync("IsDiscount", new object[] {
                        itemNo}, this.IsDiscountOperationCompleted, userState);
        }
        
        private void OnIsDiscountOperationCompleted(object arg) {
            if ((this.IsDiscountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDiscountCompleted(this, new IsDiscountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AddAdditionalSpiff", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddAdditionalSpiff(string acctNo, int authorisedBy, string itemNo, short stockLocn, decimal amount, int agrmtNo, int salesPerson, out string err) {
            object[] results = this.Invoke("AddAdditionalSpiff", new object[] {
                        acctNo,
                        authorisedBy,
                        itemNo,
                        stockLocn,
                        amount,
                        agrmtNo,
                        salesPerson});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddAdditionalSpiff(string acctNo, int authorisedBy, string itemNo, short stockLocn, decimal amount, int agrmtNo, int salesPerson, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddAdditionalSpiff", new object[] {
                        acctNo,
                        authorisedBy,
                        itemNo,
                        stockLocn,
                        amount,
                        agrmtNo,
                        salesPerson}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddAdditionalSpiff(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddAdditionalSpiffAsync(string acctNo, int authorisedBy, string itemNo, short stockLocn, decimal amount, int agrmtNo, int salesPerson) {
            this.AddAdditionalSpiffAsync(acctNo, authorisedBy, itemNo, stockLocn, amount, agrmtNo, salesPerson, null);
        }
        
        /// <remarks/>
        public void AddAdditionalSpiffAsync(string acctNo, int authorisedBy, string itemNo, short stockLocn, decimal amount, int agrmtNo, int salesPerson, object userState) {
            if ((this.AddAdditionalSpiffOperationCompleted == null)) {
                this.AddAdditionalSpiffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAdditionalSpiffOperationCompleted);
            }
            this.InvokeAsync("AddAdditionalSpiff", new object[] {
                        acctNo,
                        authorisedBy,
                        itemNo,
                        stockLocn,
                        amount,
                        agrmtNo,
                        salesPerson}, this.AddAdditionalSpiffOperationCompleted, userState);
        }
        
        private void OnAddAdditionalSpiffOperationCompleted(object arg) {
            if ((this.AddAdditionalSpiffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAdditionalSpiffCompleted(this, new AddAdditionalSpiffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveInsuranceWarrantyReturns", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveInsuranceWarrantyReturns(System.Data.DataSet ds, string err) {
            object[] results = this.Invoke("SaveInsuranceWarrantyReturns", new object[] {
                        ds,
                        err});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveInsuranceWarrantyReturns(System.Data.DataSet ds, string err, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveInsuranceWarrantyReturns", new object[] {
                        ds,
                        err}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveInsuranceWarrantyReturns(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveInsuranceWarrantyReturnsAsync(System.Data.DataSet ds, string err) {
            this.SaveInsuranceWarrantyReturnsAsync(ds, err, null);
        }
        
        /// <remarks/>
        public void SaveInsuranceWarrantyReturnsAsync(System.Data.DataSet ds, string err, object userState) {
            if ((this.SaveInsuranceWarrantyReturnsOperationCompleted == null)) {
                this.SaveInsuranceWarrantyReturnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveInsuranceWarrantyReturnsOperationCompleted);
            }
            this.InvokeAsync("SaveInsuranceWarrantyReturns", new object[] {
                        ds,
                        err}, this.SaveInsuranceWarrantyReturnsOperationCompleted, userState);
        }
        
        private void OnSaveInsuranceWarrantyReturnsOperationCompleted(object arg) {
            if ((this.SaveInsuranceWarrantyReturnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveInsuranceWarrantyReturnsCompleted(this, new SaveInsuranceWarrantyReturnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWorklistAccounts", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorklistAccounts(int empeeNo, string worklist, bool viewTop500, out string err) {
            object[] results = this.Invoke("GetWorklistAccounts", new object[] {
                        empeeNo,
                        worklist,
                        viewTop500});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWorklistAccounts(int empeeNo, string worklist, bool viewTop500, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWorklistAccounts", new object[] {
                        empeeNo,
                        worklist,
                        viewTop500}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWorklistAccounts(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorklistAccountsAsync(int empeeNo, string worklist, bool viewTop500) {
            this.GetWorklistAccountsAsync(empeeNo, worklist, viewTop500, null);
        }
        
        /// <remarks/>
        public void GetWorklistAccountsAsync(int empeeNo, string worklist, bool viewTop500, object userState) {
            if ((this.GetWorklistAccountsOperationCompleted == null)) {
                this.GetWorklistAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorklistAccountsOperationCompleted);
            }
            this.InvokeAsync("GetWorklistAccounts", new object[] {
                        empeeNo,
                        worklist,
                        viewTop500}, this.GetWorklistAccountsOperationCompleted, userState);
        }
        
        private void OnGetWorklistAccountsOperationCompleted(object arg) {
            if ((this.GetWorklistAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorklistAccountsCompleted(this, new GetWorklistAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWorklistAccountsData", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorklistAccountsData(string acctNo, string storeType, out string err) {
            object[] results = this.Invoke("GetWorklistAccountsData", new object[] {
                        acctNo,
                        storeType});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWorklistAccountsData(string acctNo, string storeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWorklistAccountsData", new object[] {
                        acctNo,
                        storeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWorklistAccountsData(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorklistAccountsDataAsync(string acctNo, string storeType) {
            this.GetWorklistAccountsDataAsync(acctNo, storeType, null);
        }
        
        /// <remarks/>
        public void GetWorklistAccountsDataAsync(string acctNo, string storeType, object userState) {
            if ((this.GetWorklistAccountsDataOperationCompleted == null)) {
                this.GetWorklistAccountsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorklistAccountsDataOperationCompleted);
            }
            this.InvokeAsync("GetWorklistAccountsData", new object[] {
                        acctNo,
                        storeType}, this.GetWorklistAccountsDataOperationCompleted, userState);
        }
        
        private void OnGetWorklistAccountsDataOperationCompleted(object arg) {
            if ((this.GetWorklistAccountsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorklistAccountsDataCompleted(this, new GetWorklistAccountsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountHasBDW", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAccountHasBDW(string accountNo, out string err) {
            object[] results = this.Invoke("GetAccountHasBDW", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountHasBDW(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountHasBDW", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetAccountHasBDW(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountHasBDWAsync(string accountNo) {
            this.GetAccountHasBDWAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetAccountHasBDWAsync(string accountNo, object userState) {
            if ((this.GetAccountHasBDWOperationCompleted == null)) {
                this.GetAccountHasBDWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountHasBDWOperationCompleted);
            }
            this.InvokeAsync("GetAccountHasBDW", new object[] {
                        accountNo}, this.GetAccountHasBDWOperationCompleted, userState);
        }
        
        private void OnGetAccountHasBDWOperationCompleted(object arg) {
            if ((this.GetAccountHasBDWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountHasBDWCompleted(this, new GetAccountHasBDWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AccountScheduleExists", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AccountScheduleExists(string accountNo, out string err) {
            object[] results = this.Invoke("AccountScheduleExists", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAccountScheduleExists(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AccountScheduleExists", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAccountScheduleExists(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AccountScheduleExistsAsync(string accountNo) {
            this.AccountScheduleExistsAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void AccountScheduleExistsAsync(string accountNo, object userState) {
            if ((this.AccountScheduleExistsOperationCompleted == null)) {
                this.AccountScheduleExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountScheduleExistsOperationCompleted);
            }
            this.InvokeAsync("AccountScheduleExists", new object[] {
                        accountNo}, this.AccountScheduleExistsOperationCompleted, userState);
        }
        
        private void OnAccountScheduleExistsOperationCompleted(object arg) {
            if ((this.AccountScheduleExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountScheduleExistsCompleted(this, new AccountScheduleExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AccountStatusGet", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable AccountStatusGet(System.DateTime dateFrom, System.DateTime dateTo, int branchno, out string error) {
            object[] results = this.Invoke("AccountStatusGet", new object[] {
                        dateFrom,
                        dateTo,
                        branchno});
            error = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAccountStatusGet(System.DateTime dateFrom, System.DateTime dateTo, int branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AccountStatusGet", new object[] {
                        dateFrom,
                        dateTo,
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndAccountStatusGet(System.IAsyncResult asyncResult, out string error) {
            object[] results = this.EndInvoke(asyncResult);
            error = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void AccountStatusGetAsync(System.DateTime dateFrom, System.DateTime dateTo, int branchno) {
            this.AccountStatusGetAsync(dateFrom, dateTo, branchno, null);
        }
        
        /// <remarks/>
        public void AccountStatusGetAsync(System.DateTime dateFrom, System.DateTime dateTo, int branchno, object userState) {
            if ((this.AccountStatusGetOperationCompleted == null)) {
                this.AccountStatusGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountStatusGetOperationCompleted);
            }
            this.InvokeAsync("AccountStatusGet", new object[] {
                        dateFrom,
                        dateTo,
                        branchno}, this.AccountStatusGetOperationCompleted, userState);
        }
        
        private void OnAccountStatusGetOperationCompleted(object arg) {
            if ((this.AccountStatusGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountStatusGetCompleted(this, new AccountStatusGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountDetailsData", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountDetailsResponse GetAccountDetailsData(string acctNo, int agreementNo, string storeType, string branchNo, string countryCode) {
            object[] results = this.Invoke("GetAccountDetailsData", new object[] {
                        acctNo,
                        agreementNo,
                        storeType,
                        branchNo,
                        countryCode});
            return ((AccountDetailsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountDetailsData(string acctNo, int agreementNo, string storeType, string branchNo, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountDetailsData", new object[] {
                        acctNo,
                        agreementNo,
                        storeType,
                        branchNo,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public AccountDetailsResponse EndGetAccountDetailsData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountDetailsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDetailsDataAsync(string acctNo, int agreementNo, string storeType, string branchNo, string countryCode) {
            this.GetAccountDetailsDataAsync(acctNo, agreementNo, storeType, branchNo, countryCode, null);
        }
        
        /// <remarks/>
        public void GetAccountDetailsDataAsync(string acctNo, int agreementNo, string storeType, string branchNo, string countryCode, object userState) {
            if ((this.GetAccountDetailsDataOperationCompleted == null)) {
                this.GetAccountDetailsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDetailsDataOperationCompleted);
            }
            this.InvokeAsync("GetAccountDetailsData", new object[] {
                        acctNo,
                        agreementNo,
                        storeType,
                        branchNo,
                        countryCode}, this.GetAccountDetailsDataOperationCompleted, userState);
        }
        
        private void OnGetAccountDetailsDataOperationCompleted(object arg) {
            if ((this.GetAccountDetailsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDetailsDataCompleted(this, new GetAccountDetailsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SPACalculateArrangementSchedule", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SPACalculateArrangementSchedule(string acctNo, char period, decimal arrangementAmt, int numberOfInstalments, decimal instalmentAmt, decimal oddPaymentAmt, System.DateTime firstPaymentDate, int numberRemainInstals, decimal remainInstalAmt, out System.DateTime finalPayDate, out string err) {
            object[] results = this.Invoke("SPACalculateArrangementSchedule", new object[] {
                        acctNo,
                        period,
                        arrangementAmt,
                        numberOfInstalments,
                        instalmentAmt,
                        oddPaymentAmt,
                        firstPaymentDate,
                        numberRemainInstals,
                        remainInstalAmt});
            finalPayDate = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSPACalculateArrangementSchedule(string acctNo, char period, decimal arrangementAmt, int numberOfInstalments, decimal instalmentAmt, decimal oddPaymentAmt, System.DateTime firstPaymentDate, int numberRemainInstals, decimal remainInstalAmt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SPACalculateArrangementSchedule", new object[] {
                        acctNo,
                        period,
                        arrangementAmt,
                        numberOfInstalments,
                        instalmentAmt,
                        oddPaymentAmt,
                        firstPaymentDate,
                        numberRemainInstals,
                        remainInstalAmt}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSPACalculateArrangementSchedule(System.IAsyncResult asyncResult, out System.DateTime finalPayDate, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            finalPayDate = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SPACalculateArrangementScheduleAsync(string acctNo, char period, decimal arrangementAmt, int numberOfInstalments, decimal instalmentAmt, decimal oddPaymentAmt, System.DateTime firstPaymentDate, int numberRemainInstals, decimal remainInstalAmt) {
            this.SPACalculateArrangementScheduleAsync(acctNo, period, arrangementAmt, numberOfInstalments, instalmentAmt, oddPaymentAmt, firstPaymentDate, numberRemainInstals, remainInstalAmt, null);
        }
        
        /// <remarks/>
        public void SPACalculateArrangementScheduleAsync(string acctNo, char period, decimal arrangementAmt, int numberOfInstalments, decimal instalmentAmt, decimal oddPaymentAmt, System.DateTime firstPaymentDate, int numberRemainInstals, decimal remainInstalAmt, object userState) {
            if ((this.SPACalculateArrangementScheduleOperationCompleted == null)) {
                this.SPACalculateArrangementScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSPACalculateArrangementScheduleOperationCompleted);
            }
            this.InvokeAsync("SPACalculateArrangementSchedule", new object[] {
                        acctNo,
                        period,
                        arrangementAmt,
                        numberOfInstalments,
                        instalmentAmt,
                        oddPaymentAmt,
                        firstPaymentDate,
                        numberRemainInstals,
                        remainInstalAmt}, this.SPACalculateArrangementScheduleOperationCompleted, userState);
        }
        
        private void OnSPACalculateArrangementScheduleOperationCompleted(object arg) {
            if ((this.SPACalculateArrangementScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SPACalculateArrangementScheduleCompleted(this, new SPACalculateArrangementScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnarchiveUnsettle", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnarchiveUnsettle(string acctNo, bool archivedAcct, bool unsettleAcct, out string err) {
            object[] results = this.Invoke("UnarchiveUnsettle", new object[] {
                        acctNo,
                        archivedAcct,
                        unsettleAcct});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnarchiveUnsettle(string acctNo, bool archivedAcct, bool unsettleAcct, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnarchiveUnsettle", new object[] {
                        acctNo,
                        archivedAcct,
                        unsettleAcct}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUnarchiveUnsettle(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnarchiveUnsettleAsync(string acctNo, bool archivedAcct, bool unsettleAcct) {
            this.UnarchiveUnsettleAsync(acctNo, archivedAcct, unsettleAcct, null);
        }
        
        /// <remarks/>
        public void UnarchiveUnsettleAsync(string acctNo, bool archivedAcct, bool unsettleAcct, object userState) {
            if ((this.UnarchiveUnsettleOperationCompleted == null)) {
                this.UnarchiveUnsettleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnarchiveUnsettleOperationCompleted);
            }
            this.InvokeAsync("UnarchiveUnsettle", new object[] {
                        acctNo,
                        archivedAcct,
                        unsettleAcct}, this.UnarchiveUnsettleOperationCompleted, userState);
        }
        
        private void OnUnarchiveUnsettleOperationCompleted(object arg) {
            if ((this.UnarchiveUnsettleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnarchiveUnsettleCompleted(this, new UnarchiveUnsettleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Invoices", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ARInvoice[] Invoices() {
            object[] results = this.Invoke("Invoices", new object[0]);
            return ((ARInvoice[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInvoices(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Invoices", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ARInvoice[] EndInvoices(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ARInvoice[])(results[0]));
        }
        
        /// <remarks/>
        public void InvoicesAsync() {
            this.InvoicesAsync(null);
        }
        
        /// <remarks/>
        public void InvoicesAsync(object userState) {
            if ((this.InvoicesOperationCompleted == null)) {
                this.InvoicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvoicesOperationCompleted);
            }
            this.InvokeAsync("Invoices", new object[0], this.InvoicesOperationCompleted, userState);
        }
        
        private void OnInvoicesOperationCompleted(object arg) {
            if ((this.InvoicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvoicesCompleted(this, new InvoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Receipt_1", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Receipt[] Receipt_1() {
            object[] results = this.Invoke("Receipt_1", new object[0]);
            return ((Receipt[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReceipt_1(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Receipt_1", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Receipt[] EndReceipt_1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Receipt[])(results[0]));
        }
        
        /// <remarks/>
        public void Receipt_1Async() {
            this.Receipt_1Async(null);
        }
        
        /// <remarks/>
        public void Receipt_1Async(object userState) {
            if ((this.Receipt_1OperationCompleted == null)) {
                this.Receipt_1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceipt_1OperationCompleted);
            }
            this.InvokeAsync("Receipt_1", new object[0], this.Receipt_1OperationCompleted, userState);
        }
        
        private void OnReceipt_1OperationCompleted(object arg) {
            if ((this.Receipt_1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Receipt_1Completed(this, new Receipt_1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Customer_1", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer[] Customer_1() {
            object[] results = this.Invoke("Customer_1", new object[0]);
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCustomer_1(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Customer_1", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Customer[] EndCustomer_1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public void Customer_1Async() {
            this.Customer_1Async(null);
        }
        
        /// <remarks/>
        public void Customer_1Async(object userState) {
            if ((this.Customer_1OperationCompleted == null)) {
                this.Customer_1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomer_1OperationCompleted);
            }
            this.InvokeAsync("Customer_1", new object[0], this.Customer_1OperationCompleted, userState);
        }
        
        private void OnCustomer_1OperationCompleted(object arg) {
            if ((this.Customer_1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Customer_1Completed(this, new Customer_1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerStatement", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BBSCustomer GetCustomerStatement(string customerID, System.DateTime dateFrom, System.DateTime dateTo, bool onlyHolderAccounts) {
            object[] results = this.Invoke("GetCustomerStatement", new object[] {
                        customerID,
                        dateFrom,
                        dateTo,
                        onlyHolderAccounts});
            return ((BBSCustomer)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerStatement(string customerID, System.DateTime dateFrom, System.DateTime dateTo, bool onlyHolderAccounts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerStatement", new object[] {
                        customerID,
                        dateFrom,
                        dateTo,
                        onlyHolderAccounts}, callback, asyncState);
        }
        
        /// <remarks/>
        public BBSCustomer EndGetCustomerStatement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BBSCustomer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerStatementAsync(string customerID, System.DateTime dateFrom, System.DateTime dateTo, bool onlyHolderAccounts) {
            this.GetCustomerStatementAsync(customerID, dateFrom, dateTo, onlyHolderAccounts, null);
        }
        
        /// <remarks/>
        public void GetCustomerStatementAsync(string customerID, System.DateTime dateFrom, System.DateTime dateTo, bool onlyHolderAccounts, object userState) {
            if ((this.GetCustomerStatementOperationCompleted == null)) {
                this.GetCustomerStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerStatementOperationCompleted);
            }
            this.InvokeAsync("GetCustomerStatement", new object[] {
                        customerID,
                        dateFrom,
                        dateTo,
                        onlyHolderAccounts}, this.GetCustomerStatementOperationCompleted, userState);
        }
        
        private void OnGetCustomerStatementOperationCompleted(object arg) {
            if ((this.GetCustomerStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerStatementCompleted(this, new GetCustomerStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountStatement", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BBSCustomer GetAccountStatement(string accountNo, System.DateTime dateFrom, System.DateTime dateTo) {
            object[] results = this.Invoke("GetAccountStatement", new object[] {
                        accountNo,
                        dateFrom,
                        dateTo});
            return ((BBSCustomer)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountStatement(string accountNo, System.DateTime dateFrom, System.DateTime dateTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountStatement", new object[] {
                        accountNo,
                        dateFrom,
                        dateTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public BBSCustomer EndGetAccountStatement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BBSCustomer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatementAsync(string accountNo, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetAccountStatementAsync(accountNo, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetAccountStatementAsync(string accountNo, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetAccountStatementOperationCompleted == null)) {
                this.GetAccountStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatementOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatement", new object[] {
                        accountNo,
                        dateFrom,
                        dateTo}, this.GetAccountStatementOperationCompleted, userState);
        }
        
        private void OnGetAccountStatementOperationCompleted(object arg) {
            if ((this.GetAccountStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatementCompleted(this, new GetAccountStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountStatementLastTransactions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BBSCustomer GetAccountStatementLastTransactions(string accountNo, int noOfTransactions) {
            object[] results = this.Invoke("GetAccountStatementLastTransactions", new object[] {
                        accountNo,
                        noOfTransactions});
            return ((BBSCustomer)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountStatementLastTransactions(string accountNo, int noOfTransactions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountStatementLastTransactions", new object[] {
                        accountNo,
                        noOfTransactions}, callback, asyncState);
        }
        
        /// <remarks/>
        public BBSCustomer EndGetAccountStatementLastTransactions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BBSCustomer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatementLastTransactionsAsync(string accountNo, int noOfTransactions) {
            this.GetAccountStatementLastTransactionsAsync(accountNo, noOfTransactions, null);
        }
        
        /// <remarks/>
        public void GetAccountStatementLastTransactionsAsync(string accountNo, int noOfTransactions, object userState) {
            if ((this.GetAccountStatementLastTransactionsOperationCompleted == null)) {
                this.GetAccountStatementLastTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatementLastTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatementLastTransactions", new object[] {
                        accountNo,
                        noOfTransactions}, this.GetAccountStatementLastTransactionsOperationCompleted, userState);
        }
        
        private void OnGetAccountStatementLastTransactionsOperationCompleted(object arg) {
            if ((this.GetAccountStatementLastTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatementLastTransactionsCompleted(this, new GetAccountStatementLastTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountsAwaitingClearance", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountsAwaitingClearance(string branchRestriction, int includeCash, int includeHP, int includeRF, int includePaid, int includeUnpaid, int includeItems, string holdFlags, int includeGOL, out string err) {
            object[] results = this.Invoke("GetAccountsAwaitingClearance", new object[] {
                        branchRestriction,
                        includeCash,
                        includeHP,
                        includeRF,
                        includePaid,
                        includeUnpaid,
                        includeItems,
                        holdFlags,
                        includeGOL});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountsAwaitingClearance(string branchRestriction, int includeCash, int includeHP, int includeRF, int includePaid, int includeUnpaid, int includeItems, string holdFlags, int includeGOL, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountsAwaitingClearance", new object[] {
                        branchRestriction,
                        includeCash,
                        includeHP,
                        includeRF,
                        includePaid,
                        includeUnpaid,
                        includeItems,
                        holdFlags,
                        includeGOL}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAccountsAwaitingClearance(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsAwaitingClearanceAsync(string branchRestriction, int includeCash, int includeHP, int includeRF, int includePaid, int includeUnpaid, int includeItems, string holdFlags, int includeGOL) {
            this.GetAccountsAwaitingClearanceAsync(branchRestriction, includeCash, includeHP, includeRF, includePaid, includeUnpaid, includeItems, holdFlags, includeGOL, null);
        }
        
        /// <remarks/>
        public void GetAccountsAwaitingClearanceAsync(string branchRestriction, int includeCash, int includeHP, int includeRF, int includePaid, int includeUnpaid, int includeItems, string holdFlags, int includeGOL, object userState) {
            if ((this.GetAccountsAwaitingClearanceOperationCompleted == null)) {
                this.GetAccountsAwaitingClearanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsAwaitingClearanceOperationCompleted);
            }
            this.InvokeAsync("GetAccountsAwaitingClearance", new object[] {
                        branchRestriction,
                        includeCash,
                        includeHP,
                        includeRF,
                        includePaid,
                        includeUnpaid,
                        includeItems,
                        holdFlags,
                        includeGOL}, this.GetAccountsAwaitingClearanceOperationCompleted, userState);
        }
        
        private void OnGetAccountsAwaitingClearanceOperationCompleted(object arg) {
            if ((this.GetAccountsAwaitingClearanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsAwaitingClearanceCompleted(this, new GetAccountsAwaitingClearanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetInstantCreditAwaitingClearance", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInstantCreditAwaitingClearance(string branchRestriction, int includeHP, int includeRF, string holdFlags, out string err) {
            object[] results = this.Invoke("GetInstantCreditAwaitingClearance", new object[] {
                        branchRestriction,
                        includeHP,
                        includeRF,
                        holdFlags});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInstantCreditAwaitingClearance(string branchRestriction, int includeHP, int includeRF, string holdFlags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInstantCreditAwaitingClearance", new object[] {
                        branchRestriction,
                        includeHP,
                        includeRF,
                        holdFlags}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInstantCreditAwaitingClearance(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstantCreditAwaitingClearanceAsync(string branchRestriction, int includeHP, int includeRF, string holdFlags) {
            this.GetInstantCreditAwaitingClearanceAsync(branchRestriction, includeHP, includeRF, holdFlags, null);
        }
        
        /// <remarks/>
        public void GetInstantCreditAwaitingClearanceAsync(string branchRestriction, int includeHP, int includeRF, string holdFlags, object userState) {
            if ((this.GetInstantCreditAwaitingClearanceOperationCompleted == null)) {
                this.GetInstantCreditAwaitingClearanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstantCreditAwaitingClearanceOperationCompleted);
            }
            this.InvokeAsync("GetInstantCreditAwaitingClearance", new object[] {
                        branchRestriction,
                        includeHP,
                        includeRF,
                        holdFlags}, this.GetInstantCreditAwaitingClearanceOperationCompleted, userState);
        }
        
        private void OnGetInstantCreditAwaitingClearanceOperationCompleted(object arg) {
            if ((this.GetInstantCreditAwaitingClearanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstantCreditAwaitingClearanceCompleted(this, new GetInstantCreditAwaitingClearanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetChargeableCashPrice", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetChargeableCashPrice(string accountNo, ref decimal chargeableAdminPrice, out string err) {
            object[] results = this.Invoke("GetChargeableCashPrice", new object[] {
                        accountNo,
                        chargeableAdminPrice});
            chargeableAdminPrice = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChargeableCashPrice(string accountNo, decimal chargeableAdminPrice, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChargeableCashPrice", new object[] {
                        accountNo,
                        chargeableAdminPrice}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndGetChargeableCashPrice(System.IAsyncResult asyncResult, out decimal chargeableAdminPrice, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            chargeableAdminPrice = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetChargeableCashPriceAsync(string accountNo, decimal chargeableAdminPrice) {
            this.GetChargeableCashPriceAsync(accountNo, chargeableAdminPrice, null);
        }
        
        /// <remarks/>
        public void GetChargeableCashPriceAsync(string accountNo, decimal chargeableAdminPrice, object userState) {
            if ((this.GetChargeableCashPriceOperationCompleted == null)) {
                this.GetChargeableCashPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeableCashPriceOperationCompleted);
            }
            this.InvokeAsync("GetChargeableCashPrice", new object[] {
                        accountNo,
                        chargeableAdminPrice}, this.GetChargeableCashPriceOperationCompleted, userState);
        }
        
        private void OnGetChargeableCashPriceOperationCompleted(object arg) {
            if ((this.GetChargeableCashPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargeableCashPriceCompleted(this, new GetChargeableCashPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetChargesByAcctNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChargesByAcctNo(string acctNo, out string err) {
            object[] results = this.Invoke("GetChargesByAcctNo", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChargesByAcctNo(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChargesByAcctNo", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChargesByAcctNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChargesByAcctNoAsync(string acctNo) {
            this.GetChargesByAcctNoAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetChargesByAcctNoAsync(string acctNo, object userState) {
            if ((this.GetChargesByAcctNoOperationCompleted == null)) {
                this.GetChargesByAcctNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargesByAcctNoOperationCompleted);
            }
            this.InvokeAsync("GetChargesByAcctNo", new object[] {
                        acctNo}, this.GetChargesByAcctNoOperationCompleted, userState);
        }
        
        private void OnGetChargesByAcctNoOperationCompleted(object arg) {
            if ((this.GetChargesByAcctNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargesByAcctNoCompleted(this, new GetChargesByAcctNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetArrearsDailyByAcctNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetArrearsDailyByAcctNo(string acctNo, out string err) {
            object[] results = this.Invoke("GetArrearsDailyByAcctNo", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetArrearsDailyByAcctNo(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetArrearsDailyByAcctNo", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetArrearsDailyByAcctNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetArrearsDailyByAcctNoAsync(string acctNo) {
            this.GetArrearsDailyByAcctNoAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetArrearsDailyByAcctNoAsync(string acctNo, object userState) {
            if ((this.GetArrearsDailyByAcctNoOperationCompleted == null)) {
                this.GetArrearsDailyByAcctNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArrearsDailyByAcctNoOperationCompleted);
            }
            this.InvokeAsync("GetArrearsDailyByAcctNo", new object[] {
                        acctNo}, this.GetArrearsDailyByAcctNoOperationCompleted, userState);
        }
        
        private void OnGetArrearsDailyByAcctNoOperationCompleted(object arg) {
            if ((this.GetArrearsDailyByAcctNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArrearsDailyByAcctNoCompleted(this, new GetArrearsDailyByAcctNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetUnpaidAccounts", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnpaidAccounts(int branchNo, int empeeNoSale, out string err) {
            object[] results = this.Invoke("GetUnpaidAccounts", new object[] {
                        branchNo,
                        empeeNoSale});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUnpaidAccounts(int branchNo, int empeeNoSale, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUnpaidAccounts", new object[] {
                        branchNo,
                        empeeNoSale}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUnpaidAccounts(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnpaidAccountsAsync(int branchNo, int empeeNoSale) {
            this.GetUnpaidAccountsAsync(branchNo, empeeNoSale, null);
        }
        
        /// <remarks/>
        public void GetUnpaidAccountsAsync(int branchNo, int empeeNoSale, object userState) {
            if ((this.GetUnpaidAccountsOperationCompleted == null)) {
                this.GetUnpaidAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnpaidAccountsOperationCompleted);
            }
            this.InvokeAsync("GetUnpaidAccounts", new object[] {
                        branchNo,
                        empeeNoSale}, this.GetUnpaidAccountsOperationCompleted, userState);
        }
        
        private void OnGetUnpaidAccountsOperationCompleted(object arg) {
            if ((this.GetUnpaidAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnpaidAccountsCompleted(this, new GetUnpaidAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetFinTransQueryResults", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFinTransQueryResults(
                    System.DateTime datestart, 
                    System.DateTime datefinish, 
                    string transtypeoperand, 
                    string transtypecode, 
                    string valueoperand, 
                    int startrunno, 
                    int endrunno, 
                    string runnooperand, 
                    int startrefno, 
                    int endrefno, 
                    string refnooperand, 
                    int empeeno, 
                    string empeenooperand, 
                    int branchno, 
                    string branchnooperand, 
                    int accountinbranch, 
                    string dateoperand, 
                    string branchsetname, 
                    string transtypesetname, 
                    string employeesetname, 
                    int valueonly, 
                    int includeothercharges, 
                    out string err) {
            object[] results = this.Invoke("GetFinTransQueryResults", new object[] {
                        datestart,
                        datefinish,
                        transtypeoperand,
                        transtypecode,
                        valueoperand,
                        startrunno,
                        endrunno,
                        runnooperand,
                        startrefno,
                        endrefno,
                        refnooperand,
                        empeeno,
                        empeenooperand,
                        branchno,
                        branchnooperand,
                        accountinbranch,
                        dateoperand,
                        branchsetname,
                        transtypesetname,
                        employeesetname,
                        valueonly,
                        includeothercharges});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFinTransQueryResults(
                    System.DateTime datestart, 
                    System.DateTime datefinish, 
                    string transtypeoperand, 
                    string transtypecode, 
                    string valueoperand, 
                    int startrunno, 
                    int endrunno, 
                    string runnooperand, 
                    int startrefno, 
                    int endrefno, 
                    string refnooperand, 
                    int empeeno, 
                    string empeenooperand, 
                    int branchno, 
                    string branchnooperand, 
                    int accountinbranch, 
                    string dateoperand, 
                    string branchsetname, 
                    string transtypesetname, 
                    string employeesetname, 
                    int valueonly, 
                    int includeothercharges, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetFinTransQueryResults", new object[] {
                        datestart,
                        datefinish,
                        transtypeoperand,
                        transtypecode,
                        valueoperand,
                        startrunno,
                        endrunno,
                        runnooperand,
                        startrefno,
                        endrefno,
                        refnooperand,
                        empeeno,
                        empeenooperand,
                        branchno,
                        branchnooperand,
                        accountinbranch,
                        dateoperand,
                        branchsetname,
                        transtypesetname,
                        employeesetname,
                        valueonly,
                        includeothercharges}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFinTransQueryResults(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinTransQueryResultsAsync(
                    System.DateTime datestart, 
                    System.DateTime datefinish, 
                    string transtypeoperand, 
                    string transtypecode, 
                    string valueoperand, 
                    int startrunno, 
                    int endrunno, 
                    string runnooperand, 
                    int startrefno, 
                    int endrefno, 
                    string refnooperand, 
                    int empeeno, 
                    string empeenooperand, 
                    int branchno, 
                    string branchnooperand, 
                    int accountinbranch, 
                    string dateoperand, 
                    string branchsetname, 
                    string transtypesetname, 
                    string employeesetname, 
                    int valueonly, 
                    int includeothercharges) {
            this.GetFinTransQueryResultsAsync(datestart, datefinish, transtypeoperand, transtypecode, valueoperand, startrunno, endrunno, runnooperand, startrefno, endrefno, refnooperand, empeeno, empeenooperand, branchno, branchnooperand, accountinbranch, dateoperand, branchsetname, transtypesetname, employeesetname, valueonly, includeothercharges, null);
        }
        
        /// <remarks/>
        public void GetFinTransQueryResultsAsync(
                    System.DateTime datestart, 
                    System.DateTime datefinish, 
                    string transtypeoperand, 
                    string transtypecode, 
                    string valueoperand, 
                    int startrunno, 
                    int endrunno, 
                    string runnooperand, 
                    int startrefno, 
                    int endrefno, 
                    string refnooperand, 
                    int empeeno, 
                    string empeenooperand, 
                    int branchno, 
                    string branchnooperand, 
                    int accountinbranch, 
                    string dateoperand, 
                    string branchsetname, 
                    string transtypesetname, 
                    string employeesetname, 
                    int valueonly, 
                    int includeothercharges, 
                    object userState) {
            if ((this.GetFinTransQueryResultsOperationCompleted == null)) {
                this.GetFinTransQueryResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinTransQueryResultsOperationCompleted);
            }
            this.InvokeAsync("GetFinTransQueryResults", new object[] {
                        datestart,
                        datefinish,
                        transtypeoperand,
                        transtypecode,
                        valueoperand,
                        startrunno,
                        endrunno,
                        runnooperand,
                        startrefno,
                        endrefno,
                        refnooperand,
                        empeeno,
                        empeenooperand,
                        branchno,
                        branchnooperand,
                        accountinbranch,
                        dateoperand,
                        branchsetname,
                        transtypesetname,
                        employeesetname,
                        valueonly,
                        includeothercharges}, this.GetFinTransQueryResultsOperationCompleted, userState);
        }
        
        private void OnGetFinTransQueryResultsOperationCompleted(object arg) {
            if ((this.GetFinTransQueryResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinTransQueryResultsCompleted(this, new GetFinTransQueryResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ClearProposal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClearProposal(string accountNumber, string source, out string err) {
            object[] results = this.Invoke("ClearProposal", new object[] {
                        accountNumber,
                        source});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClearProposal(string accountNumber, string source, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClearProposal", new object[] {
                        accountNumber,
                        source}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndClearProposal(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClearProposalAsync(string accountNumber, string source) {
            this.ClearProposalAsync(accountNumber, source, null);
        }
        
        /// <remarks/>
        public void ClearProposalAsync(string accountNumber, string source, object userState) {
            if ((this.ClearProposalOperationCompleted == null)) {
                this.ClearProposalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearProposalOperationCompleted);
            }
            this.InvokeAsync("ClearProposal", new object[] {
                        accountNumber,
                        source}, this.ClearProposalOperationCompleted, userState);
        }
        
        private void OnClearProposalOperationCompleted(object arg) {
            if ((this.ClearProposalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearProposalCompleted(this, new ClearProposalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetHoldFlags", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHoldFlags(string accountNumber, out string err) {
            object[] results = this.Invoke("GetHoldFlags", new object[] {
                        accountNumber});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHoldFlags(string accountNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHoldFlags", new object[] {
                        accountNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetHoldFlags(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHoldFlagsAsync(string accountNumber) {
            this.GetHoldFlagsAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetHoldFlagsAsync(string accountNumber, object userState) {
            if ((this.GetHoldFlagsOperationCompleted == null)) {
                this.GetHoldFlagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHoldFlagsOperationCompleted);
            }
            this.InvokeAsync("GetHoldFlags", new object[] {
                        accountNumber}, this.GetHoldFlagsOperationCompleted, userState);
        }
        
        private void OnGetHoldFlagsOperationCompleted(object arg) {
            if ((this.GetHoldFlagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHoldFlagsCompleted(this, new GetHoldFlagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetICFlags", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetICFlags(string accountNumber, out string err) {
            object[] results = this.Invoke("GetICFlags", new object[] {
                        accountNumber});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetICFlags(string accountNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetICFlags", new object[] {
                        accountNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetICFlags(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetICFlagsAsync(string accountNumber) {
            this.GetICFlagsAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetICFlagsAsync(string accountNumber, object userState) {
            if ((this.GetICFlagsOperationCompleted == null)) {
                this.GetICFlagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetICFlagsOperationCompleted);
            }
            this.InvokeAsync("GetICFlags", new object[] {
                        accountNumber}, this.GetICFlagsOperationCompleted, userState);
        }
        
        private void OnGetICFlagsOperationCompleted(object arg) {
            if ((this.GetICFlagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetICFlagsCompleted(this, new GetICFlagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GenerateAccountNumber", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GenerateAccountNumber(string countryCode, short branchNumber, string accountType, bool manualSale, int userid, out string newAccountNo, out string err) {
            object[] results = this.Invoke("GenerateAccountNumber", new object[] {
                        countryCode,
                        branchNumber,
                        accountType,
                        manualSale,
                        userid});
            newAccountNo = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGenerateAccountNumber(string countryCode, short branchNumber, string accountType, bool manualSale, int userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GenerateAccountNumber", new object[] {
                        countryCode,
                        branchNumber,
                        accountType,
                        manualSale,
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGenerateAccountNumber(System.IAsyncResult asyncResult, out string newAccountNo, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            newAccountNo = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateAccountNumberAsync(string countryCode, short branchNumber, string accountType, bool manualSale, int userid) {
            this.GenerateAccountNumberAsync(countryCode, branchNumber, accountType, manualSale, userid, null);
        }
        
        /// <remarks/>
        public void GenerateAccountNumberAsync(string countryCode, short branchNumber, string accountType, bool manualSale, int userid, object userState) {
            if ((this.GenerateAccountNumberOperationCompleted == null)) {
                this.GenerateAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GenerateAccountNumber", new object[] {
                        countryCode,
                        branchNumber,
                        accountType,
                        manualSale,
                        userid}, this.GenerateAccountNumberOperationCompleted, userState);
        }
        
        private void OnGenerateAccountNumberOperationCompleted(object arg) {
            if ((this.GenerateAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateAccountNumberCompleted(this, new GenerateAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStockByLocation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStockByLocation(GetStockByLocationRequest r, out string err) {
            object[] results = this.Invoke("GetStockByLocation", new object[] {
                        r});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStockByLocation(GetStockByLocationRequest r, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStockByLocation", new object[] {
                        r}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStockByLocation(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockByLocationAsync(GetStockByLocationRequest r) {
            this.GetStockByLocationAsync(r, null);
        }
        
        /// <remarks/>
        public void GetStockByLocationAsync(GetStockByLocationRequest r, object userState) {
            if ((this.GetStockByLocationOperationCompleted == null)) {
                this.GetStockByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockByLocationOperationCompleted);
            }
            this.InvokeAsync("GetStockByLocation", new object[] {
                        r}, this.GetStockByLocationOperationCompleted, userState);
        }
        
        private void OnGetStockByLocationOperationCompleted(object arg) {
            if ((this.GetStockByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockByLocationCompleted(this, new GetStockByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStockByCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStockByCode(string productCode, out string err) {
            object[] results = this.Invoke("GetStockByCode", new object[] {
                        productCode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStockByCode(string productCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStockByCode", new object[] {
                        productCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStockByCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockByCodeAsync(string productCode) {
            this.GetStockByCodeAsync(productCode, null);
        }
        
        /// <remarks/>
        public void GetStockByCodeAsync(string productCode, object userState) {
            if ((this.GetStockByCodeOperationCompleted == null)) {
                this.GetStockByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockByCodeOperationCompleted);
            }
            this.InvokeAsync("GetStockByCode", new object[] {
                        productCode}, this.GetStockByCodeOperationCompleted, userState);
        }
        
        private void OnGetStockByCodeOperationCompleted(object arg) {
            if ((this.GetStockByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockByCodeCompleted(this, new GetStockByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetItemDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItemDetails(GetItemDetailsRequest itemDetailsRequest, out string err) {
            object[] results = this.Invoke("GetItemDetails", new object[] {
                        itemDetailsRequest});
            err = ((string)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemDetails(GetItemDetailsRequest itemDetailsRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemDetails", new object[] {
                        itemDetailsRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetItemDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemDetailsAsync(GetItemDetailsRequest itemDetailsRequest) {
            this.GetItemDetailsAsync(itemDetailsRequest, null);
        }
        
        /// <remarks/>
        public void GetItemDetailsAsync(GetItemDetailsRequest itemDetailsRequest, object userState) {
            if ((this.GetItemDetailsOperationCompleted == null)) {
                this.GetItemDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemDetailsOperationCompleted);
            }
            this.InvokeAsync("GetItemDetails", new object[] {
                        itemDetailsRequest}, this.GetItemDetailsOperationCompleted, userState);
        }
        
        private void OnGetItemDetailsOperationCompleted(object arg) {
            if ((this.GetItemDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemDetailsCompleted(this, new GetItemDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LockAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LockAccount(string accountNo, string user, out string err) {
            object[] results = this.Invoke("LockAccount", new object[] {
                        accountNo,
                        user});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLockAccount(string accountNo, string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LockAccount", new object[] {
                        accountNo,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLockAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LockAccountAsync(string accountNo, string user) {
            this.LockAccountAsync(accountNo, user, null);
        }
        
        /// <remarks/>
        public void LockAccountAsync(string accountNo, string user, object userState) {
            if ((this.LockAccountOperationCompleted == null)) {
                this.LockAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockAccountOperationCompleted);
            }
            this.InvokeAsync("LockAccount", new object[] {
                        accountNo,
                        user}, this.LockAccountOperationCompleted, userState);
        }
        
        private void OnLockAccountOperationCompleted(object arg) {
            if ((this.LockAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockAccountCompleted(this, new LockAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="LockAccount1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LockReviseAccount", RequestElementName="LockReviseAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="LockReviseAccountResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("LockReviseAccountResult")]
        public bool LockAccount(string accountNo, string user, bool revise, out string err) {
            object[] results = this.Invoke("LockAccount1", new object[] {
                        accountNo,
                        user,
                        revise});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLockAccount1(string accountNo, string user, bool revise, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LockAccount1", new object[] {
                        accountNo,
                        user,
                        revise}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLockAccount1(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LockAccount1Async(string accountNo, string user, bool revise) {
            this.LockAccount1Async(accountNo, user, revise, null);
        }
        
        /// <remarks/>
        public void LockAccount1Async(string accountNo, string user, bool revise, object userState) {
            if ((this.LockAccount1OperationCompleted == null)) {
                this.LockAccount1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockAccount1OperationCompleted);
            }
            this.InvokeAsync("LockAccount1", new object[] {
                        accountNo,
                        user,
                        revise}, this.LockAccount1OperationCompleted, userState);
        }
        
        private void OnLockAccount1OperationCompleted(object arg) {
            if ((this.LockAccount1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockAccount1Completed(this, new LockAccount1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnlockAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnlockAccount(string accountNo, int user, out string err) {
            object[] results = this.Invoke("UnlockAccount", new object[] {
                        accountNo,
                        user});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlockAccount(string accountNo, int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlockAccount", new object[] {
                        accountNo,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUnlockAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockAccountAsync(string accountNo, int user) {
            this.UnlockAccountAsync(accountNo, user, null);
        }
        
        /// <remarks/>
        public void UnlockAccountAsync(string accountNo, int user, object userState) {
            if ((this.UnlockAccountOperationCompleted == null)) {
                this.UnlockAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockAccountOperationCompleted);
            }
            this.InvokeAsync("UnlockAccount", new object[] {
                        accountNo,
                        user}, this.UnlockAccountOperationCompleted, userState);
        }
        
        private void OnUnlockAccountOperationCompleted(object arg) {
            if ((this.UnlockAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockAccountCompleted(this, new UnlockAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="UnlockAccount1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnlockReviseAccount", RequestElementName="UnlockReviseAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="UnlockReviseAccountResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UnlockReviseAccountResult")]
        public int UnlockAccount(string accountNo, string user, bool revise, out string err) {
            object[] results = this.Invoke("UnlockAccount1", new object[] {
                        accountNo,
                        user,
                        revise});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlockAccount1(string accountNo, string user, bool revise, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlockAccount1", new object[] {
                        accountNo,
                        user,
                        revise}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUnlockAccount1(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockAccount1Async(string accountNo, string user, bool revise) {
            this.UnlockAccount1Async(accountNo, user, revise, null);
        }
        
        /// <remarks/>
        public void UnlockAccount1Async(string accountNo, string user, bool revise, object userState) {
            if ((this.UnlockAccount1OperationCompleted == null)) {
                this.UnlockAccount1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockAccount1OperationCompleted);
            }
            this.InvokeAsync("UnlockAccount1", new object[] {
                        accountNo,
                        user,
                        revise}, this.UnlockAccount1OperationCompleted, userState);
        }
        
        private void OnUnlockAccount1OperationCompleted(object arg) {
            if ((this.UnlockAccount1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockAccount1Completed(this, new UnlockAccount1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetProductWarrantiesByCode", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductWarrantiesByCode(string productCode, short branchCode, double unitPrice, string refCode, bool paidAndTaken, out string err) {
            object[] results = this.Invoke("GetProductWarrantiesByCode", new object[] {
                        productCode,
                        branchCode,
                        unitPrice,
                        refCode,
                        paidAndTaken});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProductWarrantiesByCode(string productCode, short branchCode, double unitPrice, string refCode, bool paidAndTaken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProductWarrantiesByCode", new object[] {
                        productCode,
                        branchCode,
                        unitPrice,
                        refCode,
                        paidAndTaken}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetProductWarrantiesByCode(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductWarrantiesByCodeAsync(string productCode, short branchCode, double unitPrice, string refCode, bool paidAndTaken) {
            this.GetProductWarrantiesByCodeAsync(productCode, branchCode, unitPrice, refCode, paidAndTaken, null);
        }
        
        /// <remarks/>
        public void GetProductWarrantiesByCodeAsync(string productCode, short branchCode, double unitPrice, string refCode, bool paidAndTaken, object userState) {
            if ((this.GetProductWarrantiesByCodeOperationCompleted == null)) {
                this.GetProductWarrantiesByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductWarrantiesByCodeOperationCompleted);
            }
            this.InvokeAsync("GetProductWarrantiesByCode", new object[] {
                        productCode,
                        branchCode,
                        unitPrice,
                        refCode,
                        paidAndTaken}, this.GetProductWarrantiesByCodeOperationCompleted, userState);
        }
        
        private void OnGetProductWarrantiesByCodeOperationCompleted(object arg) {
            if ((this.GetProductWarrantiesByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductWarrantiesByCodeCompleted(this, new GetProductWarrantiesByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetProductWarranties", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductWarranties(int itemId, short branchCode, double unitPrice, string refCode, bool paidAndTaken, out string err) {
            object[] results = this.Invoke("GetProductWarranties", new object[] {
                        itemId,
                        branchCode,
                        unitPrice,
                        refCode,
                        paidAndTaken});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProductWarranties(int itemId, short branchCode, double unitPrice, string refCode, bool paidAndTaken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProductWarranties", new object[] {
                        itemId,
                        branchCode,
                        unitPrice,
                        refCode,
                        paidAndTaken}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetProductWarranties(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductWarrantiesAsync(int itemId, short branchCode, double unitPrice, string refCode, bool paidAndTaken) {
            this.GetProductWarrantiesAsync(itemId, branchCode, unitPrice, refCode, paidAndTaken, null);
        }
        
        /// <remarks/>
        public void GetProductWarrantiesAsync(int itemId, short branchCode, double unitPrice, string refCode, bool paidAndTaken, object userState) {
            if ((this.GetProductWarrantiesOperationCompleted == null)) {
                this.GetProductWarrantiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductWarrantiesOperationCompleted);
            }
            this.InvokeAsync("GetProductWarranties", new object[] {
                        itemId,
                        branchCode,
                        unitPrice,
                        refCode,
                        paidAndTaken}, this.GetProductWarrantiesOperationCompleted, userState);
        }
        
        private void OnGetProductWarrantiesOperationCompleted(object arg) {
            if ((this.GetProductWarrantiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductWarrantiesCompleted(this, new GetProductWarrantiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AddKitToAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddKitToAccount(ref System.Xml.XmlNode doc, System.Xml.XmlNode kitNode, int itemId, short branchCode, string accountType, double kitQty, string countryCode, bool dutyFree, bool taxExempt, short promoBranch, out string err) {
            object[] results = this.Invoke("AddKitToAccount", new object[] {
                        doc,
                        kitNode,
                        itemId,
                        branchCode,
                        accountType,
                        kitQty,
                        countryCode,
                        dutyFree,
                        taxExempt,
                        promoBranch});
            doc = ((System.Xml.XmlNode)(results[1]));
            err = ((string)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddKitToAccount(System.Xml.XmlNode doc, System.Xml.XmlNode kitNode, int itemId, short branchCode, string accountType, double kitQty, string countryCode, bool dutyFree, bool taxExempt, short promoBranch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddKitToAccount", new object[] {
                        doc,
                        kitNode,
                        itemId,
                        branchCode,
                        accountType,
                        kitQty,
                        countryCode,
                        dutyFree,
                        taxExempt,
                        promoBranch}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndAddKitToAccount(System.IAsyncResult asyncResult, out System.Xml.XmlNode doc, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            doc = ((System.Xml.XmlNode)(results[1]));
            err = ((string)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddKitToAccountAsync(System.Xml.XmlNode doc, System.Xml.XmlNode kitNode, int itemId, short branchCode, string accountType, double kitQty, string countryCode, bool dutyFree, bool taxExempt, short promoBranch) {
            this.AddKitToAccountAsync(doc, kitNode, itemId, branchCode, accountType, kitQty, countryCode, dutyFree, taxExempt, promoBranch, null);
        }
        
        /// <remarks/>
        public void AddKitToAccountAsync(System.Xml.XmlNode doc, System.Xml.XmlNode kitNode, int itemId, short branchCode, string accountType, double kitQty, string countryCode, bool dutyFree, bool taxExempt, short promoBranch, object userState) {
            if ((this.AddKitToAccountOperationCompleted == null)) {
                this.AddKitToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddKitToAccountOperationCompleted);
            }
            this.InvokeAsync("AddKitToAccount", new object[] {
                        doc,
                        kitNode,
                        itemId,
                        branchCode,
                        accountType,
                        kitQty,
                        countryCode,
                        dutyFree,
                        taxExempt,
                        promoBranch}, this.AddKitToAccountOperationCompleted, userState);
        }
        
        private void OnAddKitToAccountOperationCompleted(object arg) {
            if ((this.AddKitToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddKitToAccountCompleted(this, new AddKitToAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AccountsSearch", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AccountsSearch(string accountNo, string custId, string firstName, string lastName, string address, string postCode, string phoneNumber, bool settled, bool exactMatch, int limit, string storeType, out int accountExists, out string accountType, out string err) {
            object[] results = this.Invoke("AccountsSearch", new object[] {
                        accountNo,
                        custId,
                        firstName,
                        lastName,
                        address,
                        postCode,
                        phoneNumber,
                        settled,
                        exactMatch,
                        limit,
                        storeType});
            accountExists = ((int)(results[1]));
            accountType = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAccountsSearch(string accountNo, string custId, string firstName, string lastName, string address, string postCode, string phoneNumber, bool settled, bool exactMatch, int limit, string storeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AccountsSearch", new object[] {
                        accountNo,
                        custId,
                        firstName,
                        lastName,
                        address,
                        postCode,
                        phoneNumber,
                        settled,
                        exactMatch,
                        limit,
                        storeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndAccountsSearch(System.IAsyncResult asyncResult, out int accountExists, out string accountType, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            accountExists = ((int)(results[1]));
            accountType = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AccountsSearchAsync(string accountNo, string custId, string firstName, string lastName, string address, string postCode, string phoneNumber, bool settled, bool exactMatch, int limit, string storeType) {
            this.AccountsSearchAsync(accountNo, custId, firstName, lastName, address, postCode, phoneNumber, settled, exactMatch, limit, storeType, null);
        }
        
        /// <remarks/>
        public void AccountsSearchAsync(string accountNo, string custId, string firstName, string lastName, string address, string postCode, string phoneNumber, bool settled, bool exactMatch, int limit, string storeType, object userState) {
            if ((this.AccountsSearchOperationCompleted == null)) {
                this.AccountsSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountsSearchOperationCompleted);
            }
            this.InvokeAsync("AccountsSearch", new object[] {
                        accountNo,
                        custId,
                        firstName,
                        lastName,
                        address,
                        postCode,
                        phoneNumber,
                        settled,
                        exactMatch,
                        limit,
                        storeType}, this.AccountsSearchOperationCompleted, userState);
        }
        
        private void OnAccountsSearchOperationCompleted(object arg) {
            if ((this.AccountsSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountsSearchCompleted(this, new AccountsSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IncompleteCredits", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet IncompleteCredits(string branchRestriction, string holdFlags, bool viewTop, string acctno, bool ChxOnly, bool ChxItems, bool ChxUnpaid, bool ChxReferralCL, bool ChxPendingCL, string refCode, out string err) {
            object[] results = this.Invoke("IncompleteCredits", new object[] {
                        branchRestriction,
                        holdFlags,
                        viewTop,
                        acctno,
                        ChxOnly,
                        ChxItems,
                        ChxUnpaid,
                        ChxReferralCL,
                        ChxPendingCL,
                        refCode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIncompleteCredits(string branchRestriction, string holdFlags, bool viewTop, string acctno, bool ChxOnly, bool ChxItems, bool ChxUnpaid, bool ChxReferralCL, bool ChxPendingCL, string refCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IncompleteCredits", new object[] {
                        branchRestriction,
                        holdFlags,
                        viewTop,
                        acctno,
                        ChxOnly,
                        ChxItems,
                        ChxUnpaid,
                        ChxReferralCL,
                        ChxPendingCL,
                        refCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndIncompleteCredits(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void IncompleteCreditsAsync(string branchRestriction, string holdFlags, bool viewTop, string acctno, bool ChxOnly, bool ChxItems, bool ChxUnpaid, bool ChxReferralCL, bool ChxPendingCL, string refCode) {
            this.IncompleteCreditsAsync(branchRestriction, holdFlags, viewTop, acctno, ChxOnly, ChxItems, ChxUnpaid, ChxReferralCL, ChxPendingCL, refCode, null);
        }
        
        /// <remarks/>
        public void IncompleteCreditsAsync(string branchRestriction, string holdFlags, bool viewTop, string acctno, bool ChxOnly, bool ChxItems, bool ChxUnpaid, bool ChxReferralCL, bool ChxPendingCL, string refCode, object userState) {
            if ((this.IncompleteCreditsOperationCompleted == null)) {
                this.IncompleteCreditsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncompleteCreditsOperationCompleted);
            }
            this.InvokeAsync("IncompleteCredits", new object[] {
                        branchRestriction,
                        holdFlags,
                        viewTop,
                        acctno,
                        ChxOnly,
                        ChxItems,
                        ChxUnpaid,
                        ChxReferralCL,
                        ChxPendingCL,
                        refCode}, this.IncompleteCreditsOperationCompleted, userState);
        }
        
        private void OnIncompleteCreditsOperationCompleted(object arg) {
            if ((this.IncompleteCreditsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncompleteCreditsCompleted(this, new IncompleteCreditsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetFollowUpHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFollowUpHistory(string acctNo, out string err) {
            object[] results = this.Invoke("GetFollowUpHistory", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFollowUpHistory(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFollowUpHistory", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFollowUpHistory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFollowUpHistoryAsync(string acctNo) {
            this.GetFollowUpHistoryAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetFollowUpHistoryAsync(string acctNo, object userState) {
            if ((this.GetFollowUpHistoryOperationCompleted == null)) {
                this.GetFollowUpHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFollowUpHistoryOperationCompleted);
            }
            this.InvokeAsync("GetFollowUpHistory", new object[] {
                        acctNo}, this.GetFollowUpHistoryOperationCompleted, userState);
        }
        
        private void OnGetFollowUpHistoryOperationCompleted(object arg) {
            if ((this.GetFollowUpHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFollowUpHistoryCompleted(this, new GetFollowUpHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Getacctsforalloc5_2", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Getacctsforalloc5_2(
                    string alreadyAllocated, 
                    string minimumStatus, 
                    string currStatus, 
                    string employeeType, 
                    System.DateTime dateStartAllocated, 
                    System.DateTime dateFinishedAllocated, 
                    string actionChoice, 
                    System.DateTime actionStart, 
                    System.DateTime actionEnd, 
                    double minimumArrears, 
                    double maximumArrears, 
                    string statusType, 
                    string arrearsChoice, 
                    double arrears, 
                    string actionCode, 
                    string letterCode, 
                    string letterRestriction, 
                    bool letterRadio, 
                    System.DateTime letterStart, 
                    System.DateTime letterFinish, 
                    string actionRestriction, 
                    int empeeno, 
                    System.DateTime actiondateStart, 
                    System.DateTime actiondateFinish, 
                    bool includePhone, 
                    bool includeAddress, 
                    short branchno, 
                    string branchset, 
                    short proposalPoints, 
                    string propPointsDirection, 
                    string codeRestriction, 
                    string accountBranch, 
                    bool viewTop, 
                    string code, 
                    short numActions, 
                    string actionOperand, 
                    string balanceOperand, 
                    short restrictEmployee, 
                    decimal balance, 
                    short includeCharges, 
                    System.DateTime dateMovedFrom, 
                    System.DateTime dateMovedTo, 
                    string dateMovedRestriction, 
                    System.DateTime datelastPaid, 
                    string dateOperand, 
                    bool actionDueDate, 
                    bool credit, 
                    bool cash, 
                    bool service, 
                    string worklist, 
                    string deliveryArea, 
                    ref bool rowLimited, 
                    out string err) {
            object[] results = this.Invoke("Getacctsforalloc5_2", new object[] {
                        alreadyAllocated,
                        minimumStatus,
                        currStatus,
                        employeeType,
                        dateStartAllocated,
                        dateFinishedAllocated,
                        actionChoice,
                        actionStart,
                        actionEnd,
                        minimumArrears,
                        maximumArrears,
                        statusType,
                        arrearsChoice,
                        arrears,
                        actionCode,
                        letterCode,
                        letterRestriction,
                        letterRadio,
                        letterStart,
                        letterFinish,
                        actionRestriction,
                        empeeno,
                        actiondateStart,
                        actiondateFinish,
                        includePhone,
                        includeAddress,
                        branchno,
                        branchset,
                        proposalPoints,
                        propPointsDirection,
                        codeRestriction,
                        accountBranch,
                        viewTop,
                        code,
                        numActions,
                        actionOperand,
                        balanceOperand,
                        restrictEmployee,
                        balance,
                        includeCharges,
                        dateMovedFrom,
                        dateMovedTo,
                        dateMovedRestriction,
                        datelastPaid,
                        dateOperand,
                        actionDueDate,
                        credit,
                        cash,
                        service,
                        worklist,
                        deliveryArea,
                        rowLimited});
            rowLimited = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetacctsforalloc5_2(
                    string alreadyAllocated, 
                    string minimumStatus, 
                    string currStatus, 
                    string employeeType, 
                    System.DateTime dateStartAllocated, 
                    System.DateTime dateFinishedAllocated, 
                    string actionChoice, 
                    System.DateTime actionStart, 
                    System.DateTime actionEnd, 
                    double minimumArrears, 
                    double maximumArrears, 
                    string statusType, 
                    string arrearsChoice, 
                    double arrears, 
                    string actionCode, 
                    string letterCode, 
                    string letterRestriction, 
                    bool letterRadio, 
                    System.DateTime letterStart, 
                    System.DateTime letterFinish, 
                    string actionRestriction, 
                    int empeeno, 
                    System.DateTime actiondateStart, 
                    System.DateTime actiondateFinish, 
                    bool includePhone, 
                    bool includeAddress, 
                    short branchno, 
                    string branchset, 
                    short proposalPoints, 
                    string propPointsDirection, 
                    string codeRestriction, 
                    string accountBranch, 
                    bool viewTop, 
                    string code, 
                    short numActions, 
                    string actionOperand, 
                    string balanceOperand, 
                    short restrictEmployee, 
                    decimal balance, 
                    short includeCharges, 
                    System.DateTime dateMovedFrom, 
                    System.DateTime dateMovedTo, 
                    string dateMovedRestriction, 
                    System.DateTime datelastPaid, 
                    string dateOperand, 
                    bool actionDueDate, 
                    bool credit, 
                    bool cash, 
                    bool service, 
                    string worklist, 
                    string deliveryArea, 
                    bool rowLimited, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("Getacctsforalloc5_2", new object[] {
                        alreadyAllocated,
                        minimumStatus,
                        currStatus,
                        employeeType,
                        dateStartAllocated,
                        dateFinishedAllocated,
                        actionChoice,
                        actionStart,
                        actionEnd,
                        minimumArrears,
                        maximumArrears,
                        statusType,
                        arrearsChoice,
                        arrears,
                        actionCode,
                        letterCode,
                        letterRestriction,
                        letterRadio,
                        letterStart,
                        letterFinish,
                        actionRestriction,
                        empeeno,
                        actiondateStart,
                        actiondateFinish,
                        includePhone,
                        includeAddress,
                        branchno,
                        branchset,
                        proposalPoints,
                        propPointsDirection,
                        codeRestriction,
                        accountBranch,
                        viewTop,
                        code,
                        numActions,
                        actionOperand,
                        balanceOperand,
                        restrictEmployee,
                        balance,
                        includeCharges,
                        dateMovedFrom,
                        dateMovedTo,
                        dateMovedRestriction,
                        datelastPaid,
                        dateOperand,
                        actionDueDate,
                        credit,
                        cash,
                        service,
                        worklist,
                        deliveryArea,
                        rowLimited}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetacctsforalloc5_2(System.IAsyncResult asyncResult, out bool rowLimited, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            rowLimited = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Getacctsforalloc5_2Async(
                    string alreadyAllocated, 
                    string minimumStatus, 
                    string currStatus, 
                    string employeeType, 
                    System.DateTime dateStartAllocated, 
                    System.DateTime dateFinishedAllocated, 
                    string actionChoice, 
                    System.DateTime actionStart, 
                    System.DateTime actionEnd, 
                    double minimumArrears, 
                    double maximumArrears, 
                    string statusType, 
                    string arrearsChoice, 
                    double arrears, 
                    string actionCode, 
                    string letterCode, 
                    string letterRestriction, 
                    bool letterRadio, 
                    System.DateTime letterStart, 
                    System.DateTime letterFinish, 
                    string actionRestriction, 
                    int empeeno, 
                    System.DateTime actiondateStart, 
                    System.DateTime actiondateFinish, 
                    bool includePhone, 
                    bool includeAddress, 
                    short branchno, 
                    string branchset, 
                    short proposalPoints, 
                    string propPointsDirection, 
                    string codeRestriction, 
                    string accountBranch, 
                    bool viewTop, 
                    string code, 
                    short numActions, 
                    string actionOperand, 
                    string balanceOperand, 
                    short restrictEmployee, 
                    decimal balance, 
                    short includeCharges, 
                    System.DateTime dateMovedFrom, 
                    System.DateTime dateMovedTo, 
                    string dateMovedRestriction, 
                    System.DateTime datelastPaid, 
                    string dateOperand, 
                    bool actionDueDate, 
                    bool credit, 
                    bool cash, 
                    bool service, 
                    string worklist, 
                    string deliveryArea, 
                    bool rowLimited) {
            this.Getacctsforalloc5_2Async(alreadyAllocated, minimumStatus, currStatus, employeeType, dateStartAllocated, dateFinishedAllocated, actionChoice, actionStart, actionEnd, minimumArrears, maximumArrears, statusType, arrearsChoice, arrears, actionCode, letterCode, letterRestriction, letterRadio, letterStart, letterFinish, actionRestriction, empeeno, actiondateStart, actiondateFinish, includePhone, includeAddress, branchno, branchset, proposalPoints, propPointsDirection, codeRestriction, accountBranch, viewTop, code, numActions, actionOperand, balanceOperand, restrictEmployee, balance, includeCharges, dateMovedFrom, dateMovedTo, dateMovedRestriction, datelastPaid, dateOperand, actionDueDate, credit, cash, service, worklist, deliveryArea, rowLimited, null);
        }
        
        /// <remarks/>
        public void Getacctsforalloc5_2Async(
                    string alreadyAllocated, 
                    string minimumStatus, 
                    string currStatus, 
                    string employeeType, 
                    System.DateTime dateStartAllocated, 
                    System.DateTime dateFinishedAllocated, 
                    string actionChoice, 
                    System.DateTime actionStart, 
                    System.DateTime actionEnd, 
                    double minimumArrears, 
                    double maximumArrears, 
                    string statusType, 
                    string arrearsChoice, 
                    double arrears, 
                    string actionCode, 
                    string letterCode, 
                    string letterRestriction, 
                    bool letterRadio, 
                    System.DateTime letterStart, 
                    System.DateTime letterFinish, 
                    string actionRestriction, 
                    int empeeno, 
                    System.DateTime actiondateStart, 
                    System.DateTime actiondateFinish, 
                    bool includePhone, 
                    bool includeAddress, 
                    short branchno, 
                    string branchset, 
                    short proposalPoints, 
                    string propPointsDirection, 
                    string codeRestriction, 
                    string accountBranch, 
                    bool viewTop, 
                    string code, 
                    short numActions, 
                    string actionOperand, 
                    string balanceOperand, 
                    short restrictEmployee, 
                    decimal balance, 
                    short includeCharges, 
                    System.DateTime dateMovedFrom, 
                    System.DateTime dateMovedTo, 
                    string dateMovedRestriction, 
                    System.DateTime datelastPaid, 
                    string dateOperand, 
                    bool actionDueDate, 
                    bool credit, 
                    bool cash, 
                    bool service, 
                    string worklist, 
                    string deliveryArea, 
                    bool rowLimited, 
                    object userState) {
            if ((this.Getacctsforalloc5_2OperationCompleted == null)) {
                this.Getacctsforalloc5_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetacctsforalloc5_2OperationCompleted);
            }
            this.InvokeAsync("Getacctsforalloc5_2", new object[] {
                        alreadyAllocated,
                        minimumStatus,
                        currStatus,
                        employeeType,
                        dateStartAllocated,
                        dateFinishedAllocated,
                        actionChoice,
                        actionStart,
                        actionEnd,
                        minimumArrears,
                        maximumArrears,
                        statusType,
                        arrearsChoice,
                        arrears,
                        actionCode,
                        letterCode,
                        letterRestriction,
                        letterRadio,
                        letterStart,
                        letterFinish,
                        actionRestriction,
                        empeeno,
                        actiondateStart,
                        actiondateFinish,
                        includePhone,
                        includeAddress,
                        branchno,
                        branchset,
                        proposalPoints,
                        propPointsDirection,
                        codeRestriction,
                        accountBranch,
                        viewTop,
                        code,
                        numActions,
                        actionOperand,
                        balanceOperand,
                        restrictEmployee,
                        balance,
                        includeCharges,
                        dateMovedFrom,
                        dateMovedTo,
                        dateMovedRestriction,
                        datelastPaid,
                        dateOperand,
                        actionDueDate,
                        credit,
                        cash,
                        service,
                        worklist,
                        deliveryArea,
                        rowLimited}, this.Getacctsforalloc5_2OperationCompleted, userState);
        }
        
        private void OnGetacctsforalloc5_2OperationCompleted(object arg) {
            if ((this.Getacctsforalloc5_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Getacctsforalloc5_2Completed(this, new Getacctsforalloc5_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Getacctsforalloc", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Getacctsforalloc(
                    string alreadyAllocated, 
                    string minimumStatus, 
                    string currStatus, 
                    string employeeType, 
                    System.DateTime dateStartAllocated, 
                    System.DateTime dateFinishedAllocated, 
                    string actionChoice, 
                    System.DateTime actionStart, 
                    System.DateTime actionEnd, 
                    double minimumArrears, 
                    double maximumArrears, 
                    string statusType, 
                    string arrearsChoice, 
                    double arrears, 
                    string actionCode, 
                    string letterCode, 
                    string letterRestriction, 
                    bool letterRadio, 
                    System.DateTime letterStart, 
                    System.DateTime letterFinish, 
                    string actionRestriction, 
                    int empeeno, 
                    System.DateTime actiondateStart, 
                    System.DateTime actiondateFinish, 
                    bool includePhone, 
                    bool includeAddress, 
                    short branchno, 
                    string branchset, 
                    short proposalPoints, 
                    string propPointsDirection, 
                    string codeRestriction, 
                    string accountBranch, 
                    bool viewTop, 
                    string code, 
                    short numActions, 
                    string actionOperand, 
                    string balanceOperand, 
                    short restrictEmployee, 
                    decimal balance, 
                    short includeCharges, 
                    System.DateTime dateMovedFrom, 
                    System.DateTime dateMovedTo, 
                    string dateMovedRestriction, 
                    System.DateTime datelastPaid, 
                    string dateOperand, 
                    bool actionDueDate, 
                    bool credit, 
                    bool cash, 
                    bool service, 
                    ref bool rowLimited, 
                    out string err) {
            object[] results = this.Invoke("Getacctsforalloc", new object[] {
                        alreadyAllocated,
                        minimumStatus,
                        currStatus,
                        employeeType,
                        dateStartAllocated,
                        dateFinishedAllocated,
                        actionChoice,
                        actionStart,
                        actionEnd,
                        minimumArrears,
                        maximumArrears,
                        statusType,
                        arrearsChoice,
                        arrears,
                        actionCode,
                        letterCode,
                        letterRestriction,
                        letterRadio,
                        letterStart,
                        letterFinish,
                        actionRestriction,
                        empeeno,
                        actiondateStart,
                        actiondateFinish,
                        includePhone,
                        includeAddress,
                        branchno,
                        branchset,
                        proposalPoints,
                        propPointsDirection,
                        codeRestriction,
                        accountBranch,
                        viewTop,
                        code,
                        numActions,
                        actionOperand,
                        balanceOperand,
                        restrictEmployee,
                        balance,
                        includeCharges,
                        dateMovedFrom,
                        dateMovedTo,
                        dateMovedRestriction,
                        datelastPaid,
                        dateOperand,
                        actionDueDate,
                        credit,
                        cash,
                        service,
                        rowLimited});
            rowLimited = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetacctsforalloc(
                    string alreadyAllocated, 
                    string minimumStatus, 
                    string currStatus, 
                    string employeeType, 
                    System.DateTime dateStartAllocated, 
                    System.DateTime dateFinishedAllocated, 
                    string actionChoice, 
                    System.DateTime actionStart, 
                    System.DateTime actionEnd, 
                    double minimumArrears, 
                    double maximumArrears, 
                    string statusType, 
                    string arrearsChoice, 
                    double arrears, 
                    string actionCode, 
                    string letterCode, 
                    string letterRestriction, 
                    bool letterRadio, 
                    System.DateTime letterStart, 
                    System.DateTime letterFinish, 
                    string actionRestriction, 
                    int empeeno, 
                    System.DateTime actiondateStart, 
                    System.DateTime actiondateFinish, 
                    bool includePhone, 
                    bool includeAddress, 
                    short branchno, 
                    string branchset, 
                    short proposalPoints, 
                    string propPointsDirection, 
                    string codeRestriction, 
                    string accountBranch, 
                    bool viewTop, 
                    string code, 
                    short numActions, 
                    string actionOperand, 
                    string balanceOperand, 
                    short restrictEmployee, 
                    decimal balance, 
                    short includeCharges, 
                    System.DateTime dateMovedFrom, 
                    System.DateTime dateMovedTo, 
                    string dateMovedRestriction, 
                    System.DateTime datelastPaid, 
                    string dateOperand, 
                    bool actionDueDate, 
                    bool credit, 
                    bool cash, 
                    bool service, 
                    bool rowLimited, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("Getacctsforalloc", new object[] {
                        alreadyAllocated,
                        minimumStatus,
                        currStatus,
                        employeeType,
                        dateStartAllocated,
                        dateFinishedAllocated,
                        actionChoice,
                        actionStart,
                        actionEnd,
                        minimumArrears,
                        maximumArrears,
                        statusType,
                        arrearsChoice,
                        arrears,
                        actionCode,
                        letterCode,
                        letterRestriction,
                        letterRadio,
                        letterStart,
                        letterFinish,
                        actionRestriction,
                        empeeno,
                        actiondateStart,
                        actiondateFinish,
                        includePhone,
                        includeAddress,
                        branchno,
                        branchset,
                        proposalPoints,
                        propPointsDirection,
                        codeRestriction,
                        accountBranch,
                        viewTop,
                        code,
                        numActions,
                        actionOperand,
                        balanceOperand,
                        restrictEmployee,
                        balance,
                        includeCharges,
                        dateMovedFrom,
                        dateMovedTo,
                        dateMovedRestriction,
                        datelastPaid,
                        dateOperand,
                        actionDueDate,
                        credit,
                        cash,
                        service,
                        rowLimited}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetacctsforalloc(System.IAsyncResult asyncResult, out bool rowLimited, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            rowLimited = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetacctsforallocAsync(
                    string alreadyAllocated, 
                    string minimumStatus, 
                    string currStatus, 
                    string employeeType, 
                    System.DateTime dateStartAllocated, 
                    System.DateTime dateFinishedAllocated, 
                    string actionChoice, 
                    System.DateTime actionStart, 
                    System.DateTime actionEnd, 
                    double minimumArrears, 
                    double maximumArrears, 
                    string statusType, 
                    string arrearsChoice, 
                    double arrears, 
                    string actionCode, 
                    string letterCode, 
                    string letterRestriction, 
                    bool letterRadio, 
                    System.DateTime letterStart, 
                    System.DateTime letterFinish, 
                    string actionRestriction, 
                    int empeeno, 
                    System.DateTime actiondateStart, 
                    System.DateTime actiondateFinish, 
                    bool includePhone, 
                    bool includeAddress, 
                    short branchno, 
                    string branchset, 
                    short proposalPoints, 
                    string propPointsDirection, 
                    string codeRestriction, 
                    string accountBranch, 
                    bool viewTop, 
                    string code, 
                    short numActions, 
                    string actionOperand, 
                    string balanceOperand, 
                    short restrictEmployee, 
                    decimal balance, 
                    short includeCharges, 
                    System.DateTime dateMovedFrom, 
                    System.DateTime dateMovedTo, 
                    string dateMovedRestriction, 
                    System.DateTime datelastPaid, 
                    string dateOperand, 
                    bool actionDueDate, 
                    bool credit, 
                    bool cash, 
                    bool service, 
                    bool rowLimited) {
            this.GetacctsforallocAsync(alreadyAllocated, minimumStatus, currStatus, employeeType, dateStartAllocated, dateFinishedAllocated, actionChoice, actionStart, actionEnd, minimumArrears, maximumArrears, statusType, arrearsChoice, arrears, actionCode, letterCode, letterRestriction, letterRadio, letterStart, letterFinish, actionRestriction, empeeno, actiondateStart, actiondateFinish, includePhone, includeAddress, branchno, branchset, proposalPoints, propPointsDirection, codeRestriction, accountBranch, viewTop, code, numActions, actionOperand, balanceOperand, restrictEmployee, balance, includeCharges, dateMovedFrom, dateMovedTo, dateMovedRestriction, datelastPaid, dateOperand, actionDueDate, credit, cash, service, rowLimited, null);
        }
        
        /// <remarks/>
        public void GetacctsforallocAsync(
                    string alreadyAllocated, 
                    string minimumStatus, 
                    string currStatus, 
                    string employeeType, 
                    System.DateTime dateStartAllocated, 
                    System.DateTime dateFinishedAllocated, 
                    string actionChoice, 
                    System.DateTime actionStart, 
                    System.DateTime actionEnd, 
                    double minimumArrears, 
                    double maximumArrears, 
                    string statusType, 
                    string arrearsChoice, 
                    double arrears, 
                    string actionCode, 
                    string letterCode, 
                    string letterRestriction, 
                    bool letterRadio, 
                    System.DateTime letterStart, 
                    System.DateTime letterFinish, 
                    string actionRestriction, 
                    int empeeno, 
                    System.DateTime actiondateStart, 
                    System.DateTime actiondateFinish, 
                    bool includePhone, 
                    bool includeAddress, 
                    short branchno, 
                    string branchset, 
                    short proposalPoints, 
                    string propPointsDirection, 
                    string codeRestriction, 
                    string accountBranch, 
                    bool viewTop, 
                    string code, 
                    short numActions, 
                    string actionOperand, 
                    string balanceOperand, 
                    short restrictEmployee, 
                    decimal balance, 
                    short includeCharges, 
                    System.DateTime dateMovedFrom, 
                    System.DateTime dateMovedTo, 
                    string dateMovedRestriction, 
                    System.DateTime datelastPaid, 
                    string dateOperand, 
                    bool actionDueDate, 
                    bool credit, 
                    bool cash, 
                    bool service, 
                    bool rowLimited, 
                    object userState) {
            if ((this.GetacctsforallocOperationCompleted == null)) {
                this.GetacctsforallocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetacctsforallocOperationCompleted);
            }
            this.InvokeAsync("Getacctsforalloc", new object[] {
                        alreadyAllocated,
                        minimumStatus,
                        currStatus,
                        employeeType,
                        dateStartAllocated,
                        dateFinishedAllocated,
                        actionChoice,
                        actionStart,
                        actionEnd,
                        minimumArrears,
                        maximumArrears,
                        statusType,
                        arrearsChoice,
                        arrears,
                        actionCode,
                        letterCode,
                        letterRestriction,
                        letterRadio,
                        letterStart,
                        letterFinish,
                        actionRestriction,
                        empeeno,
                        actiondateStart,
                        actiondateFinish,
                        includePhone,
                        includeAddress,
                        branchno,
                        branchset,
                        proposalPoints,
                        propPointsDirection,
                        codeRestriction,
                        accountBranch,
                        viewTop,
                        code,
                        numActions,
                        actionOperand,
                        balanceOperand,
                        restrictEmployee,
                        balance,
                        includeCharges,
                        dateMovedFrom,
                        dateMovedTo,
                        dateMovedRestriction,
                        datelastPaid,
                        dateOperand,
                        actionDueDate,
                        credit,
                        cash,
                        service,
                        rowLimited}, this.GetacctsforallocOperationCompleted, userState);
        }
        
        private void OnGetacctsforallocOperationCompleted(object arg) {
            if ((this.GetacctsforallocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetacctsforallocCompleted(this, new GetacctsforallocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStrategyAccountsToAllocate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStrategyAccountsToAllocate(out string err) {
            object[] results = this.Invoke("GetStrategyAccountsToAllocate", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStrategyAccountsToAllocate(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStrategyAccountsToAllocate", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStrategyAccountsToAllocate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategyAccountsToAllocateAsync() {
            this.GetStrategyAccountsToAllocateAsync(null);
        }
        
        /// <remarks/>
        public void GetStrategyAccountsToAllocateAsync(object userState) {
            if ((this.GetStrategyAccountsToAllocateOperationCompleted == null)) {
                this.GetStrategyAccountsToAllocateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategyAccountsToAllocateOperationCompleted);
            }
            this.InvokeAsync("GetStrategyAccountsToAllocate", new object[0], this.GetStrategyAccountsToAllocateOperationCompleted, userState);
        }
        
        private void OnGetStrategyAccountsToAllocateOperationCompleted(object arg) {
            if ((this.GetStrategyAccountsToAllocateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategyAccountsToAllocateCompleted(this, new GetStrategyAccountsToAllocateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountDetails(string accountNumber, out string err) {
            object[] results = this.Invoke("GetAccountDetails", new object[] {
                        accountNumber});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountDetails(string accountNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountDetails", new object[] {
                        accountNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAccountDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDetailsAsync(string accountNumber) {
            this.GetAccountDetailsAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetAccountDetailsAsync(string accountNumber, object userState) {
            if ((this.GetAccountDetailsOperationCompleted == null)) {
                this.GetAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAccountDetails", new object[] {
                        accountNumber}, this.GetAccountDetailsOperationCompleted, userState);
        }
        
        private void OnGetAccountDetailsOperationCompleted(object arg) {
            if ((this.GetAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDetailsCompleted(this, new GetAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalculateInstalPlan", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CalculateInstalPlan(decimal subTotal, decimal deposit, decimal deferredTerms, decimal months, out decimal monthly, out decimal final, out string err) {
            object[] results = this.Invoke("CalculateInstalPlan", new object[] {
                        subTotal,
                        deposit,
                        deferredTerms,
                        months});
            monthly = ((decimal)(results[1]));
            final = ((decimal)(results[2]));
            err = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateInstalPlan(decimal subTotal, decimal deposit, decimal deferredTerms, decimal months, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateInstalPlan", new object[] {
                        subTotal,
                        deposit,
                        deferredTerms,
                        months}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCalculateInstalPlan(System.IAsyncResult asyncResult, out decimal monthly, out decimal final, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            monthly = ((decimal)(results[1]));
            final = ((decimal)(results[2]));
            err = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateInstalPlanAsync(decimal subTotal, decimal deposit, decimal deferredTerms, decimal months) {
            this.CalculateInstalPlanAsync(subTotal, deposit, deferredTerms, months, null);
        }
        
        /// <remarks/>
        public void CalculateInstalPlanAsync(decimal subTotal, decimal deposit, decimal deferredTerms, decimal months, object userState) {
            if ((this.CalculateInstalPlanOperationCompleted == null)) {
                this.CalculateInstalPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateInstalPlanOperationCompleted);
            }
            this.InvokeAsync("CalculateInstalPlan", new object[] {
                        subTotal,
                        deposit,
                        deferredTerms,
                        months}, this.CalculateInstalPlanOperationCompleted, userState);
        }
        
        private void OnCalculateInstalPlanOperationCompleted(object arg) {
            if ((this.CalculateInstalPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateInstalPlanCompleted(this, new CalculateInstalPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalculateServiceCharge", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalculateServiceCharge(string countryCode, string termsType, string acctNo, string overrideBand, decimal deposit, decimal months, decimal subTotal, System.DateTime dateOpened, string accountType, decimal adminSubTotal, ref decimal insuranceCharge, ref decimal adminCharge, ref System.Data.DataSet variableRatesSet, out string err) {
            object[] results = this.Invoke("CalculateServiceCharge", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        overrideBand,
                        deposit,
                        months,
                        subTotal,
                        dateOpened,
                        accountType,
                        adminSubTotal,
                        insuranceCharge,
                        adminCharge,
                        variableRatesSet});
            insuranceCharge = ((decimal)(results[1]));
            adminCharge = ((decimal)(results[2]));
            variableRatesSet = ((System.Data.DataSet)(results[3]));
            err = ((string)(results[4]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateServiceCharge(string countryCode, string termsType, string acctNo, string overrideBand, decimal deposit, decimal months, decimal subTotal, System.DateTime dateOpened, string accountType, decimal adminSubTotal, decimal insuranceCharge, decimal adminCharge, System.Data.DataSet variableRatesSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateServiceCharge", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        overrideBand,
                        deposit,
                        months,
                        subTotal,
                        dateOpened,
                        accountType,
                        adminSubTotal,
                        insuranceCharge,
                        adminCharge,
                        variableRatesSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndCalculateServiceCharge(System.IAsyncResult asyncResult, out decimal insuranceCharge, out decimal adminCharge, out System.Data.DataSet variableRatesSet, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            insuranceCharge = ((decimal)(results[1]));
            adminCharge = ((decimal)(results[2]));
            variableRatesSet = ((System.Data.DataSet)(results[3]));
            err = ((string)(results[4]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateServiceChargeAsync(string countryCode, string termsType, string acctNo, string overrideBand, decimal deposit, decimal months, decimal subTotal, System.DateTime dateOpened, string accountType, decimal adminSubTotal, decimal insuranceCharge, decimal adminCharge, System.Data.DataSet variableRatesSet) {
            this.CalculateServiceChargeAsync(countryCode, termsType, acctNo, overrideBand, deposit, months, subTotal, dateOpened, accountType, adminSubTotal, insuranceCharge, adminCharge, variableRatesSet, null);
        }
        
        /// <remarks/>
        public void CalculateServiceChargeAsync(string countryCode, string termsType, string acctNo, string overrideBand, decimal deposit, decimal months, decimal subTotal, System.DateTime dateOpened, string accountType, decimal adminSubTotal, decimal insuranceCharge, decimal adminCharge, System.Data.DataSet variableRatesSet, object userState) {
            if ((this.CalculateServiceChargeOperationCompleted == null)) {
                this.CalculateServiceChargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateServiceChargeOperationCompleted);
            }
            this.InvokeAsync("CalculateServiceCharge", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        overrideBand,
                        deposit,
                        months,
                        subTotal,
                        dateOpened,
                        accountType,
                        adminSubTotal,
                        insuranceCharge,
                        adminCharge,
                        variableRatesSet}, this.CalculateServiceChargeOperationCompleted, userState);
        }
        
        private void OnCalculateServiceChargeOperationCompleted(object arg) {
            if ((this.CalculateServiceChargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateServiceChargeCompleted(this, new CalculateServiceChargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTermsTypeDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTermsTypeDetails(string countryCode, string termsType, string acctNo, System.DateTime dateAcctOpen, out string err) {
            object[] results = this.Invoke("GetTermsTypeDetails", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        dateAcctOpen});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTermsTypeDetails(string countryCode, string termsType, string acctNo, System.DateTime dateAcctOpen, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTermsTypeDetails", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        dateAcctOpen}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTermsTypeDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTermsTypeDetailsAsync(string countryCode, string termsType, string acctNo, System.DateTime dateAcctOpen) {
            this.GetTermsTypeDetailsAsync(countryCode, termsType, acctNo, dateAcctOpen, null);
        }
        
        /// <remarks/>
        public void GetTermsTypeDetailsAsync(string countryCode, string termsType, string acctNo, System.DateTime dateAcctOpen, object userState) {
            if ((this.GetTermsTypeDetailsOperationCompleted == null)) {
                this.GetTermsTypeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTermsTypeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTermsTypeDetails", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        dateAcctOpen}, this.GetTermsTypeDetailsOperationCompleted, userState);
        }
        
        private void OnGetTermsTypeDetailsOperationCompleted(object arg) {
            if ((this.GetTermsTypeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTermsTypeDetailsCompleted(this, new GetTermsTypeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TermsTypeGetDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TermsTypeGetDetails(string acctNo, out string err) {
            object[] results = this.Invoke("TermsTypeGetDetails", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTermsTypeGetDetails(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TermsTypeGetDetails", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndTermsTypeGetDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TermsTypeGetDetailsAsync(string acctNo) {
            this.TermsTypeGetDetailsAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void TermsTypeGetDetailsAsync(string acctNo, object userState) {
            if ((this.TermsTypeGetDetailsOperationCompleted == null)) {
                this.TermsTypeGetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTermsTypeGetDetailsOperationCompleted);
            }
            this.InvokeAsync("TermsTypeGetDetails", new object[] {
                        acctNo}, this.TermsTypeGetDetailsOperationCompleted, userState);
        }
        
        private void OnTermsTypeGetDetailsOperationCompleted(object arg) {
            if ((this.TermsTypeGetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TermsTypeGetDetailsCompleted(this, new TermsTypeGetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveNewAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveNewAccount(SaveNewAccountParameters s, ref int agreementNo, ref string propResult, ref System.DateTime dateProp, out string bureauFailure, out int storeCardTransRefNo, out string referralreasons, out string err) {
            object[] results = this.Invoke("SaveNewAccount", new object[] {
                        s,
                        agreementNo,
                        propResult,
                        dateProp});
            agreementNo = ((int)(results[1]));
            propResult = ((string)(results[2]));
            dateProp = ((System.DateTime)(results[3]));
            bureauFailure = ((string)(results[4]));
            storeCardTransRefNo = ((int)(results[5]));
            referralreasons = ((string)(results[6]));
            err = ((string)(results[7]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveNewAccount(SaveNewAccountParameters s, int agreementNo, string propResult, System.DateTime dateProp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveNewAccount", new object[] {
                        s,
                        agreementNo,
                        propResult,
                        dateProp}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveNewAccount(System.IAsyncResult asyncResult, out int agreementNo, out string propResult, out System.DateTime dateProp, out string bureauFailure, out int storeCardTransRefNo, out string referralreasons, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            agreementNo = ((int)(results[1]));
            propResult = ((string)(results[2]));
            dateProp = ((System.DateTime)(results[3]));
            bureauFailure = ((string)(results[4]));
            storeCardTransRefNo = ((int)(results[5]));
            referralreasons = ((string)(results[6]));
            err = ((string)(results[7]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveNewAccountAsync(SaveNewAccountParameters s, int agreementNo, string propResult, System.DateTime dateProp) {
            this.SaveNewAccountAsync(s, agreementNo, propResult, dateProp, null);
        }
        
        /// <remarks/>
        public void SaveNewAccountAsync(SaveNewAccountParameters s, int agreementNo, string propResult, System.DateTime dateProp, object userState) {
            if ((this.SaveNewAccountOperationCompleted == null)) {
                this.SaveNewAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveNewAccountOperationCompleted);
            }
            this.InvokeAsync("SaveNewAccount", new object[] {
                        s,
                        agreementNo,
                        propResult,
                        dateProp}, this.SaveNewAccountOperationCompleted, userState);
        }
        
        private void OnSaveNewAccountOperationCompleted(object arg) {
            if ((this.SaveNewAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveNewAccountCompleted(this, new SaveNewAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountName", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountName(string accountNumber, string customerID, out string err) {
            object[] results = this.Invoke("GetAccountName", new object[] {
                        accountNumber,
                        customerID});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountName(string accountNumber, string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountName", new object[] {
                        accountNumber,
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAccountName(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountNameAsync(string accountNumber, string customerID) {
            this.GetAccountNameAsync(accountNumber, customerID, null);
        }
        
        /// <remarks/>
        public void GetAccountNameAsync(string accountNumber, string customerID, object userState) {
            if ((this.GetAccountNameOperationCompleted == null)) {
                this.GetAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountNameOperationCompleted);
            }
            this.InvokeAsync("GetAccountName", new object[] {
                        accountNumber,
                        customerID}, this.GetAccountNameOperationCompleted, userState);
        }
        
        private void OnGetAccountNameOperationCompleted(object arg) {
            if ((this.GetAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountNameCompleted(this, new GetAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCodesOnAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCodesOnAccount(string accountNumber, out bool noSuchAccount, out string err) {
            object[] results = this.Invoke("GetCodesOnAccount", new object[] {
                        accountNumber});
            noSuchAccount = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCodesOnAccount(string accountNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCodesOnAccount", new object[] {
                        accountNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCodesOnAccount(System.IAsyncResult asyncResult, out bool noSuchAccount, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            noSuchAccount = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCodesOnAccountAsync(string accountNumber) {
            this.GetCodesOnAccountAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetCodesOnAccountAsync(string accountNumber, object userState) {
            if ((this.GetCodesOnAccountOperationCompleted == null)) {
                this.GetCodesOnAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodesOnAccountOperationCompleted);
            }
            this.InvokeAsync("GetCodesOnAccount", new object[] {
                        accountNumber}, this.GetCodesOnAccountOperationCompleted, userState);
        }
        
        private void OnGetCodesOnAccountOperationCompleted(object arg) {
            if ((this.GetCodesOnAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodesOnAccountCompleted(this, new GetCodesOnAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AddCodesToAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddCodesToAccount(string accountNumber, System.Data.DataSet ds) {
            object[] results = this.Invoke("AddCodesToAccount", new object[] {
                        accountNumber,
                        ds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddCodesToAccount(string accountNumber, System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddCodesToAccount", new object[] {
                        accountNumber,
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddCodesToAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCodesToAccountAsync(string accountNumber, System.Data.DataSet ds) {
            this.AddCodesToAccountAsync(accountNumber, ds, null);
        }
        
        /// <remarks/>
        public void AddCodesToAccountAsync(string accountNumber, System.Data.DataSet ds, object userState) {
            if ((this.AddCodesToAccountOperationCompleted == null)) {
                this.AddCodesToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCodesToAccountOperationCompleted);
            }
            this.InvokeAsync("AddCodesToAccount", new object[] {
                        accountNumber,
                        ds}, this.AddCodesToAccountOperationCompleted, userState);
        }
        
        private void OnAddCodesToAccountOperationCompleted(object arg) {
            if ((this.AddCodesToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCodesToAccountCompleted(this, new AddCodesToAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AddLetterToAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLetterToAccount(string accountNumber, System.DateTime letterDate, System.DateTime letterDue, string letterCode, decimal addToValue, string excelGen) {
            object[] results = this.Invoke("AddLetterToAccount", new object[] {
                        accountNumber,
                        letterDate,
                        letterDue,
                        letterCode,
                        addToValue,
                        excelGen});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddLetterToAccount(string accountNumber, System.DateTime letterDate, System.DateTime letterDue, string letterCode, decimal addToValue, string excelGen, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddLetterToAccount", new object[] {
                        accountNumber,
                        letterDate,
                        letterDue,
                        letterCode,
                        addToValue,
                        excelGen}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddLetterToAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLetterToAccountAsync(string accountNumber, System.DateTime letterDate, System.DateTime letterDue, string letterCode, decimal addToValue, string excelGen) {
            this.AddLetterToAccountAsync(accountNumber, letterDate, letterDue, letterCode, addToValue, excelGen, null);
        }
        
        /// <remarks/>
        public void AddLetterToAccountAsync(string accountNumber, System.DateTime letterDate, System.DateTime letterDue, string letterCode, decimal addToValue, string excelGen, object userState) {
            if ((this.AddLetterToAccountOperationCompleted == null)) {
                this.AddLetterToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLetterToAccountOperationCompleted);
            }
            this.InvokeAsync("AddLetterToAccount", new object[] {
                        accountNumber,
                        letterDate,
                        letterDue,
                        letterCode,
                        addToValue,
                        excelGen}, this.AddLetterToAccountOperationCompleted, userState);
        }
        
        private void OnAddLetterToAccountOperationCompleted(object arg) {
            if ((this.AddLetterToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLetterToAccountCompleted(this, new AddLetterToAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAgreement", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAgreement(string accountNo, int agreementNumber, bool GR, out string err) {
            object[] results = this.Invoke("GetAgreement", new object[] {
                        accountNo,
                        agreementNumber,
                        GR});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAgreement(string accountNo, int agreementNumber, bool GR, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAgreement", new object[] {
                        accountNo,
                        agreementNumber,
                        GR}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAgreement(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgreementAsync(string accountNo, int agreementNumber, bool GR) {
            this.GetAgreementAsync(accountNo, agreementNumber, GR, null);
        }
        
        /// <remarks/>
        public void GetAgreementAsync(string accountNo, int agreementNumber, bool GR, object userState) {
            if ((this.GetAgreementOperationCompleted == null)) {
                this.GetAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgreementOperationCompleted);
            }
            this.InvokeAsync("GetAgreement", new object[] {
                        accountNo,
                        agreementNumber,
                        GR}, this.GetAgreementOperationCompleted, userState);
        }
        
        private void OnGetAgreementOperationCompleted(object arg) {
            if ((this.GetAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgreementCompleted(this, new GetAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetInvoiceAccountDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInvoiceAccountDetails(string InvoiceNo, out string err) {
            object[] results = this.Invoke("GetInvoiceAccountDetails", new object[] {
                        InvoiceNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInvoiceAccountDetails(string InvoiceNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInvoiceAccountDetails", new object[] {
                        InvoiceNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetInvoiceAccountDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoiceAccountDetailsAsync(string InvoiceNo) {
            this.GetInvoiceAccountDetailsAsync(InvoiceNo, null);
        }
        
        /// <remarks/>
        public void GetInvoiceAccountDetailsAsync(string InvoiceNo, object userState) {
            if ((this.GetInvoiceAccountDetailsOperationCompleted == null)) {
                this.GetInvoiceAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("GetInvoiceAccountDetails", new object[] {
                        InvoiceNo}, this.GetInvoiceAccountDetailsOperationCompleted, userState);
        }
        
        private void OnGetInvoiceAccountDetailsOperationCompleted(object arg) {
            if ((this.GetInvoiceAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoiceAccountDetailsCompleted(this, new GetInvoiceAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountForRevision", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountForRevision(string accountNo, int agreementNo, out string AccountBand, out string CustomerBand, out string err) {
            object[] results = this.Invoke("GetAccountForRevision", new object[] {
                        accountNo,
                        agreementNo});
            AccountBand = ((string)(results[1]));
            CustomerBand = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountForRevision(string accountNo, int agreementNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountForRevision", new object[] {
                        accountNo,
                        agreementNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAccountForRevision(System.IAsyncResult asyncResult, out string AccountBand, out string CustomerBand, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            AccountBand = ((string)(results[1]));
            CustomerBand = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountForRevisionAsync(string accountNo, int agreementNo) {
            this.GetAccountForRevisionAsync(accountNo, agreementNo, null);
        }
        
        /// <remarks/>
        public void GetAccountForRevisionAsync(string accountNo, int agreementNo, object userState) {
            if ((this.GetAccountForRevisionOperationCompleted == null)) {
                this.GetAccountForRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountForRevisionOperationCompleted);
            }
            this.InvokeAsync("GetAccountForRevision", new object[] {
                        accountNo,
                        agreementNo}, this.GetAccountForRevisionOperationCompleted, userState);
        }
        
        private void OnGetAccountForRevisionOperationCompleted(object arg) {
            if ((this.GetAccountForRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountForRevisionCompleted(this, new GetAccountForRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetLineItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLineItems(string accountNo, int agreementNo, string accountType, string country, short promoBranch, out string err) {
            object[] results = this.Invoke("GetLineItems", new object[] {
                        accountNo,
                        agreementNo,
                        accountType,
                        country,
                        promoBranch});
            err = ((string)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLineItems(string accountNo, int agreementNo, string accountType, string country, short promoBranch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLineItems", new object[] {
                        accountNo,
                        agreementNo,
                        accountType,
                        country,
                        promoBranch}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetLineItems(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLineItemsAsync(string accountNo, int agreementNo, string accountType, string country, short promoBranch) {
            this.GetLineItemsAsync(accountNo, agreementNo, accountType, country, promoBranch, null);
        }
        
        /// <remarks/>
        public void GetLineItemsAsync(string accountNo, int agreementNo, string accountType, string country, short promoBranch, object userState) {
            if ((this.GetLineItemsOperationCompleted == null)) {
                this.GetLineItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLineItemsOperationCompleted);
            }
            this.InvokeAsync("GetLineItems", new object[] {
                        accountNo,
                        agreementNo,
                        accountType,
                        country,
                        promoBranch}, this.GetLineItemsOperationCompleted, userState);
        }
        
        private void OnGetLineItemsOperationCompleted(object arg) {
            if ((this.GetLineItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLineItemsCompleted(this, new GetLineItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/HasReturnsItens", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasReturnsItens(string accountNo, int agreementNo, int itemID, short location, string contractNo, int parentItemID) {
            object[] results = this.Invoke("HasReturnsItens", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location,
                        contractNo,
                        parentItemID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHasReturnsItens(string accountNo, int agreementNo, int itemID, short location, string contractNo, int parentItemID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HasReturnsItens", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location,
                        contractNo,
                        parentItemID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndHasReturnsItens(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasReturnsItensAsync(string accountNo, int agreementNo, int itemID, short location, string contractNo, int parentItemID) {
            this.HasReturnsItensAsync(accountNo, agreementNo, itemID, location, contractNo, parentItemID, null);
        }
        
        /// <remarks/>
        public void HasReturnsItensAsync(string accountNo, int agreementNo, int itemID, short location, string contractNo, int parentItemID, object userState) {
            if ((this.HasReturnsItensOperationCompleted == null)) {
                this.HasReturnsItensOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasReturnsItensOperationCompleted);
            }
            this.InvokeAsync("HasReturnsItens", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location,
                        contractNo,
                        parentItemID}, this.HasReturnsItensOperationCompleted, userState);
        }
        
        private void OnHasReturnsItensOperationCompleted(object arg) {
            if ((this.HasReturnsItensCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasReturnsItensCompleted(this, new HasReturnsItensCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetItemsDeliveredAndScheduled", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetItemsDeliveredAndScheduled(string accountNo, int agreementNo, int itemID, short location, string contractNo, int parentItemID, out double delivered, out double scheduled, out bool repo, out string err) {
            object[] results = this.Invoke("GetItemsDeliveredAndScheduled", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location,
                        contractNo,
                        parentItemID});
            delivered = ((double)(results[1]));
            scheduled = ((double)(results[2]));
            repo = ((bool)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemsDeliveredAndScheduled(string accountNo, int agreementNo, int itemID, short location, string contractNo, int parentItemID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemsDeliveredAndScheduled", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location,
                        contractNo,
                        parentItemID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetItemsDeliveredAndScheduled(System.IAsyncResult asyncResult, out double delivered, out double scheduled, out bool repo, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            delivered = ((double)(results[1]));
            scheduled = ((double)(results[2]));
            repo = ((bool)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsDeliveredAndScheduledAsync(string accountNo, int agreementNo, int itemID, short location, string contractNo, int parentItemID) {
            this.GetItemsDeliveredAndScheduledAsync(accountNo, agreementNo, itemID, location, contractNo, parentItemID, null);
        }
        
        /// <remarks/>
        public void GetItemsDeliveredAndScheduledAsync(string accountNo, int agreementNo, int itemID, short location, string contractNo, int parentItemID, object userState) {
            if ((this.GetItemsDeliveredAndScheduledOperationCompleted == null)) {
                this.GetItemsDeliveredAndScheduledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsDeliveredAndScheduledOperationCompleted);
            }
            this.InvokeAsync("GetItemsDeliveredAndScheduled", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location,
                        contractNo,
                        parentItemID}, this.GetItemsDeliveredAndScheduledOperationCompleted, userState);
        }
        
        private void OnGetItemsDeliveredAndScheduledOperationCompleted(object arg) {
            if ((this.GetItemsDeliveredAndScheduledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsDeliveredAndScheduledCompleted(this, new GetItemsDeliveredAndScheduledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetScheduledDeliveriesForItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScheduledDeliveriesForItem(string accountNo, int agreementNo, int itemID, short location, out string err) {
            object[] results = this.Invoke("GetScheduledDeliveriesForItem", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScheduledDeliveriesForItem(string accountNo, int agreementNo, int itemID, short location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScheduledDeliveriesForItem", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetScheduledDeliveriesForItem(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduledDeliveriesForItemAsync(string accountNo, int agreementNo, int itemID, short location) {
            this.GetScheduledDeliveriesForItemAsync(accountNo, agreementNo, itemID, location, null);
        }
        
        /// <remarks/>
        public void GetScheduledDeliveriesForItemAsync(string accountNo, int agreementNo, int itemID, short location, object userState) {
            if ((this.GetScheduledDeliveriesForItemOperationCompleted == null)) {
                this.GetScheduledDeliveriesForItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduledDeliveriesForItemOperationCompleted);
            }
            this.InvokeAsync("GetScheduledDeliveriesForItem", new object[] {
                        accountNo,
                        agreementNo,
                        itemID,
                        location}, this.GetScheduledDeliveriesForItemOperationCompleted, userState);
        }
        
        private void OnGetScheduledDeliveriesForItemOperationCompleted(object arg) {
            if ((this.GetScheduledDeliveriesForItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduledDeliveriesForItemCompleted(this, new GetScheduledDeliveriesForItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteDeliverySchedules", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDeliverySchedules(System.Data.DataSet ds, bool resetHoldProp, out string err) {
            object[] results = this.Invoke("DeleteDeliverySchedules", new object[] {
                        ds,
                        resetHoldProp});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteDeliverySchedules(System.Data.DataSet ds, bool resetHoldProp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteDeliverySchedules", new object[] {
                        ds,
                        resetHoldProp}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDeleteDeliverySchedules(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeliverySchedulesAsync(System.Data.DataSet ds, bool resetHoldProp) {
            this.DeleteDeliverySchedulesAsync(ds, resetHoldProp, null);
        }
        
        /// <remarks/>
        public void DeleteDeliverySchedulesAsync(System.Data.DataSet ds, bool resetHoldProp, object userState) {
            if ((this.DeleteDeliverySchedulesOperationCompleted == null)) {
                this.DeleteDeliverySchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeliverySchedulesOperationCompleted);
            }
            this.InvokeAsync("DeleteDeliverySchedules", new object[] {
                        ds,
                        resetHoldProp}, this.DeleteDeliverySchedulesOperationCompleted, userState);
        }
        
        private void OnDeleteDeliverySchedulesOperationCompleted(object arg) {
            if ((this.DeleteDeliverySchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeliverySchedulesCompleted(this, new DeleteDeliverySchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Schedule_GetByBuffNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Schedule_GetByBuffNo(int BranchNo, int BuffNo, out string err) {
            object[] results = this.Invoke("Schedule_GetByBuffNo", new object[] {
                        BranchNo,
                        BuffNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSchedule_GetByBuffNo(int BranchNo, int BuffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Schedule_GetByBuffNo", new object[] {
                        BranchNo,
                        BuffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSchedule_GetByBuffNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Schedule_GetByBuffNoAsync(int BranchNo, int BuffNo) {
            this.Schedule_GetByBuffNoAsync(BranchNo, BuffNo, null);
        }
        
        /// <remarks/>
        public void Schedule_GetByBuffNoAsync(int BranchNo, int BuffNo, object userState) {
            if ((this.Schedule_GetByBuffNoOperationCompleted == null)) {
                this.Schedule_GetByBuffNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSchedule_GetByBuffNoOperationCompleted);
            }
            this.InvokeAsync("Schedule_GetByBuffNo", new object[] {
                        BranchNo,
                        BuffNo}, this.Schedule_GetByBuffNoOperationCompleted, userState);
        }
        
        private void OnSchedule_GetByBuffNoOperationCompleted(object arg) {
            if ((this.Schedule_GetByBuffNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Schedule_GetByBuffNoCompleted(this, new Schedule_GetByBuffNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Delivery_DeliverImmediately", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Delivery_DeliverImmediately(string accountNumber, System.DateTime DateDel, System.Data.DataSet DeliveryItems, string countryCode, string branchNo, ref bool allItemsCollected, out string err) {
            object[] results = this.Invoke("Delivery_DeliverImmediately", new object[] {
                        accountNumber,
                        DateDel,
                        DeliveryItems,
                        countryCode,
                        branchNo,
                        allItemsCollected});
            allItemsCollected = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelivery_DeliverImmediately(string accountNumber, System.DateTime DateDel, System.Data.DataSet DeliveryItems, string countryCode, string branchNo, bool allItemsCollected, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Delivery_DeliverImmediately", new object[] {
                        accountNumber,
                        DateDel,
                        DeliveryItems,
                        countryCode,
                        branchNo,
                        allItemsCollected}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDelivery_DeliverImmediately(System.IAsyncResult asyncResult, out bool allItemsCollected, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            allItemsCollected = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Delivery_DeliverImmediatelyAsync(string accountNumber, System.DateTime DateDel, System.Data.DataSet DeliveryItems, string countryCode, string branchNo, bool allItemsCollected) {
            this.Delivery_DeliverImmediatelyAsync(accountNumber, DateDel, DeliveryItems, countryCode, branchNo, allItemsCollected, null);
        }
        
        /// <remarks/>
        public void Delivery_DeliverImmediatelyAsync(string accountNumber, System.DateTime DateDel, System.Data.DataSet DeliveryItems, string countryCode, string branchNo, bool allItemsCollected, object userState) {
            if ((this.Delivery_DeliverImmediatelyOperationCompleted == null)) {
                this.Delivery_DeliverImmediatelyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelivery_DeliverImmediatelyOperationCompleted);
            }
            this.InvokeAsync("Delivery_DeliverImmediately", new object[] {
                        accountNumber,
                        DateDel,
                        DeliveryItems,
                        countryCode,
                        branchNo,
                        allItemsCollected}, this.Delivery_DeliverImmediatelyOperationCompleted, userState);
        }
        
        private void OnDelivery_DeliverImmediatelyOperationCompleted(object arg) {
            if ((this.Delivery_DeliverImmediatelyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delivery_DeliverImmediatelyCompleted(this, new Delivery_DeliverImmediatelyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Delivery_DeliverImmediatelyFailed", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Delivery_DeliverImmediatelyFailed(string accountNumber, System.DateTime DateDel, System.Data.DataSet DeliveryItems, string countryCode, string branchNo, out string err) {
            object[] results = this.Invoke("Delivery_DeliverImmediatelyFailed", new object[] {
                        accountNumber,
                        DateDel,
                        DeliveryItems,
                        countryCode,
                        branchNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelivery_DeliverImmediatelyFailed(string accountNumber, System.DateTime DateDel, System.Data.DataSet DeliveryItems, string countryCode, string branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Delivery_DeliverImmediatelyFailed", new object[] {
                        accountNumber,
                        DateDel,
                        DeliveryItems,
                        countryCode,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDelivery_DeliverImmediatelyFailed(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Delivery_DeliverImmediatelyFailedAsync(string accountNumber, System.DateTime DateDel, System.Data.DataSet DeliveryItems, string countryCode, string branchNo) {
            this.Delivery_DeliverImmediatelyFailedAsync(accountNumber, DateDel, DeliveryItems, countryCode, branchNo, null);
        }
        
        /// <remarks/>
        public void Delivery_DeliverImmediatelyFailedAsync(string accountNumber, System.DateTime DateDel, System.Data.DataSet DeliveryItems, string countryCode, string branchNo, object userState) {
            if ((this.Delivery_DeliverImmediatelyFailedOperationCompleted == null)) {
                this.Delivery_DeliverImmediatelyFailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelivery_DeliverImmediatelyFailedOperationCompleted);
            }
            this.InvokeAsync("Delivery_DeliverImmediatelyFailed", new object[] {
                        accountNumber,
                        DateDel,
                        DeliveryItems,
                        countryCode,
                        branchNo}, this.Delivery_DeliverImmediatelyFailedOperationCompleted, userState);
        }
        
        private void OnDelivery_DeliverImmediatelyFailedOperationCompleted(object arg) {
            if ((this.Delivery_DeliverImmediatelyFailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delivery_DeliverImmediatelyFailedCompleted(this, new Delivery_DeliverImmediatelyFailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeadlockTest1", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeadlockTest1(out string err) {
            object[] results = this.Invoke("DeadlockTest1", new object[0]);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeadlockTest1(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeadlockTest1", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeadlockTest1(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeadlockTest1Async() {
            this.DeadlockTest1Async(null);
        }
        
        /// <remarks/>
        public void DeadlockTest1Async(object userState) {
            if ((this.DeadlockTest1OperationCompleted == null)) {
                this.DeadlockTest1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeadlockTest1OperationCompleted);
            }
            this.InvokeAsync("DeadlockTest1", new object[0], this.DeadlockTest1OperationCompleted, userState);
        }
        
        private void OnDeadlockTest1OperationCompleted(object arg) {
            if ((this.DeadlockTest1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeadlockTest1Completed(this, new DeadlockTest1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeadlockTest2", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeadlockTest2(out string err) {
            object[] results = this.Invoke("DeadlockTest2", new object[0]);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeadlockTest2(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeadlockTest2", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeadlockTest2(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeadlockTest2Async() {
            this.DeadlockTest2Async(null);
        }
        
        /// <remarks/>
        public void DeadlockTest2Async(object userState) {
            if ((this.DeadlockTest2OperationCompleted == null)) {
                this.DeadlockTest2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeadlockTest2OperationCompleted);
            }
            this.InvokeAsync("DeadlockTest2", new object[0], this.DeadlockTest2OperationCompleted, userState);
        }
        
        private void OnDeadlockTest2OperationCompleted(object arg) {
            if ((this.DeadlockTest2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeadlockTest2Completed(this, new DeadlockTest2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteLineItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteLineItem(string accountNo, int agreementNo, System.Xml.XmlNode toDelete, out string err) {
            object[] results = this.Invoke("DeleteLineItem", new object[] {
                        accountNo,
                        agreementNo,
                        toDelete});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteLineItem(string accountNo, int agreementNo, System.Xml.XmlNode toDelete, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteLineItem", new object[] {
                        accountNo,
                        agreementNo,
                        toDelete}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteLineItem(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLineItemAsync(string accountNo, int agreementNo, System.Xml.XmlNode toDelete) {
            this.DeleteLineItemAsync(accountNo, agreementNo, toDelete, null);
        }
        
        /// <remarks/>
        public void DeleteLineItemAsync(string accountNo, int agreementNo, System.Xml.XmlNode toDelete, object userState) {
            if ((this.DeleteLineItemOperationCompleted == null)) {
                this.DeleteLineItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLineItemOperationCompleted);
            }
            this.InvokeAsync("DeleteLineItem", new object[] {
                        accountNo,
                        agreementNo,
                        toDelete}, this.DeleteLineItemOperationCompleted, userState);
        }
        
        private void OnDeleteLineItemOperationCompleted(object arg) {
            if ((this.DeleteLineItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLineItemCompleted(this, new DeleteLineItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTransactions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransactions(string accountNo, out string err) {
            object[] results = this.Invoke("GetTransactions", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransactions(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransactions", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransactions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsAsync(string accountNo) {
            this.GetTransactionsAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetTransactionsAsync(string accountNo, object userState) {
            if ((this.GetTransactionsOperationCompleted == null)) {
                this.GetTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetTransactions", new object[] {
                        accountNo}, this.GetTransactionsOperationCompleted, userState);
        }
        
        private void OnGetTransactionsOperationCompleted(object arg) {
            if ((this.GetTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsCompleted(this, new GetTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetLinkedCustomerID", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLinkedCustomerID(string accountNo, out string err) {
            object[] results = this.Invoke("GetLinkedCustomerID", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLinkedCustomerID(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLinkedCustomerID", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetLinkedCustomerID(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedCustomerIDAsync(string accountNo) {
            this.GetLinkedCustomerIDAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetLinkedCustomerIDAsync(string accountNo, object userState) {
            if ((this.GetLinkedCustomerIDOperationCompleted == null)) {
                this.GetLinkedCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedCustomerIDOperationCompleted);
            }
            this.InvokeAsync("GetLinkedCustomerID", new object[] {
                        accountNo}, this.GetLinkedCustomerIDOperationCompleted, userState);
        }
        
        private void OnGetLinkedCustomerIDOperationCompleted(object arg) {
            if ((this.GetLinkedCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedCustomerIDCompleted(this, new GetLinkedCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetLinkedCustomerIDbyType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLinkedCustomerIDbyType(string accountNo, string relationship, out string err) {
            object[] results = this.Invoke("GetLinkedCustomerIDbyType", new object[] {
                        accountNo,
                        relationship});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLinkedCustomerIDbyType(string accountNo, string relationship, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLinkedCustomerIDbyType", new object[] {
                        accountNo,
                        relationship}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetLinkedCustomerIDbyType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedCustomerIDbyTypeAsync(string accountNo, string relationship) {
            this.GetLinkedCustomerIDbyTypeAsync(accountNo, relationship, null);
        }
        
        /// <remarks/>
        public void GetLinkedCustomerIDbyTypeAsync(string accountNo, string relationship, object userState) {
            if ((this.GetLinkedCustomerIDbyTypeOperationCompleted == null)) {
                this.GetLinkedCustomerIDbyTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedCustomerIDbyTypeOperationCompleted);
            }
            this.InvokeAsync("GetLinkedCustomerIDbyType", new object[] {
                        accountNo,
                        relationship}, this.GetLinkedCustomerIDbyTypeOperationCompleted, userState);
        }
        
        private void OnGetLinkedCustomerIDbyTypeOperationCompleted(object arg) {
            if ((this.GetLinkedCustomerIDbyTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedCustomerIDbyTypeCompleted(this, new GetLinkedCustomerIDbyTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AddCustomerToAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCustomerToAccount(string accountNo, string customerID, string relationship, string accountType, int userid, out bool rescore, out string err) {
            object[] results = this.Invoke("AddCustomerToAccount", new object[] {
                        accountNo,
                        customerID,
                        relationship,
                        accountType,
                        userid});
            rescore = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddCustomerToAccount(string accountNo, string customerID, string relationship, string accountType, int userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddCustomerToAccount", new object[] {
                        accountNo,
                        customerID,
                        relationship,
                        accountType,
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddCustomerToAccount(System.IAsyncResult asyncResult, out bool rescore, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            rescore = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCustomerToAccountAsync(string accountNo, string customerID, string relationship, string accountType, int userid) {
            this.AddCustomerToAccountAsync(accountNo, customerID, relationship, accountType, userid, null);
        }
        
        /// <remarks/>
        public void AddCustomerToAccountAsync(string accountNo, string customerID, string relationship, string accountType, int userid, object userState) {
            if ((this.AddCustomerToAccountOperationCompleted == null)) {
                this.AddCustomerToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomerToAccountOperationCompleted);
            }
            this.InvokeAsync("AddCustomerToAccount", new object[] {
                        accountNo,
                        customerID,
                        relationship,
                        accountType,
                        userid}, this.AddCustomerToAccountOperationCompleted, userState);
        }
        
        private void OnAddCustomerToAccountOperationCompleted(object arg) {
            if ((this.AddCustomerToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomerToAccountCompleted(this, new AddCustomerToAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ValidateAccountNumber", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ValidateAccountNumber(string accountNo, string countryCode, string accountType, out string err) {
            object[] results = this.Invoke("ValidateAccountNumber", new object[] {
                        accountNo,
                        countryCode,
                        accountType});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateAccountNumber(string accountNo, string countryCode, string accountType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateAccountNumber", new object[] {
                        accountNo,
                        countryCode,
                        accountType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndValidateAccountNumber(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAccountNumberAsync(string accountNo, string countryCode, string accountType) {
            this.ValidateAccountNumberAsync(accountNo, countryCode, accountType, null);
        }
        
        /// <remarks/>
        public void ValidateAccountNumberAsync(string accountNo, string countryCode, string accountType, object userState) {
            if ((this.ValidateAccountNumberOperationCompleted == null)) {
                this.ValidateAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAccountNumberOperationCompleted);
            }
            this.InvokeAsync("ValidateAccountNumber", new object[] {
                        accountNo,
                        countryCode,
                        accountType}, this.ValidateAccountNumberOperationCompleted, userState);
        }
        
        private void OnValidateAccountNumberOperationCompleted(object arg) {
            if ((this.ValidateAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAccountNumberCompleted(this, new ValidateAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CreateRFAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateRFAccount(string countryCode, short branchNo, string customerID, int user, bool isLoan, ref CashLoanDetails det, out bool rescore, out bool reOpenS1, out bool reOpenS2, out string err) {
            object[] results = this.Invoke("CreateRFAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        user,
                        isLoan,
                        det});
            det = ((CashLoanDetails)(results[1]));
            rescore = ((bool)(results[2]));
            reOpenS1 = ((bool)(results[3]));
            reOpenS2 = ((bool)(results[4]));
            err = ((string)(results[5]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateRFAccount(string countryCode, short branchNo, string customerID, int user, bool isLoan, CashLoanDetails det, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateRFAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        user,
                        isLoan,
                        det}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateRFAccount(System.IAsyncResult asyncResult, out CashLoanDetails det, out bool rescore, out bool reOpenS1, out bool reOpenS2, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            det = ((CashLoanDetails)(results[1]));
            rescore = ((bool)(results[2]));
            reOpenS1 = ((bool)(results[3]));
            reOpenS2 = ((bool)(results[4]));
            err = ((string)(results[5]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRFAccountAsync(string countryCode, short branchNo, string customerID, int user, bool isLoan, CashLoanDetails det) {
            this.CreateRFAccountAsync(countryCode, branchNo, customerID, user, isLoan, det, null);
        }
        
        /// <remarks/>
        public void CreateRFAccountAsync(string countryCode, short branchNo, string customerID, int user, bool isLoan, CashLoanDetails det, object userState) {
            if ((this.CreateRFAccountOperationCompleted == null)) {
                this.CreateRFAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRFAccountOperationCompleted);
            }
            this.InvokeAsync("CreateRFAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        user,
                        isLoan,
                        det}, this.CreateRFAccountOperationCompleted, userState);
        }
        
        private void OnCreateRFAccountOperationCompleted(object arg) {
            if ((this.CreateRFAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRFAccountCompleted(this, new CreateRFAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CreateCustomerAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateCustomerAccount(string countryCode, short branchNo, string customerID, string accountType, int user, bool isLoan, out bool rescore, out string err) {
            object[] results = this.Invoke("CreateCustomerAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        accountType,
                        user,
                        isLoan});
            rescore = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCustomerAccount(string countryCode, short branchNo, string customerID, string accountType, int user, bool isLoan, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCustomerAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        accountType,
                        user,
                        isLoan}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateCustomerAccount(System.IAsyncResult asyncResult, out bool rescore, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            rescore = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerAccountAsync(string countryCode, short branchNo, string customerID, string accountType, int user, bool isLoan) {
            this.CreateCustomerAccountAsync(countryCode, branchNo, customerID, accountType, user, isLoan, null);
        }
        
        /// <remarks/>
        public void CreateCustomerAccountAsync(string countryCode, short branchNo, string customerID, string accountType, int user, bool isLoan, object userState) {
            if ((this.CreateCustomerAccountOperationCompleted == null)) {
                this.CreateCustomerAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerAccountOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerAccount", new object[] {
                        countryCode,
                        branchNo,
                        customerID,
                        accountType,
                        user,
                        isLoan}, this.CreateCustomerAccountOperationCompleted, userState);
        }
        
        private void OnCreateCustomerAccountOperationCompleted(object arg) {
            if ((this.CreateCustomerAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerAccountCompleted(this, new CreateCustomerAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalculateSalesTax", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalculateSalesTax(string countryCode, System.Xml.XmlNode lineItems, string accountType, bool dutyFree, bool includeWarranty, bool warrantiesOnCredit, ref decimal chargeableAdmin, ref decimal chargeable, ref decimal taxWarrantyOnCredit, out string err) {
            object[] results = this.Invoke("CalculateSalesTax", new object[] {
                        countryCode,
                        lineItems,
                        accountType,
                        dutyFree,
                        includeWarranty,
                        warrantiesOnCredit,
                        chargeableAdmin,
                        chargeable,
                        taxWarrantyOnCredit});
            chargeableAdmin = ((decimal)(results[1]));
            chargeable = ((decimal)(results[2]));
            taxWarrantyOnCredit = ((decimal)(results[3]));
            err = ((string)(results[4]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateSalesTax(string countryCode, System.Xml.XmlNode lineItems, string accountType, bool dutyFree, bool includeWarranty, bool warrantiesOnCredit, decimal chargeableAdmin, decimal chargeable, decimal taxWarrantyOnCredit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateSalesTax", new object[] {
                        countryCode,
                        lineItems,
                        accountType,
                        dutyFree,
                        includeWarranty,
                        warrantiesOnCredit,
                        chargeableAdmin,
                        chargeable,
                        taxWarrantyOnCredit}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndCalculateSalesTax(System.IAsyncResult asyncResult, out decimal chargeableAdmin, out decimal chargeable, out decimal taxWarrantyOnCredit, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            chargeableAdmin = ((decimal)(results[1]));
            chargeable = ((decimal)(results[2]));
            taxWarrantyOnCredit = ((decimal)(results[3]));
            err = ((string)(results[4]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateSalesTaxAsync(string countryCode, System.Xml.XmlNode lineItems, string accountType, bool dutyFree, bool includeWarranty, bool warrantiesOnCredit, decimal chargeableAdmin, decimal chargeable, decimal taxWarrantyOnCredit) {
            this.CalculateSalesTaxAsync(countryCode, lineItems, accountType, dutyFree, includeWarranty, warrantiesOnCredit, chargeableAdmin, chargeable, taxWarrantyOnCredit, null);
        }
        
        /// <remarks/>
        public void CalculateSalesTaxAsync(string countryCode, System.Xml.XmlNode lineItems, string accountType, bool dutyFree, bool includeWarranty, bool warrantiesOnCredit, decimal chargeableAdmin, decimal chargeable, decimal taxWarrantyOnCredit, object userState) {
            if ((this.CalculateSalesTaxOperationCompleted == null)) {
                this.CalculateSalesTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateSalesTaxOperationCompleted);
            }
            this.InvokeAsync("CalculateSalesTax", new object[] {
                        countryCode,
                        lineItems,
                        accountType,
                        dutyFree,
                        includeWarranty,
                        warrantiesOnCredit,
                        chargeableAdmin,
                        chargeable,
                        taxWarrantyOnCredit}, this.CalculateSalesTaxOperationCompleted, userState);
        }
        
        private void OnCalculateSalesTaxOperationCompleted(object arg) {
            if ((this.CalculateSalesTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateSalesTaxCompleted(this, new CalculateSalesTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteWarranty", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteWarranty(System.Xml.XmlNode parent, System.Xml.XmlNode child, string accountNo, short branchNo, string countryCode, int agreementNo, out string err) {
            object[] results = this.Invoke("DeleteWarranty", new object[] {
                        parent,
                        child,
                        accountNo,
                        branchNo,
                        countryCode,
                        agreementNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteWarranty(System.Xml.XmlNode parent, System.Xml.XmlNode child, string accountNo, short branchNo, string countryCode, int agreementNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteWarranty", new object[] {
                        parent,
                        child,
                        accountNo,
                        branchNo,
                        countryCode,
                        agreementNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteWarranty(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWarrantyAsync(System.Xml.XmlNode parent, System.Xml.XmlNode child, string accountNo, short branchNo, string countryCode, int agreementNo) {
            this.DeleteWarrantyAsync(parent, child, accountNo, branchNo, countryCode, agreementNo, null);
        }
        
        /// <remarks/>
        public void DeleteWarrantyAsync(System.Xml.XmlNode parent, System.Xml.XmlNode child, string accountNo, short branchNo, string countryCode, int agreementNo, object userState) {
            if ((this.DeleteWarrantyOperationCompleted == null)) {
                this.DeleteWarrantyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWarrantyOperationCompleted);
            }
            this.InvokeAsync("DeleteWarranty", new object[] {
                        parent,
                        child,
                        accountNo,
                        branchNo,
                        countryCode,
                        agreementNo}, this.DeleteWarrantyOperationCompleted, userState);
        }
        
        private void OnDeleteWarrantyOperationCompleted(object arg) {
            if ((this.DeleteWarrantyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWarrantyCompleted(this, new DeleteWarrantyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBranchAddress", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBranchAddress(int branchNo, int updhissn, out string err) {
            object[] results = this.Invoke("GetBranchAddress", new object[] {
                        branchNo,
                        updhissn});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBranchAddress(int branchNo, int updhissn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBranchAddress", new object[] {
                        branchNo,
                        updhissn}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBranchAddress(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchAddressAsync(int branchNo, int updhissn) {
            this.GetBranchAddressAsync(branchNo, updhissn, null);
        }
        
        /// <remarks/>
        public void GetBranchAddressAsync(int branchNo, int updhissn, object userState) {
            if ((this.GetBranchAddressOperationCompleted == null)) {
                this.GetBranchAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchAddressOperationCompleted);
            }
            this.InvokeAsync("GetBranchAddress", new object[] {
                        branchNo,
                        updhissn}, this.GetBranchAddressOperationCompleted, userState);
        }
        
        private void OnGetBranchAddressOperationCompleted(object arg) {
            if ((this.GetBranchAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchAddressCompleted(this, new GetBranchAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CancelRFAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelRFAccount(string accountNo, string customerID, out string err) {
            object[] results = this.Invoke("CancelRFAccount", new object[] {
                        accountNo,
                        customerID});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelRFAccount(string accountNo, string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelRFAccount", new object[] {
                        accountNo,
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCancelRFAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelRFAccountAsync(string accountNo, string customerID) {
            this.CancelRFAccountAsync(accountNo, customerID, null);
        }
        
        /// <remarks/>
        public void CancelRFAccountAsync(string accountNo, string customerID, object userState) {
            if ((this.CancelRFAccountOperationCompleted == null)) {
                this.CancelRFAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelRFAccountOperationCompleted);
            }
            this.InvokeAsync("CancelRFAccount", new object[] {
                        accountNo,
                        customerID}, this.CancelRFAccountOperationCompleted, userState);
        }
        
        private void OnCancelRFAccountOperationCompleted(object arg) {
            if ((this.CancelRFAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelRFAccountCompleted(this, new CancelRFAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CancelAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelAccount(string accountNo, string customerID, int branch, string code, decimal balance, string countryCode, string notes, short ContactMonths, out string err) {
            object[] results = this.Invoke("CancelAccount", new object[] {
                        accountNo,
                        customerID,
                        branch,
                        code,
                        balance,
                        countryCode,
                        notes,
                        ContactMonths});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelAccount(string accountNo, string customerID, int branch, string code, decimal balance, string countryCode, string notes, short ContactMonths, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelAccount", new object[] {
                        accountNo,
                        customerID,
                        branch,
                        code,
                        balance,
                        countryCode,
                        notes,
                        ContactMonths}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCancelAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelAccountAsync(string accountNo, string customerID, int branch, string code, decimal balance, string countryCode, string notes, short ContactMonths) {
            this.CancelAccountAsync(accountNo, customerID, branch, code, balance, countryCode, notes, ContactMonths, null);
        }
        
        /// <remarks/>
        public void CancelAccountAsync(string accountNo, string customerID, int branch, string code, decimal balance, string countryCode, string notes, short ContactMonths, object userState) {
            if ((this.CancelAccountOperationCompleted == null)) {
                this.CancelAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelAccountOperationCompleted);
            }
            this.InvokeAsync("CancelAccount", new object[] {
                        accountNo,
                        customerID,
                        branch,
                        code,
                        balance,
                        countryCode,
                        notes,
                        ContactMonths}, this.CancelAccountOperationCompleted, userState);
        }
        
        private void OnCancelAccountOperationCompleted(object arg) {
            if ((this.CancelAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelAccountCompleted(this, new CancelAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ConvertRFToHP", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ConvertRFToHP(string accountNo, string customerID, string country, System.DateTime dateProp, out string err) {
            object[] results = this.Invoke("ConvertRFToHP", new object[] {
                        accountNo,
                        customerID,
                        country,
                        dateProp});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConvertRFToHP(string accountNo, string customerID, string country, System.DateTime dateProp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConvertRFToHP", new object[] {
                        accountNo,
                        customerID,
                        country,
                        dateProp}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndConvertRFToHP(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertRFToHPAsync(string accountNo, string customerID, string country, System.DateTime dateProp) {
            this.ConvertRFToHPAsync(accountNo, customerID, country, dateProp, null);
        }
        
        /// <remarks/>
        public void ConvertRFToHPAsync(string accountNo, string customerID, string country, System.DateTime dateProp, object userState) {
            if ((this.ConvertRFToHPOperationCompleted == null)) {
                this.ConvertRFToHPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertRFToHPOperationCompleted);
            }
            this.InvokeAsync("ConvertRFToHP", new object[] {
                        accountNo,
                        customerID,
                        country,
                        dateProp}, this.ConvertRFToHPOperationCompleted, userState);
        }
        
        private void OnConvertRFToHPOperationCompleted(object arg) {
            if ((this.ConvertRFToHPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertRFToHPCompleted(this, new ConvertRFToHPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPaymentCardDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentCardDetails(string customerID, string accountNo, string branchNo, out string err) {
            object[] results = this.Invoke("GetPaymentCardDetails", new object[] {
                        customerID,
                        accountNo,
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPaymentCardDetails(string customerID, string accountNo, string branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPaymentCardDetails", new object[] {
                        customerID,
                        accountNo,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPaymentCardDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentCardDetailsAsync(string customerID, string accountNo, string branchNo) {
            this.GetPaymentCardDetailsAsync(customerID, accountNo, branchNo, null);
        }
        
        /// <remarks/>
        public void GetPaymentCardDetailsAsync(string customerID, string accountNo, string branchNo, object userState) {
            if ((this.GetPaymentCardDetailsOperationCompleted == null)) {
                this.GetPaymentCardDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentCardDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPaymentCardDetails", new object[] {
                        customerID,
                        accountNo,
                        branchNo}, this.GetPaymentCardDetailsOperationCompleted, userState);
        }
        
        private void OnGetPaymentCardDetailsOperationCompleted(object arg) {
            if ((this.GetPaymentCardDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentCardDetailsCompleted(this, new GetPaymentCardDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ClearFlag", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClearFlag(string custID, string chkType, System.DateTime dateProp, bool reOpen, string acctno, out string err) {
            object[] results = this.Invoke("ClearFlag", new object[] {
                        custID,
                        chkType,
                        dateProp,
                        reOpen,
                        acctno});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClearFlag(string custID, string chkType, System.DateTime dateProp, bool reOpen, string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClearFlag", new object[] {
                        custID,
                        chkType,
                        dateProp,
                        reOpen,
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndClearFlag(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClearFlagAsync(string custID, string chkType, System.DateTime dateProp, bool reOpen, string acctno) {
            this.ClearFlagAsync(custID, chkType, dateProp, reOpen, acctno, null);
        }
        
        /// <remarks/>
        public void ClearFlagAsync(string custID, string chkType, System.DateTime dateProp, bool reOpen, string acctno, object userState) {
            if ((this.ClearFlagOperationCompleted == null)) {
                this.ClearFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearFlagOperationCompleted);
            }
            this.InvokeAsync("ClearFlag", new object[] {
                        custID,
                        chkType,
                        dateProp,
                        reOpen,
                        acctno}, this.ClearFlagOperationCompleted, userState);
        }
        
        private void OnClearFlagOperationCompleted(object arg) {
            if ((this.ClearFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearFlagCompleted(this, new ClearFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPaidAndTakenAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPaidAndTakenAccount(string branchNo, out string err) {
            object[] results = this.Invoke("GetPaidAndTakenAccount", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPaidAndTakenAccount(string branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPaidAndTakenAccount", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPaidAndTakenAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaidAndTakenAccountAsync(string branchNo) {
            this.GetPaidAndTakenAccountAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetPaidAndTakenAccountAsync(string branchNo, object userState) {
            if ((this.GetPaidAndTakenAccountOperationCompleted == null)) {
                this.GetPaidAndTakenAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaidAndTakenAccountOperationCompleted);
            }
            this.InvokeAsync("GetPaidAndTakenAccount", new object[] {
                        branchNo}, this.GetPaidAndTakenAccountOperationCompleted, userState);
        }
        
        private void OnGetPaidAndTakenAccountOperationCompleted(object arg) {
            if ((this.GetPaidAndTakenAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaidAndTakenAccountCompleted(this, new GetPaidAndTakenAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDeliveryNotes", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDeliveryNotes(string acctno, int user, int branch, string addr1, ref int buffno, ref System.Data.DataSet DeliveryNotes, out string err) {
            object[] results = this.Invoke("GetDeliveryNotes", new object[] {
                        acctno,
                        user,
                        branch,
                        addr1,
                        buffno,
                        DeliveryNotes});
            buffno = ((int)(results[1]));
            DeliveryNotes = ((System.Data.DataSet)(results[2]));
            err = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeliveryNotes(string acctno, int user, int branch, string addr1, int buffno, System.Data.DataSet DeliveryNotes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeliveryNotes", new object[] {
                        acctno,
                        user,
                        branch,
                        addr1,
                        buffno,
                        DeliveryNotes}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetDeliveryNotes(System.IAsyncResult asyncResult, out int buffno, out System.Data.DataSet DeliveryNotes, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            buffno = ((int)(results[1]));
            DeliveryNotes = ((System.Data.DataSet)(results[2]));
            err = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryNotesAsync(string acctno, int user, int branch, string addr1, int buffno, System.Data.DataSet DeliveryNotes) {
            this.GetDeliveryNotesAsync(acctno, user, branch, addr1, buffno, DeliveryNotes, null);
        }
        
        /// <remarks/>
        public void GetDeliveryNotesAsync(string acctno, int user, int branch, string addr1, int buffno, System.Data.DataSet DeliveryNotes, object userState) {
            if ((this.GetDeliveryNotesOperationCompleted == null)) {
                this.GetDeliveryNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryNotesOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryNotes", new object[] {
                        acctno,
                        user,
                        branch,
                        addr1,
                        buffno,
                        DeliveryNotes}, this.GetDeliveryNotesOperationCompleted, userState);
        }
        
        private void OnGetDeliveryNotesOperationCompleted(object arg) {
            if ((this.GetDeliveryNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryNotesCompleted(this, new GetDeliveryNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDeliveryAccounts", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliveryAccounts(string acctno, int user, int branch, ref System.DateTime TimeLocked, out string err) {
            object[] results = this.Invoke("GetDeliveryAccounts", new object[] {
                        acctno,
                        user,
                        branch,
                        TimeLocked});
            TimeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeliveryAccounts(string acctno, int user, int branch, System.DateTime TimeLocked, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeliveryAccounts", new object[] {
                        acctno,
                        user,
                        branch,
                        TimeLocked}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDeliveryAccounts(System.IAsyncResult asyncResult, out System.DateTime TimeLocked, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            TimeLocked = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryAccountsAsync(string acctno, int user, int branch, System.DateTime TimeLocked) {
            this.GetDeliveryAccountsAsync(acctno, user, branch, TimeLocked, null);
        }
        
        /// <remarks/>
        public void GetDeliveryAccountsAsync(string acctno, int user, int branch, System.DateTime TimeLocked, object userState) {
            if ((this.GetDeliveryAccountsOperationCompleted == null)) {
                this.GetDeliveryAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryAccountsOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryAccounts", new object[] {
                        acctno,
                        user,
                        branch,
                        TimeLocked}, this.GetDeliveryAccountsOperationCompleted, userState);
        }
        
        private void OnGetDeliveryAccountsOperationCompleted(object arg) {
            if ((this.GetDeliveryAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryAccountsCompleted(this, new GetDeliveryAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnlockAccountsLockedAt", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnlockAccountsLockedAt(int user, System.DateTime TimeLocked, out string err) {
            object[] results = this.Invoke("UnlockAccountsLockedAt", new object[] {
                        user,
                        TimeLocked});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnlockAccountsLockedAt(int user, System.DateTime TimeLocked, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnlockAccountsLockedAt", new object[] {
                        user,
                        TimeLocked}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUnlockAccountsLockedAt(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockAccountsLockedAtAsync(int user, System.DateTime TimeLocked) {
            this.UnlockAccountsLockedAtAsync(user, TimeLocked, null);
        }
        
        /// <remarks/>
        public void UnlockAccountsLockedAtAsync(int user, System.DateTime TimeLocked, object userState) {
            if ((this.UnlockAccountsLockedAtOperationCompleted == null)) {
                this.UnlockAccountsLockedAtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockAccountsLockedAtOperationCompleted);
            }
            this.InvokeAsync("UnlockAccountsLockedAt", new object[] {
                        user,
                        TimeLocked}, this.UnlockAccountsLockedAtOperationCompleted, userState);
        }
        
        private void OnUnlockAccountsLockedAtOperationCompleted(object arg) {
            if ((this.UnlockAccountsLockedAtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockAccountsLockedAtCompleted(this, new UnlockAccountsLockedAtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveRepossArrears", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveRepossArrears(decimal arrears, decimal repossvalue, string acctno, out string err) {
            object[] results = this.Invoke("SaveRepossArrears", new object[] {
                        arrears,
                        repossvalue,
                        acctno});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveRepossArrears(decimal arrears, decimal repossvalue, string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveRepossArrears", new object[] {
                        arrears,
                        repossvalue,
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveRepossArrears(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRepossArrearsAsync(decimal arrears, decimal repossvalue, string acctno) {
            this.SaveRepossArrearsAsync(arrears, repossvalue, acctno, null);
        }
        
        /// <remarks/>
        public void SaveRepossArrearsAsync(decimal arrears, decimal repossvalue, string acctno, object userState) {
            if ((this.SaveRepossArrearsOperationCompleted == null)) {
                this.SaveRepossArrearsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRepossArrearsOperationCompleted);
            }
            this.InvokeAsync("SaveRepossArrears", new object[] {
                        arrears,
                        repossvalue,
                        acctno}, this.SaveRepossArrearsOperationCompleted, userState);
        }
        
        private void OnSaveRepossArrearsOperationCompleted(object arg) {
            if ((this.SaveRepossArrearsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRepossArrearsCompleted(this, new SaveRepossArrearsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetReposessionAndRedelivery", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReposessionAndRedelivery(string accountNo, out string err) {
            object[] results = this.Invoke("GetReposessionAndRedelivery", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReposessionAndRedelivery(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReposessionAndRedelivery", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReposessionAndRedelivery(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReposessionAndRedeliveryAsync(string accountNo) {
            this.GetReposessionAndRedeliveryAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetReposessionAndRedeliveryAsync(string accountNo, object userState) {
            if ((this.GetReposessionAndRedeliveryOperationCompleted == null)) {
                this.GetReposessionAndRedeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReposessionAndRedeliveryOperationCompleted);
            }
            this.InvokeAsync("GetReposessionAndRedelivery", new object[] {
                        accountNo}, this.GetReposessionAndRedeliveryOperationCompleted, userState);
        }
        
        private void OnGetReposessionAndRedeliveryOperationCompleted(object arg) {
            if ((this.GetReposessionAndRedeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReposessionAndRedeliveryCompleted(this, new GetReposessionAndRedeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveDelivery", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDelivery(System.Data.DataSet ds, out string err) {
            object[] results = this.Invoke("SaveDelivery", new object[] {
                        ds});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveDelivery(System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveDelivery", new object[] {
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveDelivery(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDeliveryAsync(System.Data.DataSet ds) {
            this.SaveDeliveryAsync(ds, null);
        }
        
        /// <remarks/>
        public void SaveDeliveryAsync(System.Data.DataSet ds, object userState) {
            if ((this.SaveDeliveryOperationCompleted == null)) {
                this.SaveDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDeliveryOperationCompleted);
            }
            this.InvokeAsync("SaveDelivery", new object[] {
                        ds}, this.SaveDeliveryOperationCompleted, userState);
        }
        
        private void OnSaveDeliveryOperationCompleted(object arg) {
            if ((this.SaveDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDeliveryCompleted(this, new SaveDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveSchedule", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveSchedule(System.Data.DataSet ds, short branchNo, string countryCode, string accountType, string accountNo, int agreementNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> serviceRequestNo, out string err) {
            object[] results = this.Invoke("SaveSchedule", new object[] {
                        ds,
                        branchNo,
                        countryCode,
                        accountType,
                        accountNo,
                        agreementNo,
                        serviceRequestNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveSchedule(System.Data.DataSet ds, short branchNo, string countryCode, string accountType, string accountNo, int agreementNo, System.Nullable<int> serviceRequestNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveSchedule", new object[] {
                        ds,
                        branchNo,
                        countryCode,
                        accountType,
                        accountNo,
                        agreementNo,
                        serviceRequestNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveSchedule(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveScheduleAsync(System.Data.DataSet ds, short branchNo, string countryCode, string accountType, string accountNo, int agreementNo, System.Nullable<int> serviceRequestNo) {
            this.SaveScheduleAsync(ds, branchNo, countryCode, accountType, accountNo, agreementNo, serviceRequestNo, null);
        }
        
        /// <remarks/>
        public void SaveScheduleAsync(System.Data.DataSet ds, short branchNo, string countryCode, string accountType, string accountNo, int agreementNo, System.Nullable<int> serviceRequestNo, object userState) {
            if ((this.SaveScheduleOperationCompleted == null)) {
                this.SaveScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveScheduleOperationCompleted);
            }
            this.InvokeAsync("SaveSchedule", new object[] {
                        ds,
                        branchNo,
                        countryCode,
                        accountType,
                        accountNo,
                        agreementNo,
                        serviceRequestNo}, this.SaveScheduleOperationCompleted, userState);
        }
        
        private void OnSaveScheduleOperationCompleted(object arg) {
            if ((this.SaveScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveScheduleCompleted(this, new SaveScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CancelCollectionNote", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelCollectionNote(string acctNo, int agrmtNo, int itemID, string contractNo, short stockLocn, int buffNo, int buffBranchNo, short branchNo, int lineItemId, out string err) {
            object[] results = this.Invoke("CancelCollectionNote", new object[] {
                        acctNo,
                        agrmtNo,
                        itemID,
                        contractNo,
                        stockLocn,
                        buffNo,
                        buffBranchNo,
                        branchNo,
                        lineItemId});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelCollectionNote(string acctNo, int agrmtNo, int itemID, string contractNo, short stockLocn, int buffNo, int buffBranchNo, short branchNo, int lineItemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelCollectionNote", new object[] {
                        acctNo,
                        agrmtNo,
                        itemID,
                        contractNo,
                        stockLocn,
                        buffNo,
                        buffBranchNo,
                        branchNo,
                        lineItemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCancelCollectionNote(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelCollectionNoteAsync(string acctNo, int agrmtNo, int itemID, string contractNo, short stockLocn, int buffNo, int buffBranchNo, short branchNo, int lineItemId) {
            this.CancelCollectionNoteAsync(acctNo, agrmtNo, itemID, contractNo, stockLocn, buffNo, buffBranchNo, branchNo, lineItemId, null);
        }
        
        /// <remarks/>
        public void CancelCollectionNoteAsync(string acctNo, int agrmtNo, int itemID, string contractNo, short stockLocn, int buffNo, int buffBranchNo, short branchNo, int lineItemId, object userState) {
            if ((this.CancelCollectionNoteOperationCompleted == null)) {
                this.CancelCollectionNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelCollectionNoteOperationCompleted);
            }
            this.InvokeAsync("CancelCollectionNote", new object[] {
                        acctNo,
                        agrmtNo,
                        itemID,
                        contractNo,
                        stockLocn,
                        buffNo,
                        buffBranchNo,
                        branchNo,
                        lineItemId}, this.CancelCollectionNoteOperationCompleted, userState);
        }
        
        private void OnCancelCollectionNoteOperationCompleted(object arg) {
            if ((this.CancelCollectionNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelCollectionNoteCompleted(this, new CancelCollectionNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateSchedules", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSchedules(System.Data.DataSet ds, out string err) {
            object[] results = this.Invoke("UpdateSchedules", new object[] {
                        ds});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSchedules(System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSchedules", new object[] {
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateSchedules(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSchedulesAsync(System.Data.DataSet ds) {
            this.UpdateSchedulesAsync(ds, null);
        }
        
        /// <remarks/>
        public void UpdateSchedulesAsync(System.Data.DataSet ds, object userState) {
            if ((this.UpdateSchedulesOperationCompleted == null)) {
                this.UpdateSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSchedulesOperationCompleted);
            }
            this.InvokeAsync("UpdateSchedules", new object[] {
                        ds}, this.UpdateSchedulesOperationCompleted, userState);
        }
        
        private void OnUpdateSchedulesOperationCompleted(object arg) {
            if ((this.UpdateSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSchedulesCompleted(this, new UpdateSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateScheduleForPicklist", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateScheduleForPicklist(System.Data.DataSet ds, int branchNo, string pickListType, out string err) {
            object[] results = this.Invoke("UpdateScheduleForPicklist", new object[] {
                        ds,
                        branchNo,
                        pickListType});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateScheduleForPicklist(System.Data.DataSet ds, int branchNo, string pickListType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateScheduleForPicklist", new object[] {
                        ds,
                        branchNo,
                        pickListType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateScheduleForPicklist(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateScheduleForPicklistAsync(System.Data.DataSet ds, int branchNo, string pickListType) {
            this.UpdateScheduleForPicklistAsync(ds, branchNo, pickListType, null);
        }
        
        /// <remarks/>
        public void UpdateScheduleForPicklistAsync(System.Data.DataSet ds, int branchNo, string pickListType, object userState) {
            if ((this.UpdateScheduleForPicklistOperationCompleted == null)) {
                this.UpdateScheduleForPicklistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScheduleForPicklistOperationCompleted);
            }
            this.InvokeAsync("UpdateScheduleForPicklist", new object[] {
                        ds,
                        branchNo,
                        pickListType}, this.UpdateScheduleForPicklistOperationCompleted, userState);
        }
        
        private void OnUpdateScheduleForPicklistOperationCompleted(object arg) {
            if ((this.UpdateScheduleForPicklistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateScheduleForPicklistCompleted(this, new UpdateScheduleForPicklistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ScheduleAssignNewBufferNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ScheduleAssignNewBufferNo(string acctno, int itemId, short stockLocn, int buffNo, int newBuffNo, out string err) {
            object[] results = this.Invoke("ScheduleAssignNewBufferNo", new object[] {
                        acctno,
                        itemId,
                        stockLocn,
                        buffNo,
                        newBuffNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginScheduleAssignNewBufferNo(string acctno, int itemId, short stockLocn, int buffNo, int newBuffNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ScheduleAssignNewBufferNo", new object[] {
                        acctno,
                        itemId,
                        stockLocn,
                        buffNo,
                        newBuffNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndScheduleAssignNewBufferNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ScheduleAssignNewBufferNoAsync(string acctno, int itemId, short stockLocn, int buffNo, int newBuffNo) {
            this.ScheduleAssignNewBufferNoAsync(acctno, itemId, stockLocn, buffNo, newBuffNo, null);
        }
        
        /// <remarks/>
        public void ScheduleAssignNewBufferNoAsync(string acctno, int itemId, short stockLocn, int buffNo, int newBuffNo, object userState) {
            if ((this.ScheduleAssignNewBufferNoOperationCompleted == null)) {
                this.ScheduleAssignNewBufferNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScheduleAssignNewBufferNoOperationCompleted);
            }
            this.InvokeAsync("ScheduleAssignNewBufferNo", new object[] {
                        acctno,
                        itemId,
                        stockLocn,
                        buffNo,
                        newBuffNo}, this.ScheduleAssignNewBufferNoOperationCompleted, userState);
        }
        
        private void OnScheduleAssignNewBufferNoOperationCompleted(object arg) {
            if ((this.ScheduleAssignNewBufferNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScheduleAssignNewBufferNoCompleted(this, new ScheduleAssignNewBufferNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetForRepo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetForRepo(string accountNumber, out string accountType, out string err) {
            object[] results = this.Invoke("GetForRepo", new object[] {
                        accountNumber});
            accountType = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetForRepo(string accountNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetForRepo", new object[] {
                        accountNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetForRepo(System.IAsyncResult asyncResult, out string accountType, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            accountType = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetForRepoAsync(string accountNumber) {
            this.GetForRepoAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetForRepoAsync(string accountNumber, object userState) {
            if ((this.GetForRepoOperationCompleted == null)) {
                this.GetForRepoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForRepoOperationCompleted);
            }
            this.InvokeAsync("GetForRepo", new object[] {
                        accountNumber}, this.GetForRepoOperationCompleted, userState);
        }
        
        private void OnGetForRepoOperationCompleted(object arg) {
            if ((this.GetForRepoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForRepoCompleted(this, new GetForRepoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveItems", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveItems(System.Data.DataSet ds, string type, double delQty, out string err) {
            object[] results = this.Invoke("SaveItems", new object[] {
                        ds,
                        type,
                        delQty});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveItems(System.Data.DataSet ds, string type, double delQty, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveItems", new object[] {
                        ds,
                        type,
                        delQty}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveItems(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveItemsAsync(System.Data.DataSet ds, string type, double delQty) {
            this.SaveItemsAsync(ds, type, delQty, null);
        }
        
        /// <remarks/>
        public void SaveItemsAsync(System.Data.DataSet ds, string type, double delQty, object userState) {
            if ((this.SaveItemsOperationCompleted == null)) {
                this.SaveItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveItemsOperationCompleted);
            }
            this.InvokeAsync("SaveItems", new object[] {
                        ds,
                        type,
                        delQty}, this.SaveItemsOperationCompleted, userState);
        }
        
        private void OnSaveItemsOperationCompleted(object arg) {
            if ((this.SaveItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveItemsCompleted(this, new SaveItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveRepoDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveRepoDetails(string type, decimal amount, string acctNo, decimal oustBalance, int branchNo, int user, string countryCode, System.Data.DataSet ds, string accountType, out string err) {
            object[] results = this.Invoke("SaveRepoDetails", new object[] {
                        type,
                        amount,
                        acctNo,
                        oustBalance,
                        branchNo,
                        user,
                        countryCode,
                        ds,
                        accountType});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveRepoDetails(string type, decimal amount, string acctNo, decimal oustBalance, int branchNo, int user, string countryCode, System.Data.DataSet ds, string accountType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveRepoDetails", new object[] {
                        type,
                        amount,
                        acctNo,
                        oustBalance,
                        branchNo,
                        user,
                        countryCode,
                        ds,
                        accountType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveRepoDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRepoDetailsAsync(string type, decimal amount, string acctNo, decimal oustBalance, int branchNo, int user, string countryCode, System.Data.DataSet ds, string accountType) {
            this.SaveRepoDetailsAsync(type, amount, acctNo, oustBalance, branchNo, user, countryCode, ds, accountType, null);
        }
        
        /// <remarks/>
        public void SaveRepoDetailsAsync(string type, decimal amount, string acctNo, decimal oustBalance, int branchNo, int user, string countryCode, System.Data.DataSet ds, string accountType, object userState) {
            if ((this.SaveRepoDetailsOperationCompleted == null)) {
                this.SaveRepoDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRepoDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveRepoDetails", new object[] {
                        type,
                        amount,
                        acctNo,
                        oustBalance,
                        branchNo,
                        user,
                        countryCode,
                        ds,
                        accountType}, this.SaveRepoDetailsOperationCompleted, userState);
        }
        
        private void OnSaveRepoDetailsOperationCompleted(object arg) {
            if ((this.SaveRepoDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRepoDetailsCompleted(this, new SaveRepoDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetItemCount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetItemCount(int itemId, short location, out string err) {
            object[] results = this.Invoke("GetItemCount", new object[] {
                        itemId,
                        location});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemCount(int itemId, short location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemCount", new object[] {
                        itemId,
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetItemCount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemCountAsync(int itemId, short location) {
            this.GetItemCountAsync(itemId, location, null);
        }
        
        /// <remarks/>
        public void GetItemCountAsync(int itemId, short location, object userState) {
            if ((this.GetItemCountOperationCompleted == null)) {
                this.GetItemCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemCountOperationCompleted);
            }
            this.InvokeAsync("GetItemCount", new object[] {
                        itemId,
                        location}, this.GetItemCountOperationCompleted, userState);
        }
        
        private void OnGetItemCountOperationCompleted(object arg) {
            if ((this.GetItemCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemCountCompleted(this, new GetItemCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetItemsForAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemsForAccount(string acctno, out string err) {
            object[] results = this.Invoke("GetItemsForAccount", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemsForAccount(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemsForAccount", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetItemsForAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsForAccountAsync(string acctno) {
            this.GetItemsForAccountAsync(acctno, null);
        }
        
        /// <remarks/>
        public void GetItemsForAccountAsync(string acctno, object userState) {
            if ((this.GetItemsForAccountOperationCompleted == null)) {
                this.GetItemsForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsForAccountOperationCompleted);
            }
            this.InvokeAsync("GetItemsForAccount", new object[] {
                        acctno}, this.GetItemsForAccountOperationCompleted, userState);
        }
        
        private void OnGetItemsForAccountOperationCompleted(object arg) {
            if ((this.GetItemsForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsForAccountCompleted(this, new GetItemsForAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDeliveries", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliveries(string acctno, int agreementNo, out string err) {
            object[] results = this.Invoke("GetDeliveries", new object[] {
                        acctno,
                        agreementNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeliveries(string acctno, int agreementNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeliveries", new object[] {
                        acctno,
                        agreementNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDeliveries(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveriesAsync(string acctno, int agreementNo) {
            this.GetDeliveriesAsync(acctno, agreementNo, null);
        }
        
        /// <remarks/>
        public void GetDeliveriesAsync(string acctno, int agreementNo, object userState) {
            if ((this.GetDeliveriesOperationCompleted == null)) {
                this.GetDeliveriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveriesOperationCompleted);
            }
            this.InvokeAsync("GetDeliveries", new object[] {
                        acctno,
                        agreementNo}, this.GetDeliveriesOperationCompleted, userState);
        }
        
        private void OnGetDeliveriesOperationCompleted(object arg) {
            if ((this.GetDeliveriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveriesCompleted(this, new GetDeliveriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCollections", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCollections(short stockLocn, out string err) {
            object[] results = this.Invoke("GetCollections", new object[] {
                        stockLocn});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCollections(short stockLocn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCollections", new object[] {
                        stockLocn}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCollections(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCollectionsAsync(short stockLocn) {
            this.GetCollectionsAsync(stockLocn, null);
        }
        
        /// <remarks/>
        public void GetCollectionsAsync(short stockLocn, object userState) {
            if ((this.GetCollectionsOperationCompleted == null)) {
                this.GetCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCollectionsOperationCompleted);
            }
            this.InvokeAsync("GetCollections", new object[] {
                        stockLocn}, this.GetCollectionsOperationCompleted, userState);
        }
        
        private void OnGetCollectionsOperationCompleted(object arg) {
            if ((this.GetCollectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCollectionsCompleted(this, new GetCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBuffNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBuffNo(short branchNo, out string err) {
            object[] results = this.Invoke("GetBuffNo", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBuffNo(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBuffNo", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetBuffNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBuffNoAsync(short branchNo) {
            this.GetBuffNoAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetBuffNoAsync(short branchNo, object userState) {
            if ((this.GetBuffNoOperationCompleted == null)) {
                this.GetBuffNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBuffNoOperationCompleted);
            }
            this.InvokeAsync("GetBuffNo", new object[] {
                        branchNo}, this.GetBuffNoOperationCompleted, userState);
        }
        
        private void OnGetBuffNoOperationCompleted(object arg) {
            if ((this.GetBuffNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBuffNoCompleted(this, new GetBuffNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPaymentCardType", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPaymentCardType(short branchNo, System.DateTime dtDateAcctOpen, out string err) {
            object[] results = this.Invoke("GetPaymentCardType", new object[] {
                        branchNo,
                        dtDateAcctOpen});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPaymentCardType(short branchNo, System.DateTime dtDateAcctOpen, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPaymentCardType", new object[] {
                        branchNo,
                        dtDateAcctOpen}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPaymentCardType(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentCardTypeAsync(short branchNo, System.DateTime dtDateAcctOpen) {
            this.GetPaymentCardTypeAsync(branchNo, dtDateAcctOpen, null);
        }
        
        /// <remarks/>
        public void GetPaymentCardTypeAsync(short branchNo, System.DateTime dtDateAcctOpen, object userState) {
            if ((this.GetPaymentCardTypeOperationCompleted == null)) {
                this.GetPaymentCardTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentCardTypeOperationCompleted);
            }
            this.InvokeAsync("GetPaymentCardType", new object[] {
                        branchNo,
                        dtDateAcctOpen}, this.GetPaymentCardTypeOperationCompleted, userState);
        }
        
        private void OnGetPaymentCardTypeOperationCompleted(object arg) {
            if ((this.GetPaymentCardTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentCardTypeCompleted(this, new GetPaymentCardTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteSchedule", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSchedule(System.Data.DataSet ds, out string err) {
            object[] results = this.Invoke("DeleteSchedule", new object[] {
                        ds});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSchedule(System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSchedule", new object[] {
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDeleteSchedule(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(System.Data.DataSet ds) {
            this.DeleteScheduleAsync(ds, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(System.Data.DataSet ds, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        ds}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new DeleteScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AutoWarranty", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AutoWarranty(string branchNo, out string err) {
            object[] results = this.Invoke("AutoWarranty", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAutoWarranty(string branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AutoWarranty", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAutoWarranty(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AutoWarrantyAsync(string branchNo) {
            this.AutoWarrantyAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void AutoWarrantyAsync(string branchNo, object userState) {
            if ((this.AutoWarrantyOperationCompleted == null)) {
                this.AutoWarrantyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoWarrantyOperationCompleted);
            }
            this.InvokeAsync("AutoWarranty", new object[] {
                        branchNo}, this.AutoWarrantyOperationCompleted, userState);
        }
        
        private void OnAutoWarrantyOperationCompleted(object arg) {
            if ((this.AutoWarrantyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoWarrantyCompleted(this, new AutoWarrantyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SetPaymentCardPrinted", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPaymentCardPrinted(string accountNo, int transRefNo, System.DateTime transactionDate, string printed, int startLine, out string err) {
            object[] results = this.Invoke("SetPaymentCardPrinted", new object[] {
                        accountNo,
                        transRefNo,
                        transactionDate,
                        printed,
                        startLine});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPaymentCardPrinted(string accountNo, int transRefNo, System.DateTime transactionDate, string printed, int startLine, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPaymentCardPrinted", new object[] {
                        accountNo,
                        transRefNo,
                        transactionDate,
                        printed,
                        startLine}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSetPaymentCardPrinted(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPaymentCardPrintedAsync(string accountNo, int transRefNo, System.DateTime transactionDate, string printed, int startLine) {
            this.SetPaymentCardPrintedAsync(accountNo, transRefNo, transactionDate, printed, startLine, null);
        }
        
        /// <remarks/>
        public void SetPaymentCardPrintedAsync(string accountNo, int transRefNo, System.DateTime transactionDate, string printed, int startLine, object userState) {
            if ((this.SetPaymentCardPrintedOperationCompleted == null)) {
                this.SetPaymentCardPrintedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPaymentCardPrintedOperationCompleted);
            }
            this.InvokeAsync("SetPaymentCardPrinted", new object[] {
                        accountNo,
                        transRefNo,
                        transactionDate,
                        printed,
                        startLine}, this.SetPaymentCardPrintedOperationCompleted, userState);
        }
        
        private void OnSetPaymentCardPrintedOperationCompleted(object arg) {
            if ((this.SetPaymentCardPrintedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPaymentCardPrintedCompleted(this, new SetPaymentCardPrintedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashAndGoAccts", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashAndGoAccts(int BuffNo, int BranchNo, System.DateTime From, System.DateTime To, bool searchWarrantyReturns, out string err) {
            object[] results = this.Invoke("GetCashAndGoAccts", new object[] {
                        BuffNo,
                        BranchNo,
                        From,
                        To,
                        searchWarrantyReturns});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashAndGoAccts(int BuffNo, int BranchNo, System.DateTime From, System.DateTime To, bool searchWarrantyReturns, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashAndGoAccts", new object[] {
                        BuffNo,
                        BranchNo,
                        From,
                        To,
                        searchWarrantyReturns}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashAndGoAccts(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashAndGoAcctsAsync(int BuffNo, int BranchNo, System.DateTime From, System.DateTime To, bool searchWarrantyReturns) {
            this.GetCashAndGoAcctsAsync(BuffNo, BranchNo, From, To, searchWarrantyReturns, null);
        }
        
        /// <remarks/>
        public void GetCashAndGoAcctsAsync(int BuffNo, int BranchNo, System.DateTime From, System.DateTime To, bool searchWarrantyReturns, object userState) {
            if ((this.GetCashAndGoAcctsOperationCompleted == null)) {
                this.GetCashAndGoAcctsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashAndGoAcctsOperationCompleted);
            }
            this.InvokeAsync("GetCashAndGoAccts", new object[] {
                        BuffNo,
                        BranchNo,
                        From,
                        To,
                        searchWarrantyReturns}, this.GetCashAndGoAcctsOperationCompleted, userState);
        }
        
        private void OnGetCashAndGoAcctsOperationCompleted(object arg) {
            if ((this.GetCashAndGoAcctsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashAndGoAcctsCompleted(this, new GetCashAndGoAcctsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountsAllocated", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountsAllocated(int empeeNo, string branchOrAcctFilter, short acctNoSearch, out string err) {
            object[] results = this.Invoke("GetAccountsAllocated", new object[] {
                        empeeNo,
                        branchOrAcctFilter,
                        acctNoSearch});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountsAllocated(int empeeNo, string branchOrAcctFilter, short acctNoSearch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountsAllocated", new object[] {
                        empeeNo,
                        branchOrAcctFilter,
                        acctNoSearch}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAccountsAllocated(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsAllocatedAsync(int empeeNo, string branchOrAcctFilter, short acctNoSearch) {
            this.GetAccountsAllocatedAsync(empeeNo, branchOrAcctFilter, acctNoSearch, null);
        }
        
        /// <remarks/>
        public void GetAccountsAllocatedAsync(int empeeNo, string branchOrAcctFilter, short acctNoSearch, object userState) {
            if ((this.GetAccountsAllocatedOperationCompleted == null)) {
                this.GetAccountsAllocatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsAllocatedOperationCompleted);
            }
            this.InvokeAsync("GetAccountsAllocated", new object[] {
                        empeeNo,
                        branchOrAcctFilter,
                        acctNoSearch}, this.GetAccountsAllocatedOperationCompleted, userState);
        }
        
        private void OnGetAccountsAllocatedOperationCompleted(object arg) {
            if ((this.GetAccountsAllocatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsAllocatedCompleted(this, new GetAccountsAllocatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStrategyAccountsAllocated", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStrategyAccountsAllocated(int empeeNo, string branchOrAcctFilter, short acctNoSearch, string strategy, out string err) {
            object[] results = this.Invoke("GetStrategyAccountsAllocated", new object[] {
                        empeeNo,
                        branchOrAcctFilter,
                        acctNoSearch,
                        strategy});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStrategyAccountsAllocated(int empeeNo, string branchOrAcctFilter, short acctNoSearch, string strategy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStrategyAccountsAllocated", new object[] {
                        empeeNo,
                        branchOrAcctFilter,
                        acctNoSearch,
                        strategy}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStrategyAccountsAllocated(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrategyAccountsAllocatedAsync(int empeeNo, string branchOrAcctFilter, short acctNoSearch, string strategy) {
            this.GetStrategyAccountsAllocatedAsync(empeeNo, branchOrAcctFilter, acctNoSearch, strategy, null);
        }
        
        /// <remarks/>
        public void GetStrategyAccountsAllocatedAsync(int empeeNo, string branchOrAcctFilter, short acctNoSearch, string strategy, object userState) {
            if ((this.GetStrategyAccountsAllocatedOperationCompleted == null)) {
                this.GetStrategyAccountsAllocatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrategyAccountsAllocatedOperationCompleted);
            }
            this.InvokeAsync("GetStrategyAccountsAllocated", new object[] {
                        empeeNo,
                        branchOrAcctFilter,
                        acctNoSearch,
                        strategy}, this.GetStrategyAccountsAllocatedOperationCompleted, userState);
        }
        
        private void OnGetStrategyAccountsAllocatedOperationCompleted(object arg) {
            if ((this.GetStrategyAccountsAllocatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrategyAccountsAllocatedCompleted(this, new GetStrategyAccountsAllocatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBailActions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBailActions(string accountNo, out string err) {
            object[] results = this.Invoke("GetBailActions", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBailActions(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBailActions", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBailActions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBailActionsAsync(string accountNo) {
            this.GetBailActionsAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetBailActionsAsync(string accountNo, object userState) {
            if ((this.GetBailActionsOperationCompleted == null)) {
                this.GetBailActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBailActionsOperationCompleted);
            }
            this.InvokeAsync("GetBailActions", new object[] {
                        accountNo}, this.GetBailActionsOperationCompleted, userState);
        }
        
        private void OnGetBailActionsOperationCompleted(object arg) {
            if ((this.GetBailActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBailActionsCompleted(this, new GetBailActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveBailActions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveBailActions(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, string callingSource, out string err) {
            object[] results = this.Invoke("SaveBailActions", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        callingSource});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveBailActions(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, string callingSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveBailActions", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        callingSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveBailActions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBailActionsAsync(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, string callingSource) {
            this.SaveBailActionsAsync(acctNo, empeeNo, code, notes, dateDue, actionValue, spaDateExpiry, spaReasonCode, spaInstal, reminderDateTime, cancelOutstandingReminders, callingSource, null);
        }
        
        /// <remarks/>
        public void SaveBailActionsAsync(string acctNo, int empeeNo, string code, string notes, System.DateTime dateDue, double actionValue, System.DateTime spaDateExpiry, string spaReasonCode, double spaInstal, System.DateTime reminderDateTime, bool cancelOutstandingReminders, string callingSource, object userState) {
            if ((this.SaveBailActionsOperationCompleted == null)) {
                this.SaveBailActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBailActionsOperationCompleted);
            }
            this.InvokeAsync("SaveBailActions", new object[] {
                        acctNo,
                        empeeNo,
                        code,
                        notes,
                        dateDue,
                        actionValue,
                        spaDateExpiry,
                        spaReasonCode,
                        spaInstal,
                        reminderDateTime,
                        cancelOutstandingReminders,
                        callingSource}, this.SaveBailActionsOperationCompleted, userState);
        }
        
        private void OnSaveBailActionsOperationCompleted(object arg) {
            if ((this.SaveBailActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBailActionsCompleted(this, new SaveBailActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSPAHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSPAHistory(string accountNo, out string err) {
            object[] results = this.Invoke("GetSPAHistory", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSPAHistory(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSPAHistory", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSPAHistory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSPAHistoryAsync(string accountNo) {
            this.GetSPAHistoryAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetSPAHistoryAsync(string accountNo, object userState) {
            if ((this.GetSPAHistoryOperationCompleted == null)) {
                this.GetSPAHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSPAHistoryOperationCompleted);
            }
            this.InvokeAsync("GetSPAHistory", new object[] {
                        accountNo}, this.GetSPAHistoryOperationCompleted, userState);
        }
        
        private void OnGetSPAHistoryOperationCompleted(object arg) {
            if ((this.GetSPAHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSPAHistoryCompleted(this, new GetSPAHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSPAAcctDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SPAAccountDetails GetSPAAcctDetails(string acctNo, out string err) {
            object[] results = this.Invoke("GetSPAAcctDetails", new object[] {
                        acctNo});
            err = ((string)(results[1]));
            return ((SPAAccountDetails)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSPAAcctDetails(string acctNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSPAAcctDetails", new object[] {
                        acctNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public SPAAccountDetails EndGetSPAAcctDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((SPAAccountDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetSPAAcctDetailsAsync(string acctNo) {
            this.GetSPAAcctDetailsAsync(acctNo, null);
        }
        
        /// <remarks/>
        public void GetSPAAcctDetailsAsync(string acctNo, object userState) {
            if ((this.GetSPAAcctDetailsOperationCompleted == null)) {
                this.GetSPAAcctDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSPAAcctDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSPAAcctDetails", new object[] {
                        acctNo}, this.GetSPAAcctDetailsOperationCompleted, userState);
        }
        
        private void OnGetSPAAcctDetailsOperationCompleted(object arg) {
            if ((this.GetSPAAcctDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSPAAcctDetailsCompleted(this, new GetSPAAcctDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetStockLocations", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStockLocations(ref int itemId, ref string deletedItem, bool includeWarranties, out string err) {
            object[] results = this.Invoke("GetStockLocations", new object[] {
                        itemId,
                        deletedItem,
                        includeWarranties});
            itemId = ((int)(results[1]));
            deletedItem = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStockLocations(int itemId, string deletedItem, bool includeWarranties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStockLocations", new object[] {
                        itemId,
                        deletedItem,
                        includeWarranties}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetStockLocations(System.IAsyncResult asyncResult, out int itemId, out string deletedItem, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            itemId = ((int)(results[1]));
            deletedItem = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockLocationsAsync(int itemId, string deletedItem, bool includeWarranties) {
            this.GetStockLocationsAsync(itemId, deletedItem, includeWarranties, null);
        }
        
        /// <remarks/>
        public void GetStockLocationsAsync(int itemId, string deletedItem, bool includeWarranties, object userState) {
            if ((this.GetStockLocationsOperationCompleted == null)) {
                this.GetStockLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockLocationsOperationCompleted);
            }
            this.InvokeAsync("GetStockLocations", new object[] {
                        itemId,
                        deletedItem,
                        includeWarranties}, this.GetStockLocationsOperationCompleted, userState);
        }
        
        private void OnGetStockLocationsOperationCompleted(object arg) {
            if ((this.GetStockLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockLocationsCompleted(this, new GetStockLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AllocateAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AllocateAccount(string accountNo, int empeeNo, out string err) {
            object[] results = this.Invoke("AllocateAccount", new object[] {
                        accountNo,
                        empeeNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAllocateAccount(string accountNo, int empeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AllocateAccount", new object[] {
                        accountNo,
                        empeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAllocateAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AllocateAccountAsync(string accountNo, int empeeNo) {
            this.AllocateAccountAsync(accountNo, empeeNo, null);
        }
        
        /// <remarks/>
        public void AllocateAccountAsync(string accountNo, int empeeNo, object userState) {
            if ((this.AllocateAccountOperationCompleted == null)) {
                this.AllocateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocateAccountOperationCompleted);
            }
            this.InvokeAsync("AllocateAccount", new object[] {
                        accountNo,
                        empeeNo}, this.AllocateAccountOperationCompleted, userState);
        }
        
        private void OnAllocateAccountOperationCompleted(object arg) {
            if ((this.AllocateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocateAccountCompleted(this, new AllocateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeAllocateAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeAllocateAccount(string accountNo, out string err) {
            object[] results = this.Invoke("DeAllocateAccount", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeAllocateAccount(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeAllocateAccount", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeAllocateAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeAllocateAccountAsync(string accountNo) {
            this.DeAllocateAccountAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void DeAllocateAccountAsync(string accountNo, object userState) {
            if ((this.DeAllocateAccountOperationCompleted == null)) {
                this.DeAllocateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeAllocateAccountOperationCompleted);
            }
            this.InvokeAsync("DeAllocateAccount", new object[] {
                        accountNo}, this.DeAllocateAccountOperationCompleted, userState);
        }
        
        private void OnDeAllocateAccountOperationCompleted(object arg) {
            if ((this.DeAllocateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeAllocateAccountCompleted(this, new DeAllocateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AllocateDeallocateAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AllocateDeallocateAccount(string accountNo, int empeeNo, out string err) {
            object[] results = this.Invoke("AllocateDeallocateAccount", new object[] {
                        accountNo,
                        empeeNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAllocateDeallocateAccount(string accountNo, int empeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AllocateDeallocateAccount", new object[] {
                        accountNo,
                        empeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAllocateDeallocateAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AllocateDeallocateAccountAsync(string accountNo, int empeeNo) {
            this.AllocateDeallocateAccountAsync(accountNo, empeeNo, null);
        }
        
        /// <remarks/>
        public void AllocateDeallocateAccountAsync(string accountNo, int empeeNo, object userState) {
            if ((this.AllocateDeallocateAccountOperationCompleted == null)) {
                this.AllocateDeallocateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocateDeallocateAccountOperationCompleted);
            }
            this.InvokeAsync("AllocateDeallocateAccount", new object[] {
                        accountNo,
                        empeeNo}, this.AllocateDeallocateAccountOperationCompleted, userState);
        }
        
        private void OnAllocateDeallocateAccountOperationCompleted(object arg) {
            if ((this.AllocateDeallocateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocateDeallocateAccountCompleted(this, new AllocateDeallocateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetInterestRate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetInterestRate(string countryCode, string termsType, string acctNo, System.DateTime acctOpen, out string err) {
            object[] results = this.Invoke("GetInterestRate", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        acctOpen});
            err = ((string)(results[1]));
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInterestRate(string countryCode, string termsType, string acctNo, System.DateTime acctOpen, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInterestRate", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        acctOpen}, callback, asyncState);
        }
        
        /// <remarks/>
        public double EndGetInterestRate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterestRateAsync(string countryCode, string termsType, string acctNo, System.DateTime acctOpen) {
            this.GetInterestRateAsync(countryCode, termsType, acctNo, acctOpen, null);
        }
        
        /// <remarks/>
        public void GetInterestRateAsync(string countryCode, string termsType, string acctNo, System.DateTime acctOpen, object userState) {
            if ((this.GetInterestRateOperationCompleted == null)) {
                this.GetInterestRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterestRateOperationCompleted);
            }
            this.InvokeAsync("GetInterestRate", new object[] {
                        countryCode,
                        termsType,
                        acctNo,
                        acctOpen}, this.GetInterestRateOperationCompleted, userState);
        }
        
        private void OnGetInterestRateOperationCompleted(object arg) {
            if ((this.GetInterestRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterestRateCompleted(this, new GetInterestRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SetAllocDate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SetAllocDate(int empeeNo, out string err) {
            object[] results = this.Invoke("SetAllocDate", new object[] {
                        empeeNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetAllocDate(int empeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetAllocDate", new object[] {
                        empeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSetAllocDate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SetAllocDateAsync(int empeeNo) {
            this.SetAllocDateAsync(empeeNo, null);
        }
        
        /// <remarks/>
        public void SetAllocDateAsync(int empeeNo, object userState) {
            if ((this.SetAllocDateOperationCompleted == null)) {
                this.SetAllocDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAllocDateOperationCompleted);
            }
            this.InvokeAsync("SetAllocDate", new object[] {
                        empeeNo}, this.SetAllocDateOperationCompleted, userState);
        }
        
        private void OnSetAllocDateOperationCompleted(object arg) {
            if ((this.SetAllocDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAllocDateCompleted(this, new SetAllocDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AccountApplicationStatus", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AccountApplicationStatus(string acctno, out string err) {
            object[] results = this.Invoke("AccountApplicationStatus", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAccountApplicationStatus(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AccountApplicationStatus", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndAccountApplicationStatus(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AccountApplicationStatusAsync(string acctno) {
            this.AccountApplicationStatusAsync(acctno, null);
        }
        
        /// <remarks/>
        public void AccountApplicationStatusAsync(string acctno, object userState) {
            if ((this.AccountApplicationStatusOperationCompleted == null)) {
                this.AccountApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("AccountApplicationStatus", new object[] {
                        acctno}, this.AccountApplicationStatusOperationCompleted, userState);
        }
        
        private void OnAccountApplicationStatusOperationCompleted(object arg) {
            if ((this.AccountApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountApplicationStatusCompleted(this, new AccountApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetLetterByAcctNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLetterByAcctNo(string acctno, out string err) {
            object[] results = this.Invoke("GetLetterByAcctNo", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLetterByAcctNo(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLetterByAcctNo", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLetterByAcctNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterByAcctNoAsync(string acctno) {
            this.GetLetterByAcctNoAsync(acctno, null);
        }
        
        /// <remarks/>
        public void GetLetterByAcctNoAsync(string acctno, object userState) {
            if ((this.GetLetterByAcctNoOperationCompleted == null)) {
                this.GetLetterByAcctNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterByAcctNoOperationCompleted);
            }
            this.InvokeAsync("GetLetterByAcctNo", new object[] {
                        acctno}, this.GetLetterByAcctNoOperationCompleted, userState);
        }
        
        private void OnGetLetterByAcctNoOperationCompleted(object arg) {
            if ((this.GetLetterByAcctNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterByAcctNoCompleted(this, new GetLetterByAcctNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/BranchUpdate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BranchUpdate(
                    int branchno, 
                    string branchname, 
                    string branchaddr1, 
                    string branchaddr2, 
                    string branchaddr3, 
                    string branchpocode, 
                    string telno, 
                    string countrycode, 
                    int croffno, 
                    string oldpctype, 
                    string newpctype, 
                    System.DateTime datepcchange, 
                    int hissn, 
                    int hibuffno, 
                    string warehouseno, 
                    int hirefno, 
                    int as400branchno, 
                    string region, 
                    bool depositScreenLocked, 
                    System.Data.DataSet depositSet, 
                    string warehouseregion, 
                    string storeType, 
                    bool createRF, 
                    bool createCash, 
                    bool scoreHPbefore, 
                    bool createHP, 
                    string Fact2000BranchLetter, 
                    bool serviceRepairCentre, 
                    bool behavioural, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> defaultPrintLocation, 
                    bool isThirdPartyWarehouse, 
                    bool createStore, 
                    StoreCardBranchQualRules storeCardQualrules, 
                    bool isCashLoanBranch, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> luckyDollarStore, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> ashleyStore, 
                    out string err) {
            object[] results = this.Invoke("BranchUpdate", new object[] {
                        branchno,
                        branchname,
                        branchaddr1,
                        branchaddr2,
                        branchaddr3,
                        branchpocode,
                        telno,
                        countrycode,
                        croffno,
                        oldpctype,
                        newpctype,
                        datepcchange,
                        hissn,
                        hibuffno,
                        warehouseno,
                        hirefno,
                        as400branchno,
                        region,
                        depositScreenLocked,
                        depositSet,
                        warehouseregion,
                        storeType,
                        createRF,
                        createCash,
                        scoreHPbefore,
                        createHP,
                        Fact2000BranchLetter,
                        serviceRepairCentre,
                        behavioural,
                        defaultPrintLocation,
                        isThirdPartyWarehouse,
                        createStore,
                        storeCardQualrules,
                        isCashLoanBranch,
                        luckyDollarStore,
                        ashleyStore});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBranchUpdate(
                    int branchno, 
                    string branchname, 
                    string branchaddr1, 
                    string branchaddr2, 
                    string branchaddr3, 
                    string branchpocode, 
                    string telno, 
                    string countrycode, 
                    int croffno, 
                    string oldpctype, 
                    string newpctype, 
                    System.DateTime datepcchange, 
                    int hissn, 
                    int hibuffno, 
                    string warehouseno, 
                    int hirefno, 
                    int as400branchno, 
                    string region, 
                    bool depositScreenLocked, 
                    System.Data.DataSet depositSet, 
                    string warehouseregion, 
                    string storeType, 
                    bool createRF, 
                    bool createCash, 
                    bool scoreHPbefore, 
                    bool createHP, 
                    string Fact2000BranchLetter, 
                    bool serviceRepairCentre, 
                    bool behavioural, 
                    System.Nullable<int> defaultPrintLocation, 
                    bool isThirdPartyWarehouse, 
                    bool createStore, 
                    StoreCardBranchQualRules storeCardQualrules, 
                    bool isCashLoanBranch, 
                    System.Nullable<bool> luckyDollarStore, 
                    System.Nullable<bool> ashleyStore, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("BranchUpdate", new object[] {
                        branchno,
                        branchname,
                        branchaddr1,
                        branchaddr2,
                        branchaddr3,
                        branchpocode,
                        telno,
                        countrycode,
                        croffno,
                        oldpctype,
                        newpctype,
                        datepcchange,
                        hissn,
                        hibuffno,
                        warehouseno,
                        hirefno,
                        as400branchno,
                        region,
                        depositScreenLocked,
                        depositSet,
                        warehouseregion,
                        storeType,
                        createRF,
                        createCash,
                        scoreHPbefore,
                        createHP,
                        Fact2000BranchLetter,
                        serviceRepairCentre,
                        behavioural,
                        defaultPrintLocation,
                        isThirdPartyWarehouse,
                        createStore,
                        storeCardQualrules,
                        isCashLoanBranch,
                        luckyDollarStore,
                        ashleyStore}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndBranchUpdate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BranchUpdateAsync(
                    int branchno, 
                    string branchname, 
                    string branchaddr1, 
                    string branchaddr2, 
                    string branchaddr3, 
                    string branchpocode, 
                    string telno, 
                    string countrycode, 
                    int croffno, 
                    string oldpctype, 
                    string newpctype, 
                    System.DateTime datepcchange, 
                    int hissn, 
                    int hibuffno, 
                    string warehouseno, 
                    int hirefno, 
                    int as400branchno, 
                    string region, 
                    bool depositScreenLocked, 
                    System.Data.DataSet depositSet, 
                    string warehouseregion, 
                    string storeType, 
                    bool createRF, 
                    bool createCash, 
                    bool scoreHPbefore, 
                    bool createHP, 
                    string Fact2000BranchLetter, 
                    bool serviceRepairCentre, 
                    bool behavioural, 
                    System.Nullable<int> defaultPrintLocation, 
                    bool isThirdPartyWarehouse, 
                    bool createStore, 
                    StoreCardBranchQualRules storeCardQualrules, 
                    bool isCashLoanBranch, 
                    System.Nullable<bool> luckyDollarStore, 
                    System.Nullable<bool> ashleyStore) {
            this.BranchUpdateAsync(branchno, branchname, branchaddr1, branchaddr2, branchaddr3, branchpocode, telno, countrycode, croffno, oldpctype, newpctype, datepcchange, hissn, hibuffno, warehouseno, hirefno, as400branchno, region, depositScreenLocked, depositSet, warehouseregion, storeType, createRF, createCash, scoreHPbefore, createHP, Fact2000BranchLetter, serviceRepairCentre, behavioural, defaultPrintLocation, isThirdPartyWarehouse, createStore, storeCardQualrules, isCashLoanBranch, luckyDollarStore, ashleyStore, null);
        }
        
        /// <remarks/>
        public void BranchUpdateAsync(
                    int branchno, 
                    string branchname, 
                    string branchaddr1, 
                    string branchaddr2, 
                    string branchaddr3, 
                    string branchpocode, 
                    string telno, 
                    string countrycode, 
                    int croffno, 
                    string oldpctype, 
                    string newpctype, 
                    System.DateTime datepcchange, 
                    int hissn, 
                    int hibuffno, 
                    string warehouseno, 
                    int hirefno, 
                    int as400branchno, 
                    string region, 
                    bool depositScreenLocked, 
                    System.Data.DataSet depositSet, 
                    string warehouseregion, 
                    string storeType, 
                    bool createRF, 
                    bool createCash, 
                    bool scoreHPbefore, 
                    bool createHP, 
                    string Fact2000BranchLetter, 
                    bool serviceRepairCentre, 
                    bool behavioural, 
                    System.Nullable<int> defaultPrintLocation, 
                    bool isThirdPartyWarehouse, 
                    bool createStore, 
                    StoreCardBranchQualRules storeCardQualrules, 
                    bool isCashLoanBranch, 
                    System.Nullable<bool> luckyDollarStore, 
                    System.Nullable<bool> ashleyStore, 
                    object userState) {
            if ((this.BranchUpdateOperationCompleted == null)) {
                this.BranchUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBranchUpdateOperationCompleted);
            }
            this.InvokeAsync("BranchUpdate", new object[] {
                        branchno,
                        branchname,
                        branchaddr1,
                        branchaddr2,
                        branchaddr3,
                        branchpocode,
                        telno,
                        countrycode,
                        croffno,
                        oldpctype,
                        newpctype,
                        datepcchange,
                        hissn,
                        hibuffno,
                        warehouseno,
                        hirefno,
                        as400branchno,
                        region,
                        depositScreenLocked,
                        depositSet,
                        warehouseregion,
                        storeType,
                        createRF,
                        createCash,
                        scoreHPbefore,
                        createHP,
                        Fact2000BranchLetter,
                        serviceRepairCentre,
                        behavioural,
                        defaultPrintLocation,
                        isThirdPartyWarehouse,
                        createStore,
                        storeCardQualrules,
                        isCashLoanBranch,
                        luckyDollarStore,
                        ashleyStore}, this.BranchUpdateOperationCompleted, userState);
        }
        
        private void OnBranchUpdateOperationCompleted(object arg) {
            if ((this.BranchUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BranchUpdateCompleted(this, new BranchUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/BranchGet", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BranchGet(int branchno, out string err) {
            object[] results = this.Invoke("BranchGet", new object[] {
                        branchno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBranchGet(int branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BranchGet", new object[] {
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBranchGet(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BranchGetAsync(int branchno) {
            this.BranchGetAsync(branchno, null);
        }
        
        /// <remarks/>
        public void BranchGetAsync(int branchno, object userState) {
            if ((this.BranchGetOperationCompleted == null)) {
                this.BranchGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBranchGetOperationCompleted);
            }
            this.InvokeAsync("BranchGet", new object[] {
                        branchno}, this.BranchGetOperationCompleted, userState);
        }
        
        private void OnBranchGetOperationCompleted(object arg) {
            if ((this.BranchGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BranchGetCompleted(this, new BranchGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadLettersAndStatuesByAcctNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadLettersAndStatuesByAcctNo(string acctno, out string err) {
            object[] results = this.Invoke("LoadLettersAndStatuesByAcctNo", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadLettersAndStatuesByAcctNo(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadLettersAndStatuesByAcctNo", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadLettersAndStatuesByAcctNo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLettersAndStatuesByAcctNoAsync(string acctno) {
            this.LoadLettersAndStatuesByAcctNoAsync(acctno, null);
        }
        
        /// <remarks/>
        public void LoadLettersAndStatuesByAcctNoAsync(string acctno, object userState) {
            if ((this.LoadLettersAndStatuesByAcctNoOperationCompleted == null)) {
                this.LoadLettersAndStatuesByAcctNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLettersAndStatuesByAcctNoOperationCompleted);
            }
            this.InvokeAsync("LoadLettersAndStatuesByAcctNo", new object[] {
                        acctno}, this.LoadLettersAndStatuesByAcctNoOperationCompleted, userState);
        }
        
        private void OnLoadLettersAndStatuesByAcctNoOperationCompleted(object arg) {
            if ((this.LoadLettersAndStatuesByAcctNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLettersAndStatuesByAcctNoCompleted(this, new LoadLettersAndStatuesByAcctNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeliveryNotesReprintLoad", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DeliveryNotesReprintLoad(string acctno, int stockLocn, int bufffnofrom, int bufffnoto, out string err) {
            object[] results = this.Invoke("DeliveryNotesReprintLoad", new object[] {
                        acctno,
                        stockLocn,
                        bufffnofrom,
                        bufffnoto});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeliveryNotesReprintLoad(string acctno, int stockLocn, int bufffnofrom, int bufffnoto, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeliveryNotesReprintLoad", new object[] {
                        acctno,
                        stockLocn,
                        bufffnofrom,
                        bufffnoto}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDeliveryNotesReprintLoad(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DeliveryNotesReprintLoadAsync(string acctno, int stockLocn, int bufffnofrom, int bufffnoto) {
            this.DeliveryNotesReprintLoadAsync(acctno, stockLocn, bufffnofrom, bufffnoto, null);
        }
        
        /// <remarks/>
        public void DeliveryNotesReprintLoadAsync(string acctno, int stockLocn, int bufffnofrom, int bufffnoto, object userState) {
            if ((this.DeliveryNotesReprintLoadOperationCompleted == null)) {
                this.DeliveryNotesReprintLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeliveryNotesReprintLoadOperationCompleted);
            }
            this.InvokeAsync("DeliveryNotesReprintLoad", new object[] {
                        acctno,
                        stockLocn,
                        bufffnofrom,
                        bufffnoto}, this.DeliveryNotesReprintLoadOperationCompleted, userState);
        }
        
        private void OnDeliveryNotesReprintLoadOperationCompleted(object arg) {
            if ((this.DeliveryNotesReprintLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeliveryNotesReprintLoadCompleted(this, new DeliveryNotesReprintLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalculateAddTo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CalculateAddTo(
                    string addToAccount, 
                    string[] accounts, 
                    string countryCode, 
                    short branchNo, 
                    string termsType, 
                    string scoringBand, 
                    ref decimal deposit, 
                    short months, 
                    short paymentHolidays, 
                    bool depositChecked, 
                    out decimal sumBalances, 
                    out decimal newCashPrice, 
                    out decimal newAgreementTotal, 
                    out decimal newMonthlyInstal, 
                    out decimal newFinalInstal, 
                    out int newNoInstalments, 
                    out string err) {
            object[] results = this.Invoke("CalculateAddTo", new object[] {
                        addToAccount,
                        accounts,
                        countryCode,
                        branchNo,
                        termsType,
                        scoringBand,
                        deposit,
                        months,
                        paymentHolidays,
                        depositChecked});
            deposit = ((decimal)(results[1]));
            sumBalances = ((decimal)(results[2]));
            newCashPrice = ((decimal)(results[3]));
            newAgreementTotal = ((decimal)(results[4]));
            newMonthlyInstal = ((decimal)(results[5]));
            newFinalInstal = ((decimal)(results[6]));
            newNoInstalments = ((int)(results[7]));
            err = ((string)(results[8]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateAddTo(string addToAccount, string[] accounts, string countryCode, short branchNo, string termsType, string scoringBand, decimal deposit, short months, short paymentHolidays, bool depositChecked, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateAddTo", new object[] {
                        addToAccount,
                        accounts,
                        countryCode,
                        branchNo,
                        termsType,
                        scoringBand,
                        deposit,
                        months,
                        paymentHolidays,
                        depositChecked}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCalculateAddTo(System.IAsyncResult asyncResult, out decimal deposit, out decimal sumBalances, out decimal newCashPrice, out decimal newAgreementTotal, out decimal newMonthlyInstal, out decimal newFinalInstal, out int newNoInstalments, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            deposit = ((decimal)(results[1]));
            sumBalances = ((decimal)(results[2]));
            newCashPrice = ((decimal)(results[3]));
            newAgreementTotal = ((decimal)(results[4]));
            newMonthlyInstal = ((decimal)(results[5]));
            newFinalInstal = ((decimal)(results[6]));
            newNoInstalments = ((int)(results[7]));
            err = ((string)(results[8]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateAddToAsync(string addToAccount, string[] accounts, string countryCode, short branchNo, string termsType, string scoringBand, decimal deposit, short months, short paymentHolidays, bool depositChecked) {
            this.CalculateAddToAsync(addToAccount, accounts, countryCode, branchNo, termsType, scoringBand, deposit, months, paymentHolidays, depositChecked, null);
        }
        
        /// <remarks/>
        public void CalculateAddToAsync(string addToAccount, string[] accounts, string countryCode, short branchNo, string termsType, string scoringBand, decimal deposit, short months, short paymentHolidays, bool depositChecked, object userState) {
            if ((this.CalculateAddToOperationCompleted == null)) {
                this.CalculateAddToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateAddToOperationCompleted);
            }
            this.InvokeAsync("CalculateAddTo", new object[] {
                        addToAccount,
                        accounts,
                        countryCode,
                        branchNo,
                        termsType,
                        scoringBand,
                        deposit,
                        months,
                        paymentHolidays,
                        depositChecked}, this.CalculateAddToOperationCompleted, userState);
        }
        
        private void OnCalculateAddToOperationCompleted(object arg) {
            if ((this.CalculateAddToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateAddToCompleted(this, new CalculateAddToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ProcessAddTo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ProcessAddTo(string addToAccount, string[] accounts, string countryCode, string termsType, string scoringBand, ref decimal deposit, short months, short paymentHolidays, bool depositChecked, out string err) {
            object[] results = this.Invoke("ProcessAddTo", new object[] {
                        addToAccount,
                        accounts,
                        countryCode,
                        termsType,
                        scoringBand,
                        deposit,
                        months,
                        paymentHolidays,
                        depositChecked});
            deposit = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProcessAddTo(string addToAccount, string[] accounts, string countryCode, string termsType, string scoringBand, decimal deposit, short months, short paymentHolidays, bool depositChecked, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProcessAddTo", new object[] {
                        addToAccount,
                        accounts,
                        countryCode,
                        termsType,
                        scoringBand,
                        deposit,
                        months,
                        paymentHolidays,
                        depositChecked}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndProcessAddTo(System.IAsyncResult asyncResult, out decimal deposit, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            deposit = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessAddToAsync(string addToAccount, string[] accounts, string countryCode, string termsType, string scoringBand, decimal deposit, short months, short paymentHolidays, bool depositChecked) {
            this.ProcessAddToAsync(addToAccount, accounts, countryCode, termsType, scoringBand, deposit, months, paymentHolidays, depositChecked, null);
        }
        
        /// <remarks/>
        public void ProcessAddToAsync(string addToAccount, string[] accounts, string countryCode, string termsType, string scoringBand, decimal deposit, short months, short paymentHolidays, bool depositChecked, object userState) {
            if ((this.ProcessAddToOperationCompleted == null)) {
                this.ProcessAddToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessAddToOperationCompleted);
            }
            this.InvokeAsync("ProcessAddTo", new object[] {
                        addToAccount,
                        accounts,
                        countryCode,
                        termsType,
                        scoringBand,
                        deposit,
                        months,
                        paymentHolidays,
                        depositChecked}, this.ProcessAddToOperationCompleted, userState);
        }
        
        private void OnProcessAddToOperationCompleted(object arg) {
            if ((this.ProcessAddToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessAddToCompleted(this, new ProcessAddToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AccountFullyDelivered", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AccountFullyDelivered(string accountNo, out short delivered, out string err) {
            object[] results = this.Invoke("AccountFullyDelivered", new object[] {
                        accountNo});
            delivered = ((short)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAccountFullyDelivered(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AccountFullyDelivered", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAccountFullyDelivered(System.IAsyncResult asyncResult, out short delivered, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            delivered = ((short)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AccountFullyDeliveredAsync(string accountNo) {
            this.AccountFullyDeliveredAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void AccountFullyDeliveredAsync(string accountNo, object userState) {
            if ((this.AccountFullyDeliveredOperationCompleted == null)) {
                this.AccountFullyDeliveredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountFullyDeliveredOperationCompleted);
            }
            this.InvokeAsync("AccountFullyDelivered", new object[] {
                        accountNo}, this.AccountFullyDeliveredOperationCompleted, userState);
        }
        
        private void OnAccountFullyDeliveredOperationCompleted(object arg) {
            if ((this.AccountFullyDeliveredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountFullyDeliveredCompleted(this, new AccountFullyDeliveredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ContractNoUnique", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ContractNoUnique(string accountNo, int agreementNo, string contractNo, out bool unique, out string err) {
            object[] results = this.Invoke("ContractNoUnique", new object[] {
                        accountNo,
                        agreementNo,
                        contractNo});
            unique = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginContractNoUnique(string accountNo, int agreementNo, string contractNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ContractNoUnique", new object[] {
                        accountNo,
                        agreementNo,
                        contractNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndContractNoUnique(System.IAsyncResult asyncResult, out bool unique, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            unique = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ContractNoUniqueAsync(string accountNo, int agreementNo, string contractNo) {
            this.ContractNoUniqueAsync(accountNo, agreementNo, contractNo, null);
        }
        
        /// <remarks/>
        public void ContractNoUniqueAsync(string accountNo, int agreementNo, string contractNo, object userState) {
            if ((this.ContractNoUniqueOperationCompleted == null)) {
                this.ContractNoUniqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContractNoUniqueOperationCompleted);
            }
            this.InvokeAsync("ContractNoUnique", new object[] {
                        accountNo,
                        agreementNo,
                        contractNo}, this.ContractNoUniqueOperationCompleted, userState);
        }
        
        private void OnContractNoUniqueOperationCompleted(object arg) {
            if ((this.ContractNoUniqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContractNoUniqueCompleted(this, new ContractNoUniqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AffinityContractNoUnique", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AffinityContractNoUnique(string accountNo, int agreementNo, string contractNo, out bool unique, out string err) {
            object[] results = this.Invoke("AffinityContractNoUnique", new object[] {
                        accountNo,
                        agreementNo,
                        contractNo});
            unique = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAffinityContractNoUnique(string accountNo, int agreementNo, string contractNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AffinityContractNoUnique", new object[] {
                        accountNo,
                        agreementNo,
                        contractNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAffinityContractNoUnique(System.IAsyncResult asyncResult, out bool unique, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            unique = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AffinityContractNoUniqueAsync(string accountNo, int agreementNo, string contractNo) {
            this.AffinityContractNoUniqueAsync(accountNo, agreementNo, contractNo, null);
        }
        
        /// <remarks/>
        public void AffinityContractNoUniqueAsync(string accountNo, int agreementNo, string contractNo, object userState) {
            if ((this.AffinityContractNoUniqueOperationCompleted == null)) {
                this.AffinityContractNoUniqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAffinityContractNoUniqueOperationCompleted);
            }
            this.InvokeAsync("AffinityContractNoUnique", new object[] {
                        accountNo,
                        agreementNo,
                        contractNo}, this.AffinityContractNoUniqueOperationCompleted, userState);
        }
        
        private void OnAffinityContractNoUniqueOperationCompleted(object arg) {
            if ((this.AffinityContractNoUniqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AffinityContractNoUniqueCompleted(this, new AffinityContractNoUniqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/HasAddToOrDelivery", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int HasAddToOrDelivery(string accountNo, out short addto, out string err) {
            object[] results = this.Invoke("HasAddToOrDelivery", new object[] {
                        accountNo});
            addto = ((short)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHasAddToOrDelivery(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HasAddToOrDelivery", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndHasAddToOrDelivery(System.IAsyncResult asyncResult, out short addto, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            addto = ((short)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HasAddToOrDeliveryAsync(string accountNo) {
            this.HasAddToOrDeliveryAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void HasAddToOrDeliveryAsync(string accountNo, object userState) {
            if ((this.HasAddToOrDeliveryOperationCompleted == null)) {
                this.HasAddToOrDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasAddToOrDeliveryOperationCompleted);
            }
            this.InvokeAsync("HasAddToOrDelivery", new object[] {
                        accountNo}, this.HasAddToOrDeliveryOperationCompleted, userState);
        }
        
        private void OnHasAddToOrDeliveryOperationCompleted(object arg) {
            if ((this.HasAddToOrDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasAddToOrDeliveryCompleted(this, new HasAddToOrDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SettledByAddTo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SettledByAddTo(string accountNo, out short reversible, out string err) {
            object[] results = this.Invoke("SettledByAddTo", new object[] {
                        accountNo});
            reversible = ((short)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSettledByAddTo(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SettledByAddTo", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSettledByAddTo(System.IAsyncResult asyncResult, out short reversible, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            reversible = ((short)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SettledByAddToAsync(string accountNo) {
            this.SettledByAddToAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void SettledByAddToAsync(string accountNo, object userState) {
            if ((this.SettledByAddToOperationCompleted == null)) {
                this.SettledByAddToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSettledByAddToOperationCompleted);
            }
            this.InvokeAsync("SettledByAddTo", new object[] {
                        accountNo}, this.SettledByAddToOperationCompleted, userState);
        }
        
        private void OnSettledByAddToOperationCompleted(object arg) {
            if ((this.SettledByAddToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SettledByAddToCompleted(this, new SettledByAddToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ReverseAddTo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReverseAddTo(string accountNo, string accountType, string countryCode, out string err) {
            object[] results = this.Invoke("ReverseAddTo", new object[] {
                        accountNo,
                        accountType,
                        countryCode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReverseAddTo(string accountNo, string accountType, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReverseAddTo", new object[] {
                        accountNo,
                        accountType,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndReverseAddTo(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseAddToAsync(string accountNo, string accountType, string countryCode) {
            this.ReverseAddToAsync(accountNo, accountType, countryCode, null);
        }
        
        /// <remarks/>
        public void ReverseAddToAsync(string accountNo, string accountType, string countryCode, object userState) {
            if ((this.ReverseAddToOperationCompleted == null)) {
                this.ReverseAddToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseAddToOperationCompleted);
            }
            this.InvokeAsync("ReverseAddTo", new object[] {
                        accountNo,
                        accountType,
                        countryCode}, this.ReverseAddToOperationCompleted, userState);
        }
        
        private void OnReverseAddToOperationCompleted(object arg) {
            if ((this.ReverseAddToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseAddToCompleted(this, new ReverseAddToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/Second", RequestElementName="Second", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="SecondResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SecondResult")]
        public decimal CalculateTaxAmount(string countryCode, System.Xml.XmlNode item, bool taxExempt, out string err) {
            object[] results = this.Invoke("CalculateTaxAmount", new object[] {
                        countryCode,
                        item,
                        taxExempt});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateTaxAmount(string countryCode, System.Xml.XmlNode item, bool taxExempt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateTaxAmount", new object[] {
                        countryCode,
                        item,
                        taxExempt}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndCalculateTaxAmount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateTaxAmountAsync(string countryCode, System.Xml.XmlNode item, bool taxExempt) {
            this.CalculateTaxAmountAsync(countryCode, item, taxExempt, null);
        }
        
        /// <remarks/>
        public void CalculateTaxAmountAsync(string countryCode, System.Xml.XmlNode item, bool taxExempt, object userState) {
            if ((this.CalculateTaxAmountOperationCompleted == null)) {
                this.CalculateTaxAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateTaxAmountOperationCompleted);
            }
            this.InvokeAsync("CalculateTaxAmount", new object[] {
                        countryCode,
                        item,
                        taxExempt}, this.CalculateTaxAmountOperationCompleted, userState);
        }
        
        private void OnCalculateTaxAmountOperationCompleted(object arg) {
            if ((this.CalculateTaxAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateTaxAmountCompleted(this, new CalculateTaxAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CalculateTaxAmount1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/First", RequestElementName="First", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="FirstResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("FirstResult")]
        public decimal CalculateTaxAmount(string countryCode, System.Xml.XmlNode replacement, bool taxExempt, decimal oldTaxamt, out string err) {
            object[] results = this.Invoke("CalculateTaxAmount1", new object[] {
                        countryCode,
                        replacement,
                        taxExempt,
                        oldTaxamt});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateTaxAmount1(string countryCode, System.Xml.XmlNode replacement, bool taxExempt, decimal oldTaxamt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateTaxAmount1", new object[] {
                        countryCode,
                        replacement,
                        taxExempt,
                        oldTaxamt}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndCalculateTaxAmount1(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateTaxAmount1Async(string countryCode, System.Xml.XmlNode replacement, bool taxExempt, decimal oldTaxamt) {
            this.CalculateTaxAmount1Async(countryCode, replacement, taxExempt, oldTaxamt, null);
        }
        
        /// <remarks/>
        public void CalculateTaxAmount1Async(string countryCode, System.Xml.XmlNode replacement, bool taxExempt, decimal oldTaxamt, object userState) {
            if ((this.CalculateTaxAmount1OperationCompleted == null)) {
                this.CalculateTaxAmount1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateTaxAmount1OperationCompleted);
            }
            this.InvokeAsync("CalculateTaxAmount1", new object[] {
                        countryCode,
                        replacement,
                        taxExempt,
                        oldTaxamt}, this.CalculateTaxAmount1OperationCompleted, userState);
        }
        
        private void OnCalculateTaxAmount1OperationCompleted(object arg) {
            if ((this.CalculateTaxAmount1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateTaxAmount1Completed(this, new CalculateTaxAmount1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsTaxExempt", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsTaxExempt(string accountNo, string reference, out string err) {
            object[] results = this.Invoke("IsTaxExempt", new object[] {
                        accountNo,
                        reference});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsTaxExempt(string accountNo, string reference, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsTaxExempt", new object[] {
                        accountNo,
                        reference}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsTaxExempt(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsTaxExemptAsync(string accountNo, string reference) {
            this.IsTaxExemptAsync(accountNo, reference, null);
        }
        
        /// <remarks/>
        public void IsTaxExemptAsync(string accountNo, string reference, object userState) {
            if ((this.IsTaxExemptOperationCompleted == null)) {
                this.IsTaxExemptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsTaxExemptOperationCompleted);
            }
            this.InvokeAsync("IsTaxExempt", new object[] {
                        accountNo,
                        reference}, this.IsTaxExemptOperationCompleted, userState);
        }
        
        private void OnIsTaxExemptOperationCompleted(object arg) {
            if ((this.IsTaxExemptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsTaxExemptCompleted(this, new IsTaxExemptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAssociatedWarranties", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAssociatedWarranties(string accountNo, int itemId, short stockLocn, out string err) {
            object[] results = this.Invoke("GetAssociatedWarranties", new object[] {
                        accountNo,
                        itemId,
                        stockLocn});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAssociatedWarranties(string accountNo, int itemId, short stockLocn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAssociatedWarranties", new object[] {
                        accountNo,
                        itemId,
                        stockLocn}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAssociatedWarranties(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociatedWarrantiesAsync(string accountNo, int itemId, short stockLocn) {
            this.GetAssociatedWarrantiesAsync(accountNo, itemId, stockLocn, null);
        }
        
        /// <remarks/>
        public void GetAssociatedWarrantiesAsync(string accountNo, int itemId, short stockLocn, object userState) {
            if ((this.GetAssociatedWarrantiesOperationCompleted == null)) {
                this.GetAssociatedWarrantiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociatedWarrantiesOperationCompleted);
            }
            this.InvokeAsync("GetAssociatedWarranties", new object[] {
                        accountNo,
                        itemId,
                        stockLocn}, this.GetAssociatedWarrantiesOperationCompleted, userState);
        }
        
        private void OnGetAssociatedWarrantiesOperationCompleted(object arg) {
            if ((this.GetAssociatedWarrantiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociatedWarrantiesCompleted(this, new GetAssociatedWarrantiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveProductFaults", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveProductFaults(string accountNo, int agreementNo, string itemNo, string returnItemNo, string notes, string reason, System.DateTime dateCollection, short elapsedMonths, short branchNo, out string err) {
            object[] results = this.Invoke("SaveProductFaults", new object[] {
                        accountNo,
                        agreementNo,
                        itemNo,
                        returnItemNo,
                        notes,
                        reason,
                        dateCollection,
                        elapsedMonths,
                        branchNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveProductFaults(string accountNo, int agreementNo, string itemNo, string returnItemNo, string notes, string reason, System.DateTime dateCollection, short elapsedMonths, short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveProductFaults", new object[] {
                        accountNo,
                        agreementNo,
                        itemNo,
                        returnItemNo,
                        notes,
                        reason,
                        dateCollection,
                        elapsedMonths,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveProductFaults(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProductFaultsAsync(string accountNo, int agreementNo, string itemNo, string returnItemNo, string notes, string reason, System.DateTime dateCollection, short elapsedMonths, short branchNo) {
            this.SaveProductFaultsAsync(accountNo, agreementNo, itemNo, returnItemNo, notes, reason, dateCollection, elapsedMonths, branchNo, null);
        }
        
        /// <remarks/>
        public void SaveProductFaultsAsync(string accountNo, int agreementNo, string itemNo, string returnItemNo, string notes, string reason, System.DateTime dateCollection, short elapsedMonths, short branchNo, object userState) {
            if ((this.SaveProductFaultsOperationCompleted == null)) {
                this.SaveProductFaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProductFaultsOperationCompleted);
            }
            this.InvokeAsync("SaveProductFaults", new object[] {
                        accountNo,
                        agreementNo,
                        itemNo,
                        returnItemNo,
                        notes,
                        reason,
                        dateCollection,
                        elapsedMonths,
                        branchNo}, this.SaveProductFaultsOperationCompleted, userState);
        }
        
        private void OnSaveProductFaultsOperationCompleted(object arg) {
            if ((this.SaveProductFaultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProductFaultsCompleted(this, new SaveProductFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWarrantyReturnItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarrantyReturnItem(int elapsedMonths, out string err) {
            object[] results = this.Invoke("GetWarrantyReturnItem", new object[] {
                        elapsedMonths});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarrantyReturnItem(int elapsedMonths, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarrantyReturnItem", new object[] {
                        elapsedMonths}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetWarrantyReturnItem(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantyReturnItemAsync(int elapsedMonths) {
            this.GetWarrantyReturnItemAsync(elapsedMonths, null);
        }
        
        /// <remarks/>
        public void GetWarrantyReturnItemAsync(int elapsedMonths, object userState) {
            if ((this.GetWarrantyReturnItemOperationCompleted == null)) {
                this.GetWarrantyReturnItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantyReturnItemOperationCompleted);
            }
            this.InvokeAsync("GetWarrantyReturnItem", new object[] {
                        elapsedMonths}, this.GetWarrantyReturnItemOperationCompleted, userState);
        }
        
        private void OnGetWarrantyReturnItemOperationCompleted(object arg) {
            if ((this.GetWarrantyReturnItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantyReturnItemCompleted(this, new GetWarrantyReturnItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoreCardBranchQualRules))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public abstract partial class Entity {
        
        private int idField;
        
        private int versionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class StoreCardBranchQualRules : Entity {
        
        private short branchNoField;
        
        private System.Nullable<int> minApplicationScoreField;
        
        private System.Nullable<int> minBehaviouralScoreField;
        
        private System.Nullable<int> minMthsAcctHistXField;
        
        private System.Nullable<decimal> maxCurrMthsInArrsField;
        
        private System.Nullable<decimal> maxPrevMthsInArrsXField;
        
        private System.Nullable<double> pcentInitRFLimitField;
        
        private System.Nullable<int> empeenoChangeField;
        
        private System.DateTime dateChangedField;
        
        private System.Nullable<int> minMthsAcctHistYField;
        
        private System.Nullable<int> maxPrevMthsInArrsYField;
        
        private System.Nullable<int> maxNoCustForApprovalField;
        
        private string applyToField;
        
        /// <remarks/>
        public short BranchNo {
            get {
                return this.branchNoField;
            }
            set {
                this.branchNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MinApplicationScore {
            get {
                return this.minApplicationScoreField;
            }
            set {
                this.minApplicationScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MinBehaviouralScore {
            get {
                return this.minBehaviouralScoreField;
            }
            set {
                this.minBehaviouralScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MinMthsAcctHistX {
            get {
                return this.minMthsAcctHistXField;
            }
            set {
                this.minMthsAcctHistXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MaxCurrMthsInArrs {
            get {
                return this.maxCurrMthsInArrsField;
            }
            set {
                this.maxCurrMthsInArrsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MaxPrevMthsInArrsX {
            get {
                return this.maxPrevMthsInArrsXField;
            }
            set {
                this.maxPrevMthsInArrsXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> PcentInitRFLimit {
            get {
                return this.pcentInitRFLimitField;
            }
            set {
                this.pcentInitRFLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EmpeenoChange {
            get {
                return this.empeenoChangeField;
            }
            set {
                this.empeenoChangeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateChanged {
            get {
                return this.dateChangedField;
            }
            set {
                this.dateChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MinMthsAcctHistY {
            get {
                return this.minMthsAcctHistYField;
            }
            set {
                this.minMthsAcctHistYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MaxPrevMthsInArrsY {
            get {
                return this.maxPrevMthsInArrsYField;
            }
            set {
                this.maxPrevMthsInArrsYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MaxNoCustForApproval {
            get {
                return this.maxNoCustForApprovalField;
            }
            set {
                this.maxNoCustForApprovalField = value;
            }
        }
        
        /// <remarks/>
        public string ApplyTo {
            get {
                return this.applyToField;
            }
            set {
                this.applyToField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class SaveNewAccountParameters {
        
        private string accountNumberField;
        
        private short branchNoField;
        
        private string accountTypeField;
        
        private string cODFlagField;
        
        private int salesPersonField;
        
        private string sOAField;
        
        private double agreementTotalField;
        
        private double depositField;
        
        private double serviceChargeField;
        
        private System.Xml.XmlNode lineItemsField;
        
        private string termsTypeField;
        
        private string newBandField;
        
        private string countryCodeField;
        
        private System.DateTime dateFirstField;
        
        private double instalAmountField;
        
        private double finalInstalmentField;
        
        private string paymentMethodField;
        
        private int monthsField;
        
        private bool taxExemptField;
        
        private bool dutyFreeField;
        
        private decimal taxAmountField;
        
        private bool collectionField;
        
        private string bankCodeField;
        
        private string bankAcctNoField;
        
        private string chequeNoField;
        
        private short payMethodField;
        
        private System.Xml.XmlNode replacementXmlField;
        
        private decimal dtTaxAmountField;
        
        private string loyaltyCardNoField;
        
        private bool reScoreField;
        
        private decimal tenderedField;
        
        private decimal giftVoucherValueField;
        
        private bool courtsVoucherField;
        
        private string voucherReferenceField;
        
        private int voucherAuthorisedByField;
        
        private string accountNoCompanyField;
        
        private short promoBranchField;
        
        private short paymentHolidaysField;
        
        private System.Data.DataSet payMethodSetField;
        
        private short dueDayField;
        
        private int returnAuthorisedByField;
        
        private System.Data.DataSet warrantyRenewalSetField;
        
        private System.Data.DataSet variableRatesSetField;
        
        private int agreementNoField;
        
        private string propResultField;
        
        private System.DateTime datePropField;
        
        private bool resetPropResultField;
        
        private bool autodaField;
        
        private int userField;
        
        private string storeCardAcctNoField;
        
        private System.Nullable<long> storeCardNumberField;
        
        private bool paidAndTakenField;
        
        private bool hasInstallationField;
        
        private bool custLinkRequiredField;
        
        private bool cashAndGoReturnField;
        
        private string collectionTypeField;
        
        private System.Data.DataTable warrantyRefundsField;
        
        private bool readyAssistField;
        
        private System.Nullable<int> readyAssistTermLengthField;
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public short BranchNo {
            get {
                return this.branchNoField;
            }
            set {
                this.branchNoField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CODFlag {
            get {
                return this.cODFlagField;
            }
            set {
                this.cODFlagField = value;
            }
        }
        
        /// <remarks/>
        public int SalesPerson {
            get {
                return this.salesPersonField;
            }
            set {
                this.salesPersonField = value;
            }
        }
        
        /// <remarks/>
        public string SOA {
            get {
                return this.sOAField;
            }
            set {
                this.sOAField = value;
            }
        }
        
        /// <remarks/>
        public double AgreementTotal {
            get {
                return this.agreementTotalField;
            }
            set {
                this.agreementTotalField = value;
            }
        }
        
        /// <remarks/>
        public double Deposit {
            get {
                return this.depositField;
            }
            set {
                this.depositField = value;
            }
        }
        
        /// <remarks/>
        public double ServiceCharge {
            get {
                return this.serviceChargeField;
            }
            set {
                this.serviceChargeField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode LineItems {
            get {
                return this.lineItemsField;
            }
            set {
                this.lineItemsField = value;
            }
        }
        
        /// <remarks/>
        public string TermsType {
            get {
                return this.termsTypeField;
            }
            set {
                this.termsTypeField = value;
            }
        }
        
        /// <remarks/>
        public string NewBand {
            get {
                return this.newBandField;
            }
            set {
                this.newBandField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateFirst {
            get {
                return this.dateFirstField;
            }
            set {
                this.dateFirstField = value;
            }
        }
        
        /// <remarks/>
        public double InstalAmount {
            get {
                return this.instalAmountField;
            }
            set {
                this.instalAmountField = value;
            }
        }
        
        /// <remarks/>
        public double FinalInstalment {
            get {
                return this.finalInstalmentField;
            }
            set {
                this.finalInstalmentField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentMethod {
            get {
                return this.paymentMethodField;
            }
            set {
                this.paymentMethodField = value;
            }
        }
        
        /// <remarks/>
        public int Months {
            get {
                return this.monthsField;
            }
            set {
                this.monthsField = value;
            }
        }
        
        /// <remarks/>
        public bool TaxExempt {
            get {
                return this.taxExemptField;
            }
            set {
                this.taxExemptField = value;
            }
        }
        
        /// <remarks/>
        public bool DutyFree {
            get {
                return this.dutyFreeField;
            }
            set {
                this.dutyFreeField = value;
            }
        }
        
        /// <remarks/>
        public decimal TaxAmount {
            get {
                return this.taxAmountField;
            }
            set {
                this.taxAmountField = value;
            }
        }
        
        /// <remarks/>
        public bool Collection {
            get {
                return this.collectionField;
            }
            set {
                this.collectionField = value;
            }
        }
        
        /// <remarks/>
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BankAcctNo {
            get {
                return this.bankAcctNoField;
            }
            set {
                this.bankAcctNoField = value;
            }
        }
        
        /// <remarks/>
        public string ChequeNo {
            get {
                return this.chequeNoField;
            }
            set {
                this.chequeNoField = value;
            }
        }
        
        /// <remarks/>
        public short PayMethod {
            get {
                return this.payMethodField;
            }
            set {
                this.payMethodField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode ReplacementXml {
            get {
                return this.replacementXmlField;
            }
            set {
                this.replacementXmlField = value;
            }
        }
        
        /// <remarks/>
        public decimal DtTaxAmount {
            get {
                return this.dtTaxAmountField;
            }
            set {
                this.dtTaxAmountField = value;
            }
        }
        
        /// <remarks/>
        public string LoyaltyCardNo {
            get {
                return this.loyaltyCardNoField;
            }
            set {
                this.loyaltyCardNoField = value;
            }
        }
        
        /// <remarks/>
        public bool ReScore {
            get {
                return this.reScoreField;
            }
            set {
                this.reScoreField = value;
            }
        }
        
        /// <remarks/>
        public decimal Tendered {
            get {
                return this.tenderedField;
            }
            set {
                this.tenderedField = value;
            }
        }
        
        /// <remarks/>
        public decimal GiftVoucherValue {
            get {
                return this.giftVoucherValueField;
            }
            set {
                this.giftVoucherValueField = value;
            }
        }
        
        /// <remarks/>
        public bool CourtsVoucher {
            get {
                return this.courtsVoucherField;
            }
            set {
                this.courtsVoucherField = value;
            }
        }
        
        /// <remarks/>
        public string VoucherReference {
            get {
                return this.voucherReferenceField;
            }
            set {
                this.voucherReferenceField = value;
            }
        }
        
        /// <remarks/>
        public int VoucherAuthorisedBy {
            get {
                return this.voucherAuthorisedByField;
            }
            set {
                this.voucherAuthorisedByField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNoCompany {
            get {
                return this.accountNoCompanyField;
            }
            set {
                this.accountNoCompanyField = value;
            }
        }
        
        /// <remarks/>
        public short PromoBranch {
            get {
                return this.promoBranchField;
            }
            set {
                this.promoBranchField = value;
            }
        }
        
        /// <remarks/>
        public short PaymentHolidays {
            get {
                return this.paymentHolidaysField;
            }
            set {
                this.paymentHolidaysField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet PayMethodSet {
            get {
                return this.payMethodSetField;
            }
            set {
                this.payMethodSetField = value;
            }
        }
        
        /// <remarks/>
        public short DueDay {
            get {
                return this.dueDayField;
            }
            set {
                this.dueDayField = value;
            }
        }
        
        /// <remarks/>
        public int ReturnAuthorisedBy {
            get {
                return this.returnAuthorisedByField;
            }
            set {
                this.returnAuthorisedByField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet WarrantyRenewalSet {
            get {
                return this.warrantyRenewalSetField;
            }
            set {
                this.warrantyRenewalSetField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet VariableRatesSet {
            get {
                return this.variableRatesSetField;
            }
            set {
                this.variableRatesSetField = value;
            }
        }
        
        /// <remarks/>
        public int AgreementNo {
            get {
                return this.agreementNoField;
            }
            set {
                this.agreementNoField = value;
            }
        }
        
        /// <remarks/>
        public string PropResult {
            get {
                return this.propResultField;
            }
            set {
                this.propResultField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateProp {
            get {
                return this.datePropField;
            }
            set {
                this.datePropField = value;
            }
        }
        
        /// <remarks/>
        public bool ResetPropResult {
            get {
                return this.resetPropResultField;
            }
            set {
                this.resetPropResultField = value;
            }
        }
        
        /// <remarks/>
        public bool Autoda {
            get {
                return this.autodaField;
            }
            set {
                this.autodaField = value;
            }
        }
        
        /// <remarks/>
        public int User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string StoreCardAcctNo {
            get {
                return this.storeCardAcctNoField;
            }
            set {
                this.storeCardAcctNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> StoreCardNumber {
            get {
                return this.storeCardNumberField;
            }
            set {
                this.storeCardNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool PaidAndTaken {
            get {
                return this.paidAndTakenField;
            }
            set {
                this.paidAndTakenField = value;
            }
        }
        
        /// <remarks/>
        public bool HasInstallation {
            get {
                return this.hasInstallationField;
            }
            set {
                this.hasInstallationField = value;
            }
        }
        
        /// <remarks/>
        public bool CustLinkRequired {
            get {
                return this.custLinkRequiredField;
            }
            set {
                this.custLinkRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool CashAndGoReturn {
            get {
                return this.cashAndGoReturnField;
            }
            set {
                this.cashAndGoReturnField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionType {
            get {
                return this.collectionTypeField;
            }
            set {
                this.collectionTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable WarrantyRefunds {
            get {
                return this.warrantyRefundsField;
            }
            set {
                this.warrantyRefundsField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadyAssist {
            get {
                return this.readyAssistField;
            }
            set {
                this.readyAssistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReadyAssistTermLength {
            get {
                return this.readyAssistTermLengthField;
            }
            set {
                this.readyAssistTermLengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class GetItemDetailsRequest {
        
        private short accountBranchField;
        
        private string accountTypeField;
        
        private short branchCodeField;
        
        private string countryCodeField;
        
        private bool isDutyFreeField;
        
        private bool isTaxExemptField;
        
        private string productCodeField;
        
        private short promoBranchField;
        
        private short stockLocationNoField;
        
        private string accountNoField;
        
        private int agrmtNoField;
        
        private int itemIDField;
        
        /// <remarks/>
        public short AccountBranch {
            get {
                return this.accountBranchField;
            }
            set {
                this.accountBranchField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public short BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDutyFree {
            get {
                return this.isDutyFreeField;
            }
            set {
                this.isDutyFreeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTaxExempt {
            get {
                return this.isTaxExemptField;
            }
            set {
                this.isTaxExemptField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public short PromoBranch {
            get {
                return this.promoBranchField;
            }
            set {
                this.promoBranchField = value;
            }
        }
        
        /// <remarks/>
        public short StockLocationNo {
            get {
                return this.stockLocationNoField;
            }
            set {
                this.stockLocationNoField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public int AgrmtNo {
            get {
                return this.agrmtNoField;
            }
            set {
                this.agrmtNoField = value;
            }
        }
        
        /// <remarks/>
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class GetStockByLocationRequest {
        
        private short stockLocationNoField;
        
        private short branchCodeField;
        
        private int showDeletedField;
        
        private int showAvailableField;
        
        private string productDesctionField;
        
        private bool limitField;
        
        /// <remarks/>
        public short StockLocationNo {
            get {
                return this.stockLocationNoField;
            }
            set {
                this.stockLocationNoField = value;
            }
        }
        
        /// <remarks/>
        public short BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ShowDeleted {
            get {
                return this.showDeletedField;
            }
            set {
                this.showDeletedField = value;
            }
        }
        
        /// <remarks/>
        public int ShowAvailable {
            get {
                return this.showAvailableField;
            }
            set {
                this.showAvailableField = value;
            }
        }
        
        /// <remarks/>
        public string ProductDesction {
            get {
                return this.productDesctionField;
            }
            set {
                this.productDesctionField = value;
            }
        }
        
        /// <remarks/>
        public bool Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class Transaction {
        
        private string accountNoField;
        
        private string referenceNoField;
        
        private decimal agreementTotalField;
        
        private string paymentTypeField;
        
        private System.DateTime dateField;
        
        private decimal amountField;
        
        private decimal remainingBalanceField;
        
        /// <remarks/>
        public string AccountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceNo {
            get {
                return this.referenceNoField;
            }
            set {
                this.referenceNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal AgreementTotal {
            get {
                return this.agreementTotalField;
            }
            set {
                this.agreementTotalField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal RemainingBalance {
            get {
                return this.remainingBalanceField;
            }
            set {
                this.remainingBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class Account {
        
        private string accountNoField;
        
        private decimal agreementTotalField;
        
        private Transaction[] transactionsField;
        
        /// <remarks/>
        public string AccountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal AgreementTotal {
            get {
                return this.agreementTotalField;
            }
            set {
                this.agreementTotalField = value;
            }
        }
        
        /// <remarks/>
        public Transaction[] Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class BBSCustomer {
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string address4Field;
        
        private string address5Field;
        
        private decimal creditLimitField;
        
        private decimal availableSpendField;
        
        private Account[] accountsField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string Address4 {
            get {
                return this.address4Field;
            }
            set {
                this.address4Field = value;
            }
        }
        
        /// <remarks/>
        public string Address5 {
            get {
                return this.address5Field;
            }
            set {
                this.address5Field = value;
            }
        }
        
        /// <remarks/>
        public decimal CreditLimit {
            get {
                return this.creditLimitField;
            }
            set {
                this.creditLimitField = value;
            }
        }
        
        /// <remarks/>
        public decimal AvailableSpend {
            get {
                return this.availableSpendField;
            }
            set {
                this.availableSpendField = value;
            }
        }
        
        /// <remarks/>
        public Account[] Accounts {
            get {
                return this.accountsField;
            }
            set {
                this.accountsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class SPAAccountDetails {
        
        private decimal outstbalField;
        
        private decimal arrearsField;
        
        private decimal instalamountField;
        
        private System.DateTime dateAcctOpenField;
        
        private int percentPaidField;
        
        private System.DateTime finalPayDateField;
        
        private decimal interestField;
        
        private decimal adminField;
        
        private string acctTypeField;
        
        private string periodField;
        
        private int numInstalField;
        
        private decimal oddPaymentField;
        
        private System.DateTime firstPayDateField;
        
        private decimal arrangementAmountField;
        
        private string accountNoField;
        
        private int termField;
        
        private int maxTermField;
        
        private int currInstNoField;
        
        private string termsTypeField;
        
        private decimal refinDepositField;
        
        private decimal servPcentField;
        
        private decimal cashPriceField;
        
        private int dueDayField;
        
        private decimal insPcentField;
        
        private decimal adminPcentField;
        
        private decimal rebateField;
        
        private int minTermField;
        
        private string scoringBandField;
        
        /// <remarks/>
        public decimal Outstbal {
            get {
                return this.outstbalField;
            }
            set {
                this.outstbalField = value;
            }
        }
        
        /// <remarks/>
        public decimal Arrears {
            get {
                return this.arrearsField;
            }
            set {
                this.arrearsField = value;
            }
        }
        
        /// <remarks/>
        public decimal Instalamount {
            get {
                return this.instalamountField;
            }
            set {
                this.instalamountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAcctOpen {
            get {
                return this.dateAcctOpenField;
            }
            set {
                this.dateAcctOpenField = value;
            }
        }
        
        /// <remarks/>
        public int PercentPaid {
            get {
                return this.percentPaidField;
            }
            set {
                this.percentPaidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FinalPayDate {
            get {
                return this.finalPayDateField;
            }
            set {
                this.finalPayDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Interest {
            get {
                return this.interestField;
            }
            set {
                this.interestField = value;
            }
        }
        
        /// <remarks/>
        public decimal Admin {
            get {
                return this.adminField;
            }
            set {
                this.adminField = value;
            }
        }
        
        /// <remarks/>
        public string AcctType {
            get {
                return this.acctTypeField;
            }
            set {
                this.acctTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
            }
        }
        
        /// <remarks/>
        public int NumInstal {
            get {
                return this.numInstalField;
            }
            set {
                this.numInstalField = value;
            }
        }
        
        /// <remarks/>
        public decimal OddPayment {
            get {
                return this.oddPaymentField;
            }
            set {
                this.oddPaymentField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FirstPayDate {
            get {
                return this.firstPayDateField;
            }
            set {
                this.firstPayDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal ArrangementAmount {
            get {
                return this.arrangementAmountField;
            }
            set {
                this.arrangementAmountField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public int Term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
        
        /// <remarks/>
        public int MaxTerm {
            get {
                return this.maxTermField;
            }
            set {
                this.maxTermField = value;
            }
        }
        
        /// <remarks/>
        public int CurrInstNo {
            get {
                return this.currInstNoField;
            }
            set {
                this.currInstNoField = value;
            }
        }
        
        /// <remarks/>
        public string TermsType {
            get {
                return this.termsTypeField;
            }
            set {
                this.termsTypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal RefinDeposit {
            get {
                return this.refinDepositField;
            }
            set {
                this.refinDepositField = value;
            }
        }
        
        /// <remarks/>
        public decimal ServPcent {
            get {
                return this.servPcentField;
            }
            set {
                this.servPcentField = value;
            }
        }
        
        /// <remarks/>
        public decimal CashPrice {
            get {
                return this.cashPriceField;
            }
            set {
                this.cashPriceField = value;
            }
        }
        
        /// <remarks/>
        public int DueDay {
            get {
                return this.dueDayField;
            }
            set {
                this.dueDayField = value;
            }
        }
        
        /// <remarks/>
        public decimal InsPcent {
            get {
                return this.insPcentField;
            }
            set {
                this.insPcentField = value;
            }
        }
        
        /// <remarks/>
        public decimal AdminPcent {
            get {
                return this.adminPcentField;
            }
            set {
                this.adminPcentField = value;
            }
        }
        
        /// <remarks/>
        public decimal Rebate {
            get {
                return this.rebateField;
            }
            set {
                this.rebateField = value;
            }
        }
        
        /// <remarks/>
        public int MinTerm {
            get {
                return this.minTermField;
            }
            set {
                this.minTermField = value;
            }
        }
        
        /// <remarks/>
        public string ScoringBand {
            get {
                return this.scoringBandField;
            }
            set {
                this.scoringBandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class AccountDetailsResponse {
        
        private string errField;
        
        private string paidAndTakenAccountField;
        
        private object[] customerAccountsField;
        
        private bool privilegeClubField;
        
        private string privilegeClubCodeField;
        
        private string privilegeClubDescField;
        
        private bool hasDiscountField;
        
        private System.Data.DataSet customerAddressesField;
        
        private System.Data.DataSet customerSearchField;
        
        private System.DateTime serverDateField;
        
        private System.Data.DataSet agreementDataField;
        
        private System.Data.DataSet termsTypeDetailsField;
        
        private System.Data.DataSet transactionsDataField;
        
        private System.Data.DataSet rFCombinedDetailsField;
        
        private System.Data.DataSet deliveriesDataField;
        
        private System.Data.DataSet paymentAccountsField;
        
        private decimal addToValueField;
        
        private bool isCancelledField;
        
        private System.Data.DataSet serviceRequestSummaryForAccountField;
        
        private string customerPhotoField;
        
        private string customerSignatureField;
        
        private System.Data.DataSet letterByAcctNoField;
        
        private System.Data.DataSet statusForAccountField;
        
        /// <remarks/>
        public string err {
            get {
                return this.errField;
            }
            set {
                this.errField = value;
            }
        }
        
        /// <remarks/>
        public string PaidAndTakenAccount {
            get {
                return this.paidAndTakenAccountField;
            }
            set {
                this.paidAndTakenAccountField = value;
            }
        }
        
        /// <remarks/>
        public object[] CustomerAccounts {
            get {
                return this.customerAccountsField;
            }
            set {
                this.customerAccountsField = value;
            }
        }
        
        /// <remarks/>
        public bool PrivilegeClub {
            get {
                return this.privilegeClubField;
            }
            set {
                this.privilegeClubField = value;
            }
        }
        
        /// <remarks/>
        public string PrivilegeClubCode {
            get {
                return this.privilegeClubCodeField;
            }
            set {
                this.privilegeClubCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PrivilegeClubDesc {
            get {
                return this.privilegeClubDescField;
            }
            set {
                this.privilegeClubDescField = value;
            }
        }
        
        /// <remarks/>
        public bool HasDiscount {
            get {
                return this.hasDiscountField;
            }
            set {
                this.hasDiscountField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet CustomerAddresses {
            get {
                return this.customerAddressesField;
            }
            set {
                this.customerAddressesField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet CustomerSearch {
            get {
                return this.customerSearchField;
            }
            set {
                this.customerSearchField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServerDate {
            get {
                return this.serverDateField;
            }
            set {
                this.serverDateField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet AgreementData {
            get {
                return this.agreementDataField;
            }
            set {
                this.agreementDataField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet TermsTypeDetails {
            get {
                return this.termsTypeDetailsField;
            }
            set {
                this.termsTypeDetailsField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet TransactionsData {
            get {
                return this.transactionsDataField;
            }
            set {
                this.transactionsDataField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet RFCombinedDetails {
            get {
                return this.rFCombinedDetailsField;
            }
            set {
                this.rFCombinedDetailsField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet DeliveriesData {
            get {
                return this.deliveriesDataField;
            }
            set {
                this.deliveriesDataField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet PaymentAccounts {
            get {
                return this.paymentAccountsField;
            }
            set {
                this.paymentAccountsField = value;
            }
        }
        
        /// <remarks/>
        public decimal AddToValue {
            get {
                return this.addToValueField;
            }
            set {
                this.addToValueField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCancelled {
            get {
                return this.isCancelledField;
            }
            set {
                this.isCancelledField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ServiceRequestSummaryForAccount {
            get {
                return this.serviceRequestSummaryForAccountField;
            }
            set {
                this.serviceRequestSummaryForAccountField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerPhoto {
            get {
                return this.customerPhotoField;
            }
            set {
                this.customerPhotoField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerSignature {
            get {
                return this.customerSignatureField;
            }
            set {
                this.customerSignatureField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet LetterByAcctNo {
            get {
                return this.letterByAcctNoField;
            }
            set {
                this.letterByAcctNoField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet StatusForAccount {
            get {
                return this.statusForAccountField;
            }
            set {
                this.statusForAccountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class CashLoanDisbursementDetailsView {
        
        private string customerIdField;
        
        private string customerNameField;
        
        private string customerAddress1Field;
        
        private string customerAddress2Field;
        
        private string customerAddress3Field;
        
        private string customerPostCodeField;
        
        private string customerEmailField;
        
        private string customerTelephoneNumberField;
        
        private string accountNumberField;
        
        private System.Nullable<decimal> loanAmountField;
        
        private string bankNameField;
        
        private string bankBranchField;
        
        private string bankAccountTypeField;
        
        private string bankAccountNumberField;
        
        private string bankReferenceNoField;
        
        private string bankAccountNameField;
        
        private string notesField;
        
        private int employeeDisburseEmpeenoField;
        
        private string employeeDisburseFullNameField;
        
        private string disbursementTypeField;
        
        private string bankTransferNumberField;
        
        private System.Nullable<System.DateTime> bankTransferDateField;
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAddress1 {
            get {
                return this.customerAddress1Field;
            }
            set {
                this.customerAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAddress2 {
            get {
                return this.customerAddress2Field;
            }
            set {
                this.customerAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAddress3 {
            get {
                return this.customerAddress3Field;
            }
            set {
                this.customerAddress3Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomerPostCode {
            get {
                return this.customerPostCodeField;
            }
            set {
                this.customerPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerEmail {
            get {
                return this.customerEmailField;
            }
            set {
                this.customerEmailField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerTelephoneNumber {
            get {
                return this.customerTelephoneNumberField;
            }
            set {
                this.customerTelephoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> LoanAmount {
            get {
                return this.loanAmountField;
            }
            set {
                this.loanAmountField = value;
            }
        }
        
        /// <remarks/>
        public string BankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        public string BankBranch {
            get {
                return this.bankBranchField;
            }
            set {
                this.bankBranchField = value;
            }
        }
        
        /// <remarks/>
        public string BankAccountType {
            get {
                return this.bankAccountTypeField;
            }
            set {
                this.bankAccountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BankAccountNumber {
            get {
                return this.bankAccountNumberField;
            }
            set {
                this.bankAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string BankReferenceNo {
            get {
                return this.bankReferenceNoField;
            }
            set {
                this.bankReferenceNoField = value;
            }
        }
        
        /// <remarks/>
        public string BankAccountName {
            get {
                return this.bankAccountNameField;
            }
            set {
                this.bankAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int EmployeeDisburseEmpeeno {
            get {
                return this.employeeDisburseEmpeenoField;
            }
            set {
                this.employeeDisburseEmpeenoField = value;
            }
        }
        
        /// <remarks/>
        public string EmployeeDisburseFullName {
            get {
                return this.employeeDisburseFullNameField;
            }
            set {
                this.employeeDisburseFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisbursementType {
            get {
                return this.disbursementTypeField;
            }
            set {
                this.disbursementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BankTransferNumber {
            get {
                return this.bankTransferNumberField;
            }
            set {
                this.bankTransferNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BankTransferDate {
            get {
                return this.bankTransferDateField;
            }
            set {
                this.bankTransferDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class SalesCommissionDetails {
        
        private System.Data.DataTable salesCommissionsField;
        
        private System.Nullable<decimal> totalCommissionField;
        
        private System.Nullable<decimal> totalCommissionableValueField;
        
        private System.Nullable<decimal> totalProductCommissionValueField;
        
        private System.Nullable<decimal> totalTermsTypesCommissionValueField;
        
        private System.Nullable<decimal> totalWarrantyCommissionValueField;
        
        /// <remarks/>
        public System.Data.DataTable SalesCommissions {
            get {
                return this.salesCommissionsField;
            }
            set {
                this.salesCommissionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TotalCommission {
            get {
                return this.totalCommissionField;
            }
            set {
                this.totalCommissionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TotalCommissionableValue {
            get {
                return this.totalCommissionableValueField;
            }
            set {
                this.totalCommissionableValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TotalProductCommissionValue {
            get {
                return this.totalProductCommissionValueField;
            }
            set {
                this.totalProductCommissionValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TotalTermsTypesCommissionValue {
            get {
                return this.totalTermsTypesCommissionValueField;
            }
            set {
                this.totalTermsTypesCommissionValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TotalWarrantyCommissionValue {
            get {
                return this.totalWarrantyCommissionValueField;
            }
            set {
                this.totalWarrantyCommissionValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class OnlineProductSearchRequest {
        
        private string locationField;
        
        private short categoryField;
        
        private string onlineField;
        
        private System.DateTime dateAddedField;
        
        private System.DateTime dateRemovedField;
        
        private string productDesctionField;
        
        private bool limitField;
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public short Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string Online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateRemoved {
            get {
                return this.dateRemovedField;
            }
            set {
                this.dateRemovedField = value;
            }
        }
        
        /// <remarks/>
        public string ProductDesction {
            get {
                return this.productDesctionField;
            }
            set {
                this.productDesctionField = value;
            }
        }
        
        /// <remarks/>
        public bool Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class CashLoanDisbursementDetails {
        
        private string accountNoField;
        
        private string custIdField;
        
        private decimal loanAmountField;
        
        private short disbursementTypeField;
        
        private string cardTypeField;
        
        private string chequeCardNoField;
        
        private string bankNameField;
        
        private string bankAccountTypeField;
        
        private string bankBranchField;
        
        private string bankAccountNoField;
        
        private string notesField;
        
        private string bankReferenceNoField;
        
        private string bankAccountNameField;
        
        /// <remarks/>
        public string accountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public string custId {
            get {
                return this.custIdField;
            }
            set {
                this.custIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal loanAmount {
            get {
                return this.loanAmountField;
            }
            set {
                this.loanAmountField = value;
            }
        }
        
        /// <remarks/>
        public short disbursementType {
            get {
                return this.disbursementTypeField;
            }
            set {
                this.disbursementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string cardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string chequeCardNo {
            get {
                return this.chequeCardNoField;
            }
            set {
                this.chequeCardNoField = value;
            }
        }
        
        /// <remarks/>
        public string bankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        public string bankAccountType {
            get {
                return this.bankAccountTypeField;
            }
            set {
                this.bankAccountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string bankBranch {
            get {
                return this.bankBranchField;
            }
            set {
                this.bankBranchField = value;
            }
        }
        
        /// <remarks/>
        public string bankAccountNo {
            get {
                return this.bankAccountNoField;
            }
            set {
                this.bankAccountNoField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string bankReferenceNo {
            get {
                return this.bankReferenceNoField;
            }
            set {
                this.bankReferenceNoField = value;
            }
        }
        
        /// <remarks/>
        public string bankAccountName {
            get {
                return this.bankAccountNameField;
            }
            set {
                this.bankAccountNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class CashLoanDetails {
        
        private decimal loanAmountField;
        
        private int termField;
        
        private decimal instalmentField;
        
        private decimal finInstalField;
        
        private decimal serviceChgField;
        
        private decimal insuranceChgField;
        
        private decimal adminChgField;
        
        private decimal agreementTotalField;
        
        private string accountNoField;
        
        private string custIdField;
        
        private string termsTypeField;
        
        private string scoreBandField;
        
        private decimal taxRateField;
        
        private decimal insuranceTaxField;
        
        private decimal adminTaxField;
        
        private string loanStatusField;
        
        private string custNameField;
        
        private System.Nullable<int> empeenoAcceptField;
        
        private System.Nullable<int> empeenoDisburseField;
        
        private int transrefnoField;
        
        private decimal outstBalField;
        
        private System.DateTime firstInstalDateField;
        
        private System.DateTime datepropField;
        
        private string unclearStageField;
        
        private System.Nullable<System.DateTime> datePrintedField;
        
        private string referralReasonsField;
        
        private decimal stampDutyField;
        
        private string cashLoanPurposeField;
        
        private bool waiveAdminChargeField;
        
        private System.Nullable<int> empeenoAdminChargeWaivedField;
        
        private System.Nullable<int> empeenoLoanAmountChangedField;
        
        private string bankField;
        
        private string bankAccountTypeField;
        
        private string bankBranchField;
        
        private string bankAccountNoField;
        
        private string notesField;
        
        private string bankReferenceNumberField;
        
        private string bankAccountNameField;
        
        /// <remarks/>
        public decimal loanAmount {
            get {
                return this.loanAmountField;
            }
            set {
                this.loanAmountField = value;
            }
        }
        
        /// <remarks/>
        public int term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
        
        /// <remarks/>
        public decimal instalment {
            get {
                return this.instalmentField;
            }
            set {
                this.instalmentField = value;
            }
        }
        
        /// <remarks/>
        public decimal finInstal {
            get {
                return this.finInstalField;
            }
            set {
                this.finInstalField = value;
            }
        }
        
        /// <remarks/>
        public decimal serviceChg {
            get {
                return this.serviceChgField;
            }
            set {
                this.serviceChgField = value;
            }
        }
        
        /// <remarks/>
        public decimal insuranceChg {
            get {
                return this.insuranceChgField;
            }
            set {
                this.insuranceChgField = value;
            }
        }
        
        /// <remarks/>
        public decimal adminChg {
            get {
                return this.adminChgField;
            }
            set {
                this.adminChgField = value;
            }
        }
        
        /// <remarks/>
        public decimal agreementTotal {
            get {
                return this.agreementTotalField;
            }
            set {
                this.agreementTotalField = value;
            }
        }
        
        /// <remarks/>
        public string accountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public string custId {
            get {
                return this.custIdField;
            }
            set {
                this.custIdField = value;
            }
        }
        
        /// <remarks/>
        public string termsType {
            get {
                return this.termsTypeField;
            }
            set {
                this.termsTypeField = value;
            }
        }
        
        /// <remarks/>
        public string scoreBand {
            get {
                return this.scoreBandField;
            }
            set {
                this.scoreBandField = value;
            }
        }
        
        /// <remarks/>
        public decimal taxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal insuranceTax {
            get {
                return this.insuranceTaxField;
            }
            set {
                this.insuranceTaxField = value;
            }
        }
        
        /// <remarks/>
        public decimal adminTax {
            get {
                return this.adminTaxField;
            }
            set {
                this.adminTaxField = value;
            }
        }
        
        /// <remarks/>
        public string loanStatus {
            get {
                return this.loanStatusField;
            }
            set {
                this.loanStatusField = value;
            }
        }
        
        /// <remarks/>
        public string custName {
            get {
                return this.custNameField;
            }
            set {
                this.custNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> empeenoAccept {
            get {
                return this.empeenoAcceptField;
            }
            set {
                this.empeenoAcceptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> empeenoDisburse {
            get {
                return this.empeenoDisburseField;
            }
            set {
                this.empeenoDisburseField = value;
            }
        }
        
        /// <remarks/>
        public int transrefno {
            get {
                return this.transrefnoField;
            }
            set {
                this.transrefnoField = value;
            }
        }
        
        /// <remarks/>
        public decimal outstBal {
            get {
                return this.outstBalField;
            }
            set {
                this.outstBalField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime firstInstalDate {
            get {
                return this.firstInstalDateField;
            }
            set {
                this.firstInstalDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateprop {
            get {
                return this.datepropField;
            }
            set {
                this.datepropField = value;
            }
        }
        
        /// <remarks/>
        public string unclearStage {
            get {
                return this.unclearStageField;
            }
            set {
                this.unclearStageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> datePrinted {
            get {
                return this.datePrintedField;
            }
            set {
                this.datePrintedField = value;
            }
        }
        
        /// <remarks/>
        public string referralReasons {
            get {
                return this.referralReasonsField;
            }
            set {
                this.referralReasonsField = value;
            }
        }
        
        /// <remarks/>
        public decimal stampDuty {
            get {
                return this.stampDutyField;
            }
            set {
                this.stampDutyField = value;
            }
        }
        
        /// <remarks/>
        public string cashLoanPurpose {
            get {
                return this.cashLoanPurposeField;
            }
            set {
                this.cashLoanPurposeField = value;
            }
        }
        
        /// <remarks/>
        public bool waiveAdminCharge {
            get {
                return this.waiveAdminChargeField;
            }
            set {
                this.waiveAdminChargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> empeenoAdminChargeWaived {
            get {
                return this.empeenoAdminChargeWaivedField;
            }
            set {
                this.empeenoAdminChargeWaivedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> empeenoLoanAmountChanged {
            get {
                return this.empeenoLoanAmountChangedField;
            }
            set {
                this.empeenoLoanAmountChangedField = value;
            }
        }
        
        /// <remarks/>
        public string Bank {
            get {
                return this.bankField;
            }
            set {
                this.bankField = value;
            }
        }
        
        /// <remarks/>
        public string BankAccountType {
            get {
                return this.bankAccountTypeField;
            }
            set {
                this.bankAccountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BankBranch {
            get {
                return this.bankBranchField;
            }
            set {
                this.bankBranchField = value;
            }
        }
        
        /// <remarks/>
        public string BankAccountNo {
            get {
                return this.bankAccountNoField;
            }
            set {
                this.bankAccountNoField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string BankReferenceNumber {
            get {
                return this.bankReferenceNumberField;
            }
            set {
                this.bankReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string BankAccountName {
            get {
                return this.bankAccountNameField;
            }
            set {
                this.bankAccountNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreditParameters))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class SaveNewAccountCreditParameters {
        
        private string accountNumberField;
        
        private string newAccountNumberField;
        
        private string customerIDField;
        
        private string checkTypeField;
        
        private System.DateTime datePropField;
        
        private string propResultField;
        
        private int userField;
        
        private string accountTypeField;
        
        private bool isLoanField;
        
        private bool sPAPrintField;
        
        private decimal agreementTotalField;
        
        private decimal depositField;
        
        private string termsTypeField;
        
        private string approvedField;
        
        private System.DateTime dateAccountOpenedField;
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string NewAccountNumber {
            get {
                return this.newAccountNumberField;
            }
            set {
                this.newAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string CheckType {
            get {
                return this.checkTypeField;
            }
            set {
                this.checkTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateProp {
            get {
                return this.datePropField;
            }
            set {
                this.datePropField = value;
            }
        }
        
        /// <remarks/>
        public string PropResult {
            get {
                return this.propResultField;
            }
            set {
                this.propResultField = value;
            }
        }
        
        /// <remarks/>
        public int User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLoan {
            get {
                return this.isLoanField;
            }
            set {
                this.isLoanField = value;
            }
        }
        
        /// <remarks/>
        public bool SPAPrint {
            get {
                return this.sPAPrintField;
            }
            set {
                this.sPAPrintField = value;
            }
        }
        
        /// <remarks/>
        public decimal AgreementTotal {
            get {
                return this.agreementTotalField;
            }
            set {
                this.agreementTotalField = value;
            }
        }
        
        /// <remarks/>
        public decimal Deposit {
            get {
                return this.depositField;
            }
            set {
                this.depositField = value;
            }
        }
        
        /// <remarks/>
        public string TermsType {
            get {
                return this.termsTypeField;
            }
            set {
                this.termsTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAccountOpened {
            get {
                return this.dateAccountOpenedField;
            }
            set {
                this.dateAccountOpenedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class CreditParameters : SaveNewAccountCreditParameters {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class BranchDefaultPrintLocation {
        
        private int bnField;
        
        private int dplField;
        
        /// <remarks/>
        public int bn {
            get {
                return this.bnField;
            }
            set {
                this.bnField = value;
            }
        }
        
        /// <remarks/>
        public int dpl {
            get {
                return this.dplField;
            }
            set {
                this.dplField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class OrderLineDetail {
        
        private string acctNoField;
        
        private System.Nullable<int> orderNoField;
        
        private System.Nullable<System.DateTime> orderedDateField;
        
        private string tranClassField;
        
        private System.Nullable<int> salesPersonIdField;
        
        private string salesPersonNameField;
        
        private System.Nullable<int> lineNumberField;
        
        private string itemNoField;
        
        private string itemDescField;
        
        private System.Nullable<decimal> orderedQtyField;
        
        private System.Nullable<decimal> unitPriceField;
        
        private string uOMField;
        
        private System.Nullable<decimal> lineAmountField;
        
        private string taxFlagField;
        
        private string taxCodeField;
        
        private System.Nullable<decimal> taxRateField;
        
        private string statusFlagField;
        
        private string cancelReasonField;
        
        private string returnReasonField;
        
        private System.Nullable<int> deliveryNumberField;
        
        private System.Nullable<System.DateTime> deliveredDateField;
        
        private System.Nullable<decimal> deliveredQtyField;
        
        private string deliveredFromLocnField;
        
        private System.Nullable<System.DateTime> dropOffTimeField;
        
        private System.Nullable<System.DateTime> pickUpTimeField;
        
        private System.Nullable<decimal> freightChargeField;
        
        private string freightCarrierField;
        
        private string deliveryCommentsField;
        
        private System.Nullable<System.DateTime> scheduledDelDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AcctNo {
            get {
                return this.acctNoField;
            }
            set {
                this.acctNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OrderNo {
            get {
                return this.orderNoField;
            }
            set {
                this.orderNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> OrderedDate {
            get {
                return this.orderedDateField;
            }
            set {
                this.orderedDateField = value;
            }
        }
        
        /// <remarks/>
        public string TranClass {
            get {
                return this.tranClassField;
            }
            set {
                this.tranClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SalesPersonId {
            get {
                return this.salesPersonIdField;
            }
            set {
                this.salesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SalesPersonName {
            get {
                return this.salesPersonNameField;
            }
            set {
                this.salesPersonNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LineNumber {
            get {
                return this.lineNumberField;
            }
            set {
                this.lineNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemDesc {
            get {
                return this.itemDescField;
            }
            set {
                this.itemDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> OrderedQty {
            get {
                return this.orderedQtyField;
            }
            set {
                this.orderedQtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public string UOM {
            get {
                return this.uOMField;
            }
            set {
                this.uOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> LineAmount {
            get {
                return this.lineAmountField;
            }
            set {
                this.lineAmountField = value;
            }
        }
        
        /// <remarks/>
        public string TaxFlag {
            get {
                return this.taxFlagField;
            }
            set {
                this.taxFlagField = value;
            }
        }
        
        /// <remarks/>
        public string TaxCode {
            get {
                return this.taxCodeField;
            }
            set {
                this.taxCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TaxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        public string StatusFlag {
            get {
                return this.statusFlagField;
            }
            set {
                this.statusFlagField = value;
            }
        }
        
        /// <remarks/>
        public string CancelReason {
            get {
                return this.cancelReasonField;
            }
            set {
                this.cancelReasonField = value;
            }
        }
        
        /// <remarks/>
        public string ReturnReason {
            get {
                return this.returnReasonField;
            }
            set {
                this.returnReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DeliveryNumber {
            get {
                return this.deliveryNumberField;
            }
            set {
                this.deliveryNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DeliveredDate {
            get {
                return this.deliveredDateField;
            }
            set {
                this.deliveredDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> DeliveredQty {
            get {
                return this.deliveredQtyField;
            }
            set {
                this.deliveredQtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeliveredFromLocn {
            get {
                return this.deliveredFromLocnField;
            }
            set {
                this.deliveredFromLocnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DropOffTime {
            get {
                return this.dropOffTimeField;
            }
            set {
                this.dropOffTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PickUpTime {
            get {
                return this.pickUpTimeField;
            }
            set {
                this.pickUpTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> FreightCharge {
            get {
                return this.freightChargeField;
            }
            set {
                this.freightChargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FreightCarrier {
            get {
                return this.freightCarrierField;
            }
            set {
                this.freightCarrierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeliveryComments {
            get {
                return this.deliveryCommentsField;
            }
            set {
                this.deliveryCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ScheduledDelDate {
            get {
                return this.scheduledDelDateField;
            }
            set {
                this.scheduledDelDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class SalesOrder {
        
        private string custIdField;
        
        private string acctNoField;
        
        private System.Nullable<int> orderNoField;
        
        private System.Nullable<int> payTermField;
        
        private string orderTypeField;
        
        private string payMethodField;
        
        private string branchNoField;
        
        private string billToAddrField;
        
        private string shipToAddrField;
        
        private string salesChannelField;
        
        private System.Nullable<System.DateTime> interfacedDateField;
        
        private OrderLineDetail[] orderLineListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustId {
            get {
                return this.custIdField;
            }
            set {
                this.custIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AcctNo {
            get {
                return this.acctNoField;
            }
            set {
                this.acctNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OrderNo {
            get {
                return this.orderNoField;
            }
            set {
                this.orderNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PayTerm {
            get {
                return this.payTermField;
            }
            set {
                this.payTermField = value;
            }
        }
        
        /// <remarks/>
        public string OrderType {
            get {
                return this.orderTypeField;
            }
            set {
                this.orderTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PayMethod {
            get {
                return this.payMethodField;
            }
            set {
                this.payMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchNo {
            get {
                return this.branchNoField;
            }
            set {
                this.branchNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BillToAddr {
            get {
                return this.billToAddrField;
            }
            set {
                this.billToAddrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShipToAddr {
            get {
                return this.shipToAddrField;
            }
            set {
                this.shipToAddrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SalesChannel {
            get {
                return this.salesChannelField;
            }
            set {
                this.salesChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InterfacedDate {
            get {
                return this.interfacedDateField;
            }
            set {
                this.interfacedDateField = value;
            }
        }
        
        /// <remarks/>
        public OrderLineDetail[] OrderLineList {
            get {
                return this.orderLineListField;
            }
            set {
                this.orderLineListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class OutboundDataContainer {
        
        private int runNoField;
        
        private Customer[] customerListField;
        
        private Receipt[] receiptListField;
        
        private ARInvoice[] aRInvoiceListField;
        
        private SalesOrder[] salesOrderListField;
        
        /// <remarks/>
        public int RunNo {
            get {
                return this.runNoField;
            }
            set {
                this.runNoField = value;
            }
        }
        
        /// <remarks/>
        public Customer[] CustomerList {
            get {
                return this.customerListField;
            }
            set {
                this.customerListField = value;
            }
        }
        
        /// <remarks/>
        public Receipt[] ReceiptList {
            get {
                return this.receiptListField;
            }
            set {
                this.receiptListField = value;
            }
        }
        
        /// <remarks/>
        public ARInvoice[] ARInvoiceList {
            get {
                return this.aRInvoiceListField;
            }
            set {
                this.aRInvoiceListField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrder[] SalesOrderList {
            get {
                return this.salesOrderListField;
            }
            set {
                this.salesOrderListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class Customer {
        
        private string customerNameField;
        
        private string custType1Field;
        
        private string titleField;
        
        private string custidField;
        
        private string acctnoField;
        
        private string firstNameField;
        
        private string nameField;
        
        private string custType2Field;
        
        private string custClassField;
        
        private string custCatField;
        
        private string homeTelnoField;
        
        private string emailField;
        
        private string passportField;
        
        private int empeenoField;
        
        private string billAddr1Field;
        
        private string billAddr2Field;
        
        private string billAddr3Field;
        
        private string billCityField;
        
        private string billPostCodeField;
        
        private string billCountryField;
        
        private int billAdrRefField;
        
        private string shipAddr1Field;
        
        private string shipAddr2Field;
        
        private string shipAddr3Field;
        
        private string shipCityField;
        
        private string shipPostCodeField;
        
        private string shipCountryField;
        
        private int shipAdrRefField;
        
        private string mobileTelnoField;
        
        private string workTelNoField;
        
        private int runNoField;
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustType1 {
            get {
                return this.custType1Field;
            }
            set {
                this.custType1Field = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Custid {
            get {
                return this.custidField;
            }
            set {
                this.custidField = value;
            }
        }
        
        /// <remarks/>
        public string Acctno {
            get {
                return this.acctnoField;
            }
            set {
                this.acctnoField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CustType2 {
            get {
                return this.custType2Field;
            }
            set {
                this.custType2Field = value;
            }
        }
        
        /// <remarks/>
        public string CustClass {
            get {
                return this.custClassField;
            }
            set {
                this.custClassField = value;
            }
        }
        
        /// <remarks/>
        public string CustCat {
            get {
                return this.custCatField;
            }
            set {
                this.custCatField = value;
            }
        }
        
        /// <remarks/>
        public string HomeTelno {
            get {
                return this.homeTelnoField;
            }
            set {
                this.homeTelnoField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Passport {
            get {
                return this.passportField;
            }
            set {
                this.passportField = value;
            }
        }
        
        /// <remarks/>
        public int empeeno {
            get {
                return this.empeenoField;
            }
            set {
                this.empeenoField = value;
            }
        }
        
        /// <remarks/>
        public string BillAddr1 {
            get {
                return this.billAddr1Field;
            }
            set {
                this.billAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string BillAddr2 {
            get {
                return this.billAddr2Field;
            }
            set {
                this.billAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string BillAddr3 {
            get {
                return this.billAddr3Field;
            }
            set {
                this.billAddr3Field = value;
            }
        }
        
        /// <remarks/>
        public string BillCity {
            get {
                return this.billCityField;
            }
            set {
                this.billCityField = value;
            }
        }
        
        /// <remarks/>
        public string BillPostCode {
            get {
                return this.billPostCodeField;
            }
            set {
                this.billPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BillCountry {
            get {
                return this.billCountryField;
            }
            set {
                this.billCountryField = value;
            }
        }
        
        /// <remarks/>
        public int BillAdrRef {
            get {
                return this.billAdrRefField;
            }
            set {
                this.billAdrRefField = value;
            }
        }
        
        /// <remarks/>
        public string ShipAddr1 {
            get {
                return this.shipAddr1Field;
            }
            set {
                this.shipAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipAddr2 {
            get {
                return this.shipAddr2Field;
            }
            set {
                this.shipAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipAddr3 {
            get {
                return this.shipAddr3Field;
            }
            set {
                this.shipAddr3Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipCity {
            get {
                return this.shipCityField;
            }
            set {
                this.shipCityField = value;
            }
        }
        
        /// <remarks/>
        public string ShipPostCode {
            get {
                return this.shipPostCodeField;
            }
            set {
                this.shipPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShipCountry {
            get {
                return this.shipCountryField;
            }
            set {
                this.shipCountryField = value;
            }
        }
        
        /// <remarks/>
        public int ShipAdrRef {
            get {
                return this.shipAdrRefField;
            }
            set {
                this.shipAdrRefField = value;
            }
        }
        
        /// <remarks/>
        public string MobileTelno {
            get {
                return this.mobileTelnoField;
            }
            set {
                this.mobileTelnoField = value;
            }
        }
        
        /// <remarks/>
        public string WorkTelNo {
            get {
                return this.workTelNoField;
            }
            set {
                this.workTelNoField = value;
            }
        }
        
        /// <remarks/>
        public int RunNo {
            get {
                return this.runNoField;
            }
            set {
                this.runNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class Receipt {
        
        private string receiptNoField;
        
        private System.DateTime receiptDateField;
        
        private string currencyCodeField;
        
        private string custidField;
        
        private string acctnoField;
        
        private decimal receiptAmountField;
        
        private string invoiceReferenceField;
        
        private decimal appliedAmountField;
        
        private string cosacsUserField;
        
        private string payMethodField;
        
        private string tranTypeField;
        
        private string chq_CredCardField;
        
        private string banknameField;
        
        private int runNoField;
        
        private string oracleReceiptNoField;
        
        /// <remarks/>
        public string ReceiptNo {
            get {
                return this.receiptNoField;
            }
            set {
                this.receiptNoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReceiptDate {
            get {
                return this.receiptDateField;
            }
            set {
                this.receiptDateField = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Custid {
            get {
                return this.custidField;
            }
            set {
                this.custidField = value;
            }
        }
        
        /// <remarks/>
        public string Acctno {
            get {
                return this.acctnoField;
            }
            set {
                this.acctnoField = value;
            }
        }
        
        /// <remarks/>
        public decimal ReceiptAmount {
            get {
                return this.receiptAmountField;
            }
            set {
                this.receiptAmountField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceReference {
            get {
                return this.invoiceReferenceField;
            }
            set {
                this.invoiceReferenceField = value;
            }
        }
        
        /// <remarks/>
        public decimal AppliedAmount {
            get {
                return this.appliedAmountField;
            }
            set {
                this.appliedAmountField = value;
            }
        }
        
        /// <remarks/>
        public string CosacsUser {
            get {
                return this.cosacsUserField;
            }
            set {
                this.cosacsUserField = value;
            }
        }
        
        /// <remarks/>
        public string PayMethod {
            get {
                return this.payMethodField;
            }
            set {
                this.payMethodField = value;
            }
        }
        
        /// <remarks/>
        public string TranType {
            get {
                return this.tranTypeField;
            }
            set {
                this.tranTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Chq_CredCard {
            get {
                return this.chq_CredCardField;
            }
            set {
                this.chq_CredCardField = value;
            }
        }
        
        /// <remarks/>
        public string Bankname {
            get {
                return this.banknameField;
            }
            set {
                this.banknameField = value;
            }
        }
        
        /// <remarks/>
        public int RunNo {
            get {
                return this.runNoField;
            }
            set {
                this.runNoField = value;
            }
        }
        
        /// <remarks/>
        public string OracleReceiptNo {
            get {
                return this.oracleReceiptNoField;
            }
            set {
                this.oracleReceiptNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class ARInvoice {
        
        private ARInvoiceHeader invoiceHeaderField;
        
        private ARInvoiceLine[] invoiceLineField;
        
        /// <remarks/>
        public ARInvoiceHeader InvoiceHeader {
            get {
                return this.invoiceHeaderField;
            }
            set {
                this.invoiceHeaderField = value;
            }
        }
        
        /// <remarks/>
        public ARInvoiceLine[] InvoiceLine {
            get {
                return this.invoiceLineField;
            }
            set {
                this.invoiceLineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class ARInvoiceHeader {
        
        private string tranTypeField;
        
        private string tranClassField;
        
        private System.DateTime tranDateField;
        
        private System.DateTime gLDateField;
        
        private System.DateTime delDateField;
        
        private int empeenosaleField;
        
        private string invoicereferenceField;
        
        private string credInvRefField;
        
        private int payTermField;
        
        private string salesPersonField;
        
        private string customerIdField;
        
        private string acctNoField;
        
        private int billAdrRefField;
        
        private int shipAdrRefField;
        
        private int branchNoField;
        
        private int runNoField;
        
        /// <remarks/>
        public string TranType {
            get {
                return this.tranTypeField;
            }
            set {
                this.tranTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TranClass {
            get {
                return this.tranClassField;
            }
            set {
                this.tranClassField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TranDate {
            get {
                return this.tranDateField;
            }
            set {
                this.tranDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime GLDate {
            get {
                return this.gLDateField;
            }
            set {
                this.gLDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DelDate {
            get {
                return this.delDateField;
            }
            set {
                this.delDateField = value;
            }
        }
        
        /// <remarks/>
        public int empeenosale {
            get {
                return this.empeenosaleField;
            }
            set {
                this.empeenosaleField = value;
            }
        }
        
        /// <remarks/>
        public string invoicereference {
            get {
                return this.invoicereferenceField;
            }
            set {
                this.invoicereferenceField = value;
            }
        }
        
        /// <remarks/>
        public string CredInvRef {
            get {
                return this.credInvRefField;
            }
            set {
                this.credInvRefField = value;
            }
        }
        
        /// <remarks/>
        public int PayTerm {
            get {
                return this.payTermField;
            }
            set {
                this.payTermField = value;
            }
        }
        
        /// <remarks/>
        public string SalesPerson {
            get {
                return this.salesPersonField;
            }
            set {
                this.salesPersonField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string AcctNo {
            get {
                return this.acctNoField;
            }
            set {
                this.acctNoField = value;
            }
        }
        
        /// <remarks/>
        public int BillAdrRef {
            get {
                return this.billAdrRefField;
            }
            set {
                this.billAdrRefField = value;
            }
        }
        
        /// <remarks/>
        public int ShipAdrRef {
            get {
                return this.shipAdrRefField;
            }
            set {
                this.shipAdrRefField = value;
            }
        }
        
        /// <remarks/>
        public int BranchNo {
            get {
                return this.branchNoField;
            }
            set {
                this.branchNoField = value;
            }
        }
        
        /// <remarks/>
        public int RunNo {
            get {
                return this.runNoField;
            }
            set {
                this.runNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class ARInvoiceLine {
        
        private string itemnoField;
        
        private string lineDescriptionField;
        
        private string uOMField;
        
        private double quantityField;
        
        private decimal unitPriceField;
        
        private decimal lineValueField;
        
        private string taxFlagField;
        
        private string taxCodeField;
        
        private decimal taxRateField;
        
        private string retItemNoField;
        
        private int lineRefField;
        
        private string accountCodeField;
        
        /// <remarks/>
        public string itemno {
            get {
                return this.itemnoField;
            }
            set {
                this.itemnoField = value;
            }
        }
        
        /// <remarks/>
        public string lineDescription {
            get {
                return this.lineDescriptionField;
            }
            set {
                this.lineDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string UOM {
            get {
                return this.uOMField;
            }
            set {
                this.uOMField = value;
            }
        }
        
        /// <remarks/>
        public double Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal LineValue {
            get {
                return this.lineValueField;
            }
            set {
                this.lineValueField = value;
            }
        }
        
        /// <remarks/>
        public string TaxFlag {
            get {
                return this.taxFlagField;
            }
            set {
                this.taxFlagField = value;
            }
        }
        
        /// <remarks/>
        public string TaxCode {
            get {
                return this.taxCodeField;
            }
            set {
                this.taxCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal TaxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        public string RetItemNo {
            get {
                return this.retItemNoField;
            }
            set {
                this.retItemNoField = value;
            }
        }
        
        /// <remarks/>
        public int LineRef {
            get {
                return this.lineRefField;
            }
            set {
                this.lineRefField = value;
            }
        }
        
        /// <remarks/>
        public string AccountCode {
            get {
                return this.accountCodeField;
            }
            set {
                this.accountCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class DataContainer {
        
        private Customer[] customersField;
        
        private ARInvoice[] invoiceField;
        
        private Receipt[] receiptsField;
        
        /// <remarks/>
        public Customer[] customers {
            get {
                return this.customersField;
            }
            set {
                this.customersField = value;
            }
        }
        
        /// <remarks/>
        public ARInvoice[] invoice {
            get {
                return this.invoiceField;
            }
            set {
                this.invoiceField = value;
            }
        }
        
        /// <remarks/>
        public Receipt[] receipts {
            get {
                return this.receiptsField;
            }
            set {
                this.receiptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void OracledataCompletedEventHandler(object sender, OracledataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OracledataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OracledataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InvoiceAccountsSearchCompletedEventHandler(object sender, InvoiceAccountsSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceAccountsSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvoiceAccountsSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteDeliveryNoteAndItemsCompletedEventHandler(object sender, DeleteDeliveryNoteAndItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeliveryNoteAndItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeliveryNoteAndItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool allItemsCollected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNonStockLinkedToDNItemsCompletedEventHandler(object sender, GetNonStockLinkedToDNItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonStockLinkedToDNItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonStockLinkedToDNItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOracleOutboundSalesOrderCompletedEventHandler(object sender, GetOracleOutboundSalesOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOracleOutboundSalesOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOracleOutboundSalesOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutboundDataContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutboundDataContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStockInfoCompletedEventHandler(object sender, UpdateStockInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStockPriceCompletedEventHandler(object sender, UpdateStockPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStockPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStockPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStockQuantityCompletedEventHandler(object sender, UpdateStockQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStockQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStockQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdatePromoPriceCompletedEventHandler(object sender, UpdatePromoPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePromoPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePromoPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdatePurchaseOrderCompletedEventHandler(object sender, UpdatePurchaseOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePurchaseOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePurchaseOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateWarrantyBandCompletedEventHandler(object sender, UpdateWarrantyBandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWarrantyBandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWarrantyBandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateFreightCarrierCompletedEventHandler(object sender, UpdateFreightCarrierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFreightCarrierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFreightCarrierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckCanReallocateCompletedEventHandler(object sender, CheckCanReallocateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCanReallocateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCanReallocateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int noCanAlloc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadDAHistoryCompletedEventHandler(object sender, LoadDAHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDAHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDAHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsPaidAndTakenAccountCompletedEventHandler(object sender, IsPaidAndTakenAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPaidAndTakenAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPaidAndTakenAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LockCheckbyAccountCompletedEventHandler(object sender, LockCheckbyAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockCheckbyAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockCheckbyAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashAndGoLastPayMethodCompletedEventHandler(object sender, GetCashAndGoLastPayMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashAndGoLastPayMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashAndGoLastPayMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBranchDefaultPrintLocationCompletedEventHandler(object sender, GetBranchDefaultPrintLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchDefaultPrintLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchDefaultPrintLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BranchDefaultPrintLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BranchDefaultPrintLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ProvisionGetForAccountCompletedEventHandler(object sender, ProvisionGetForAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProvisionGetForAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProvisionGetForAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void MaxActionCompletedEventHandler(object sender, MaxActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaxActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MaxActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckSRAcctCompletedEventHandler(object sender, CheckSRAcctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSRAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSRAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNonStockByCodeCompletedEventHandler(object sender, GetNonStockByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonStockByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonStockByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCategoriesCompletedEventHandler(object sender, GetCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveNonStockItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWarrantyReturnCodesCompletedEventHandler(object sender, GetWarrantyReturnCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantyReturnCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantyReturnCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveWarrantyReturnCodesCompletedEventHandler(object sender, SaveWarrantyReturnCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWarrantyReturnCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWarrantyReturnCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void NewAccountCreditSaveCompletedEventHandler(object sender, NewAccountCreditSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewAccountCreditSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewAccountCreditSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditParameters Parms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditParameters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllWarrantyItemsCompletedEventHandler(object sender, GetAllWarrantyItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllWarrantyItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllWarrantyItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccountLockingFindandLockForCallerCompletedEventHandler(object sender, AccountLockingFindandLockForCallerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountLockingFindandLockForCallerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountLockingFindandLockForCallerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsSRInstSpecialAccountCompletedEventHandler(object sender, IsSRInstSpecialAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSRInstSpecialAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSRInstSpecialAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsLatestAccountforCustomerCompletedEventHandler(object sender, IsLatestAccountforCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLatestAccountforCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLatestAccountforCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetReturnItemIDForItemCodeCompletedEventHandler(object sender, GetReturnItemIDForItemCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReturnItemIDForItemCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReturnItemIDForItemCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateCashLoanTermsCompletedEventHandler(object sender, CalculateCashLoanTermsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateCashLoanTermsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateCashLoanTermsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CashLoanDetails det {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CashLoanDetails)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CashLoanDeliverAccountCompletedEventHandler(object sender, CashLoanDeliverAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CashLoanDeliverAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CashLoanDeliverAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CashLoanDetails det {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CashLoanDetails)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CashLoanPromissoryNoteStatusCompletedEventHandler(object sender, CashLoanPromissoryNoteStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CashLoanPromissoryNoteStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CashLoanPromissoryNoteStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CashLoanDetails det {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CashLoanDetails)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PrintAuditCashAndGoCompletedEventHandler(object sender, PrintAuditCashAndGoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintAuditCashAndGoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintAuditCashAndGoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SubmitBookingFailureCompletedEventHandler(object sender, SubmitBookingFailureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBookingFailureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBookingFailureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelRedeliveryCompletedEventHandler(object sender, CancelRedeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelRedeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelRedeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void OnlineProductSearchCompletedEventHandler(object sender, OnlineProductSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnlineProductSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnlineProductSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReviseBookingFailureCompletedEventHandler(object sender, ReviseBookingFailureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReviseBookingFailureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReviseBookingFailureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InstantReplacementCollectionCompletedEventHandler(object sender, InstantReplacementCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstantReplacementCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstantReplacementCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsReadyAssistContractDateSetCompletedEventHandler(object sender, IsReadyAssistContractDateSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsReadyAssistContractDateSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsReadyAssistContractDateSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GeSalesCommissionDetailsCompletedEventHandler(object sender, GeSalesCommissionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeSalesCommissionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeSalesCommissionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesCommissionDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesCommissionDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBranchSalesCommissionDetailsCompletedEventHandler(object sender, GetBranchSalesCommissionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchSalesCommissionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchSalesCommissionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesCommissionDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesCommissionDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashLoanDisbursementDetailsCompletedEventHandler(object sender, GetCashLoanDisbursementDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashLoanDisbursementDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashLoanDisbursementDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CashLoanDisbursementDetailsView Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CashLoanDisbursementDetailsView)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCashLoanDisbursementBankTransferCompletedEventHandler(object sender, SaveCashLoanDisbursementBankTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCashLoanDisbursementBankTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCashLoanDisbursementBankTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateCashLoanBankDetailsCompletedEventHandler(object sender, UpdateCashLoanBankDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCashLoanBankDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCashLoanBankDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsItemScheduledCompletedEventHandler(object sender, IsItemScheduledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsItemScheduledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsItemScheduledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDiscountDeliveryMonthsCompletedEventHandler(object sender, GetDiscountDeliveryMonthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiscountDeliveryMonthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiscountDeliveryMonthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FormatWarrantyReturnCodeCompletedEventHandler(object sender, FormatWarrantyReturnCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormatWarrantyReturnCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormatWarrantyReturnCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllocatedCourtsPersonCompletedEventHandler(object sender, GetAllocatedCourtsPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllocatedCourtsPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllocatedCourtsPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int empNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string empType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string empName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckAccountToCancelCompletedEventHandler(object sender, CheckAccountToCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAccountToCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAccountToCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal outstBalance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool outstPayments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetScheduledForAccountCompletedEventHandler(object sender, GetScheduledForAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduledForAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduledForAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTranstypeByCodeCompletedEventHandler(object sender, GetTranstypeByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTranstypeByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTranstypeByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveTransTypeCompletedEventHandler(object sender, SaveTransTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTransTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTransTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateStatusCompletedEventHandler(object sender, UpdateStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatusForAccountCompletedEventHandler(object sender, GetStatusForAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusForAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusForAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetForWOReviewCompletedEventHandler(object sender, GetForWOReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForWOReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForWOReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AcceptForWOCompletedEventHandler(object sender, AcceptForWOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptForWOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptForWOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int accepted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SavePendingCompletedEventHandler(object sender, SavePendingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveRejectionCompletedEventHandler(object sender, SaveRejectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRejectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRejectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransactionsForTransferCompletedEventHandler(object sender, GetTransactionsForTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsForTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsForTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal availableTransfer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSundryCreditAccountCompletedEventHandler(object sender, GetSundryCreditAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSundryCreditAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSundryCreditAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TransferTransactionCompletedEventHandler(object sender, TransferTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSundryAccountTransactionTotalCompletedEventHandler(object sender, GetSundryAccountTransactionTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSundryAccountTransactionTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSundryAccountTransactionTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CanReverseOverageCompletedEventHandler(object sender, CanReverseOverageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanReverseOverageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanReverseOverageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOveragesAccountCompletedEventHandler(object sender, GetOveragesAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOveragesAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOveragesAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetReceivableAccountCompletedEventHandler(object sender, GetReceivableAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceivableAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceivableAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDefaultTermsTypeCompletedEventHandler(object sender, GetDefaultTermsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultTermsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultTermsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRebatesTotalCompletedEventHandler(object sender, GetRebatesTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRebatesTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRebatesTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRebatesAsAtCompletedEventHandler(object sender, GetRebatesAsAtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRebatesAsAtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRebatesAsAtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountStatusesCompletedEventHandler(object sender, GetAccountStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetInstalmentAccountsCompletedEventHandler(object sender, GetInstalmentAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstalmentAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstalmentAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateDateFirstCompletedEventHandler(object sender, UpdateDateFirstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDateFirstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDateFirstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsItemInstantReplacementCompletedEventHandler(object sender, IsItemInstantReplacementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsItemInstantReplacementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsItemInstantReplacementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ir {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountAuditDataCompletedEventHandler(object sender, GetAccountAuditDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountAuditDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountAuditDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsRepossessedCompletedEventHandler(object sender, IsRepossessedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRepossessedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRepossessedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateManualAccountCompletedEventHandler(object sender, CreateManualAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateManualAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateManualAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool rescore {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateManualRFAccountCompletedEventHandler(object sender, CreateManualRFAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateManualRFAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateManualRFAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool rescore {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDueDayCompletedEventHandler(object sender, GetDueDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDueDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDueDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetActivitySegmentsCompletedEventHandler(object sender, GetActivitySegmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivitySegmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivitySegmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateItemLocationCompletedEventHandler(object sender, UpdateItemLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateItemLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateItemLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelDeliveryNoteCompletedEventHandler(object sender, CancelDeliveryNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDeliveryNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDeliveryNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateRebateTotalsCompletedEventHandler(object sender, UpdateRebateTotalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRebateTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRebateTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal poRebate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal poRebateWithin12Mths {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal poRebateAfter12Mths {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemsForLocationChangeCompletedEventHandler(object sender, GetItemsForLocationChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsForLocationChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsForLocationChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetScheduledDelNoteCompletedEventHandler(object sender, GetScheduledDelNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduledDelNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduledDelNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool onPickList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool delNotePrinted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool onLoad {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsCancelledCompletedEventHandler(object sender, IsCancelledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCancelledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCancelledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReverseCancellationCompletedEventHandler(object sender, ReverseCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ManualCDVExistsCompletedEventHandler(object sender, ManualCDVExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualCDVExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualCDVExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPeriodEndDatesCompletedEventHandler(object sender, GetPeriodEndDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPeriodEndDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPeriodEndDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string nextPeriodEnd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRebateForecastReportsCompletedEventHandler(object sender, GetRebateForecastReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRebateForecastReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRebateForecastReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RunRebateForecastReportsCompletedEventHandler(object sender, RunRebateForecastReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunRebateForecastReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunRebateForecastReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsPaidAndTakenWarrantyCompletedEventHandler(object sender, IsPaidAndTakenWarrantyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPaidAndTakenWarrantyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPaidAndTakenWarrantyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBookingsCompletedEventHandler(object sender, GetBookingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBookingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBookingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDeliveryOrdersCompletedEventHandler(object sender, GetDeliveryOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime timeLocked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDeliveryNotesForAcctCompletedEventHandler(object sender, GetDeliveryNotesForAcctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryNotesForAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryNotesForAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime timeLocked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOutstandingDeliveriesCompletedEventHandler(object sender, GetOutstandingDeliveriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutstandingDeliveriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutstandingDeliveriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRelatedItemsCompletedEventHandler(object sender, GetRelatedItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelatedItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelatedItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWarrantyRenewalsCompletedEventHandler(object sender, GetWarrantyRenewalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantyRenewalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantyRenewalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWarrantyProductsByAccountCompletedEventHandler(object sender, GetWarrantyProductsByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantyProductsByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantyProductsByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddWarrantRenewalCodeCompletedEventHandler(object sender, AddWarrantRenewalCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWarrantRenewalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWarrantRenewalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadAllocationsForReprintCompletedEventHandler(object sender, LoadAllocationsForReprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllocationsForReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllocationsForReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadAllocationDetailsCompletedEventHandler(object sender, LoadAllocationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAllocationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAllocationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateAllocForReprintCompletedEventHandler(object sender, UpdateAllocForReprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAllocForReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAllocForReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRepossessedItemDetailsCompletedEventHandler(object sender, GetRepossessedItemDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepossessedItemDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepossessedItemDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNextPicklistNoCompletedEventHandler(object sender, GetNextPicklistNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextPicklistNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextPicklistNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int pickListNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeliveryNotesLoadByLoadNoCompletedEventHandler(object sender, DeliveryNotesLoadByLoadNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeliveryNotesLoadByLoadNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeliveryNotesLoadByLoadNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime minDelDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] acctExceedsAgr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChangeReqDeliveryDateCompletedEventHandler(object sender, ChangeReqDeliveryDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeReqDeliveryDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeReqDeliveryDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAcctNoCtrlCompletedEventHandler(object sender, GetAcctNoCtrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAcctNoCtrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAcctNoCtrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RemoveDeliveryNoteCompletedEventHandler(object sender, RemoveDeliveryNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDeliveryNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDeliveryNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RemoveLineItemCompletedEventHandler(object sender, RemoveLineItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLineItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveLineItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChangeItemQuantityCompletedEventHandler(object sender, ChangeItemQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeItemQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeItemQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveAcctNoCtrlCompletedEventHandler(object sender, SaveAcctNoCtrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAcctNoCtrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAcctNoCtrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ScheduleRedelRepoCompletedEventHandler(object sender, ScheduleRedelRepoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScheduleRedelRepoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScheduleRedelRepoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransportListCompletedEventHandler(object sender, GetTransportListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransportListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransportListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetScheduledLoadsCompletedEventHandler(object sender, GetScheduledLoadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduledLoadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduledLoadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemsInRegionCompletedEventHandler(object sender, GetItemsInRegionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsInRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsInRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPurchaseOrdersCompletedEventHandler(object sender, GetPurchaseOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPurchaseOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPurchaseOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetLoadContentsCompletedEventHandler(object sender, GetLoadContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoadContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoadContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TransportSchedAddCompletedEventHandler(object sender, TransportSchedAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransportSchedAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransportSchedAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeliveryScheduleUpdateCompletedEventHandler(object sender, DeliveryScheduleUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeliveryScheduleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeliveryScheduleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadAvailablePicklistsCompletedEventHandler(object sender, LoadAvailablePicklistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAvailablePicklistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAvailablePicklistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LockItemCompletedEventHandler(object sender, LockItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string lockString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UnlockItemCompletedEventHandler(object sender, UnlockItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveTransportCompletedEventHandler(object sender, SaveTransportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTransportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTransportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransportCompletedEventHandler(object sender, GetTransportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteTransportCompletedEventHandler(object sender, DeleteTransportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTransportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTransportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDeliveryScheduleDetailsCompletedEventHandler(object sender, GetDeliveryScheduleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryScheduleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryScheduleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RemoveLoadFromContentsCompletedEventHandler(object sender, RemoveLoadFromContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLoadFromContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveLoadFromContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPickListScheduleCompletedEventHandler(object sender, GetPickListScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickListScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickListScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccountGetAccountNoByBuffNoCompletedEventHandler(object sender, AccountGetAccountNoByBuffNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountGetAccountNoByBuffNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountGetAccountNoByBuffNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AuditReprintCompletedEventHandler(object sender, AuditReprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AuditDiscountCompletedEventHandler(object sender, AuditDiscountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SUCBGetDelTotalsCompletedEventHandler(object sender, SUCBGetDelTotalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SUCBGetDelTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SUCBGetDelTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal delTotal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SUCBGetDelDetailsCompletedEventHandler(object sender, SUCBGetDelDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SUCBGetDelDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SUCBGetDelDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetExchangeDetailsCompletedEventHandler(object sender, GetExchangeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsDotNetWarehouseCompletedEventHandler(object sender, IsDotNetWarehouseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDotNetWarehouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDotNetWarehouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsThirdPartyWarehouseCompletedEventHandler(object sender, IsThirdPartyWarehouseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsThirdPartyWarehouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsThirdPartyWarehouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDeliverySchedulesCompletedEventHandler(object sender, GetDeliverySchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliverySchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliverySchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime timeLocked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadAvailableTransPicklistsCompletedEventHandler(object sender, LoadAvailableTransPicklistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAvailableTransPicklistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAvailableTransPicklistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransPickListDetailsCompletedEventHandler(object sender, GetTransPickListDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransPickListDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransPickListDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRevisedSchedulesCompletedEventHandler(object sender, GetRevisedSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRevisedSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRevisedSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime timeLocked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRevisedScheduleDetailsCompletedEventHandler(object sender, GetRevisedScheduleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRevisedScheduleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRevisedScheduleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetRevisedScheduleChangesCompletedEventHandler(object sender, GetRevisedScheduleChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRevisedScheduleChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRevisedScheduleChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ConfirmScheduleChangesCompletedEventHandler(object sender, ConfirmScheduleChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmScheduleChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmScheduleChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAdditionalItemsCompletedEventHandler(object sender, GetAdditionalItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdditionalItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdditionalItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteDeliveryLoadCompletedEventHandler(object sender, DeleteDeliveryLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeliveryLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeliveryLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetGiroPendingCompletedEventHandler(object sender, GetGiroPendingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiroPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiroPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsWarrantyRenewalCompletedEventHandler(object sender, IsWarrantyRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsWarrantyRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsWarrantyRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ValidDecimalCompletedEventHandler(object sender, ValidDecimalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidDecimalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidDecimalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FincoBalancesCompletedEventHandler(object sender, FincoBalancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FincoBalancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FincoBalancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteSpiffCompletedEventHandler(object sender, DeleteSpiffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSpiffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSpiffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSpiffsCompletedEventHandler(object sender, GetSpiffsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpiffsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpiffsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void WarrantySalesReportCompletedEventHandler(object sender, WarrantySalesReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarrantySalesReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WarrantySalesReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FincoTransactionsCompletedEventHandler(object sender, FincoTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FincoTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FincoTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStoreTypeCompletedEventHandler(object sender, GetStoreTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InstantCreditCompletedEventHandler(object sender, InstantCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstantCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstantCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveInstantCreditFlagCompletedEventHandler(object sender, SaveInstantCreditFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveInstantCreditFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveInstantCreditFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AutoDACompletedEventHandler(object sender, AutoDACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoDACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoDACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadCollectionsByacctnoCompletedEventHandler(object sender, LoadCollectionsByacctnoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCollectionsByacctnoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCollectionsByacctnoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool strategyHasWorklists {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAgreementNoCompletedEventHandler(object sender, GetAgreementNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgreementNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgreementNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsGiftItemCompletedEventHandler(object sender, IsGiftItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsGiftItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsGiftItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetIRItemsCompletedEventHandler(object sender, GetIRItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIRItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIRItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsDiscountCompletedEventHandler(object sender, IsDiscountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddAdditionalSpiffCompletedEventHandler(object sender, AddAdditionalSpiffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAdditionalSpiffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAdditionalSpiffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveInsuranceWarrantyReturnsCompletedEventHandler(object sender, SaveInsuranceWarrantyReturnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveInsuranceWarrantyReturnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveInsuranceWarrantyReturnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWorklistAccountsCompletedEventHandler(object sender, GetWorklistAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorklistAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorklistAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWorklistAccountsDataCompletedEventHandler(object sender, GetWorklistAccountsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorklistAccountsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorklistAccountsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountHasBDWCompletedEventHandler(object sender, GetAccountHasBDWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountHasBDWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountHasBDWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccountScheduleExistsCompletedEventHandler(object sender, AccountScheduleExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountScheduleExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountScheduleExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccountStatusGetCompletedEventHandler(object sender, AccountStatusGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountStatusGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountStatusGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountDetailsDataCompletedEventHandler(object sender, GetAccountDetailsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDetailsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDetailsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountDetailsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDetailsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SPACalculateArrangementScheduleCompletedEventHandler(object sender, SPACalculateArrangementScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SPACalculateArrangementScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SPACalculateArrangementScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime finalPayDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UnarchiveUnsettleCompletedEventHandler(object sender, UnarchiveUnsettleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnarchiveUnsettleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnarchiveUnsettleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InvoicesCompletedEventHandler(object sender, InvoicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvoicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ARInvoice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ARInvoice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Receipt_1CompletedEventHandler(object sender, Receipt_1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receipt_1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Receipt_1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Receipt[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Receipt[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Customer_1CompletedEventHandler(object sender, Customer_1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Customer_1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Customer_1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCustomerStatementCompletedEventHandler(object sender, GetCustomerStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BBSCustomer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BBSCustomer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountStatementCompletedEventHandler(object sender, GetAccountStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BBSCustomer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BBSCustomer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountStatementLastTransactionsCompletedEventHandler(object sender, GetAccountStatementLastTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatementLastTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatementLastTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BBSCustomer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BBSCustomer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountsAwaitingClearanceCompletedEventHandler(object sender, GetAccountsAwaitingClearanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsAwaitingClearanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsAwaitingClearanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetInstantCreditAwaitingClearanceCompletedEventHandler(object sender, GetInstantCreditAwaitingClearanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstantCreditAwaitingClearanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstantCreditAwaitingClearanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetChargeableCashPriceCompletedEventHandler(object sender, GetChargeableCashPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargeableCashPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargeableCashPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal chargeableAdminPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetChargesByAcctNoCompletedEventHandler(object sender, GetChargesByAcctNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargesByAcctNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargesByAcctNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetArrearsDailyByAcctNoCompletedEventHandler(object sender, GetArrearsDailyByAcctNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArrearsDailyByAcctNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArrearsDailyByAcctNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUnpaidAccountsCompletedEventHandler(object sender, GetUnpaidAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnpaidAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnpaidAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetFinTransQueryResultsCompletedEventHandler(object sender, GetFinTransQueryResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinTransQueryResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinTransQueryResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ClearProposalCompletedEventHandler(object sender, ClearProposalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearProposalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearProposalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetHoldFlagsCompletedEventHandler(object sender, GetHoldFlagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHoldFlagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHoldFlagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetICFlagsCompletedEventHandler(object sender, GetICFlagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetICFlagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetICFlagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GenerateAccountNumberCompletedEventHandler(object sender, GenerateAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newAccountNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStockByLocationCompletedEventHandler(object sender, GetStockByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStockByCodeCompletedEventHandler(object sender, GetStockByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemDetailsCompletedEventHandler(object sender, GetItemDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LockAccountCompletedEventHandler(object sender, LockAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LockAccount1CompletedEventHandler(object sender, LockAccount1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockAccount1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockAccount1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UnlockAccountCompletedEventHandler(object sender, UnlockAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UnlockAccount1CompletedEventHandler(object sender, UnlockAccount1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockAccount1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockAccount1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductWarrantiesByCodeCompletedEventHandler(object sender, GetProductWarrantiesByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductWarrantiesByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductWarrantiesByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductWarrantiesCompletedEventHandler(object sender, GetProductWarrantiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductWarrantiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductWarrantiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddKitToAccountCompletedEventHandler(object sender, AddKitToAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddKitToAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddKitToAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccountsSearchCompletedEventHandler(object sender, AccountsSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountsSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountsSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int accountExists {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string accountType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IncompleteCreditsCompletedEventHandler(object sender, IncompleteCreditsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncompleteCreditsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncompleteCreditsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetFollowUpHistoryCompletedEventHandler(object sender, GetFollowUpHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFollowUpHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFollowUpHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Getacctsforalloc5_2CompletedEventHandler(object sender, Getacctsforalloc5_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Getacctsforalloc5_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Getacctsforalloc5_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool rowLimited {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetacctsforallocCompletedEventHandler(object sender, GetacctsforallocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetacctsforallocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetacctsforallocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool rowLimited {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStrategyAccountsToAllocateCompletedEventHandler(object sender, GetStrategyAccountsToAllocateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategyAccountsToAllocateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategyAccountsToAllocateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountDetailsCompletedEventHandler(object sender, GetAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateInstalPlanCompletedEventHandler(object sender, CalculateInstalPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateInstalPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateInstalPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal monthly {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal final {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateServiceChargeCompletedEventHandler(object sender, CalculateServiceChargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateServiceChargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateServiceChargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal insuranceCharge {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal adminCharge {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet variableRatesSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTermsTypeDetailsCompletedEventHandler(object sender, GetTermsTypeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTermsTypeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTermsTypeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TermsTypeGetDetailsCompletedEventHandler(object sender, TermsTypeGetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TermsTypeGetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TermsTypeGetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveNewAccountCompletedEventHandler(object sender, SaveNewAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveNewAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveNewAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int agreementNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string propResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dateProp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string bureauFailure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int storeCardTransRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string referralreasons {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountNameCompletedEventHandler(object sender, GetAccountNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCodesOnAccountCompletedEventHandler(object sender, GetCodesOnAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodesOnAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodesOnAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool noSuchAccount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddCodesToAccountCompletedEventHandler(object sender, AddCodesToAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCodesToAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCodesToAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddLetterToAccountCompletedEventHandler(object sender, AddLetterToAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLetterToAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLetterToAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAgreementCompletedEventHandler(object sender, GetAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetInvoiceAccountDetailsCompletedEventHandler(object sender, GetInvoiceAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoiceAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoiceAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountForRevisionCompletedEventHandler(object sender, GetAccountForRevisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountForRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountForRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string AccountBand {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string CustomerBand {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetLineItemsCompletedEventHandler(object sender, GetLineItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLineItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLineItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HasReturnsItensCompletedEventHandler(object sender, HasReturnsItensCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasReturnsItensCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasReturnsItensCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemsDeliveredAndScheduledCompletedEventHandler(object sender, GetItemsDeliveredAndScheduledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsDeliveredAndScheduledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsDeliveredAndScheduledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double delivered {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public double scheduled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool repo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetScheduledDeliveriesForItemCompletedEventHandler(object sender, GetScheduledDeliveriesForItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduledDeliveriesForItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduledDeliveriesForItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteDeliverySchedulesCompletedEventHandler(object sender, DeleteDeliverySchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeliverySchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeliverySchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Schedule_GetByBuffNoCompletedEventHandler(object sender, Schedule_GetByBuffNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Schedule_GetByBuffNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Schedule_GetByBuffNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Delivery_DeliverImmediatelyCompletedEventHandler(object sender, Delivery_DeliverImmediatelyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delivery_DeliverImmediatelyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delivery_DeliverImmediatelyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool allItemsCollected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Delivery_DeliverImmediatelyFailedCompletedEventHandler(object sender, Delivery_DeliverImmediatelyFailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delivery_DeliverImmediatelyFailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delivery_DeliverImmediatelyFailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeadlockTest1CompletedEventHandler(object sender, DeadlockTest1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeadlockTest1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeadlockTest1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeadlockTest2CompletedEventHandler(object sender, DeadlockTest2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeadlockTest2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeadlockTest2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteLineItemCompletedEventHandler(object sender, DeleteLineItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLineItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLineItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTransactionsCompletedEventHandler(object sender, GetTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetLinkedCustomerIDCompletedEventHandler(object sender, GetLinkedCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetLinkedCustomerIDbyTypeCompletedEventHandler(object sender, GetLinkedCustomerIDbyTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedCustomerIDbyTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedCustomerIDbyTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddCustomerToAccountCompletedEventHandler(object sender, AddCustomerToAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCustomerToAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCustomerToAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool rescore {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ValidateAccountNumberCompletedEventHandler(object sender, ValidateAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateRFAccountCompletedEventHandler(object sender, CreateRFAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRFAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRFAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CashLoanDetails det {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CashLoanDetails)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool rescore {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool reOpenS1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool reOpenS2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateCustomerAccountCompletedEventHandler(object sender, CreateCustomerAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool rescore {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateSalesTaxCompletedEventHandler(object sender, CalculateSalesTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateSalesTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateSalesTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal chargeableAdmin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal chargeable {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal taxWarrantyOnCredit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteWarrantyCompletedEventHandler(object sender, DeleteWarrantyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWarrantyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWarrantyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBranchAddressCompletedEventHandler(object sender, GetBranchAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelRFAccountCompletedEventHandler(object sender, CancelRFAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelRFAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelRFAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelAccountCompletedEventHandler(object sender, CancelAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ConvertRFToHPCompletedEventHandler(object sender, ConvertRFToHPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertRFToHPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertRFToHPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPaymentCardDetailsCompletedEventHandler(object sender, GetPaymentCardDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentCardDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentCardDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ClearFlagCompletedEventHandler(object sender, ClearFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPaidAndTakenAccountCompletedEventHandler(object sender, GetPaidAndTakenAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaidAndTakenAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaidAndTakenAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDeliveryNotesCompletedEventHandler(object sender, GetDeliveryNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int buffno {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet DeliveryNotes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDeliveryAccountsCompletedEventHandler(object sender, GetDeliveryAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeLocked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UnlockAccountsLockedAtCompletedEventHandler(object sender, UnlockAccountsLockedAtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockAccountsLockedAtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockAccountsLockedAtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveRepossArrearsCompletedEventHandler(object sender, SaveRepossArrearsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRepossArrearsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRepossArrearsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetReposessionAndRedeliveryCompletedEventHandler(object sender, GetReposessionAndRedeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReposessionAndRedeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReposessionAndRedeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveDeliveryCompletedEventHandler(object sender, SaveDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveScheduleCompletedEventHandler(object sender, SaveScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelCollectionNoteCompletedEventHandler(object sender, CancelCollectionNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelCollectionNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelCollectionNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateSchedulesCompletedEventHandler(object sender, UpdateSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateScheduleForPicklistCompletedEventHandler(object sender, UpdateScheduleForPicklistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateScheduleForPicklistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateScheduleForPicklistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ScheduleAssignNewBufferNoCompletedEventHandler(object sender, ScheduleAssignNewBufferNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScheduleAssignNewBufferNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScheduleAssignNewBufferNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetForRepoCompletedEventHandler(object sender, GetForRepoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForRepoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForRepoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string accountType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveItemsCompletedEventHandler(object sender, SaveItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveRepoDetailsCompletedEventHandler(object sender, SaveRepoDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRepoDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRepoDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemCountCompletedEventHandler(object sender, GetItemCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemsForAccountCompletedEventHandler(object sender, GetItemsForAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsForAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsForAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDeliveriesCompletedEventHandler(object sender, GetDeliveriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCollectionsCompletedEventHandler(object sender, GetCollectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBuffNoCompletedEventHandler(object sender, GetBuffNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBuffNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBuffNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPaymentCardTypeCompletedEventHandler(object sender, GetPaymentCardTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentCardTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentCardTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, DeleteScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AutoWarrantyCompletedEventHandler(object sender, AutoWarrantyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoWarrantyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoWarrantyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetPaymentCardPrintedCompletedEventHandler(object sender, SetPaymentCardPrintedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPaymentCardPrintedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPaymentCardPrintedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashAndGoAcctsCompletedEventHandler(object sender, GetCashAndGoAcctsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashAndGoAcctsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashAndGoAcctsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountsAllocatedCompletedEventHandler(object sender, GetAccountsAllocatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsAllocatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsAllocatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStrategyAccountsAllocatedCompletedEventHandler(object sender, GetStrategyAccountsAllocatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrategyAccountsAllocatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrategyAccountsAllocatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBailActionsCompletedEventHandler(object sender, GetBailActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBailActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBailActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveBailActionsCompletedEventHandler(object sender, SaveBailActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBailActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBailActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSPAHistoryCompletedEventHandler(object sender, GetSPAHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSPAHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSPAHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSPAAcctDetailsCompletedEventHandler(object sender, GetSPAAcctDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSPAAcctDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSPAAcctDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPAAccountDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPAAccountDetails)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStockLocationsCompletedEventHandler(object sender, GetStockLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int itemId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string deletedItem {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AllocateAccountCompletedEventHandler(object sender, AllocateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeAllocateAccountCompletedEventHandler(object sender, DeAllocateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeAllocateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeAllocateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AllocateDeallocateAccountCompletedEventHandler(object sender, AllocateDeallocateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocateDeallocateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocateDeallocateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetInterestRateCompletedEventHandler(object sender, GetInterestRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterestRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterestRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetAllocDateCompletedEventHandler(object sender, SetAllocDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAllocDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAllocDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccountApplicationStatusCompletedEventHandler(object sender, AccountApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetLetterByAcctNoCompletedEventHandler(object sender, GetLetterByAcctNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterByAcctNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterByAcctNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void BranchUpdateCompletedEventHandler(object sender, BranchUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BranchUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BranchUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void BranchGetCompletedEventHandler(object sender, BranchGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BranchGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BranchGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadLettersAndStatuesByAcctNoCompletedEventHandler(object sender, LoadLettersAndStatuesByAcctNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLettersAndStatuesByAcctNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLettersAndStatuesByAcctNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeliveryNotesReprintLoadCompletedEventHandler(object sender, DeliveryNotesReprintLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeliveryNotesReprintLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeliveryNotesReprintLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateAddToCompletedEventHandler(object sender, CalculateAddToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateAddToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateAddToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal deposit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal sumBalances {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal newCashPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal newAgreementTotal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal newMonthlyInstal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public decimal newFinalInstal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public int newNoInstalments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ProcessAddToCompletedEventHandler(object sender, ProcessAddToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessAddToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessAddToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal deposit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccountFullyDeliveredCompletedEventHandler(object sender, AccountFullyDeliveredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountFullyDeliveredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountFullyDeliveredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public short delivered {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ContractNoUniqueCompletedEventHandler(object sender, ContractNoUniqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContractNoUniqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContractNoUniqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool unique {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AffinityContractNoUniqueCompletedEventHandler(object sender, AffinityContractNoUniqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AffinityContractNoUniqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AffinityContractNoUniqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool unique {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HasAddToOrDeliveryCompletedEventHandler(object sender, HasAddToOrDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasAddToOrDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasAddToOrDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public short addto {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SettledByAddToCompletedEventHandler(object sender, SettledByAddToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SettledByAddToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SettledByAddToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public short reversible {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReverseAddToCompletedEventHandler(object sender, ReverseAddToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseAddToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseAddToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateTaxAmountCompletedEventHandler(object sender, CalculateTaxAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateTaxAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateTaxAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateTaxAmount1CompletedEventHandler(object sender, CalculateTaxAmount1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateTaxAmount1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateTaxAmount1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsTaxExemptCompletedEventHandler(object sender, IsTaxExemptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsTaxExemptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsTaxExemptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAssociatedWarrantiesCompletedEventHandler(object sender, GetAssociatedWarrantiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssociatedWarrantiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssociatedWarrantiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveProductFaultsCompletedEventHandler(object sender, SaveProductFaultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProductFaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProductFaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWarrantyReturnItemCompletedEventHandler(object sender, GetWarrantyReturnItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantyReturnItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantyReturnItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591