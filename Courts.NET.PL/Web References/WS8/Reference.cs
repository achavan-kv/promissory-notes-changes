//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace STL.PL.WS8 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WPaymentManagerSoap", Namespace="http://strategicthought.com/webservices/")]
    public partial class WPaymentManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback GetPaymentAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountSettlementOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateCreditFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateCreditFee1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTempReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDeliveryDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashierTotalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateLastAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChequeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseChequeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCashierTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashierTotalsHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashierTotalsReversalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCashierTotalsReversalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashierDepositsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCashierDepositsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCashierDisbursementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidCashierDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmountPaidOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteFintransRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCorrectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBDWCorrectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnexportedCashierTotalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTransactionsByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDDMandateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDDMandate1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AnotherMandateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMandateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDDPaymentExtraListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDDPaymentExtraListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDDRejectionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDDRejectionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteGeneralTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteFreeInstalmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasCashierTotalledOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnexportedCashierTotals1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashierTotalsBreakdownOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRateHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcForeignTenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcExchangeAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExchangeRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateGiftVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback JournalEnquiryGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SellGiftVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashiersWithOutstandingPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RedeemOtherGiftVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCashDrawerOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCashDrawerOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDepositReferenceUniqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashierOutstandingIncomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashierOutstandingIncomeByPayMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashierTotalsSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockDepositScreenOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnLockDepositScreenOperationCompleted;
        
        private System.Threading.SendOrPostCallback CashierMustDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutstandingSafeDepositsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseSafeDepositsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentHolidaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentReturnedChequesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePaymentHolidayOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncludeDepositsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchCashierListOperationCompleted;
        
        private System.Threading.SendOrPostCallback TemporaryReceiptEnquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback BailiffTemporaryReceiptEnquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTempReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidTempReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocateTempReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReallocateTempReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckReceiptNotIssuedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextTemporaryReceptNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultCommissionBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBailiffCommissionBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCommissionBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBailiffCommissionBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCommissionBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBailiffCommissionBasisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommissionTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCommissionTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreCommissionTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommissionTransactionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayBailiffCommissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSUCBFinancialDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantyAdjustmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePaymentDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePaymentDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesCommissionRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCommissionRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCommItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicSalesCommissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesCommissionReportHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesCommissionReportDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseBDWOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCollectionCommissionRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCollectionCommissionRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCollectionCommissionRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCollectionCommissionRuleActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpliftCommissionRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUpliftCommissionRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEarlySettlementFigOperationCompleted;
        
        private System.Threading.SendOrPostCallback CLGeneralFinanceTransactionValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCashLoanAmortizedAccountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WPaymentManager() {
            this.Url = "http://localhost/Courts.NET.WS/WPaymentManager.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPaymentAccountsCompletedEventHandler GetPaymentAccountsCompleted;
        
        /// <remarks/>
        public event GetAccountSettlementCompletedEventHandler GetAccountSettlementCompleted;
        
        /// <remarks/>
        public event CalculateCreditFeeCompletedEventHandler CalculateCreditFeeCompleted;
        
        /// <remarks/>
        public event CalculateCreditFee1CompletedEventHandler CalculateCreditFee1Completed;
        
        /// <remarks/>
        public event SavePaymentCompletedEventHandler SavePaymentCompleted;
        
        /// <remarks/>
        public event GetTempReceiptCompletedEventHandler GetTempReceiptCompleted;
        
        /// <remarks/>
        public event CheckDeliveryDateCompletedEventHandler CheckDeliveryDateCompleted;
        
        /// <remarks/>
        public event GetCashierTotalsCompletedEventHandler GetCashierTotalsCompleted;
        
        /// <remarks/>
        public event GetDateLastAuditCompletedEventHandler GetDateLastAuditCompleted;
        
        /// <remarks/>
        public event GetChequeDetailsCompletedEventHandler GetChequeDetailsCompleted;
        
        /// <remarks/>
        public event ReverseChequeCompletedEventHandler ReverseChequeCompleted;
        
        /// <remarks/>
        public event SaveCashierTotalCompletedEventHandler SaveCashierTotalCompleted;
        
        /// <remarks/>
        public event GetCashierTotalsHistoryCompletedEventHandler GetCashierTotalsHistoryCompleted;
        
        /// <remarks/>
        public event GetCashierTotalsReversalCompletedEventHandler GetCashierTotalsReversalCompleted;
        
        /// <remarks/>
        public event SaveCashierTotalsReversalCompletedEventHandler SaveCashierTotalsReversalCompleted;
        
        /// <remarks/>
        public event GetCashierDepositsCompletedEventHandler GetCashierDepositsCompleted;
        
        /// <remarks/>
        public event SaveCashierDepositsCompletedEventHandler SaveCashierDepositsCompleted;
        
        /// <remarks/>
        public event SaveCashierDisbursementsCompletedEventHandler SaveCashierDisbursementsCompleted;
        
        /// <remarks/>
        public event VoidCashierDepositCompletedEventHandler VoidCashierDepositCompleted;
        
        /// <remarks/>
        public event GetAccountPaymentsCompletedEventHandler GetAccountPaymentsCompleted;
        
        /// <remarks/>
        public event GetAmountPaidCompletedEventHandler GetAmountPaidCompleted;
        
        /// <remarks/>
        public event WriteFintransRecordCompletedEventHandler WriteFintransRecordCompleted;
        
        /// <remarks/>
        public event SaveCorrectionCompletedEventHandler SaveCorrectionCompleted;
        
        /// <remarks/>
        public event SaveBDWCorrectionCompletedEventHandler SaveBDWCorrectionCompleted;
        
        /// <remarks/>
        public event SaveRefundCompletedEventHandler SaveRefundCompleted;
        
        /// <remarks/>
        public event GetUnexportedCashierTotalsCompletedEventHandler GetUnexportedCashierTotalsCompleted;
        
        /// <remarks/>
        public event GetAllTransactionsByAccountCompletedEventHandler GetAllTransactionsByAccountCompleted;
        
        /// <remarks/>
        public event GetDDMandateCompletedEventHandler GetDDMandateCompleted;
        
        /// <remarks/>
        public event GetDDMandate1CompletedEventHandler GetDDMandate1Completed;
        
        /// <remarks/>
        public event AnotherMandateCompletedEventHandler AnotherMandateCompleted;
        
        /// <remarks/>
        public event InitDatesCompletedEventHandler InitDatesCompleted;
        
        /// <remarks/>
        public event SaveMandateCompletedEventHandler SaveMandateCompleted;
        
        /// <remarks/>
        public event GetDDPaymentExtraListCompletedEventHandler GetDDPaymentExtraListCompleted;
        
        /// <remarks/>
        public event SaveDDPaymentExtraListCompletedEventHandler SaveDDPaymentExtraListCompleted;
        
        /// <remarks/>
        public event GetDDRejectionListCompletedEventHandler GetDDRejectionListCompleted;
        
        /// <remarks/>
        public event SaveDDRejectionListCompletedEventHandler SaveDDRejectionListCompleted;
        
        /// <remarks/>
        public event WriteGeneralTransactionCompletedEventHandler WriteGeneralTransactionCompleted;
        
        /// <remarks/>
        public event WriteFreeInstalmentCompletedEventHandler WriteFreeInstalmentCompleted;
        
        /// <remarks/>
        public event HasCashierTotalledCompletedEventHandler HasCashierTotalledCompleted;
        
        /// <remarks/>
        public event GetUnexportedCashierTotals1CompletedEventHandler GetUnexportedCashierTotals1Completed;
        
        /// <remarks/>
        public event GetCashierTotalsBreakdownCompletedEventHandler GetCashierTotalsBreakdownCompleted;
        
        /// <remarks/>
        public event GetExchangeRatesCompletedEventHandler GetExchangeRatesCompleted;
        
        /// <remarks/>
        public event GetExchangeRateHistoryCompletedEventHandler GetExchangeRateHistoryCompleted;
        
        /// <remarks/>
        public event CalcForeignTenderCompletedEventHandler CalcForeignTenderCompleted;
        
        /// <remarks/>
        public event CalcExchangeAmountCompletedEventHandler CalcExchangeAmountCompleted;
        
        /// <remarks/>
        public event SaveExchangeRatesCompletedEventHandler SaveExchangeRatesCompleted;
        
        /// <remarks/>
        public event ValidateGiftVoucherCompletedEventHandler ValidateGiftVoucherCompleted;
        
        /// <remarks/>
        public event JournalEnquiryGetCompletedEventHandler JournalEnquiryGetCompleted;
        
        /// <remarks/>
        public event SellGiftVoucherCompletedEventHandler SellGiftVoucherCompleted;
        
        /// <remarks/>
        public event GetCashiersWithOutstandingPaymentsCompletedEventHandler GetCashiersWithOutstandingPaymentsCompleted;
        
        /// <remarks/>
        public event RedeemOtherGiftVoucherCompletedEventHandler RedeemOtherGiftVoucherCompleted;
        
        /// <remarks/>
        public event SaveCashDrawerOpenCompletedEventHandler SaveCashDrawerOpenCompleted;
        
        /// <remarks/>
        public event LoadCashDrawerOpenCompletedEventHandler LoadCashDrawerOpenCompleted;
        
        /// <remarks/>
        public event IsDepositReferenceUniqueCompletedEventHandler IsDepositReferenceUniqueCompleted;
        
        /// <remarks/>
        public event GetCashierOutstandingIncomeCompletedEventHandler GetCashierOutstandingIncomeCompleted;
        
        /// <remarks/>
        public event GetCashierOutstandingIncomeByPayMethodCompletedEventHandler GetCashierOutstandingIncomeByPayMethodCompleted;
        
        /// <remarks/>
        public event GetCashierTotalsSummaryCompletedEventHandler GetCashierTotalsSummaryCompleted;
        
        /// <remarks/>
        public event LockDepositScreenCompletedEventHandler LockDepositScreenCompleted;
        
        /// <remarks/>
        public event UnLockDepositScreenCompletedEventHandler UnLockDepositScreenCompleted;
        
        /// <remarks/>
        public event CashierMustDepositCompletedEventHandler CashierMustDepositCompleted;
        
        /// <remarks/>
        public event GetOutstandingSafeDepositsCompletedEventHandler GetOutstandingSafeDepositsCompleted;
        
        /// <remarks/>
        public event ReverseSafeDepositsCompletedEventHandler ReverseSafeDepositsCompleted;
        
        /// <remarks/>
        public event GetPaymentHolidaysCompletedEventHandler GetPaymentHolidaysCompleted;
        
        /// <remarks/>
        public event GetPaymentReturnedChequesCompletedEventHandler GetPaymentReturnedChequesCompleted;
        
        /// <remarks/>
        public event SavePaymentHolidayCompletedEventHandler SavePaymentHolidayCompleted;
        
        /// <remarks/>
        public event IncludeDepositsCompletedEventHandler IncludeDepositsCompleted;
        
        /// <remarks/>
        public event GetBranchCashierListCompletedEventHandler GetBranchCashierListCompleted;
        
        /// <remarks/>
        public event TemporaryReceiptEnquiryCompletedEventHandler TemporaryReceiptEnquiryCompleted;
        
        /// <remarks/>
        public event BailiffTemporaryReceiptEnquiryCompletedEventHandler BailiffTemporaryReceiptEnquiryCompleted;
        
        /// <remarks/>
        public event CancelTempReceiptCompletedEventHandler CancelTempReceiptCompleted;
        
        /// <remarks/>
        public event VoidTempReceiptCompletedEventHandler VoidTempReceiptCompleted;
        
        /// <remarks/>
        public event AllocateTempReceiptCompletedEventHandler AllocateTempReceiptCompleted;
        
        /// <remarks/>
        public event ReallocateTempReceiptCompletedEventHandler ReallocateTempReceiptCompleted;
        
        /// <remarks/>
        public event CheckReceiptNotIssuedCompletedEventHandler CheckReceiptNotIssuedCompleted;
        
        /// <remarks/>
        public event GetNextTemporaryReceptNoCompletedEventHandler GetNextTemporaryReceptNoCompleted;
        
        /// <remarks/>
        public event GetDefaultCommissionBasisCompletedEventHandler GetDefaultCommissionBasisCompleted;
        
        /// <remarks/>
        public event GetBailiffCommissionBasisCompletedEventHandler GetBailiffCommissionBasisCompleted;
        
        /// <remarks/>
        public event SaveCommissionBasisCompletedEventHandler SaveCommissionBasisCompleted;
        
        /// <remarks/>
        public event SaveBailiffCommissionBasisCompletedEventHandler SaveBailiffCommissionBasisCompleted;
        
        /// <remarks/>
        public event DeleteCommissionBasisCompletedEventHandler DeleteCommissionBasisCompleted;
        
        /// <remarks/>
        public event DeleteBailiffCommissionBasisCompletedEventHandler DeleteBailiffCommissionBasisCompleted;
        
        /// <remarks/>
        public event GetCommissionTransactionsCompletedEventHandler GetCommissionTransactionsCompleted;
        
        /// <remarks/>
        public event DeleteCommissionTransactionCompletedEventHandler DeleteCommissionTransactionCompleted;
        
        /// <remarks/>
        public event RestoreCommissionTransactionCompletedEventHandler RestoreCommissionTransactionCompleted;
        
        /// <remarks/>
        public event UpdateCommissionTransactionStatusCompletedEventHandler UpdateCommissionTransactionStatusCompleted;
        
        /// <remarks/>
        public event PayBailiffCommissionCompletedEventHandler PayBailiffCommissionCompleted;
        
        /// <remarks/>
        public event GetSUCBFinancialDetailsCompletedEventHandler GetSUCBFinancialDetailsCompleted;
        
        /// <remarks/>
        public event GetWarrantyAdjustmentCompletedEventHandler GetWarrantyAdjustmentCompleted;
        
        /// <remarks/>
        public event GetDefinitionCompletedEventHandler GetDefinitionCompleted;
        
        /// <remarks/>
        public event SavePaymentDefinitionCompletedEventHandler SavePaymentDefinitionCompleted;
        
        /// <remarks/>
        public event DeletePaymentDefinitionCompletedEventHandler DeletePaymentDefinitionCompleted;
        
        /// <remarks/>
        public event GetPayMethodCompletedEventHandler GetPayMethodCompleted;
        
        /// <remarks/>
        public event GetSalesCommissionRatesCompletedEventHandler GetSalesCommissionRatesCompleted;
        
        /// <remarks/>
        public event SaveCommissionRatesCompletedEventHandler SaveCommissionRatesCompleted;
        
        /// <remarks/>
        public event ValidateCommItemCompletedEventHandler ValidateCommItemCompleted;
        
        /// <remarks/>
        public event ValidateCategoryCompletedEventHandler ValidateCategoryCompleted;
        
        /// <remarks/>
        public event GetBasicSalesCommissionCompletedEventHandler GetBasicSalesCommissionCompleted;
        
        /// <remarks/>
        public event GetSalesCommissionReportHeaderCompletedEventHandler GetSalesCommissionReportHeaderCompleted;
        
        /// <remarks/>
        public event GetSalesCommissionReportDetailCompletedEventHandler GetSalesCommissionReportDetailCompleted;
        
        /// <remarks/>
        public event ReverseBDWCompletedEventHandler ReverseBDWCompleted;
        
        /// <remarks/>
        public event SaveCollectionCommissionRuleCompletedEventHandler SaveCollectionCommissionRuleCompleted;
        
        /// <remarks/>
        public event GetCollectionCommissionRulesCompletedEventHandler GetCollectionCommissionRulesCompleted;
        
        /// <remarks/>
        public event DeleteCollectionCommissionRuleCompletedEventHandler DeleteCollectionCommissionRuleCompleted;
        
        /// <remarks/>
        public event DeleteCollectionCommissionRuleActionsCompletedEventHandler DeleteCollectionCommissionRuleActionsCompleted;
        
        /// <remarks/>
        public event GetUpliftCommissionRatesCompletedEventHandler GetUpliftCommissionRatesCompleted;
        
        /// <remarks/>
        public event SaveUpliftCommissionRatesCompletedEventHandler SaveUpliftCommissionRatesCompleted;
        
        /// <remarks/>
        public event GetEarlySettlementFigCompletedEventHandler GetEarlySettlementFigCompleted;
        
        /// <remarks/>
        public event CLGeneralFinanceTransactionValidationCompletedEventHandler CLGeneralFinanceTransactionValidationCompleted;
        
        /// <remarks/>
        public event IsCashLoanAmortizedAccountCompletedEventHandler IsCashLoanAmortizedAccountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPaymentAccounts", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentAccounts(string customerID, string countryCode, bool lockAccounts, out decimal addToValue, out string err) {
            object[] results = this.Invoke("GetPaymentAccounts", new object[] {
                        customerID,
                        countryCode,
                        lockAccounts});
            addToValue = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPaymentAccounts(string customerID, string countryCode, bool lockAccounts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPaymentAccounts", new object[] {
                        customerID,
                        countryCode,
                        lockAccounts}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPaymentAccounts(System.IAsyncResult asyncResult, out decimal addToValue, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            addToValue = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentAccountsAsync(string customerID, string countryCode, bool lockAccounts) {
            this.GetPaymentAccountsAsync(customerID, countryCode, lockAccounts, null);
        }
        
        /// <remarks/>
        public void GetPaymentAccountsAsync(string customerID, string countryCode, bool lockAccounts, object userState) {
            if ((this.GetPaymentAccountsOperationCompleted == null)) {
                this.GetPaymentAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentAccountsOperationCompleted);
            }
            this.InvokeAsync("GetPaymentAccounts", new object[] {
                        customerID,
                        countryCode,
                        lockAccounts}, this.GetPaymentAccountsOperationCompleted, userState);
        }
        
        private void OnGetPaymentAccountsOperationCompleted(object arg) {
            if ((this.GetPaymentAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentAccountsCompleted(this, new GetPaymentAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountSettlement", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountSettlement(string countryCode, string accountNo, out decimal settlement, out decimal rebate, out decimal collectionFee, out string err) {
            object[] results = this.Invoke("GetAccountSettlement", new object[] {
                        countryCode,
                        accountNo});
            settlement = ((decimal)(results[1]));
            rebate = ((decimal)(results[2]));
            collectionFee = ((decimal)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountSettlement(string countryCode, string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountSettlement", new object[] {
                        countryCode,
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetAccountSettlement(System.IAsyncResult asyncResult, out decimal settlement, out decimal rebate, out decimal collectionFee, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            settlement = ((decimal)(results[1]));
            rebate = ((decimal)(results[2]));
            collectionFee = ((decimal)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountSettlementAsync(string countryCode, string accountNo) {
            this.GetAccountSettlementAsync(countryCode, accountNo, null);
        }
        
        /// <remarks/>
        public void GetAccountSettlementAsync(string countryCode, string accountNo, object userState) {
            if ((this.GetAccountSettlementOperationCompleted == null)) {
                this.GetAccountSettlementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountSettlementOperationCompleted);
            }
            this.InvokeAsync("GetAccountSettlement", new object[] {
                        countryCode,
                        accountNo}, this.GetAccountSettlementOperationCompleted, userState);
        }
        
        private void OnGetAccountSettlementOperationCompleted(object arg) {
            if ((this.GetAccountSettlementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountSettlementCompleted(this, new GetAccountSettlementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalculateCreditFeeSet", RequestElementName="CalculateCreditFeeSet", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="CalculateCreditFeeSetResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CalculateCreditFeeSetResult")]
        public decimal CalculateCreditFee(ref System.Data.DataSet accountSet, string countryCode, string paymentType, ref decimal paymentAmount, out string err) {
            object[] results = this.Invoke("CalculateCreditFee", new object[] {
                        accountSet,
                        countryCode,
                        paymentType,
                        paymentAmount});
            accountSet = ((System.Data.DataSet)(results[1]));
            paymentAmount = ((decimal)(results[2]));
            err = ((string)(results[3]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateCreditFee(System.Data.DataSet accountSet, string countryCode, string paymentType, decimal paymentAmount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateCreditFee", new object[] {
                        accountSet,
                        countryCode,
                        paymentType,
                        paymentAmount}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndCalculateCreditFee(System.IAsyncResult asyncResult, out System.Data.DataSet accountSet, out decimal paymentAmount, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            accountSet = ((System.Data.DataSet)(results[1]));
            paymentAmount = ((decimal)(results[2]));
            err = ((string)(results[3]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateCreditFeeAsync(System.Data.DataSet accountSet, string countryCode, string paymentType, decimal paymentAmount) {
            this.CalculateCreditFeeAsync(accountSet, countryCode, paymentType, paymentAmount, null);
        }
        
        /// <remarks/>
        public void CalculateCreditFeeAsync(System.Data.DataSet accountSet, string countryCode, string paymentType, decimal paymentAmount, object userState) {
            if ((this.CalculateCreditFeeOperationCompleted == null)) {
                this.CalculateCreditFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateCreditFeeOperationCompleted);
            }
            this.InvokeAsync("CalculateCreditFee", new object[] {
                        accountSet,
                        countryCode,
                        paymentType,
                        paymentAmount}, this.CalculateCreditFeeOperationCompleted, userState);
        }
        
        private void OnCalculateCreditFeeOperationCompleted(object arg) {
            if ((this.CalculateCreditFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateCreditFeeCompleted(this, new CalculateCreditFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="CalculateCreditFee1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalculateCreditFee", RequestElementName="CalculateCreditFee", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="CalculateCreditFeeResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CalculateCreditFeeResult")]
        public decimal CalculateCreditFee(string accountNo, string countryCode, string paymentType, ref int allocatedCourtsPerson, decimal arrears, bool reverseFeeCalc, ref decimal paymentAmount, out decimal collectionFee, out decimal bailiffFee, out int debitAccount, out int segmentId, out string err) {
            object[] results = this.Invoke("CalculateCreditFee1", new object[] {
                        accountNo,
                        countryCode,
                        paymentType,
                        allocatedCourtsPerson,
                        arrears,
                        reverseFeeCalc,
                        paymentAmount});
            allocatedCourtsPerson = ((int)(results[1]));
            paymentAmount = ((decimal)(results[2]));
            collectionFee = ((decimal)(results[3]));
            bailiffFee = ((decimal)(results[4]));
            debitAccount = ((int)(results[5]));
            segmentId = ((int)(results[6]));
            err = ((string)(results[7]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateCreditFee1(string accountNo, string countryCode, string paymentType, int allocatedCourtsPerson, decimal arrears, bool reverseFeeCalc, decimal paymentAmount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateCreditFee1", new object[] {
                        accountNo,
                        countryCode,
                        paymentType,
                        allocatedCourtsPerson,
                        arrears,
                        reverseFeeCalc,
                        paymentAmount}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndCalculateCreditFee1(System.IAsyncResult asyncResult, out int allocatedCourtsPerson, out decimal paymentAmount, out decimal collectionFee, out decimal bailiffFee, out int debitAccount, out int segmentId, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            allocatedCourtsPerson = ((int)(results[1]));
            paymentAmount = ((decimal)(results[2]));
            collectionFee = ((decimal)(results[3]));
            bailiffFee = ((decimal)(results[4]));
            debitAccount = ((int)(results[5]));
            segmentId = ((int)(results[6]));
            err = ((string)(results[7]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateCreditFee1Async(string accountNo, string countryCode, string paymentType, int allocatedCourtsPerson, decimal arrears, bool reverseFeeCalc, decimal paymentAmount) {
            this.CalculateCreditFee1Async(accountNo, countryCode, paymentType, allocatedCourtsPerson, arrears, reverseFeeCalc, paymentAmount, null);
        }
        
        /// <remarks/>
        public void CalculateCreditFee1Async(string accountNo, string countryCode, string paymentType, int allocatedCourtsPerson, decimal arrears, bool reverseFeeCalc, decimal paymentAmount, object userState) {
            if ((this.CalculateCreditFee1OperationCompleted == null)) {
                this.CalculateCreditFee1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateCreditFee1OperationCompleted);
            }
            this.InvokeAsync("CalculateCreditFee1", new object[] {
                        accountNo,
                        countryCode,
                        paymentType,
                        allocatedCourtsPerson,
                        arrears,
                        reverseFeeCalc,
                        paymentAmount}, this.CalculateCreditFee1OperationCompleted, userState);
        }
        
        private void OnCalculateCreditFee1OperationCompleted(object arg) {
            if ((this.CalculateCreditFee1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateCreditFee1Completed(this, new CalculateCreditFee1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SavePayment", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SavePayment(
                    string accountNo, 
                    bool sundryCredit, 
                    short paymentMethod, 
                    string chequeNo, 
                    string bankCode, 
                    string bankAcctNo, 
                    short branchNo, 
                    System.Data.DataSet payments, 
                    decimal localTender, 
                    decimal localChange, 
                    int authorisedBy, 
                    System.DateTime chequeClearance, 
                    int receiptNo, 
                    string countryCode, 
                    string voucherReference, 
                    bool courtsVoucher, 
                    int voucherAuthorisedBy, 
                    string accountNoCompany, 
                    int returnedChequeAuthorisedBy, 
                    int agrmtno, 
                    string storeCardAcctno, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> storeCardNo, 
                    out int commissionRef, 
                    out int paymentRef, 
                    out int rebateRef, 
                    out decimal rebateSum, 
                    out string err) {
            object[] results = this.Invoke("SavePayment", new object[] {
                        accountNo,
                        sundryCredit,
                        paymentMethod,
                        chequeNo,
                        bankCode,
                        bankAcctNo,
                        branchNo,
                        payments,
                        localTender,
                        localChange,
                        authorisedBy,
                        chequeClearance,
                        receiptNo,
                        countryCode,
                        voucherReference,
                        courtsVoucher,
                        voucherAuthorisedBy,
                        accountNoCompany,
                        returnedChequeAuthorisedBy,
                        agrmtno,
                        storeCardAcctno,
                        storeCardNo});
            commissionRef = ((int)(results[1]));
            paymentRef = ((int)(results[2]));
            rebateRef = ((int)(results[3]));
            rebateSum = ((decimal)(results[4]));
            err = ((string)(results[5]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSavePayment(
                    string accountNo, 
                    bool sundryCredit, 
                    short paymentMethod, 
                    string chequeNo, 
                    string bankCode, 
                    string bankAcctNo, 
                    short branchNo, 
                    System.Data.DataSet payments, 
                    decimal localTender, 
                    decimal localChange, 
                    int authorisedBy, 
                    System.DateTime chequeClearance, 
                    int receiptNo, 
                    string countryCode, 
                    string voucherReference, 
                    bool courtsVoucher, 
                    int voucherAuthorisedBy, 
                    string accountNoCompany, 
                    int returnedChequeAuthorisedBy, 
                    int agrmtno, 
                    string storeCardAcctno, 
                    System.Nullable<long> storeCardNo, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("SavePayment", new object[] {
                        accountNo,
                        sundryCredit,
                        paymentMethod,
                        chequeNo,
                        bankCode,
                        bankAcctNo,
                        branchNo,
                        payments,
                        localTender,
                        localChange,
                        authorisedBy,
                        chequeClearance,
                        receiptNo,
                        countryCode,
                        voucherReference,
                        courtsVoucher,
                        voucherAuthorisedBy,
                        accountNoCompany,
                        returnedChequeAuthorisedBy,
                        agrmtno,
                        storeCardAcctno,
                        storeCardNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSavePayment(System.IAsyncResult asyncResult, out int commissionRef, out int paymentRef, out int rebateRef, out decimal rebateSum, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            commissionRef = ((int)(results[1]));
            paymentRef = ((int)(results[2]));
            rebateRef = ((int)(results[3]));
            rebateSum = ((decimal)(results[4]));
            err = ((string)(results[5]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SavePaymentAsync(
                    string accountNo, 
                    bool sundryCredit, 
                    short paymentMethod, 
                    string chequeNo, 
                    string bankCode, 
                    string bankAcctNo, 
                    short branchNo, 
                    System.Data.DataSet payments, 
                    decimal localTender, 
                    decimal localChange, 
                    int authorisedBy, 
                    System.DateTime chequeClearance, 
                    int receiptNo, 
                    string countryCode, 
                    string voucherReference, 
                    bool courtsVoucher, 
                    int voucherAuthorisedBy, 
                    string accountNoCompany, 
                    int returnedChequeAuthorisedBy, 
                    int agrmtno, 
                    string storeCardAcctno, 
                    System.Nullable<long> storeCardNo) {
            this.SavePaymentAsync(accountNo, sundryCredit, paymentMethod, chequeNo, bankCode, bankAcctNo, branchNo, payments, localTender, localChange, authorisedBy, chequeClearance, receiptNo, countryCode, voucherReference, courtsVoucher, voucherAuthorisedBy, accountNoCompany, returnedChequeAuthorisedBy, agrmtno, storeCardAcctno, storeCardNo, null);
        }
        
        /// <remarks/>
        public void SavePaymentAsync(
                    string accountNo, 
                    bool sundryCredit, 
                    short paymentMethod, 
                    string chequeNo, 
                    string bankCode, 
                    string bankAcctNo, 
                    short branchNo, 
                    System.Data.DataSet payments, 
                    decimal localTender, 
                    decimal localChange, 
                    int authorisedBy, 
                    System.DateTime chequeClearance, 
                    int receiptNo, 
                    string countryCode, 
                    string voucherReference, 
                    bool courtsVoucher, 
                    int voucherAuthorisedBy, 
                    string accountNoCompany, 
                    int returnedChequeAuthorisedBy, 
                    int agrmtno, 
                    string storeCardAcctno, 
                    System.Nullable<long> storeCardNo, 
                    object userState) {
            if ((this.SavePaymentOperationCompleted == null)) {
                this.SavePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePaymentOperationCompleted);
            }
            this.InvokeAsync("SavePayment", new object[] {
                        accountNo,
                        sundryCredit,
                        paymentMethod,
                        chequeNo,
                        bankCode,
                        bankAcctNo,
                        branchNo,
                        payments,
                        localTender,
                        localChange,
                        authorisedBy,
                        chequeClearance,
                        receiptNo,
                        countryCode,
                        voucherReference,
                        courtsVoucher,
                        voucherAuthorisedBy,
                        accountNoCompany,
                        returnedChequeAuthorisedBy,
                        agrmtno,
                        storeCardAcctno,
                        storeCardNo}, this.SavePaymentOperationCompleted, userState);
        }
        
        private void OnSavePaymentOperationCompleted(object arg) {
            if ((this.SavePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePaymentCompleted(this, new SavePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTempReceipt", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTempReceipt(int receiptNo, out string err) {
            object[] results = this.Invoke("GetTempReceipt", new object[] {
                        receiptNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTempReceipt(int receiptNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTempReceipt", new object[] {
                        receiptNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTempReceipt(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTempReceiptAsync(int receiptNo) {
            this.GetTempReceiptAsync(receiptNo, null);
        }
        
        /// <remarks/>
        public void GetTempReceiptAsync(int receiptNo, object userState) {
            if ((this.GetTempReceiptOperationCompleted == null)) {
                this.GetTempReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTempReceiptOperationCompleted);
            }
            this.InvokeAsync("GetTempReceipt", new object[] {
                        receiptNo}, this.GetTempReceiptOperationCompleted, userState);
        }
        
        private void OnGetTempReceiptOperationCompleted(object arg) {
            if ((this.GetTempReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTempReceiptCompleted(this, new GetTempReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckDeliveryDate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CheckDeliveryDate(string accountNo, string countryCode, out System.DateTime chequeClearance, out string err) {
            object[] results = this.Invoke("CheckDeliveryDate", new object[] {
                        accountNo,
                        countryCode});
            chequeClearance = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckDeliveryDate(string accountNo, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckDeliveryDate", new object[] {
                        accountNo,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCheckDeliveryDate(System.IAsyncResult asyncResult, out System.DateTime chequeClearance, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            chequeClearance = ((System.DateTime)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDeliveryDateAsync(string accountNo, string countryCode) {
            this.CheckDeliveryDateAsync(accountNo, countryCode, null);
        }
        
        /// <remarks/>
        public void CheckDeliveryDateAsync(string accountNo, string countryCode, object userState) {
            if ((this.CheckDeliveryDateOperationCompleted == null)) {
                this.CheckDeliveryDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDeliveryDateOperationCompleted);
            }
            this.InvokeAsync("CheckDeliveryDate", new object[] {
                        accountNo,
                        countryCode}, this.CheckDeliveryDateOperationCompleted, userState);
        }
        
        private void OnCheckDeliveryDateOperationCompleted(object arg) {
            if ((this.CheckDeliveryDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDeliveryDateCompleted(this, new CheckDeliveryDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashierTotals", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashierTotals(short branchno, int employeeno, System.DateTime datefrom, System.DateTime dateto, bool listCheques, out decimal total, out string err) {
            object[] results = this.Invoke("GetCashierTotals", new object[] {
                        branchno,
                        employeeno,
                        datefrom,
                        dateto,
                        listCheques});
            total = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashierTotals(short branchno, int employeeno, System.DateTime datefrom, System.DateTime dateto, bool listCheques, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashierTotals", new object[] {
                        branchno,
                        employeeno,
                        datefrom,
                        dateto,
                        listCheques}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashierTotals(System.IAsyncResult asyncResult, out decimal total, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            total = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashierTotalsAsync(short branchno, int employeeno, System.DateTime datefrom, System.DateTime dateto, bool listCheques) {
            this.GetCashierTotalsAsync(branchno, employeeno, datefrom, dateto, listCheques, null);
        }
        
        /// <remarks/>
        public void GetCashierTotalsAsync(short branchno, int employeeno, System.DateTime datefrom, System.DateTime dateto, bool listCheques, object userState) {
            if ((this.GetCashierTotalsOperationCompleted == null)) {
                this.GetCashierTotalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierTotalsOperationCompleted);
            }
            this.InvokeAsync("GetCashierTotals", new object[] {
                        branchno,
                        employeeno,
                        datefrom,
                        dateto,
                        listCheques}, this.GetCashierTotalsOperationCompleted, userState);
        }
        
        private void OnGetCashierTotalsOperationCompleted(object arg) {
            if ((this.GetCashierTotalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierTotalsCompleted(this, new GetCashierTotalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDateLastAudit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetDateLastAudit(int empeeno, out string err) {
            object[] results = this.Invoke("GetDateLastAudit", new object[] {
                        empeeno});
            err = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDateLastAudit(int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDateLastAudit", new object[] {
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetDateLastAudit(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateLastAuditAsync(int empeeno) {
            this.GetDateLastAuditAsync(empeeno, null);
        }
        
        /// <remarks/>
        public void GetDateLastAuditAsync(int empeeno, object userState) {
            if ((this.GetDateLastAuditOperationCompleted == null)) {
                this.GetDateLastAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateLastAuditOperationCompleted);
            }
            this.InvokeAsync("GetDateLastAudit", new object[] {
                        empeeno}, this.GetDateLastAuditOperationCompleted, userState);
        }
        
        private void OnGetDateLastAuditOperationCompleted(object arg) {
            if ((this.GetDateLastAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateLastAuditCompleted(this, new GetDateLastAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetChequeDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChequeDetails(string chequeno, string bankcode, string bankacctno, System.DateTime datefrom, System.DateTime dateto, out string err) {
            object[] results = this.Invoke("GetChequeDetails", new object[] {
                        chequeno,
                        bankcode,
                        bankacctno,
                        datefrom,
                        dateto});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChequeDetails(string chequeno, string bankcode, string bankacctno, System.DateTime datefrom, System.DateTime dateto, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChequeDetails", new object[] {
                        chequeno,
                        bankcode,
                        bankacctno,
                        datefrom,
                        dateto}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChequeDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChequeDetailsAsync(string chequeno, string bankcode, string bankacctno, System.DateTime datefrom, System.DateTime dateto) {
            this.GetChequeDetailsAsync(chequeno, bankcode, bankacctno, datefrom, dateto, null);
        }
        
        /// <remarks/>
        public void GetChequeDetailsAsync(string chequeno, string bankcode, string bankacctno, System.DateTime datefrom, System.DateTime dateto, object userState) {
            if ((this.GetChequeDetailsOperationCompleted == null)) {
                this.GetChequeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChequeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetChequeDetails", new object[] {
                        chequeno,
                        bankcode,
                        bankacctno,
                        datefrom,
                        dateto}, this.GetChequeDetailsOperationCompleted, userState);
        }
        
        private void OnGetChequeDetailsOperationCompleted(object arg) {
            if ((this.GetChequeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChequeDetailsCompleted(this, new GetChequeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ReverseCheque", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReverseCheque(string acctno, string chequeno, string bankcode, string bankacctno, decimal transvalue, short payMethod, short branchno, string lTransType, System.DateTime lDateTrans, int lTransRefNo, string countryCode, out string err) {
            object[] results = this.Invoke("ReverseCheque", new object[] {
                        acctno,
                        chequeno,
                        bankcode,
                        bankacctno,
                        transvalue,
                        payMethod,
                        branchno,
                        lTransType,
                        lDateTrans,
                        lTransRefNo,
                        countryCode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReverseCheque(string acctno, string chequeno, string bankcode, string bankacctno, decimal transvalue, short payMethod, short branchno, string lTransType, System.DateTime lDateTrans, int lTransRefNo, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReverseCheque", new object[] {
                        acctno,
                        chequeno,
                        bankcode,
                        bankacctno,
                        transvalue,
                        payMethod,
                        branchno,
                        lTransType,
                        lDateTrans,
                        lTransRefNo,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndReverseCheque(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseChequeAsync(string acctno, string chequeno, string bankcode, string bankacctno, decimal transvalue, short payMethod, short branchno, string lTransType, System.DateTime lDateTrans, int lTransRefNo, string countryCode) {
            this.ReverseChequeAsync(acctno, chequeno, bankcode, bankacctno, transvalue, payMethod, branchno, lTransType, lDateTrans, lTransRefNo, countryCode, null);
        }
        
        /// <remarks/>
        public void ReverseChequeAsync(string acctno, string chequeno, string bankcode, string bankacctno, decimal transvalue, short payMethod, short branchno, string lTransType, System.DateTime lDateTrans, int lTransRefNo, string countryCode, object userState) {
            if ((this.ReverseChequeOperationCompleted == null)) {
                this.ReverseChequeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseChequeOperationCompleted);
            }
            this.InvokeAsync("ReverseCheque", new object[] {
                        acctno,
                        chequeno,
                        bankcode,
                        bankacctno,
                        transvalue,
                        payMethod,
                        branchno,
                        lTransType,
                        lDateTrans,
                        lTransRefNo,
                        countryCode}, this.ReverseChequeOperationCompleted, userState);
        }
        
        private void OnReverseChequeOperationCompleted(object arg) {
            if ((this.ReverseChequeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseChequeCompleted(this, new ReverseChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCashierTotal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCashierTotal(System.DateTime datefrom, System.DateTime dateto, int runno, int empeenoauth, bool canReverse, decimal usertotal, decimal systemtotal, decimal difference, decimal deposits, short branchno, int cashier, string countryCode, System.Data.DataSet breakdown, out string err) {
            object[] results = this.Invoke("SaveCashierTotal", new object[] {
                        datefrom,
                        dateto,
                        runno,
                        empeenoauth,
                        canReverse,
                        usertotal,
                        systemtotal,
                        difference,
                        deposits,
                        branchno,
                        cashier,
                        countryCode,
                        breakdown});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCashierTotal(System.DateTime datefrom, System.DateTime dateto, int runno, int empeenoauth, bool canReverse, decimal usertotal, decimal systemtotal, decimal difference, decimal deposits, short branchno, int cashier, string countryCode, System.Data.DataSet breakdown, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCashierTotal", new object[] {
                        datefrom,
                        dateto,
                        runno,
                        empeenoauth,
                        canReverse,
                        usertotal,
                        systemtotal,
                        difference,
                        deposits,
                        branchno,
                        cashier,
                        countryCode,
                        breakdown}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCashierTotal(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCashierTotalAsync(System.DateTime datefrom, System.DateTime dateto, int runno, int empeenoauth, bool canReverse, decimal usertotal, decimal systemtotal, decimal difference, decimal deposits, short branchno, int cashier, string countryCode, System.Data.DataSet breakdown) {
            this.SaveCashierTotalAsync(datefrom, dateto, runno, empeenoauth, canReverse, usertotal, systemtotal, difference, deposits, branchno, cashier, countryCode, breakdown, null);
        }
        
        /// <remarks/>
        public void SaveCashierTotalAsync(System.DateTime datefrom, System.DateTime dateto, int runno, int empeenoauth, bool canReverse, decimal usertotal, decimal systemtotal, decimal difference, decimal deposits, short branchno, int cashier, string countryCode, System.Data.DataSet breakdown, object userState) {
            if ((this.SaveCashierTotalOperationCompleted == null)) {
                this.SaveCashierTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCashierTotalOperationCompleted);
            }
            this.InvokeAsync("SaveCashierTotal", new object[] {
                        datefrom,
                        dateto,
                        runno,
                        empeenoauth,
                        canReverse,
                        usertotal,
                        systemtotal,
                        difference,
                        deposits,
                        branchno,
                        cashier,
                        countryCode,
                        breakdown}, this.SaveCashierTotalOperationCompleted, userState);
        }
        
        private void OnSaveCashierTotalOperationCompleted(object arg) {
            if ((this.SaveCashierTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCashierTotalCompleted(this, new SaveCashierTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashierTotalsHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashierTotalsHistory(int empeeno, out string err) {
            object[] results = this.Invoke("GetCashierTotalsHistory", new object[] {
                        empeeno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashierTotalsHistory(int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashierTotalsHistory", new object[] {
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashierTotalsHistory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashierTotalsHistoryAsync(int empeeno) {
            this.GetCashierTotalsHistoryAsync(empeeno, null);
        }
        
        /// <remarks/>
        public void GetCashierTotalsHistoryAsync(int empeeno, object userState) {
            if ((this.GetCashierTotalsHistoryOperationCompleted == null)) {
                this.GetCashierTotalsHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierTotalsHistoryOperationCompleted);
            }
            this.InvokeAsync("GetCashierTotalsHistory", new object[] {
                        empeeno}, this.GetCashierTotalsHistoryOperationCompleted, userState);
        }
        
        private void OnGetCashierTotalsHistoryOperationCompleted(object arg) {
            if ((this.GetCashierTotalsHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierTotalsHistoryCompleted(this, new GetCashierTotalsHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashierTotalsReversal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashierTotalsReversal(int empeeno, out bool canReverse, out System.DateTime dateFrom, out System.DateTime dateTo, out decimal diffTotal, out decimal systemTotal, out decimal depositTotal, out decimal userTotal, out string err) {
            object[] results = this.Invoke("GetCashierTotalsReversal", new object[] {
                        empeeno});
            canReverse = ((bool)(results[1]));
            dateFrom = ((System.DateTime)(results[2]));
            dateTo = ((System.DateTime)(results[3]));
            diffTotal = ((decimal)(results[4]));
            systemTotal = ((decimal)(results[5]));
            depositTotal = ((decimal)(results[6]));
            userTotal = ((decimal)(results[7]));
            err = ((string)(results[8]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashierTotalsReversal(int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashierTotalsReversal", new object[] {
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashierTotalsReversal(System.IAsyncResult asyncResult, out bool canReverse, out System.DateTime dateFrom, out System.DateTime dateTo, out decimal diffTotal, out decimal systemTotal, out decimal depositTotal, out decimal userTotal, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            canReverse = ((bool)(results[1]));
            dateFrom = ((System.DateTime)(results[2]));
            dateTo = ((System.DateTime)(results[3]));
            diffTotal = ((decimal)(results[4]));
            systemTotal = ((decimal)(results[5]));
            depositTotal = ((decimal)(results[6]));
            userTotal = ((decimal)(results[7]));
            err = ((string)(results[8]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashierTotalsReversalAsync(int empeeno) {
            this.GetCashierTotalsReversalAsync(empeeno, null);
        }
        
        /// <remarks/>
        public void GetCashierTotalsReversalAsync(int empeeno, object userState) {
            if ((this.GetCashierTotalsReversalOperationCompleted == null)) {
                this.GetCashierTotalsReversalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierTotalsReversalOperationCompleted);
            }
            this.InvokeAsync("GetCashierTotalsReversal", new object[] {
                        empeeno}, this.GetCashierTotalsReversalOperationCompleted, userState);
        }
        
        private void OnGetCashierTotalsReversalOperationCompleted(object arg) {
            if ((this.GetCashierTotalsReversalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierTotalsReversalCompleted(this, new GetCashierTotalsReversalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCashierTotalsReversal", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCashierTotalsReversal(string countryCode, short branchNo, int empeeNo, out string err) {
            object[] results = this.Invoke("SaveCashierTotalsReversal", new object[] {
                        countryCode,
                        branchNo,
                        empeeNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCashierTotalsReversal(string countryCode, short branchNo, int empeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCashierTotalsReversal", new object[] {
                        countryCode,
                        branchNo,
                        empeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCashierTotalsReversal(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCashierTotalsReversalAsync(string countryCode, short branchNo, int empeeNo) {
            this.SaveCashierTotalsReversalAsync(countryCode, branchNo, empeeNo, null);
        }
        
        /// <remarks/>
        public void SaveCashierTotalsReversalAsync(string countryCode, short branchNo, int empeeNo, object userState) {
            if ((this.SaveCashierTotalsReversalOperationCompleted == null)) {
                this.SaveCashierTotalsReversalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCashierTotalsReversalOperationCompleted);
            }
            this.InvokeAsync("SaveCashierTotalsReversal", new object[] {
                        countryCode,
                        branchNo,
                        empeeNo}, this.SaveCashierTotalsReversalOperationCompleted, userState);
        }
        
        private void OnSaveCashierTotalsReversalOperationCompleted(object arg) {
            if ((this.SaveCashierTotalsReversalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCashierTotalsReversalCompleted(this, new SaveCashierTotalsReversalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashierDeposits", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashierDeposits(int empeeno, short postedtofact, System.DateTime datefrom, System.DateTime dateto, short branchNo, string depositType, bool branchFloats, int paymentMethod, out string err) {
            object[] results = this.Invoke("GetCashierDeposits", new object[] {
                        empeeno,
                        postedtofact,
                        datefrom,
                        dateto,
                        branchNo,
                        depositType,
                        branchFloats,
                        paymentMethod});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashierDeposits(int empeeno, short postedtofact, System.DateTime datefrom, System.DateTime dateto, short branchNo, string depositType, bool branchFloats, int paymentMethod, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashierDeposits", new object[] {
                        empeeno,
                        postedtofact,
                        datefrom,
                        dateto,
                        branchNo,
                        depositType,
                        branchFloats,
                        paymentMethod}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashierDeposits(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashierDepositsAsync(int empeeno, short postedtofact, System.DateTime datefrom, System.DateTime dateto, short branchNo, string depositType, bool branchFloats, int paymentMethod) {
            this.GetCashierDepositsAsync(empeeno, postedtofact, datefrom, dateto, branchNo, depositType, branchFloats, paymentMethod, null);
        }
        
        /// <remarks/>
        public void GetCashierDepositsAsync(int empeeno, short postedtofact, System.DateTime datefrom, System.DateTime dateto, short branchNo, string depositType, bool branchFloats, int paymentMethod, object userState) {
            if ((this.GetCashierDepositsOperationCompleted == null)) {
                this.GetCashierDepositsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierDepositsOperationCompleted);
            }
            this.InvokeAsync("GetCashierDeposits", new object[] {
                        empeeno,
                        postedtofact,
                        datefrom,
                        dateto,
                        branchNo,
                        depositType,
                        branchFloats,
                        paymentMethod}, this.GetCashierDepositsOperationCompleted, userState);
        }
        
        private void OnGetCashierDepositsOperationCompleted(object arg) {
            if ((this.GetCashierDepositsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierDepositsCompleted(this, new GetCashierDepositsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCashierDeposits", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCashierDeposits(short branchNo, int cashier, System.Data.DataSet deposits, out string err) {
            object[] results = this.Invoke("SaveCashierDeposits", new object[] {
                        branchNo,
                        cashier,
                        deposits});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCashierDeposits(short branchNo, int cashier, System.Data.DataSet deposits, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCashierDeposits", new object[] {
                        branchNo,
                        cashier,
                        deposits}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCashierDeposits(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCashierDepositsAsync(short branchNo, int cashier, System.Data.DataSet deposits) {
            this.SaveCashierDepositsAsync(branchNo, cashier, deposits, null);
        }
        
        /// <remarks/>
        public void SaveCashierDepositsAsync(short branchNo, int cashier, System.Data.DataSet deposits, object userState) {
            if ((this.SaveCashierDepositsOperationCompleted == null)) {
                this.SaveCashierDepositsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCashierDepositsOperationCompleted);
            }
            this.InvokeAsync("SaveCashierDeposits", new object[] {
                        branchNo,
                        cashier,
                        deposits}, this.SaveCashierDepositsOperationCompleted, userState);
        }
        
        private void OnSaveCashierDepositsOperationCompleted(object arg) {
            if ((this.SaveCashierDepositsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCashierDepositsCompleted(this, new SaveCashierDepositsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCashierDisbursements", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCashierDisbursements(System.Data.DataSet deposits, out string err) {
            object[] results = this.Invoke("SaveCashierDisbursements", new object[] {
                        deposits});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCashierDisbursements(System.Data.DataSet deposits, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCashierDisbursements", new object[] {
                        deposits}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCashierDisbursements(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCashierDisbursementsAsync(System.Data.DataSet deposits) {
            this.SaveCashierDisbursementsAsync(deposits, null);
        }
        
        /// <remarks/>
        public void SaveCashierDisbursementsAsync(System.Data.DataSet deposits, object userState) {
            if ((this.SaveCashierDisbursementsOperationCompleted == null)) {
                this.SaveCashierDisbursementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCashierDisbursementsOperationCompleted);
            }
            this.InvokeAsync("SaveCashierDisbursements", new object[] {
                        deposits}, this.SaveCashierDisbursementsOperationCompleted, userState);
        }
        
        private void OnSaveCashierDisbursementsOperationCompleted(object arg) {
            if ((this.SaveCashierDisbursementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCashierDisbursementsCompleted(this, new SaveCashierDisbursementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/VoidCashierDeposit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VoidCashierDeposit(int depositid, System.DateTime datevoided, bool reverse, out string err) {
            object[] results = this.Invoke("VoidCashierDeposit", new object[] {
                        depositid,
                        datevoided,
                        reverse});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVoidCashierDeposit(int depositid, System.DateTime datevoided, bool reverse, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("VoidCashierDeposit", new object[] {
                        depositid,
                        datevoided,
                        reverse}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndVoidCashierDeposit(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VoidCashierDepositAsync(int depositid, System.DateTime datevoided, bool reverse) {
            this.VoidCashierDepositAsync(depositid, datevoided, reverse, null);
        }
        
        /// <remarks/>
        public void VoidCashierDepositAsync(int depositid, System.DateTime datevoided, bool reverse, object userState) {
            if ((this.VoidCashierDepositOperationCompleted == null)) {
                this.VoidCashierDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidCashierDepositOperationCompleted);
            }
            this.InvokeAsync("VoidCashierDeposit", new object[] {
                        depositid,
                        datevoided,
                        reverse}, this.VoidCashierDepositOperationCompleted, userState);
        }
        
        private void OnVoidCashierDepositOperationCompleted(object arg) {
            if ((this.VoidCashierDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidCashierDepositCompleted(this, new VoidCashierDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAccountPayments", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountPayments(string acctno, out string err) {
            object[] results = this.Invoke("GetAccountPayments", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountPayments(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountPayments", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAccountPayments(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPaymentsAsync(string acctno) {
            this.GetAccountPaymentsAsync(acctno, null);
        }
        
        /// <remarks/>
        public void GetAccountPaymentsAsync(string acctno, object userState) {
            if ((this.GetAccountPaymentsOperationCompleted == null)) {
                this.GetAccountPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPaymentsOperationCompleted);
            }
            this.InvokeAsync("GetAccountPayments", new object[] {
                        acctno}, this.GetAccountPaymentsOperationCompleted, userState);
        }
        
        private void OnGetAccountPaymentsOperationCompleted(object arg) {
            if ((this.GetAccountPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPaymentsCompleted(this, new GetAccountPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAmountPaid", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetAmountPaid(string acctno, out string err) {
            object[] results = this.Invoke("GetAmountPaid", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAmountPaid(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAmountPaid", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndGetAmountPaid(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmountPaidAsync(string acctno) {
            this.GetAmountPaidAsync(acctno, null);
        }
        
        /// <remarks/>
        public void GetAmountPaidAsync(string acctno, object userState) {
            if ((this.GetAmountPaidOperationCompleted == null)) {
                this.GetAmountPaidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmountPaidOperationCompleted);
            }
            this.InvokeAsync("GetAmountPaid", new object[] {
                        acctno}, this.GetAmountPaidOperationCompleted, userState);
        }
        
        private void OnGetAmountPaidOperationCompleted(object arg) {
            if ((this.GetAmountPaidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmountPaidCompleted(this, new GetAmountPaidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/WriteFintransRecord", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int WriteFintransRecord(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, string footNote, out string err) {
            object[] results = this.Invoke("WriteFintransRecord", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        footNote});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWriteFintransRecord(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, string footNote, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WriteFintransRecord", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        footNote}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndWriteFintransRecord(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WriteFintransRecordAsync(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, string footNote) {
            this.WriteFintransRecordAsync(accountNo, branchNo, amount, transType, bankCode, bankAcctNo, chequeNo, payMethod, countryCode, dateTrans, footNote, null);
        }
        
        /// <remarks/>
        public void WriteFintransRecordAsync(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, string footNote, object userState) {
            if ((this.WriteFintransRecordOperationCompleted == null)) {
                this.WriteFintransRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteFintransRecordOperationCompleted);
            }
            this.InvokeAsync("WriteFintransRecord", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        footNote}, this.WriteFintransRecordOperationCompleted, userState);
        }
        
        private void OnWriteFintransRecordOperationCompleted(object arg) {
            if ((this.WriteFintransRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteFintransRecordCompleted(this, new WriteFintransRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCorrection", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCorrection(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, string footNote, int paymentRef, int authorisedBy, out string err) {
            object[] results = this.Invoke("SaveCorrection", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        footNote,
                        paymentRef,
                        authorisedBy});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCorrection(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, string footNote, int paymentRef, int authorisedBy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCorrection", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        footNote,
                        paymentRef,
                        authorisedBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCorrection(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCorrectionAsync(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, string footNote, int paymentRef, int authorisedBy) {
            this.SaveCorrectionAsync(accountNo, branchNo, amount, transType, bankCode, bankAcctNo, chequeNo, payMethod, countryCode, dateTrans, footNote, paymentRef, authorisedBy, null);
        }
        
        /// <remarks/>
        public void SaveCorrectionAsync(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, string footNote, int paymentRef, int authorisedBy, object userState) {
            if ((this.SaveCorrectionOperationCompleted == null)) {
                this.SaveCorrectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCorrectionOperationCompleted);
            }
            this.InvokeAsync("SaveCorrection", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        footNote,
                        paymentRef,
                        authorisedBy}, this.SaveCorrectionOperationCompleted, userState);
        }
        
        private void OnSaveCorrectionOperationCompleted(object arg) {
            if ((this.SaveCorrectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCorrectionCompleted(this, new SaveCorrectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveBDWCorrection", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveBDWCorrection(string bdwAccountNo, short branchNo, decimal amount, string countryCode, System.DateTime lDateTrans, short lBranchNo, int paymentRef, int authorisedBy, out string err) {
            object[] results = this.Invoke("SaveBDWCorrection", new object[] {
                        bdwAccountNo,
                        branchNo,
                        amount,
                        countryCode,
                        lDateTrans,
                        lBranchNo,
                        paymentRef,
                        authorisedBy});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveBDWCorrection(string bdwAccountNo, short branchNo, decimal amount, string countryCode, System.DateTime lDateTrans, short lBranchNo, int paymentRef, int authorisedBy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveBDWCorrection", new object[] {
                        bdwAccountNo,
                        branchNo,
                        amount,
                        countryCode,
                        lDateTrans,
                        lBranchNo,
                        paymentRef,
                        authorisedBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveBDWCorrection(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBDWCorrectionAsync(string bdwAccountNo, short branchNo, decimal amount, string countryCode, System.DateTime lDateTrans, short lBranchNo, int paymentRef, int authorisedBy) {
            this.SaveBDWCorrectionAsync(bdwAccountNo, branchNo, amount, countryCode, lDateTrans, lBranchNo, paymentRef, authorisedBy, null);
        }
        
        /// <remarks/>
        public void SaveBDWCorrectionAsync(string bdwAccountNo, short branchNo, decimal amount, string countryCode, System.DateTime lDateTrans, short lBranchNo, int paymentRef, int authorisedBy, object userState) {
            if ((this.SaveBDWCorrectionOperationCompleted == null)) {
                this.SaveBDWCorrectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBDWCorrectionOperationCompleted);
            }
            this.InvokeAsync("SaveBDWCorrection", new object[] {
                        bdwAccountNo,
                        branchNo,
                        amount,
                        countryCode,
                        lDateTrans,
                        lBranchNo,
                        paymentRef,
                        authorisedBy}, this.SaveBDWCorrectionOperationCompleted, userState);
        }
        
        private void OnSaveBDWCorrectionOperationCompleted(object arg) {
            if ((this.SaveBDWCorrectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBDWCorrectionCompleted(this, new SaveBDWCorrectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveRefund", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveRefund(
                    string accountNo, 
                    short branchNo, 
                    decimal amount, 
                    string transType, 
                    string bankCode, 
                    string bankAcctNo, 
                    string chequeNo, 
                    short payMethod, 
                    string countryCode, 
                    System.DateTime dateTrans, 
                    System.DateTime linkedDateTrans, 
                    short linkedBranchNo, 
                    int linkedRefNo, 
                    string footNote, 
                    int authorisedBy, 
                    out string err) {
            object[] results = this.Invoke("SaveRefund", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        linkedDateTrans,
                        linkedBranchNo,
                        linkedRefNo,
                        footNote,
                        authorisedBy});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveRefund(
                    string accountNo, 
                    short branchNo, 
                    decimal amount, 
                    string transType, 
                    string bankCode, 
                    string bankAcctNo, 
                    string chequeNo, 
                    short payMethod, 
                    string countryCode, 
                    System.DateTime dateTrans, 
                    System.DateTime linkedDateTrans, 
                    short linkedBranchNo, 
                    int linkedRefNo, 
                    string footNote, 
                    int authorisedBy, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("SaveRefund", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        linkedDateTrans,
                        linkedBranchNo,
                        linkedRefNo,
                        footNote,
                        authorisedBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveRefund(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRefundAsync(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, System.DateTime dateTrans, System.DateTime linkedDateTrans, short linkedBranchNo, int linkedRefNo, string footNote, int authorisedBy) {
            this.SaveRefundAsync(accountNo, branchNo, amount, transType, bankCode, bankAcctNo, chequeNo, payMethod, countryCode, dateTrans, linkedDateTrans, linkedBranchNo, linkedRefNo, footNote, authorisedBy, null);
        }
        
        /// <remarks/>
        public void SaveRefundAsync(
                    string accountNo, 
                    short branchNo, 
                    decimal amount, 
                    string transType, 
                    string bankCode, 
                    string bankAcctNo, 
                    string chequeNo, 
                    short payMethod, 
                    string countryCode, 
                    System.DateTime dateTrans, 
                    System.DateTime linkedDateTrans, 
                    short linkedBranchNo, 
                    int linkedRefNo, 
                    string footNote, 
                    int authorisedBy, 
                    object userState) {
            if ((this.SaveRefundOperationCompleted == null)) {
                this.SaveRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRefundOperationCompleted);
            }
            this.InvokeAsync("SaveRefund", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        dateTrans,
                        linkedDateTrans,
                        linkedBranchNo,
                        linkedRefNo,
                        footNote,
                        authorisedBy}, this.SaveRefundOperationCompleted, userState);
        }
        
        private void OnSaveRefundOperationCompleted(object arg) {
            if ((this.SaveRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRefundCompleted(this, new SaveRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetUnexportedCashierTotals", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnexportedCashierTotals(int branchno, out string err) {
            object[] results = this.Invoke("GetUnexportedCashierTotals", new object[] {
                        branchno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUnexportedCashierTotals(int branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUnexportedCashierTotals", new object[] {
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUnexportedCashierTotals(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnexportedCashierTotalsAsync(int branchno) {
            this.GetUnexportedCashierTotalsAsync(branchno, null);
        }
        
        /// <remarks/>
        public void GetUnexportedCashierTotalsAsync(int branchno, object userState) {
            if ((this.GetUnexportedCashierTotalsOperationCompleted == null)) {
                this.GetUnexportedCashierTotalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnexportedCashierTotalsOperationCompleted);
            }
            this.InvokeAsync("GetUnexportedCashierTotals", new object[] {
                        branchno}, this.GetUnexportedCashierTotalsOperationCompleted, userState);
        }
        
        private void OnGetUnexportedCashierTotalsOperationCompleted(object arg) {
            if ((this.GetUnexportedCashierTotalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnexportedCashierTotalsCompleted(this, new GetUnexportedCashierTotalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetAllTransactionsByAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllTransactionsByAccount(string accountNo, out string err) {
            object[] results = this.Invoke("GetAllTransactionsByAccount", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllTransactionsByAccount(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllTransactionsByAccount", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllTransactionsByAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTransactionsByAccountAsync(string accountNo) {
            this.GetAllTransactionsByAccountAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetAllTransactionsByAccountAsync(string accountNo, object userState) {
            if ((this.GetAllTransactionsByAccountOperationCompleted == null)) {
                this.GetAllTransactionsByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTransactionsByAccountOperationCompleted);
            }
            this.InvokeAsync("GetAllTransactionsByAccount", new object[] {
                        accountNo}, this.GetAllTransactionsByAccountOperationCompleted, userState);
        }
        
        private void OnGetAllTransactionsByAccountOperationCompleted(object arg) {
            if ((this.GetAllTransactionsByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTransactionsByAccountCompleted(this, new GetAllTransactionsByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDDMandateByAccountNo", RequestElementName="GetDDMandateByAccountNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="GetDDMandateByAccountNoResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDDMandateByAccountNoResult")]
        public System.Data.DataSet GetDDMandate(string piCountryCode, string accountNo, out int rowCount, out string err) {
            object[] results = this.Invoke("GetDDMandate", new object[] {
                        piCountryCode,
                        accountNo});
            rowCount = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDDMandate(string piCountryCode, string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDDMandate", new object[] {
                        piCountryCode,
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDDMandate(System.IAsyncResult asyncResult, out int rowCount, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            rowCount = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDDMandateAsync(string piCountryCode, string accountNo) {
            this.GetDDMandateAsync(piCountryCode, accountNo, null);
        }
        
        /// <remarks/>
        public void GetDDMandateAsync(string piCountryCode, string accountNo, object userState) {
            if ((this.GetDDMandateOperationCompleted == null)) {
                this.GetDDMandateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDDMandateOperationCompleted);
            }
            this.InvokeAsync("GetDDMandate", new object[] {
                        piCountryCode,
                        accountNo}, this.GetDDMandateOperationCompleted, userState);
        }
        
        private void OnGetDDMandateOperationCompleted(object arg) {
            if ((this.GetDDMandateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDDMandateCompleted(this, new GetDDMandateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetDDMandate1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDDMandateByMandateId", RequestElementName="GetDDMandateByMandateId", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="GetDDMandateByMandateIdResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDDMandateByMandateIdResult")]
        public System.Data.DataSet GetDDMandate(string piCountryCode, int mandateId, out int rowCount, out string err) {
            object[] results = this.Invoke("GetDDMandate1", new object[] {
                        piCountryCode,
                        mandateId});
            rowCount = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDDMandate1(string piCountryCode, int mandateId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDDMandate1", new object[] {
                        piCountryCode,
                        mandateId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDDMandate1(System.IAsyncResult asyncResult, out int rowCount, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            rowCount = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDDMandate1Async(string piCountryCode, int mandateId) {
            this.GetDDMandate1Async(piCountryCode, mandateId, null);
        }
        
        /// <remarks/>
        public void GetDDMandate1Async(string piCountryCode, int mandateId, object userState) {
            if ((this.GetDDMandate1OperationCompleted == null)) {
                this.GetDDMandate1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDDMandate1OperationCompleted);
            }
            this.InvokeAsync("GetDDMandate1", new object[] {
                        piCountryCode,
                        mandateId}, this.GetDDMandate1OperationCompleted, userState);
        }
        
        private void OnGetDDMandate1OperationCompleted(object arg) {
            if ((this.GetDDMandate1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDDMandate1Completed(this, new GetDDMandate1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AnotherMandate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AnotherMandate(string piCountryCode, int mandateId, string accountNo, out int anMandateId, out System.DateTime startDate, out System.DateTime endDate, out System.DateTime effDate, out string err) {
            object[] results = this.Invoke("AnotherMandate", new object[] {
                        piCountryCode,
                        mandateId,
                        accountNo});
            anMandateId = ((int)(results[1]));
            startDate = ((System.DateTime)(results[2]));
            endDate = ((System.DateTime)(results[3]));
            effDate = ((System.DateTime)(results[4]));
            err = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAnotherMandate(string piCountryCode, int mandateId, string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AnotherMandate", new object[] {
                        piCountryCode,
                        mandateId,
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAnotherMandate(System.IAsyncResult asyncResult, out int anMandateId, out System.DateTime startDate, out System.DateTime endDate, out System.DateTime effDate, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            anMandateId = ((int)(results[1]));
            startDate = ((System.DateTime)(results[2]));
            endDate = ((System.DateTime)(results[3]));
            effDate = ((System.DateTime)(results[4]));
            err = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AnotherMandateAsync(string piCountryCode, int mandateId, string accountNo) {
            this.AnotherMandateAsync(piCountryCode, mandateId, accountNo, null);
        }
        
        /// <remarks/>
        public void AnotherMandateAsync(string piCountryCode, int mandateId, string accountNo, object userState) {
            if ((this.AnotherMandateOperationCompleted == null)) {
                this.AnotherMandateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnotherMandateOperationCompleted);
            }
            this.InvokeAsync("AnotherMandate", new object[] {
                        piCountryCode,
                        mandateId,
                        accountNo}, this.AnotherMandateOperationCompleted, userState);
        }
        
        private void OnAnotherMandateOperationCompleted(object arg) {
            if ((this.AnotherMandateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnotherMandateCompleted(this, new AnotherMandateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/InitDates", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InitDates(string piCountryCode, System.DateTime piRunDate, out string err) {
            object[] results = this.Invoke("InitDates", new object[] {
                        piCountryCode,
                        piRunDate});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitDates(string piCountryCode, System.DateTime piRunDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InitDates", new object[] {
                        piCountryCode,
                        piRunDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndInitDates(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InitDatesAsync(string piCountryCode, System.DateTime piRunDate) {
            this.InitDatesAsync(piCountryCode, piRunDate, null);
        }
        
        /// <remarks/>
        public void InitDatesAsync(string piCountryCode, System.DateTime piRunDate, object userState) {
            if ((this.InitDatesOperationCompleted == null)) {
                this.InitDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitDatesOperationCompleted);
            }
            this.InvokeAsync("InitDates", new object[] {
                        piCountryCode,
                        piRunDate}, this.InitDatesOperationCompleted, userState);
        }
        
        private void OnInitDatesOperationCompleted(object arg) {
            if ((this.InitDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitDatesCompleted(this, new InitDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveMandate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveMandate(string piCountryCode, bool addNewRecord, System.Data.DataSet mandateSet, out string err) {
            object[] results = this.Invoke("SaveMandate", new object[] {
                        piCountryCode,
                        addNewRecord,
                        mandateSet});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveMandate(string piCountryCode, bool addNewRecord, System.Data.DataSet mandateSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveMandate", new object[] {
                        piCountryCode,
                        addNewRecord,
                        mandateSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSaveMandate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMandateAsync(string piCountryCode, bool addNewRecord, System.Data.DataSet mandateSet) {
            this.SaveMandateAsync(piCountryCode, addNewRecord, mandateSet, null);
        }
        
        /// <remarks/>
        public void SaveMandateAsync(string piCountryCode, bool addNewRecord, System.Data.DataSet mandateSet, object userState) {
            if ((this.SaveMandateOperationCompleted == null)) {
                this.SaveMandateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMandateOperationCompleted);
            }
            this.InvokeAsync("SaveMandate", new object[] {
                        piCountryCode,
                        addNewRecord,
                        mandateSet}, this.SaveMandateOperationCompleted, userState);
        }
        
        private void OnSaveMandateOperationCompleted(object arg) {
            if ((this.SaveMandateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMandateCompleted(this, new SaveMandateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDDPaymentExtraList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDDPaymentExtraList(string countryCode, out string err) {
            object[] results = this.Invoke("GetDDPaymentExtraList", new object[] {
                        countryCode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDDPaymentExtraList(string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDDPaymentExtraList", new object[] {
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDDPaymentExtraList(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDDPaymentExtraListAsync(string countryCode) {
            this.GetDDPaymentExtraListAsync(countryCode, null);
        }
        
        /// <remarks/>
        public void GetDDPaymentExtraListAsync(string countryCode, object userState) {
            if ((this.GetDDPaymentExtraListOperationCompleted == null)) {
                this.GetDDPaymentExtraListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDDPaymentExtraListOperationCompleted);
            }
            this.InvokeAsync("GetDDPaymentExtraList", new object[] {
                        countryCode}, this.GetDDPaymentExtraListOperationCompleted, userState);
        }
        
        private void OnGetDDPaymentExtraListOperationCompleted(object arg) {
            if ((this.GetDDPaymentExtraListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDDPaymentExtraListCompleted(this, new GetDDPaymentExtraListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveDDPaymentExtraList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveDDPaymentExtraList(System.Data.DataSet extraPaymentSet, out string acctNo, out string customerName, out string err) {
            object[] results = this.Invoke("SaveDDPaymentExtraList", new object[] {
                        extraPaymentSet});
            acctNo = ((string)(results[1]));
            customerName = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveDDPaymentExtraList(System.Data.DataSet extraPaymentSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveDDPaymentExtraList", new object[] {
                        extraPaymentSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSaveDDPaymentExtraList(System.IAsyncResult asyncResult, out string acctNo, out string customerName, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            acctNo = ((string)(results[1]));
            customerName = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDDPaymentExtraListAsync(System.Data.DataSet extraPaymentSet) {
            this.SaveDDPaymentExtraListAsync(extraPaymentSet, null);
        }
        
        /// <remarks/>
        public void SaveDDPaymentExtraListAsync(System.Data.DataSet extraPaymentSet, object userState) {
            if ((this.SaveDDPaymentExtraListOperationCompleted == null)) {
                this.SaveDDPaymentExtraListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDDPaymentExtraListOperationCompleted);
            }
            this.InvokeAsync("SaveDDPaymentExtraList", new object[] {
                        extraPaymentSet}, this.SaveDDPaymentExtraListOperationCompleted, userState);
        }
        
        private void OnSaveDDPaymentExtraListOperationCompleted(object arg) {
            if ((this.SaveDDPaymentExtraListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDDPaymentExtraListCompleted(this, new SaveDDPaymentExtraListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDDRejectionList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDDRejectionList(string countryCode, out string err) {
            object[] results = this.Invoke("GetDDRejectionList", new object[] {
                        countryCode});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDDRejectionList(string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDDRejectionList", new object[] {
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDDRejectionList(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDDRejectionListAsync(string countryCode) {
            this.GetDDRejectionListAsync(countryCode, null);
        }
        
        /// <remarks/>
        public void GetDDRejectionListAsync(string countryCode, object userState) {
            if ((this.GetDDRejectionListOperationCompleted == null)) {
                this.GetDDRejectionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDDRejectionListOperationCompleted);
            }
            this.InvokeAsync("GetDDRejectionList", new object[] {
                        countryCode}, this.GetDDRejectionListOperationCompleted, userState);
        }
        
        private void OnGetDDRejectionListOperationCompleted(object arg) {
            if ((this.GetDDRejectionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDDRejectionListCompleted(this, new GetDDRejectionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveDDRejectionList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveDDRejectionList(System.Data.DataSet rejectionSet, out string acctNo, out string customerName, out string err) {
            object[] results = this.Invoke("SaveDDRejectionList", new object[] {
                        rejectionSet});
            acctNo = ((string)(results[1]));
            customerName = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveDDRejectionList(System.Data.DataSet rejectionSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveDDRejectionList", new object[] {
                        rejectionSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSaveDDRejectionList(System.IAsyncResult asyncResult, out string acctNo, out string customerName, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            acctNo = ((string)(results[1]));
            customerName = ((string)(results[2]));
            err = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDDRejectionListAsync(System.Data.DataSet rejectionSet) {
            this.SaveDDRejectionListAsync(rejectionSet, null);
        }
        
        /// <remarks/>
        public void SaveDDRejectionListAsync(System.Data.DataSet rejectionSet, object userState) {
            if ((this.SaveDDRejectionListOperationCompleted == null)) {
                this.SaveDDRejectionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDDRejectionListOperationCompleted);
            }
            this.InvokeAsync("SaveDDRejectionList", new object[] {
                        rejectionSet}, this.SaveDDRejectionListOperationCompleted, userState);
        }
        
        private void OnSaveDDRejectionListOperationCompleted(object arg) {
            if ((this.SaveDDRejectionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDDRejectionListCompleted(this, new SaveDDRejectionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/WriteGeneralTransaction", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int WriteGeneralTransaction(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, string footNote, int creditDebit, out string err) {
            object[] results = this.Invoke("WriteGeneralTransaction", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        footNote,
                        creditDebit});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWriteGeneralTransaction(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, string footNote, int creditDebit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WriteGeneralTransaction", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        footNote,
                        creditDebit}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndWriteGeneralTransaction(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WriteGeneralTransactionAsync(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, string footNote, int creditDebit) {
            this.WriteGeneralTransactionAsync(accountNo, branchNo, amount, transType, bankCode, bankAcctNo, chequeNo, payMethod, countryCode, footNote, creditDebit, null);
        }
        
        /// <remarks/>
        public void WriteGeneralTransactionAsync(string accountNo, short branchNo, decimal amount, string transType, string bankCode, string bankAcctNo, string chequeNo, short payMethod, string countryCode, string footNote, int creditDebit, object userState) {
            if ((this.WriteGeneralTransactionOperationCompleted == null)) {
                this.WriteGeneralTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteGeneralTransactionOperationCompleted);
            }
            this.InvokeAsync("WriteGeneralTransaction", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        transType,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        countryCode,
                        footNote,
                        creditDebit}, this.WriteGeneralTransactionOperationCompleted, userState);
        }
        
        private void OnWriteGeneralTransactionOperationCompleted(object arg) {
            if ((this.WriteGeneralTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteGeneralTransactionCompleted(this, new WriteGeneralTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/WriteFreeInstalment", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int WriteFreeInstalment(string accountNo, short branchNo, decimal amount, string countryCode, out string err) {
            object[] results = this.Invoke("WriteFreeInstalment", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        countryCode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWriteFreeInstalment(string accountNo, short branchNo, decimal amount, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WriteFreeInstalment", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndWriteFreeInstalment(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WriteFreeInstalmentAsync(string accountNo, short branchNo, decimal amount, string countryCode) {
            this.WriteFreeInstalmentAsync(accountNo, branchNo, amount, countryCode, null);
        }
        
        /// <remarks/>
        public void WriteFreeInstalmentAsync(string accountNo, short branchNo, decimal amount, string countryCode, object userState) {
            if ((this.WriteFreeInstalmentOperationCompleted == null)) {
                this.WriteFreeInstalmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteFreeInstalmentOperationCompleted);
            }
            this.InvokeAsync("WriteFreeInstalment", new object[] {
                        accountNo,
                        branchNo,
                        amount,
                        countryCode}, this.WriteFreeInstalmentOperationCompleted, userState);
        }
        
        private void OnWriteFreeInstalmentOperationCompleted(object arg) {
            if ((this.WriteFreeInstalmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteFreeInstalmentCompleted(this, new WriteFreeInstalmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/HasCashierTotalled", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasCashierTotalled(int empeeno, out string err) {
            object[] results = this.Invoke("HasCashierTotalled", new object[] {
                        empeeno});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHasCashierTotalled(int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HasCashierTotalled", new object[] {
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndHasCashierTotalled(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasCashierTotalledAsync(int empeeno) {
            this.HasCashierTotalledAsync(empeeno, null);
        }
        
        /// <remarks/>
        public void HasCashierTotalledAsync(int empeeno, object userState) {
            if ((this.HasCashierTotalledOperationCompleted == null)) {
                this.HasCashierTotalledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasCashierTotalledOperationCompleted);
            }
            this.InvokeAsync("HasCashierTotalled", new object[] {
                        empeeno}, this.HasCashierTotalledOperationCompleted, userState);
        }
        
        private void OnHasCashierTotalledOperationCompleted(object arg) {
            if ((this.HasCashierTotalledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasCashierTotalledCompleted(this, new HasCashierTotalledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetUnexportedCashierTotals1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetUnexportedCashierSummery", RequestElementName="GetUnexportedCashierSummery", RequestNamespace="http://strategicthought.com/webservices/", ResponseElementName="GetUnexportedCashierSummeryResponse", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetUnexportedCashierSummeryResult")]
        public System.Data.DataSet GetUnexportedCashierTotals(short branchno, out decimal total, out string err) {
            object[] results = this.Invoke("GetUnexportedCashierTotals1", new object[] {
                        branchno});
            total = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUnexportedCashierTotals1(short branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUnexportedCashierTotals1", new object[] {
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUnexportedCashierTotals1(System.IAsyncResult asyncResult, out decimal total, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            total = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnexportedCashierTotals1Async(short branchno) {
            this.GetUnexportedCashierTotals1Async(branchno, null);
        }
        
        /// <remarks/>
        public void GetUnexportedCashierTotals1Async(short branchno, object userState) {
            if ((this.GetUnexportedCashierTotals1OperationCompleted == null)) {
                this.GetUnexportedCashierTotals1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnexportedCashierTotals1OperationCompleted);
            }
            this.InvokeAsync("GetUnexportedCashierTotals1", new object[] {
                        branchno}, this.GetUnexportedCashierTotals1OperationCompleted, userState);
        }
        
        private void OnGetUnexportedCashierTotals1OperationCompleted(object arg) {
            if ((this.GetUnexportedCashierTotals1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnexportedCashierTotals1Completed(this, new GetUnexportedCashierTotals1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashierTotalsBreakdown", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashierTotalsBreakdown(int id, out string err) {
            object[] results = this.Invoke("GetCashierTotalsBreakdown", new object[] {
                        id});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashierTotalsBreakdown(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashierTotalsBreakdown", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashierTotalsBreakdown(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashierTotalsBreakdownAsync(int id) {
            this.GetCashierTotalsBreakdownAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCashierTotalsBreakdownAsync(int id, object userState) {
            if ((this.GetCashierTotalsBreakdownOperationCompleted == null)) {
                this.GetCashierTotalsBreakdownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierTotalsBreakdownOperationCompleted);
            }
            this.InvokeAsync("GetCashierTotalsBreakdown", new object[] {
                        id}, this.GetCashierTotalsBreakdownOperationCompleted, userState);
        }
        
        private void OnGetCashierTotalsBreakdownOperationCompleted(object arg) {
            if ((this.GetCashierTotalsBreakdownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierTotalsBreakdownCompleted(this, new GetCashierTotalsBreakdownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetExchangeRates", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExchangeRates(out string err) {
            object[] results = this.Invoke("GetExchangeRates", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExchangeRates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExchangeRates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetExchangeRates(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRatesAsync() {
            this.GetExchangeRatesAsync(null);
        }
        
        /// <remarks/>
        public void GetExchangeRatesAsync(object userState) {
            if ((this.GetExchangeRatesOperationCompleted == null)) {
                this.GetExchangeRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRatesOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRates", new object[0], this.GetExchangeRatesOperationCompleted, userState);
        }
        
        private void OnGetExchangeRatesOperationCompleted(object arg) {
            if ((this.GetExchangeRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRatesCompleted(this, new GetExchangeRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetExchangeRateHistory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExchangeRateHistory(string currency, System.DateTime dateFrom, System.DateTime dateTo, out string err) {
            object[] results = this.Invoke("GetExchangeRateHistory", new object[] {
                        currency,
                        dateFrom,
                        dateTo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExchangeRateHistory(string currency, System.DateTime dateFrom, System.DateTime dateTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExchangeRateHistory", new object[] {
                        currency,
                        dateFrom,
                        dateTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetExchangeRateHistory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRateHistoryAsync(string currency, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetExchangeRateHistoryAsync(currency, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetExchangeRateHistoryAsync(string currency, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetExchangeRateHistoryOperationCompleted == null)) {
                this.GetExchangeRateHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRateHistoryOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRateHistory", new object[] {
                        currency,
                        dateFrom,
                        dateTo}, this.GetExchangeRateHistoryOperationCompleted, userState);
        }
        
        private void OnGetExchangeRateHistoryOperationCompleted(object arg) {
            if ((this.GetExchangeRateHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRateHistoryCompleted(this, new GetExchangeRateHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalcForeignTender", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalcForeignTender(int currency, decimal localTender, out string err) {
            object[] results = this.Invoke("CalcForeignTender", new object[] {
                        currency,
                        localTender});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalcForeignTender(int currency, decimal localTender, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalcForeignTender", new object[] {
                        currency,
                        localTender}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndCalcForeignTender(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalcForeignTenderAsync(int currency, decimal localTender) {
            this.CalcForeignTenderAsync(currency, localTender, null);
        }
        
        /// <remarks/>
        public void CalcForeignTenderAsync(int currency, decimal localTender, object userState) {
            if ((this.CalcForeignTenderOperationCompleted == null)) {
                this.CalcForeignTenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcForeignTenderOperationCompleted);
            }
            this.InvokeAsync("CalcForeignTender", new object[] {
                        currency,
                        localTender}, this.CalcForeignTenderOperationCompleted, userState);
        }
        
        private void OnCalcForeignTenderOperationCompleted(object arg) {
            if ((this.CalcForeignTenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcForeignTenderCompleted(this, new CalcForeignTenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CalcExchangeAmount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalcExchangeAmount(int fromCurrency, int toCurrency, decimal amount, out string err) {
            object[] results = this.Invoke("CalcExchangeAmount", new object[] {
                        fromCurrency,
                        toCurrency,
                        amount});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalcExchangeAmount(int fromCurrency, int toCurrency, decimal amount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalcExchangeAmount", new object[] {
                        fromCurrency,
                        toCurrency,
                        amount}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndCalcExchangeAmount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalcExchangeAmountAsync(int fromCurrency, int toCurrency, decimal amount) {
            this.CalcExchangeAmountAsync(fromCurrency, toCurrency, amount, null);
        }
        
        /// <remarks/>
        public void CalcExchangeAmountAsync(int fromCurrency, int toCurrency, decimal amount, object userState) {
            if ((this.CalcExchangeAmountOperationCompleted == null)) {
                this.CalcExchangeAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcExchangeAmountOperationCompleted);
            }
            this.InvokeAsync("CalcExchangeAmount", new object[] {
                        fromCurrency,
                        toCurrency,
                        amount}, this.CalcExchangeAmountOperationCompleted, userState);
        }
        
        private void OnCalcExchangeAmountOperationCompleted(object arg) {
            if ((this.CalcExchangeAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcExchangeAmountCompleted(this, new CalcExchangeAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveExchangeRates", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string SaveExchangeRates(System.Data.DataSet exchangeRateSet) {
            object[] results = this.Invoke("SaveExchangeRates", new object[] {
                        exchangeRateSet});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveExchangeRates(System.Data.DataSet exchangeRateSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveExchangeRates", new object[] {
                        exchangeRateSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSaveExchangeRates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExchangeRatesAsync(System.Data.DataSet exchangeRateSet) {
            this.SaveExchangeRatesAsync(exchangeRateSet, null);
        }
        
        /// <remarks/>
        public void SaveExchangeRatesAsync(System.Data.DataSet exchangeRateSet, object userState) {
            if ((this.SaveExchangeRatesOperationCompleted == null)) {
                this.SaveExchangeRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExchangeRatesOperationCompleted);
            }
            this.InvokeAsync("SaveExchangeRates", new object[] {
                        exchangeRateSet}, this.SaveExchangeRatesOperationCompleted, userState);
        }
        
        private void OnSaveExchangeRatesOperationCompleted(object arg) {
            if ((this.SaveExchangeRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExchangeRatesCompleted(this, new SaveExchangeRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ValidateGiftVoucher", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ValidateGiftVoucher(string reference, bool courts, bool includeRedeemed, out decimal voucherValue, out System.DateTime expiry, out bool redeemed, out string err) {
            object[] results = this.Invoke("ValidateGiftVoucher", new object[] {
                        reference,
                        courts,
                        includeRedeemed});
            voucherValue = ((decimal)(results[1]));
            expiry = ((System.DateTime)(results[2]));
            redeemed = ((bool)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateGiftVoucher(string reference, bool courts, bool includeRedeemed, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateGiftVoucher", new object[] {
                        reference,
                        courts,
                        includeRedeemed}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndValidateGiftVoucher(System.IAsyncResult asyncResult, out decimal voucherValue, out System.DateTime expiry, out bool redeemed, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            voucherValue = ((decimal)(results[1]));
            expiry = ((System.DateTime)(results[2]));
            redeemed = ((bool)(results[3]));
            err = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateGiftVoucherAsync(string reference, bool courts, bool includeRedeemed) {
            this.ValidateGiftVoucherAsync(reference, courts, includeRedeemed, null);
        }
        
        /// <remarks/>
        public void ValidateGiftVoucherAsync(string reference, bool courts, bool includeRedeemed, object userState) {
            if ((this.ValidateGiftVoucherOperationCompleted == null)) {
                this.ValidateGiftVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateGiftVoucherOperationCompleted);
            }
            this.InvokeAsync("ValidateGiftVoucher", new object[] {
                        reference,
                        courts,
                        includeRedeemed}, this.ValidateGiftVoucherOperationCompleted, userState);
        }
        
        private void OnValidateGiftVoucherOperationCompleted(object arg) {
            if ((this.ValidateGiftVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateGiftVoucherCompleted(this, new ValidateGiftVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/JournalEnquiryGet", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet JournalEnquiryGet(System.DateTime datefirst, System.DateTime datelast, int firstrefno, int lastrefno, int empeeno, int branch, int combination, out string err) {
            object[] results = this.Invoke("JournalEnquiryGet", new object[] {
                        datefirst,
                        datelast,
                        firstrefno,
                        lastrefno,
                        empeeno,
                        branch,
                        combination});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginJournalEnquiryGet(System.DateTime datefirst, System.DateTime datelast, int firstrefno, int lastrefno, int empeeno, int branch, int combination, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("JournalEnquiryGet", new object[] {
                        datefirst,
                        datelast,
                        firstrefno,
                        lastrefno,
                        empeeno,
                        branch,
                        combination}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndJournalEnquiryGet(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void JournalEnquiryGetAsync(System.DateTime datefirst, System.DateTime datelast, int firstrefno, int lastrefno, int empeeno, int branch, int combination) {
            this.JournalEnquiryGetAsync(datefirst, datelast, firstrefno, lastrefno, empeeno, branch, combination, null);
        }
        
        /// <remarks/>
        public void JournalEnquiryGetAsync(System.DateTime datefirst, System.DateTime datelast, int firstrefno, int lastrefno, int empeeno, int branch, int combination, object userState) {
            if ((this.JournalEnquiryGetOperationCompleted == null)) {
                this.JournalEnquiryGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJournalEnquiryGetOperationCompleted);
            }
            this.InvokeAsync("JournalEnquiryGet", new object[] {
                        datefirst,
                        datelast,
                        firstrefno,
                        lastrefno,
                        empeeno,
                        branch,
                        combination}, this.JournalEnquiryGetOperationCompleted, userState);
        }
        
        private void OnJournalEnquiryGetOperationCompleted(object arg) {
            if ((this.JournalEnquiryGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JournalEnquiryGetCompleted(this, new JournalEnquiryGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SellGiftVoucher", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SellGiftVoucher(string reference, decimal voucherValue, System.DateTime dateExpiry, string countryCode, string bankCode, string bankAcctNo, string chequeNo, short payMethod, short branchNo, bool free, bool privilegeClub, System.Data.DataSet accountSet, out string err) {
            object[] results = this.Invoke("SellGiftVoucher", new object[] {
                        reference,
                        voucherValue,
                        dateExpiry,
                        countryCode,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        branchNo,
                        free,
                        privilegeClub,
                        accountSet});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSellGiftVoucher(string reference, decimal voucherValue, System.DateTime dateExpiry, string countryCode, string bankCode, string bankAcctNo, string chequeNo, short payMethod, short branchNo, bool free, bool privilegeClub, System.Data.DataSet accountSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SellGiftVoucher", new object[] {
                        reference,
                        voucherValue,
                        dateExpiry,
                        countryCode,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        branchNo,
                        free,
                        privilegeClub,
                        accountSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSellGiftVoucher(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SellGiftVoucherAsync(string reference, decimal voucherValue, System.DateTime dateExpiry, string countryCode, string bankCode, string bankAcctNo, string chequeNo, short payMethod, short branchNo, bool free, bool privilegeClub, System.Data.DataSet accountSet) {
            this.SellGiftVoucherAsync(reference, voucherValue, dateExpiry, countryCode, bankCode, bankAcctNo, chequeNo, payMethod, branchNo, free, privilegeClub, accountSet, null);
        }
        
        /// <remarks/>
        public void SellGiftVoucherAsync(string reference, decimal voucherValue, System.DateTime dateExpiry, string countryCode, string bankCode, string bankAcctNo, string chequeNo, short payMethod, short branchNo, bool free, bool privilegeClub, System.Data.DataSet accountSet, object userState) {
            if ((this.SellGiftVoucherOperationCompleted == null)) {
                this.SellGiftVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSellGiftVoucherOperationCompleted);
            }
            this.InvokeAsync("SellGiftVoucher", new object[] {
                        reference,
                        voucherValue,
                        dateExpiry,
                        countryCode,
                        bankCode,
                        bankAcctNo,
                        chequeNo,
                        payMethod,
                        branchNo,
                        free,
                        privilegeClub,
                        accountSet}, this.SellGiftVoucherOperationCompleted, userState);
        }
        
        private void OnSellGiftVoucherOperationCompleted(object arg) {
            if ((this.SellGiftVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SellGiftVoucherCompleted(this, new SellGiftVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashiersWithOutstandingPayments", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashiersWithOutstandingPayments(short branchno, out string err) {
            object[] results = this.Invoke("GetCashiersWithOutstandingPayments", new object[] {
                        branchno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashiersWithOutstandingPayments(short branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashiersWithOutstandingPayments", new object[] {
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashiersWithOutstandingPayments(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashiersWithOutstandingPaymentsAsync(short branchno) {
            this.GetCashiersWithOutstandingPaymentsAsync(branchno, null);
        }
        
        /// <remarks/>
        public void GetCashiersWithOutstandingPaymentsAsync(short branchno, object userState) {
            if ((this.GetCashiersWithOutstandingPaymentsOperationCompleted == null)) {
                this.GetCashiersWithOutstandingPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashiersWithOutstandingPaymentsOperationCompleted);
            }
            this.InvokeAsync("GetCashiersWithOutstandingPayments", new object[] {
                        branchno}, this.GetCashiersWithOutstandingPaymentsOperationCompleted, userState);
        }
        
        private void OnGetCashiersWithOutstandingPaymentsOperationCompleted(object arg) {
            if ((this.GetCashiersWithOutstandingPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashiersWithOutstandingPaymentsCompleted(this, new GetCashiersWithOutstandingPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/RedeemOtherGiftVoucher", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RedeemOtherGiftVoucher(string reference, string acctNoCompany, decimal voucherValue, out string err) {
            object[] results = this.Invoke("RedeemOtherGiftVoucher", new object[] {
                        reference,
                        acctNoCompany,
                        voucherValue});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRedeemOtherGiftVoucher(string reference, string acctNoCompany, decimal voucherValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RedeemOtherGiftVoucher", new object[] {
                        reference,
                        acctNoCompany,
                        voucherValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRedeemOtherGiftVoucher(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RedeemOtherGiftVoucherAsync(string reference, string acctNoCompany, decimal voucherValue) {
            this.RedeemOtherGiftVoucherAsync(reference, acctNoCompany, voucherValue, null);
        }
        
        /// <remarks/>
        public void RedeemOtherGiftVoucherAsync(string reference, string acctNoCompany, decimal voucherValue, object userState) {
            if ((this.RedeemOtherGiftVoucherOperationCompleted == null)) {
                this.RedeemOtherGiftVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRedeemOtherGiftVoucherOperationCompleted);
            }
            this.InvokeAsync("RedeemOtherGiftVoucher", new object[] {
                        reference,
                        acctNoCompany,
                        voucherValue}, this.RedeemOtherGiftVoucherOperationCompleted, userState);
        }
        
        private void OnRedeemOtherGiftVoucherOperationCompleted(object arg) {
            if ((this.RedeemOtherGiftVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RedeemOtherGiftVoucherCompleted(this, new RedeemOtherGiftVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCashDrawerOpen", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCashDrawerOpen(int user, string reason, string tillid, out string err) {
            object[] results = this.Invoke("SaveCashDrawerOpen", new object[] {
                        user,
                        reason,
                        tillid});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCashDrawerOpen(int user, string reason, string tillid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCashDrawerOpen", new object[] {
                        user,
                        reason,
                        tillid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCashDrawerOpen(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCashDrawerOpenAsync(int user, string reason, string tillid) {
            this.SaveCashDrawerOpenAsync(user, reason, tillid, null);
        }
        
        /// <remarks/>
        public void SaveCashDrawerOpenAsync(int user, string reason, string tillid, object userState) {
            if ((this.SaveCashDrawerOpenOperationCompleted == null)) {
                this.SaveCashDrawerOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCashDrawerOpenOperationCompleted);
            }
            this.InvokeAsync("SaveCashDrawerOpen", new object[] {
                        user,
                        reason,
                        tillid}, this.SaveCashDrawerOpenOperationCompleted, userState);
        }
        
        private void OnSaveCashDrawerOpenOperationCompleted(object arg) {
            if ((this.SaveCashDrawerOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCashDrawerOpenCompleted(this, new SaveCashDrawerOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadCashDrawerOpen", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadCashDrawerOpen(int user, out string err) {
            object[] results = this.Invoke("LoadCashDrawerOpen", new object[] {
                        user});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadCashDrawerOpen(int user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadCashDrawerOpen", new object[] {
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadCashDrawerOpen(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCashDrawerOpenAsync(int user) {
            this.LoadCashDrawerOpenAsync(user, null);
        }
        
        /// <remarks/>
        public void LoadCashDrawerOpenAsync(int user, object userState) {
            if ((this.LoadCashDrawerOpenOperationCompleted == null)) {
                this.LoadCashDrawerOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCashDrawerOpenOperationCompleted);
            }
            this.InvokeAsync("LoadCashDrawerOpen", new object[] {
                        user}, this.LoadCashDrawerOpenOperationCompleted, userState);
        }
        
        private void OnLoadCashDrawerOpenOperationCompleted(object arg) {
            if ((this.LoadCashDrawerOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCashDrawerOpenCompleted(this, new LoadCashDrawerOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsDepositReferenceUnique", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDepositReferenceUnique(string reference, out string err) {
            object[] results = this.Invoke("IsDepositReferenceUnique", new object[] {
                        reference});
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsDepositReferenceUnique(string reference, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsDepositReferenceUnique", new object[] {
                        reference}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsDepositReferenceUnique(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDepositReferenceUniqueAsync(string reference) {
            this.IsDepositReferenceUniqueAsync(reference, null);
        }
        
        /// <remarks/>
        public void IsDepositReferenceUniqueAsync(string reference, object userState) {
            if ((this.IsDepositReferenceUniqueOperationCompleted == null)) {
                this.IsDepositReferenceUniqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDepositReferenceUniqueOperationCompleted);
            }
            this.InvokeAsync("IsDepositReferenceUnique", new object[] {
                        reference}, this.IsDepositReferenceUniqueOperationCompleted, userState);
        }
        
        private void OnIsDepositReferenceUniqueOperationCompleted(object arg) {
            if ((this.IsDepositReferenceUniqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDepositReferenceUniqueCompleted(this, new IsDepositReferenceUniqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashierOutstandingIncome", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashierOutstandingIncome(short branchNo, out string err) {
            object[] results = this.Invoke("GetCashierOutstandingIncome", new object[] {
                        branchNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashierOutstandingIncome(short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashierOutstandingIncome", new object[] {
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashierOutstandingIncome(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashierOutstandingIncomeAsync(short branchNo) {
            this.GetCashierOutstandingIncomeAsync(branchNo, null);
        }
        
        /// <remarks/>
        public void GetCashierOutstandingIncomeAsync(short branchNo, object userState) {
            if ((this.GetCashierOutstandingIncomeOperationCompleted == null)) {
                this.GetCashierOutstandingIncomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierOutstandingIncomeOperationCompleted);
            }
            this.InvokeAsync("GetCashierOutstandingIncome", new object[] {
                        branchNo}, this.GetCashierOutstandingIncomeOperationCompleted, userState);
        }
        
        private void OnGetCashierOutstandingIncomeOperationCompleted(object arg) {
            if ((this.GetCashierOutstandingIncomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierOutstandingIncomeCompleted(this, new GetCashierOutstandingIncomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashierOutstandingIncomeByPayMethod", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashierOutstandingIncomeByPayMethod(int empeeno, short branchno, out string err) {
            object[] results = this.Invoke("GetCashierOutstandingIncomeByPayMethod", new object[] {
                        empeeno,
                        branchno});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashierOutstandingIncomeByPayMethod(int empeeno, short branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashierOutstandingIncomeByPayMethod", new object[] {
                        empeeno,
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashierOutstandingIncomeByPayMethod(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashierOutstandingIncomeByPayMethodAsync(int empeeno, short branchno) {
            this.GetCashierOutstandingIncomeByPayMethodAsync(empeeno, branchno, null);
        }
        
        /// <remarks/>
        public void GetCashierOutstandingIncomeByPayMethodAsync(int empeeno, short branchno, object userState) {
            if ((this.GetCashierOutstandingIncomeByPayMethodOperationCompleted == null)) {
                this.GetCashierOutstandingIncomeByPayMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierOutstandingIncomeByPayMethodOperationCompleted);
            }
            this.InvokeAsync("GetCashierOutstandingIncomeByPayMethod", new object[] {
                        empeeno,
                        branchno}, this.GetCashierOutstandingIncomeByPayMethodOperationCompleted, userState);
        }
        
        private void OnGetCashierOutstandingIncomeByPayMethodOperationCompleted(object arg) {
            if ((this.GetCashierOutstandingIncomeByPayMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierOutstandingIncomeByPayMethodCompleted(this, new GetCashierOutstandingIncomeByPayMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCashierTotalsSummary", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCashierTotalsSummary(short branchno, System.DateTime datefrom, System.DateTime dateto, out string err) {
            object[] results = this.Invoke("GetCashierTotalsSummary", new object[] {
                        branchno,
                        datefrom,
                        dateto});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCashierTotalsSummary(short branchno, System.DateTime datefrom, System.DateTime dateto, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCashierTotalsSummary", new object[] {
                        branchno,
                        datefrom,
                        dateto}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCashierTotalsSummary(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashierTotalsSummaryAsync(short branchno, System.DateTime datefrom, System.DateTime dateto) {
            this.GetCashierTotalsSummaryAsync(branchno, datefrom, dateto, null);
        }
        
        /// <remarks/>
        public void GetCashierTotalsSummaryAsync(short branchno, System.DateTime datefrom, System.DateTime dateto, object userState) {
            if ((this.GetCashierTotalsSummaryOperationCompleted == null)) {
                this.GetCashierTotalsSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashierTotalsSummaryOperationCompleted);
            }
            this.InvokeAsync("GetCashierTotalsSummary", new object[] {
                        branchno,
                        datefrom,
                        dateto}, this.GetCashierTotalsSummaryOperationCompleted, userState);
        }
        
        private void OnGetCashierTotalsSummaryOperationCompleted(object arg) {
            if ((this.GetCashierTotalsSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashierTotalsSummaryCompleted(this, new GetCashierTotalsSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LockDepositScreen", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LockDepositScreen(short branchno, out string err) {
            object[] results = this.Invoke("LockDepositScreen", new object[] {
                        branchno});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLockDepositScreen(short branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LockDepositScreen", new object[] {
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndLockDepositScreen(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LockDepositScreenAsync(short branchno) {
            this.LockDepositScreenAsync(branchno, null);
        }
        
        /// <remarks/>
        public void LockDepositScreenAsync(short branchno, object userState) {
            if ((this.LockDepositScreenOperationCompleted == null)) {
                this.LockDepositScreenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockDepositScreenOperationCompleted);
            }
            this.InvokeAsync("LockDepositScreen", new object[] {
                        branchno}, this.LockDepositScreenOperationCompleted, userState);
        }
        
        private void OnLockDepositScreenOperationCompleted(object arg) {
            if ((this.LockDepositScreenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockDepositScreenCompleted(this, new LockDepositScreenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UnLockDepositScreen", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnLockDepositScreen(short branchno, out string err) {
            object[] results = this.Invoke("UnLockDepositScreen", new object[] {
                        branchno});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnLockDepositScreen(short branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnLockDepositScreen", new object[] {
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUnLockDepositScreen(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnLockDepositScreenAsync(short branchno) {
            this.UnLockDepositScreenAsync(branchno, null);
        }
        
        /// <remarks/>
        public void UnLockDepositScreenAsync(short branchno, object userState) {
            if ((this.UnLockDepositScreenOperationCompleted == null)) {
                this.UnLockDepositScreenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnLockDepositScreenOperationCompleted);
            }
            this.InvokeAsync("UnLockDepositScreen", new object[] {
                        branchno}, this.UnLockDepositScreenOperationCompleted, userState);
        }
        
        private void OnUnLockDepositScreenOperationCompleted(object arg) {
            if ((this.UnLockDepositScreenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnLockDepositScreenCompleted(this, new UnLockDepositScreenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CashierMustDeposit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CashierMustDeposit(int empeeno, out bool mustDeposit, out string err) {
            object[] results = this.Invoke("CashierMustDeposit", new object[] {
                        empeeno});
            mustDeposit = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCashierMustDeposit(int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CashierMustDeposit", new object[] {
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCashierMustDeposit(System.IAsyncResult asyncResult, out bool mustDeposit, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            mustDeposit = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CashierMustDepositAsync(int empeeno) {
            this.CashierMustDepositAsync(empeeno, null);
        }
        
        /// <remarks/>
        public void CashierMustDepositAsync(int empeeno, object userState) {
            if ((this.CashierMustDepositOperationCompleted == null)) {
                this.CashierMustDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCashierMustDepositOperationCompleted);
            }
            this.InvokeAsync("CashierMustDeposit", new object[] {
                        empeeno}, this.CashierMustDepositOperationCompleted, userState);
        }
        
        private void OnCashierMustDepositOperationCompleted(object arg) {
            if ((this.CashierMustDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CashierMustDepositCompleted(this, new CashierMustDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetOutstandingSafeDeposits", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOutstandingSafeDeposits(int empeeno, short branchno, out decimal safeDeposits, out string err) {
            object[] results = this.Invoke("GetOutstandingSafeDeposits", new object[] {
                        empeeno,
                        branchno});
            safeDeposits = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOutstandingSafeDeposits(int empeeno, short branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOutstandingSafeDeposits", new object[] {
                        empeeno,
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetOutstandingSafeDeposits(System.IAsyncResult asyncResult, out decimal safeDeposits, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            safeDeposits = ((decimal)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutstandingSafeDepositsAsync(int empeeno, short branchno) {
            this.GetOutstandingSafeDepositsAsync(empeeno, branchno, null);
        }
        
        /// <remarks/>
        public void GetOutstandingSafeDepositsAsync(int empeeno, short branchno, object userState) {
            if ((this.GetOutstandingSafeDepositsOperationCompleted == null)) {
                this.GetOutstandingSafeDepositsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutstandingSafeDepositsOperationCompleted);
            }
            this.InvokeAsync("GetOutstandingSafeDeposits", new object[] {
                        empeeno,
                        branchno}, this.GetOutstandingSafeDepositsOperationCompleted, userState);
        }
        
        private void OnGetOutstandingSafeDepositsOperationCompleted(object arg) {
            if ((this.GetOutstandingSafeDepositsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutstandingSafeDepositsCompleted(this, new GetOutstandingSafeDepositsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ReverseSafeDeposits", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReverseSafeDeposits(int empeeno, out string err) {
            object[] results = this.Invoke("ReverseSafeDeposits", new object[] {
                        empeeno});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReverseSafeDeposits(int empeeno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReverseSafeDeposits", new object[] {
                        empeeno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndReverseSafeDeposits(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseSafeDepositsAsync(int empeeno) {
            this.ReverseSafeDepositsAsync(empeeno, null);
        }
        
        /// <remarks/>
        public void ReverseSafeDepositsAsync(int empeeno, object userState) {
            if ((this.ReverseSafeDepositsOperationCompleted == null)) {
                this.ReverseSafeDepositsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseSafeDepositsOperationCompleted);
            }
            this.InvokeAsync("ReverseSafeDeposits", new object[] {
                        empeeno}, this.ReverseSafeDepositsOperationCompleted, userState);
        }
        
        private void OnReverseSafeDepositsOperationCompleted(object arg) {
            if ((this.ReverseSafeDepositsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseSafeDepositsCompleted(this, new ReverseSafeDepositsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPaymentHolidays", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentHolidays(string customerID, out string err) {
            object[] results = this.Invoke("GetPaymentHolidays", new object[] {
                        customerID});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPaymentHolidays(string customerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPaymentHolidays", new object[] {
                        customerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPaymentHolidays(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentHolidaysAsync(string customerID) {
            this.GetPaymentHolidaysAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetPaymentHolidaysAsync(string customerID, object userState) {
            if ((this.GetPaymentHolidaysOperationCompleted == null)) {
                this.GetPaymentHolidaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentHolidaysOperationCompleted);
            }
            this.InvokeAsync("GetPaymentHolidays", new object[] {
                        customerID}, this.GetPaymentHolidaysOperationCompleted, userState);
        }
        
        private void OnGetPaymentHolidaysOperationCompleted(object arg) {
            if ((this.GetPaymentHolidaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentHolidaysCompleted(this, new GetPaymentHolidaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPaymentReturnedCheques", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentReturnedCheques(string customerId, out bool authorisationRequired, out string err) {
            object[] results = this.Invoke("GetPaymentReturnedCheques", new object[] {
                        customerId});
            authorisationRequired = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPaymentReturnedCheques(string customerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPaymentReturnedCheques", new object[] {
                        customerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPaymentReturnedCheques(System.IAsyncResult asyncResult, out bool authorisationRequired, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            authorisationRequired = ((bool)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentReturnedChequesAsync(string customerId) {
            this.GetPaymentReturnedChequesAsync(customerId, null);
        }
        
        /// <remarks/>
        public void GetPaymentReturnedChequesAsync(string customerId, object userState) {
            if ((this.GetPaymentReturnedChequesOperationCompleted == null)) {
                this.GetPaymentReturnedChequesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentReturnedChequesOperationCompleted);
            }
            this.InvokeAsync("GetPaymentReturnedCheques", new object[] {
                        customerId}, this.GetPaymentReturnedChequesOperationCompleted, userState);
        }
        
        private void OnGetPaymentReturnedChequesOperationCompleted(object arg) {
            if ((this.GetPaymentReturnedChequesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentReturnedChequesCompleted(this, new GetPaymentReturnedChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SavePaymentHoliday", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SavePaymentHoliday(string accountNo, int agreementNo, System.DateTime newDueDate, System.DateTime dateTaken, out string err) {
            object[] results = this.Invoke("SavePaymentHoliday", new object[] {
                        accountNo,
                        agreementNo,
                        newDueDate,
                        dateTaken});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSavePaymentHoliday(string accountNo, int agreementNo, System.DateTime newDueDate, System.DateTime dateTaken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SavePaymentHoliday", new object[] {
                        accountNo,
                        agreementNo,
                        newDueDate,
                        dateTaken}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSavePaymentHoliday(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SavePaymentHolidayAsync(string accountNo, int agreementNo, System.DateTime newDueDate, System.DateTime dateTaken) {
            this.SavePaymentHolidayAsync(accountNo, agreementNo, newDueDate, dateTaken, null);
        }
        
        /// <remarks/>
        public void SavePaymentHolidayAsync(string accountNo, int agreementNo, System.DateTime newDueDate, System.DateTime dateTaken, object userState) {
            if ((this.SavePaymentHolidayOperationCompleted == null)) {
                this.SavePaymentHolidayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePaymentHolidayOperationCompleted);
            }
            this.InvokeAsync("SavePaymentHoliday", new object[] {
                        accountNo,
                        agreementNo,
                        newDueDate,
                        dateTaken}, this.SavePaymentHolidayOperationCompleted, userState);
        }
        
        private void OnSavePaymentHolidayOperationCompleted(object arg) {
            if ((this.SavePaymentHolidayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePaymentHolidayCompleted(this, new SavePaymentHolidayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IncludeDeposits", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IncludeDeposits(int empNo, [System.Xml.Serialization.XmlElementAttribute("includeDeposits")] short includeDeposits1, out string err) {
            object[] results = this.Invoke("IncludeDeposits", new object[] {
                        empNo,
                        includeDeposits1});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIncludeDeposits(int empNo, short includeDeposits1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IncludeDeposits", new object[] {
                        empNo,
                        includeDeposits1}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndIncludeDeposits(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IncludeDepositsAsync(int empNo, short includeDeposits1) {
            this.IncludeDepositsAsync(empNo, includeDeposits1, null);
        }
        
        /// <remarks/>
        public void IncludeDepositsAsync(int empNo, short includeDeposits1, object userState) {
            if ((this.IncludeDepositsOperationCompleted == null)) {
                this.IncludeDepositsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncludeDepositsOperationCompleted);
            }
            this.InvokeAsync("IncludeDeposits", new object[] {
                        empNo,
                        includeDeposits1}, this.IncludeDepositsOperationCompleted, userState);
        }
        
        private void OnIncludeDepositsOperationCompleted(object arg) {
            if ((this.IncludeDepositsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncludeDepositsCompleted(this, new IncludeDepositsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBranchCashierList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBranchCashierList(short branchNo, System.DateTime dateFrom, System.DateTime dateTo, out string err) {
            object[] results = this.Invoke("GetBranchCashierList", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBranchCashierList(short branchNo, System.DateTime dateFrom, System.DateTime dateTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBranchCashierList", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBranchCashierList(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchCashierListAsync(short branchNo, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetBranchCashierListAsync(branchNo, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetBranchCashierListAsync(short branchNo, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetBranchCashierListOperationCompleted == null)) {
                this.GetBranchCashierListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchCashierListOperationCompleted);
            }
            this.InvokeAsync("GetBranchCashierList", new object[] {
                        branchNo,
                        dateFrom,
                        dateTo}, this.GetBranchCashierListOperationCompleted, userState);
        }
        
        private void OnGetBranchCashierListOperationCompleted(object arg) {
            if ((this.GetBranchCashierListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchCashierListCompleted(this, new GetBranchCashierListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/TemporaryReceiptEnquiry", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TemporaryReceiptEnquiry(int empoyeeNo, int firstReceipt, int lastreceipt, out string err) {
            object[] results = this.Invoke("TemporaryReceiptEnquiry", new object[] {
                        empoyeeNo,
                        firstReceipt,
                        lastreceipt});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTemporaryReceiptEnquiry(int empoyeeNo, int firstReceipt, int lastreceipt, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TemporaryReceiptEnquiry", new object[] {
                        empoyeeNo,
                        firstReceipt,
                        lastreceipt}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndTemporaryReceiptEnquiry(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TemporaryReceiptEnquiryAsync(int empoyeeNo, int firstReceipt, int lastreceipt) {
            this.TemporaryReceiptEnquiryAsync(empoyeeNo, firstReceipt, lastreceipt, null);
        }
        
        /// <remarks/>
        public void TemporaryReceiptEnquiryAsync(int empoyeeNo, int firstReceipt, int lastreceipt, object userState) {
            if ((this.TemporaryReceiptEnquiryOperationCompleted == null)) {
                this.TemporaryReceiptEnquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTemporaryReceiptEnquiryOperationCompleted);
            }
            this.InvokeAsync("TemporaryReceiptEnquiry", new object[] {
                        empoyeeNo,
                        firstReceipt,
                        lastreceipt}, this.TemporaryReceiptEnquiryOperationCompleted, userState);
        }
        
        private void OnTemporaryReceiptEnquiryOperationCompleted(object arg) {
            if ((this.TemporaryReceiptEnquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TemporaryReceiptEnquiryCompleted(this, new TemporaryReceiptEnquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/BailiffTemporaryReceiptEnquiry", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BailiffTemporaryReceiptEnquiry(int empoyeeNo, out string err) {
            object[] results = this.Invoke("BailiffTemporaryReceiptEnquiry", new object[] {
                        empoyeeNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBailiffTemporaryReceiptEnquiry(int empoyeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BailiffTemporaryReceiptEnquiry", new object[] {
                        empoyeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndBailiffTemporaryReceiptEnquiry(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BailiffTemporaryReceiptEnquiryAsync(int empoyeeNo) {
            this.BailiffTemporaryReceiptEnquiryAsync(empoyeeNo, null);
        }
        
        /// <remarks/>
        public void BailiffTemporaryReceiptEnquiryAsync(int empoyeeNo, object userState) {
            if ((this.BailiffTemporaryReceiptEnquiryOperationCompleted == null)) {
                this.BailiffTemporaryReceiptEnquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBailiffTemporaryReceiptEnquiryOperationCompleted);
            }
            this.InvokeAsync("BailiffTemporaryReceiptEnquiry", new object[] {
                        empoyeeNo}, this.BailiffTemporaryReceiptEnquiryOperationCompleted, userState);
        }
        
        private void OnBailiffTemporaryReceiptEnquiryOperationCompleted(object arg) {
            if ((this.BailiffTemporaryReceiptEnquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BailiffTemporaryReceiptEnquiryCompleted(this, new BailiffTemporaryReceiptEnquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CancelTempReceipt", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelTempReceipt(int receiptNo, out string err) {
            object[] results = this.Invoke("CancelTempReceipt", new object[] {
                        receiptNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelTempReceipt(int receiptNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelTempReceipt", new object[] {
                        receiptNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCancelTempReceipt(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTempReceiptAsync(int receiptNo) {
            this.CancelTempReceiptAsync(receiptNo, null);
        }
        
        /// <remarks/>
        public void CancelTempReceiptAsync(int receiptNo, object userState) {
            if ((this.CancelTempReceiptOperationCompleted == null)) {
                this.CancelTempReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTempReceiptOperationCompleted);
            }
            this.InvokeAsync("CancelTempReceipt", new object[] {
                        receiptNo}, this.CancelTempReceiptOperationCompleted, userState);
        }
        
        private void OnCancelTempReceiptOperationCompleted(object arg) {
            if ((this.CancelTempReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTempReceiptCompleted(this, new CancelTempReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/VoidTempReceipt", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VoidTempReceipt(int receiptNo, out string err) {
            object[] results = this.Invoke("VoidTempReceipt", new object[] {
                        receiptNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVoidTempReceipt(int receiptNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("VoidTempReceipt", new object[] {
                        receiptNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndVoidTempReceipt(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VoidTempReceiptAsync(int receiptNo) {
            this.VoidTempReceiptAsync(receiptNo, null);
        }
        
        /// <remarks/>
        public void VoidTempReceiptAsync(int receiptNo, object userState) {
            if ((this.VoidTempReceiptOperationCompleted == null)) {
                this.VoidTempReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidTempReceiptOperationCompleted);
            }
            this.InvokeAsync("VoidTempReceipt", new object[] {
                        receiptNo}, this.VoidTempReceiptOperationCompleted, userState);
        }
        
        private void OnVoidTempReceiptOperationCompleted(object arg) {
            if ((this.VoidTempReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidTempReceiptCompleted(this, new VoidTempReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/AllocateTempReceipt", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AllocateTempReceipt(int empeeNo, int branchNo, int firstReceiptNo, int lastReceiptNo, System.DateTime issueDate, out string err) {
            object[] results = this.Invoke("AllocateTempReceipt", new object[] {
                        empeeNo,
                        branchNo,
                        firstReceiptNo,
                        lastReceiptNo,
                        issueDate});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAllocateTempReceipt(int empeeNo, int branchNo, int firstReceiptNo, int lastReceiptNo, System.DateTime issueDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AllocateTempReceipt", new object[] {
                        empeeNo,
                        branchNo,
                        firstReceiptNo,
                        lastReceiptNo,
                        issueDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAllocateTempReceipt(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AllocateTempReceiptAsync(int empeeNo, int branchNo, int firstReceiptNo, int lastReceiptNo, System.DateTime issueDate) {
            this.AllocateTempReceiptAsync(empeeNo, branchNo, firstReceiptNo, lastReceiptNo, issueDate, null);
        }
        
        /// <remarks/>
        public void AllocateTempReceiptAsync(int empeeNo, int branchNo, int firstReceiptNo, int lastReceiptNo, System.DateTime issueDate, object userState) {
            if ((this.AllocateTempReceiptOperationCompleted == null)) {
                this.AllocateTempReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocateTempReceiptOperationCompleted);
            }
            this.InvokeAsync("AllocateTempReceipt", new object[] {
                        empeeNo,
                        branchNo,
                        firstReceiptNo,
                        lastReceiptNo,
                        issueDate}, this.AllocateTempReceiptOperationCompleted, userState);
        }
        
        private void OnAllocateTempReceiptOperationCompleted(object arg) {
            if ((this.AllocateTempReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocateTempReceiptCompleted(this, new AllocateTempReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ReallocateTempReceipt", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReallocateTempReceipt(int empeeNo, int branchNo, int firstReceiptNo, int lastReceiptNo, out string err) {
            object[] results = this.Invoke("ReallocateTempReceipt", new object[] {
                        empeeNo,
                        branchNo,
                        firstReceiptNo,
                        lastReceiptNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReallocateTempReceipt(int empeeNo, int branchNo, int firstReceiptNo, int lastReceiptNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReallocateTempReceipt", new object[] {
                        empeeNo,
                        branchNo,
                        firstReceiptNo,
                        lastReceiptNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndReallocateTempReceipt(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReallocateTempReceiptAsync(int empeeNo, int branchNo, int firstReceiptNo, int lastReceiptNo) {
            this.ReallocateTempReceiptAsync(empeeNo, branchNo, firstReceiptNo, lastReceiptNo, null);
        }
        
        /// <remarks/>
        public void ReallocateTempReceiptAsync(int empeeNo, int branchNo, int firstReceiptNo, int lastReceiptNo, object userState) {
            if ((this.ReallocateTempReceiptOperationCompleted == null)) {
                this.ReallocateTempReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReallocateTempReceiptOperationCompleted);
            }
            this.InvokeAsync("ReallocateTempReceipt", new object[] {
                        empeeNo,
                        branchNo,
                        firstReceiptNo,
                        lastReceiptNo}, this.ReallocateTempReceiptOperationCompleted, userState);
        }
        
        private void OnReallocateTempReceiptOperationCompleted(object arg) {
            if ((this.ReallocateTempReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReallocateTempReceiptCompleted(this, new ReallocateTempReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckReceiptNotIssued", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckReceiptNotIssued(int firstReceiptNo, int lastReceiptNo, int checkOption, ref int issuedCount, out string err) {
            object[] results = this.Invoke("CheckReceiptNotIssued", new object[] {
                        firstReceiptNo,
                        lastReceiptNo,
                        checkOption,
                        issuedCount});
            issuedCount = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckReceiptNotIssued(int firstReceiptNo, int lastReceiptNo, int checkOption, int issuedCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckReceiptNotIssued", new object[] {
                        firstReceiptNo,
                        lastReceiptNo,
                        checkOption,
                        issuedCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCheckReceiptNotIssued(System.IAsyncResult asyncResult, out int issuedCount, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            issuedCount = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckReceiptNotIssuedAsync(int firstReceiptNo, int lastReceiptNo, int checkOption, int issuedCount) {
            this.CheckReceiptNotIssuedAsync(firstReceiptNo, lastReceiptNo, checkOption, issuedCount, null);
        }
        
        /// <remarks/>
        public void CheckReceiptNotIssuedAsync(int firstReceiptNo, int lastReceiptNo, int checkOption, int issuedCount, object userState) {
            if ((this.CheckReceiptNotIssuedOperationCompleted == null)) {
                this.CheckReceiptNotIssuedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckReceiptNotIssuedOperationCompleted);
            }
            this.InvokeAsync("CheckReceiptNotIssued", new object[] {
                        firstReceiptNo,
                        lastReceiptNo,
                        checkOption,
                        issuedCount}, this.CheckReceiptNotIssuedOperationCompleted, userState);
        }
        
        private void OnCheckReceiptNotIssuedOperationCompleted(object arg) {
            if ((this.CheckReceiptNotIssuedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckReceiptNotIssuedCompleted(this, new CheckReceiptNotIssuedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetNextTemporaryReceptNo", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNextTemporaryReceptNo(ref int nextRecpNo, out string err) {
            object[] results = this.Invoke("GetNextTemporaryReceptNo", new object[] {
                        nextRecpNo});
            nextRecpNo = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNextTemporaryReceptNo(int nextRecpNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextTemporaryReceptNo", new object[] {
                        nextRecpNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetNextTemporaryReceptNo(System.IAsyncResult asyncResult, out int nextRecpNo, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            nextRecpNo = ((int)(results[1]));
            err = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextTemporaryReceptNoAsync(int nextRecpNo) {
            this.GetNextTemporaryReceptNoAsync(nextRecpNo, null);
        }
        
        /// <remarks/>
        public void GetNextTemporaryReceptNoAsync(int nextRecpNo, object userState) {
            if ((this.GetNextTemporaryReceptNoOperationCompleted == null)) {
                this.GetNextTemporaryReceptNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextTemporaryReceptNoOperationCompleted);
            }
            this.InvokeAsync("GetNextTemporaryReceptNo", new object[] {
                        nextRecpNo}, this.GetNextTemporaryReceptNoOperationCompleted, userState);
        }
        
        private void OnGetNextTemporaryReceptNoOperationCompleted(object arg) {
            if ((this.GetNextTemporaryReceptNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextTemporaryReceptNoCompleted(this, new GetNextTemporaryReceptNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDefaultCommissionBasis", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDefaultCommissionBasis(string empeeType, out string err) {
            object[] results = this.Invoke("GetDefaultCommissionBasis", new object[] {
                        empeeType});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultCommissionBasis(string empeeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultCommissionBasis", new object[] {
                        empeeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDefaultCommissionBasis(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultCommissionBasisAsync(string empeeType) {
            this.GetDefaultCommissionBasisAsync(empeeType, null);
        }
        
        /// <remarks/>
        public void GetDefaultCommissionBasisAsync(string empeeType, object userState) {
            if ((this.GetDefaultCommissionBasisOperationCompleted == null)) {
                this.GetDefaultCommissionBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultCommissionBasisOperationCompleted);
            }
            this.InvokeAsync("GetDefaultCommissionBasis", new object[] {
                        empeeType}, this.GetDefaultCommissionBasisOperationCompleted, userState);
        }
        
        private void OnGetDefaultCommissionBasisOperationCompleted(object arg) {
            if ((this.GetDefaultCommissionBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultCommissionBasisCompleted(this, new GetDefaultCommissionBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBailiffCommissionBasis", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBailiffCommissionBasis(int empoyeeNo, out string err) {
            object[] results = this.Invoke("GetBailiffCommissionBasis", new object[] {
                        empoyeeNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBailiffCommissionBasis(int empoyeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBailiffCommissionBasis", new object[] {
                        empoyeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBailiffCommissionBasis(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBailiffCommissionBasisAsync(int empoyeeNo) {
            this.GetBailiffCommissionBasisAsync(empoyeeNo, null);
        }
        
        /// <remarks/>
        public void GetBailiffCommissionBasisAsync(int empoyeeNo, object userState) {
            if ((this.GetBailiffCommissionBasisOperationCompleted == null)) {
                this.GetBailiffCommissionBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBailiffCommissionBasisOperationCompleted);
            }
            this.InvokeAsync("GetBailiffCommissionBasis", new object[] {
                        empoyeeNo}, this.GetBailiffCommissionBasisOperationCompleted, userState);
        }
        
        private void OnGetBailiffCommissionBasisOperationCompleted(object arg) {
            if ((this.GetBailiffCommissionBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBailiffCommissionBasisCompleted(this, new GetBailiffCommissionBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCommissionBasis", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCommissionBasis(decimal allocpercent, string collecttype, decimal collectionpercent, decimal commnpercent, string countrycode, short debitaccount, string empeetype, decimal maxvalue, decimal minvalue, decimal reposspercent, decimal reppercent, string statuscode, out string err) {
            object[] results = this.Invoke("SaveCommissionBasis", new object[] {
                        allocpercent,
                        collecttype,
                        collectionpercent,
                        commnpercent,
                        countrycode,
                        debitaccount,
                        empeetype,
                        maxvalue,
                        minvalue,
                        reposspercent,
                        reppercent,
                        statuscode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCommissionBasis(decimal allocpercent, string collecttype, decimal collectionpercent, decimal commnpercent, string countrycode, short debitaccount, string empeetype, decimal maxvalue, decimal minvalue, decimal reposspercent, decimal reppercent, string statuscode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCommissionBasis", new object[] {
                        allocpercent,
                        collecttype,
                        collectionpercent,
                        commnpercent,
                        countrycode,
                        debitaccount,
                        empeetype,
                        maxvalue,
                        minvalue,
                        reposspercent,
                        reppercent,
                        statuscode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCommissionBasis(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCommissionBasisAsync(decimal allocpercent, string collecttype, decimal collectionpercent, decimal commnpercent, string countrycode, short debitaccount, string empeetype, decimal maxvalue, decimal minvalue, decimal reposspercent, decimal reppercent, string statuscode) {
            this.SaveCommissionBasisAsync(allocpercent, collecttype, collectionpercent, commnpercent, countrycode, debitaccount, empeetype, maxvalue, minvalue, reposspercent, reppercent, statuscode, null);
        }
        
        /// <remarks/>
        public void SaveCommissionBasisAsync(decimal allocpercent, string collecttype, decimal collectionpercent, decimal commnpercent, string countrycode, short debitaccount, string empeetype, decimal maxvalue, decimal minvalue, decimal reposspercent, decimal reppercent, string statuscode, object userState) {
            if ((this.SaveCommissionBasisOperationCompleted == null)) {
                this.SaveCommissionBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCommissionBasisOperationCompleted);
            }
            this.InvokeAsync("SaveCommissionBasis", new object[] {
                        allocpercent,
                        collecttype,
                        collectionpercent,
                        commnpercent,
                        countrycode,
                        debitaccount,
                        empeetype,
                        maxvalue,
                        minvalue,
                        reposspercent,
                        reppercent,
                        statuscode}, this.SaveCommissionBasisOperationCompleted, userState);
        }
        
        private void OnSaveCommissionBasisOperationCompleted(object arg) {
            if ((this.SaveCommissionBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCommissionBasisCompleted(this, new SaveCommissionBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveBailiffCommissionBasis", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveBailiffCommissionBasis(int empeeno, decimal allocpercent, string collecttype, decimal collectionpercent, decimal commnpercent, short debitaccount, string empeetype, decimal maxvalue, decimal minvalue, decimal reposspercent, decimal reppercent, string statuscode, out string err) {
            object[] results = this.Invoke("SaveBailiffCommissionBasis", new object[] {
                        empeeno,
                        allocpercent,
                        collecttype,
                        collectionpercent,
                        commnpercent,
                        debitaccount,
                        empeetype,
                        maxvalue,
                        minvalue,
                        reposspercent,
                        reppercent,
                        statuscode});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveBailiffCommissionBasis(int empeeno, decimal allocpercent, string collecttype, decimal collectionpercent, decimal commnpercent, short debitaccount, string empeetype, decimal maxvalue, decimal minvalue, decimal reposspercent, decimal reppercent, string statuscode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveBailiffCommissionBasis", new object[] {
                        empeeno,
                        allocpercent,
                        collecttype,
                        collectionpercent,
                        commnpercent,
                        debitaccount,
                        empeetype,
                        maxvalue,
                        minvalue,
                        reposspercent,
                        reppercent,
                        statuscode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveBailiffCommissionBasis(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBailiffCommissionBasisAsync(int empeeno, decimal allocpercent, string collecttype, decimal collectionpercent, decimal commnpercent, short debitaccount, string empeetype, decimal maxvalue, decimal minvalue, decimal reposspercent, decimal reppercent, string statuscode) {
            this.SaveBailiffCommissionBasisAsync(empeeno, allocpercent, collecttype, collectionpercent, commnpercent, debitaccount, empeetype, maxvalue, minvalue, reposspercent, reppercent, statuscode, null);
        }
        
        /// <remarks/>
        public void SaveBailiffCommissionBasisAsync(int empeeno, decimal allocpercent, string collecttype, decimal collectionpercent, decimal commnpercent, short debitaccount, string empeetype, decimal maxvalue, decimal minvalue, decimal reposspercent, decimal reppercent, string statuscode, object userState) {
            if ((this.SaveBailiffCommissionBasisOperationCompleted == null)) {
                this.SaveBailiffCommissionBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBailiffCommissionBasisOperationCompleted);
            }
            this.InvokeAsync("SaveBailiffCommissionBasis", new object[] {
                        empeeno,
                        allocpercent,
                        collecttype,
                        collectionpercent,
                        commnpercent,
                        debitaccount,
                        empeetype,
                        maxvalue,
                        minvalue,
                        reposspercent,
                        reppercent,
                        statuscode}, this.SaveBailiffCommissionBasisOperationCompleted, userState);
        }
        
        private void OnSaveBailiffCommissionBasisOperationCompleted(object arg) {
            if ((this.SaveBailiffCommissionBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBailiffCommissionBasisCompleted(this, new SaveBailiffCommissionBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteCommissionBasis", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCommissionBasis(string countryCode, string statusCode, string collectType, string empeeType, out string err) {
            object[] results = this.Invoke("DeleteCommissionBasis", new object[] {
                        countryCode,
                        statusCode,
                        collectType,
                        empeeType});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteCommissionBasis(string countryCode, string statusCode, string collectType, string empeeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteCommissionBasis", new object[] {
                        countryCode,
                        statusCode,
                        collectType,
                        empeeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteCommissionBasis(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCommissionBasisAsync(string countryCode, string statusCode, string collectType, string empeeType) {
            this.DeleteCommissionBasisAsync(countryCode, statusCode, collectType, empeeType, null);
        }
        
        /// <remarks/>
        public void DeleteCommissionBasisAsync(string countryCode, string statusCode, string collectType, string empeeType, object userState) {
            if ((this.DeleteCommissionBasisOperationCompleted == null)) {
                this.DeleteCommissionBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommissionBasisOperationCompleted);
            }
            this.InvokeAsync("DeleteCommissionBasis", new object[] {
                        countryCode,
                        statusCode,
                        collectType,
                        empeeType}, this.DeleteCommissionBasisOperationCompleted, userState);
        }
        
        private void OnDeleteCommissionBasisOperationCompleted(object arg) {
            if ((this.DeleteCommissionBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCommissionBasisCompleted(this, new DeleteCommissionBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteBailiffCommissionBasis", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteBailiffCommissionBasis(int empeeNo, string statusCode, string collectType, out string err) {
            object[] results = this.Invoke("DeleteBailiffCommissionBasis", new object[] {
                        empeeNo,
                        statusCode,
                        collectType});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteBailiffCommissionBasis(int empeeNo, string statusCode, string collectType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteBailiffCommissionBasis", new object[] {
                        empeeNo,
                        statusCode,
                        collectType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteBailiffCommissionBasis(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBailiffCommissionBasisAsync(int empeeNo, string statusCode, string collectType) {
            this.DeleteBailiffCommissionBasisAsync(empeeNo, statusCode, collectType, null);
        }
        
        /// <remarks/>
        public void DeleteBailiffCommissionBasisAsync(int empeeNo, string statusCode, string collectType, object userState) {
            if ((this.DeleteBailiffCommissionBasisOperationCompleted == null)) {
                this.DeleteBailiffCommissionBasisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBailiffCommissionBasisOperationCompleted);
            }
            this.InvokeAsync("DeleteBailiffCommissionBasis", new object[] {
                        empeeNo,
                        statusCode,
                        collectType}, this.DeleteBailiffCommissionBasisOperationCompleted, userState);
        }
        
        private void OnDeleteBailiffCommissionBasisOperationCompleted(object arg) {
            if ((this.DeleteBailiffCommissionBasisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBailiffCommissionBasisCompleted(this, new DeleteBailiffCommissionBasisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCommissionTransactions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCommissionTransactions(int empeeNo, out string err) {
            object[] results = this.Invoke("GetCommissionTransactions", new object[] {
                        empeeNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCommissionTransactions(int empeeNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCommissionTransactions", new object[] {
                        empeeNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCommissionTransactions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommissionTransactionsAsync(int empeeNo) {
            this.GetCommissionTransactionsAsync(empeeNo, null);
        }
        
        /// <remarks/>
        public void GetCommissionTransactionsAsync(int empeeNo, object userState) {
            if ((this.GetCommissionTransactionsOperationCompleted == null)) {
                this.GetCommissionTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommissionTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetCommissionTransactions", new object[] {
                        empeeNo}, this.GetCommissionTransactionsOperationCompleted, userState);
        }
        
        private void OnGetCommissionTransactionsOperationCompleted(object arg) {
            if ((this.GetCommissionTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommissionTransactionsCompleted(this, new GetCommissionTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteCommissionTransaction", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCommissionTransaction(int empeeNo, System.DateTime dateTrans, int transRefNo, out string err) {
            object[] results = this.Invoke("DeleteCommissionTransaction", new object[] {
                        empeeNo,
                        dateTrans,
                        transRefNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteCommissionTransaction(int empeeNo, System.DateTime dateTrans, int transRefNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteCommissionTransaction", new object[] {
                        empeeNo,
                        dateTrans,
                        transRefNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteCommissionTransaction(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCommissionTransactionAsync(int empeeNo, System.DateTime dateTrans, int transRefNo) {
            this.DeleteCommissionTransactionAsync(empeeNo, dateTrans, transRefNo, null);
        }
        
        /// <remarks/>
        public void DeleteCommissionTransactionAsync(int empeeNo, System.DateTime dateTrans, int transRefNo, object userState) {
            if ((this.DeleteCommissionTransactionOperationCompleted == null)) {
                this.DeleteCommissionTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommissionTransactionOperationCompleted);
            }
            this.InvokeAsync("DeleteCommissionTransaction", new object[] {
                        empeeNo,
                        dateTrans,
                        transRefNo}, this.DeleteCommissionTransactionOperationCompleted, userState);
        }
        
        private void OnDeleteCommissionTransactionOperationCompleted(object arg) {
            if ((this.DeleteCommissionTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCommissionTransactionCompleted(this, new DeleteCommissionTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/RestoreCommissionTransaction", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RestoreCommissionTransaction(int empeeNo, System.DateTime dateTrans, int transRefNo, out string err) {
            object[] results = this.Invoke("RestoreCommissionTransaction", new object[] {
                        empeeNo,
                        dateTrans,
                        transRefNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRestoreCommissionTransaction(int empeeNo, System.DateTime dateTrans, int transRefNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RestoreCommissionTransaction", new object[] {
                        empeeNo,
                        dateTrans,
                        transRefNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRestoreCommissionTransaction(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreCommissionTransactionAsync(int empeeNo, System.DateTime dateTrans, int transRefNo) {
            this.RestoreCommissionTransactionAsync(empeeNo, dateTrans, transRefNo, null);
        }
        
        /// <remarks/>
        public void RestoreCommissionTransactionAsync(int empeeNo, System.DateTime dateTrans, int transRefNo, object userState) {
            if ((this.RestoreCommissionTransactionOperationCompleted == null)) {
                this.RestoreCommissionTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreCommissionTransactionOperationCompleted);
            }
            this.InvokeAsync("RestoreCommissionTransaction", new object[] {
                        empeeNo,
                        dateTrans,
                        transRefNo}, this.RestoreCommissionTransactionOperationCompleted, userState);
        }
        
        private void OnRestoreCommissionTransactionOperationCompleted(object arg) {
            if ((this.RestoreCommissionTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreCommissionTransactionCompleted(this, new RestoreCommissionTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateCommissionTransactionStatus", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCommissionTransactionStatus(System.Data.DataSet ds, out string err) {
            object[] results = this.Invoke("UpdateCommissionTransactionStatus", new object[] {
                        ds});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCommissionTransactionStatus(System.Data.DataSet ds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCommissionTransactionStatus", new object[] {
                        ds}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateCommissionTransactionStatus(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommissionTransactionStatusAsync(System.Data.DataSet ds) {
            this.UpdateCommissionTransactionStatusAsync(ds, null);
        }
        
        /// <remarks/>
        public void UpdateCommissionTransactionStatusAsync(System.Data.DataSet ds, object userState) {
            if ((this.UpdateCommissionTransactionStatusOperationCompleted == null)) {
                this.UpdateCommissionTransactionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommissionTransactionStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCommissionTransactionStatus", new object[] {
                        ds}, this.UpdateCommissionTransactionStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCommissionTransactionStatusOperationCompleted(object arg) {
            if ((this.UpdateCommissionTransactionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommissionTransactionStatusCompleted(this, new UpdateCommissionTransactionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/PayBailiffCommission", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PayBailiffCommission(int empeeNo, decimal commValue, out string err) {
            object[] results = this.Invoke("PayBailiffCommission", new object[] {
                        empeeNo,
                        commValue});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPayBailiffCommission(int empeeNo, decimal commValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PayBailiffCommission", new object[] {
                        empeeNo,
                        commValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndPayBailiffCommission(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PayBailiffCommissionAsync(int empeeNo, decimal commValue) {
            this.PayBailiffCommissionAsync(empeeNo, commValue, null);
        }
        
        /// <remarks/>
        public void PayBailiffCommissionAsync(int empeeNo, decimal commValue, object userState) {
            if ((this.PayBailiffCommissionOperationCompleted == null)) {
                this.PayBailiffCommissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayBailiffCommissionOperationCompleted);
            }
            this.InvokeAsync("PayBailiffCommission", new object[] {
                        empeeNo,
                        commValue}, this.PayBailiffCommissionOperationCompleted, userState);
        }
        
        private void OnPayBailiffCommissionOperationCompleted(object arg) {
            if ((this.PayBailiffCommissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayBailiffCommissionCompleted(this, new PayBailiffCommissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSUCBFinancialDetails", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSUCBFinancialDetails(int runno, bool liveDatabase, out string err) {
            object[] results = this.Invoke("GetSUCBFinancialDetails", new object[] {
                        runno,
                        liveDatabase});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSUCBFinancialDetails(int runno, bool liveDatabase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSUCBFinancialDetails", new object[] {
                        runno,
                        liveDatabase}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSUCBFinancialDetails(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSUCBFinancialDetailsAsync(int runno, bool liveDatabase) {
            this.GetSUCBFinancialDetailsAsync(runno, liveDatabase, null);
        }
        
        /// <remarks/>
        public void GetSUCBFinancialDetailsAsync(int runno, bool liveDatabase, object userState) {
            if ((this.GetSUCBFinancialDetailsOperationCompleted == null)) {
                this.GetSUCBFinancialDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSUCBFinancialDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSUCBFinancialDetails", new object[] {
                        runno,
                        liveDatabase}, this.GetSUCBFinancialDetailsOperationCompleted, userState);
        }
        
        private void OnGetSUCBFinancialDetailsOperationCompleted(object arg) {
            if ((this.GetSUCBFinancialDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSUCBFinancialDetailsCompleted(this, new GetSUCBFinancialDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWarrantyAdjustment", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetWarrantyAdjustment(string acctno, out string err) {
            object[] results = this.Invoke("GetWarrantyAdjustment", new object[] {
                        acctno});
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarrantyAdjustment(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarrantyAdjustment", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndGetWarrantyAdjustment(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantyAdjustmentAsync(string acctno) {
            this.GetWarrantyAdjustmentAsync(acctno, null);
        }
        
        /// <remarks/>
        public void GetWarrantyAdjustmentAsync(string acctno, object userState) {
            if ((this.GetWarrantyAdjustmentOperationCompleted == null)) {
                this.GetWarrantyAdjustmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantyAdjustmentOperationCompleted);
            }
            this.InvokeAsync("GetWarrantyAdjustment", new object[] {
                        acctno}, this.GetWarrantyAdjustmentOperationCompleted, userState);
        }
        
        private void OnGetWarrantyAdjustmentOperationCompleted(object arg) {
            if ((this.GetWarrantyAdjustmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantyAdjustmentCompleted(this, new GetWarrantyAdjustmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetDefinition", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDefinition(out string err) {
            object[] results = this.Invoke("GetDefinition", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefinition(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefinition", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDefinition(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefinitionAsync() {
            this.GetDefinitionAsync(null);
        }
        
        /// <remarks/>
        public void GetDefinitionAsync(object userState) {
            if ((this.GetDefinitionOperationCompleted == null)) {
                this.GetDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetDefinition", new object[0], this.GetDefinitionOperationCompleted, userState);
        }
        
        private void OnGetDefinitionOperationCompleted(object arg) {
            if ((this.GetDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefinitionCompleted(this, new GetDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SavePaymentDefinition", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SavePaymentDefinition(
                    string bankName, 
                    string fileExt, 
                    int acctnoBegin, 
                    int acctnoLength, 
                    int moneyBegin, 
                    int moneyLength, 
                    int moneyPoint, 
                    int headLine, 
                    int dateBegin, 
                    int dateLength, 
                    string dateFormat, 
                    int trailerBegin, 
                    int trailerLength, 
                    int paymentMethod, 
                    int hasTrailer, 
                    int headerIdBegin, 
                    int headerIdLength, 
                    string headerId, 
                    int trailerIdBegin, 
                    int trailerIdLength, 
                    string trailerId, 
                    bool isBatch, 
                    int batchHeaderIdBegin, 
                    int batchHeaderIdLength, 
                    string batchHeaderId, 
                    bool batchHeaderHasTotal, 
                    int batchHeaderMoneyBegin, 
                    int batchHeaderMoneyLength, 
                    int batchTrailerIdBegin, 
                    int batchTrailerIdLength, 
                    string batchTrailerId, 
                    bool isDelimited, 
                    string delimiter, 
                    int delimitedNoOfCols, 
                    string delimitedAcctNoColNo, 
                    string delimitedDateColNo, 
                    string delimitedMoneyColNo, 
                    bool isInterest, 
                    out string err) {
            object[] results = this.Invoke("SavePaymentDefinition", new object[] {
                        bankName,
                        fileExt,
                        acctnoBegin,
                        acctnoLength,
                        moneyBegin,
                        moneyLength,
                        moneyPoint,
                        headLine,
                        dateBegin,
                        dateLength,
                        dateFormat,
                        trailerBegin,
                        trailerLength,
                        paymentMethod,
                        hasTrailer,
                        headerIdBegin,
                        headerIdLength,
                        headerId,
                        trailerIdBegin,
                        trailerIdLength,
                        trailerId,
                        isBatch,
                        batchHeaderIdBegin,
                        batchHeaderIdLength,
                        batchHeaderId,
                        batchHeaderHasTotal,
                        batchHeaderMoneyBegin,
                        batchHeaderMoneyLength,
                        batchTrailerIdBegin,
                        batchTrailerIdLength,
                        batchTrailerId,
                        isDelimited,
                        delimiter,
                        delimitedNoOfCols,
                        delimitedAcctNoColNo,
                        delimitedDateColNo,
                        delimitedMoneyColNo,
                        isInterest});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSavePaymentDefinition(
                    string bankName, 
                    string fileExt, 
                    int acctnoBegin, 
                    int acctnoLength, 
                    int moneyBegin, 
                    int moneyLength, 
                    int moneyPoint, 
                    int headLine, 
                    int dateBegin, 
                    int dateLength, 
                    string dateFormat, 
                    int trailerBegin, 
                    int trailerLength, 
                    int paymentMethod, 
                    int hasTrailer, 
                    int headerIdBegin, 
                    int headerIdLength, 
                    string headerId, 
                    int trailerIdBegin, 
                    int trailerIdLength, 
                    string trailerId, 
                    bool isBatch, 
                    int batchHeaderIdBegin, 
                    int batchHeaderIdLength, 
                    string batchHeaderId, 
                    bool batchHeaderHasTotal, 
                    int batchHeaderMoneyBegin, 
                    int batchHeaderMoneyLength, 
                    int batchTrailerIdBegin, 
                    int batchTrailerIdLength, 
                    string batchTrailerId, 
                    bool isDelimited, 
                    string delimiter, 
                    int delimitedNoOfCols, 
                    string delimitedAcctNoColNo, 
                    string delimitedDateColNo, 
                    string delimitedMoneyColNo, 
                    bool isInterest, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("SavePaymentDefinition", new object[] {
                        bankName,
                        fileExt,
                        acctnoBegin,
                        acctnoLength,
                        moneyBegin,
                        moneyLength,
                        moneyPoint,
                        headLine,
                        dateBegin,
                        dateLength,
                        dateFormat,
                        trailerBegin,
                        trailerLength,
                        paymentMethod,
                        hasTrailer,
                        headerIdBegin,
                        headerIdLength,
                        headerId,
                        trailerIdBegin,
                        trailerIdLength,
                        trailerId,
                        isBatch,
                        batchHeaderIdBegin,
                        batchHeaderIdLength,
                        batchHeaderId,
                        batchHeaderHasTotal,
                        batchHeaderMoneyBegin,
                        batchHeaderMoneyLength,
                        batchTrailerIdBegin,
                        batchTrailerIdLength,
                        batchTrailerId,
                        isDelimited,
                        delimiter,
                        delimitedNoOfCols,
                        delimitedAcctNoColNo,
                        delimitedDateColNo,
                        delimitedMoneyColNo,
                        isInterest}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSavePaymentDefinition(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SavePaymentDefinitionAsync(
                    string bankName, 
                    string fileExt, 
                    int acctnoBegin, 
                    int acctnoLength, 
                    int moneyBegin, 
                    int moneyLength, 
                    int moneyPoint, 
                    int headLine, 
                    int dateBegin, 
                    int dateLength, 
                    string dateFormat, 
                    int trailerBegin, 
                    int trailerLength, 
                    int paymentMethod, 
                    int hasTrailer, 
                    int headerIdBegin, 
                    int headerIdLength, 
                    string headerId, 
                    int trailerIdBegin, 
                    int trailerIdLength, 
                    string trailerId, 
                    bool isBatch, 
                    int batchHeaderIdBegin, 
                    int batchHeaderIdLength, 
                    string batchHeaderId, 
                    bool batchHeaderHasTotal, 
                    int batchHeaderMoneyBegin, 
                    int batchHeaderMoneyLength, 
                    int batchTrailerIdBegin, 
                    int batchTrailerIdLength, 
                    string batchTrailerId, 
                    bool isDelimited, 
                    string delimiter, 
                    int delimitedNoOfCols, 
                    string delimitedAcctNoColNo, 
                    string delimitedDateColNo, 
                    string delimitedMoneyColNo, 
                    bool isInterest) {
            this.SavePaymentDefinitionAsync(bankName, fileExt, acctnoBegin, acctnoLength, moneyBegin, moneyLength, moneyPoint, headLine, dateBegin, dateLength, dateFormat, trailerBegin, trailerLength, paymentMethod, hasTrailer, headerIdBegin, headerIdLength, headerId, trailerIdBegin, trailerIdLength, trailerId, isBatch, batchHeaderIdBegin, batchHeaderIdLength, batchHeaderId, batchHeaderHasTotal, batchHeaderMoneyBegin, batchHeaderMoneyLength, batchTrailerIdBegin, batchTrailerIdLength, batchTrailerId, isDelimited, delimiter, delimitedNoOfCols, delimitedAcctNoColNo, delimitedDateColNo, delimitedMoneyColNo, isInterest, null);
        }
        
        /// <remarks/>
        public void SavePaymentDefinitionAsync(
                    string bankName, 
                    string fileExt, 
                    int acctnoBegin, 
                    int acctnoLength, 
                    int moneyBegin, 
                    int moneyLength, 
                    int moneyPoint, 
                    int headLine, 
                    int dateBegin, 
                    int dateLength, 
                    string dateFormat, 
                    int trailerBegin, 
                    int trailerLength, 
                    int paymentMethod, 
                    int hasTrailer, 
                    int headerIdBegin, 
                    int headerIdLength, 
                    string headerId, 
                    int trailerIdBegin, 
                    int trailerIdLength, 
                    string trailerId, 
                    bool isBatch, 
                    int batchHeaderIdBegin, 
                    int batchHeaderIdLength, 
                    string batchHeaderId, 
                    bool batchHeaderHasTotal, 
                    int batchHeaderMoneyBegin, 
                    int batchHeaderMoneyLength, 
                    int batchTrailerIdBegin, 
                    int batchTrailerIdLength, 
                    string batchTrailerId, 
                    bool isDelimited, 
                    string delimiter, 
                    int delimitedNoOfCols, 
                    string delimitedAcctNoColNo, 
                    string delimitedDateColNo, 
                    string delimitedMoneyColNo, 
                    bool isInterest, 
                    object userState) {
            if ((this.SavePaymentDefinitionOperationCompleted == null)) {
                this.SavePaymentDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePaymentDefinitionOperationCompleted);
            }
            this.InvokeAsync("SavePaymentDefinition", new object[] {
                        bankName,
                        fileExt,
                        acctnoBegin,
                        acctnoLength,
                        moneyBegin,
                        moneyLength,
                        moneyPoint,
                        headLine,
                        dateBegin,
                        dateLength,
                        dateFormat,
                        trailerBegin,
                        trailerLength,
                        paymentMethod,
                        hasTrailer,
                        headerIdBegin,
                        headerIdLength,
                        headerId,
                        trailerIdBegin,
                        trailerIdLength,
                        trailerId,
                        isBatch,
                        batchHeaderIdBegin,
                        batchHeaderIdLength,
                        batchHeaderId,
                        batchHeaderHasTotal,
                        batchHeaderMoneyBegin,
                        batchHeaderMoneyLength,
                        batchTrailerIdBegin,
                        batchTrailerIdLength,
                        batchTrailerId,
                        isDelimited,
                        delimiter,
                        delimitedNoOfCols,
                        delimitedAcctNoColNo,
                        delimitedDateColNo,
                        delimitedMoneyColNo,
                        isInterest}, this.SavePaymentDefinitionOperationCompleted, userState);
        }
        
        private void OnSavePaymentDefinitionOperationCompleted(object arg) {
            if ((this.SavePaymentDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePaymentDefinitionCompleted(this, new SavePaymentDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeletePaymentDefinition", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeletePaymentDefinition(string bankName, out string err) {
            object[] results = this.Invoke("DeletePaymentDefinition", new object[] {
                        bankName});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeletePaymentDefinition(string bankName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeletePaymentDefinition", new object[] {
                        bankName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeletePaymentDefinition(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePaymentDefinitionAsync(string bankName) {
            this.DeletePaymentDefinitionAsync(bankName, null);
        }
        
        /// <remarks/>
        public void DeletePaymentDefinitionAsync(string bankName, object userState) {
            if ((this.DeletePaymentDefinitionOperationCompleted == null)) {
                this.DeletePaymentDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePaymentDefinitionOperationCompleted);
            }
            this.InvokeAsync("DeletePaymentDefinition", new object[] {
                        bankName}, this.DeletePaymentDefinitionOperationCompleted, userState);
        }
        
        private void OnDeletePaymentDefinitionOperationCompleted(object arg) {
            if ((this.DeletePaymentDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePaymentDefinitionCompleted(this, new DeletePaymentDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetPayMethod", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPayMethod(string category, string statusFlag, string tableName, out string err) {
            object[] results = this.Invoke("GetPayMethod", new object[] {
                        category,
                        statusFlag,
                        tableName});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPayMethod(string category, string statusFlag, string tableName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPayMethod", new object[] {
                        category,
                        statusFlag,
                        tableName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPayMethod(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayMethodAsync(string category, string statusFlag, string tableName) {
            this.GetPayMethodAsync(category, statusFlag, tableName, null);
        }
        
        /// <remarks/>
        public void GetPayMethodAsync(string category, string statusFlag, string tableName, object userState) {
            if ((this.GetPayMethodOperationCompleted == null)) {
                this.GetPayMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayMethodOperationCompleted);
            }
            this.InvokeAsync("GetPayMethod", new object[] {
                        category,
                        statusFlag,
                        tableName}, this.GetPayMethodOperationCompleted, userState);
        }
        
        private void OnGetPayMethodOperationCompleted(object arg) {
            if ((this.GetPayMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayMethodCompleted(this, new GetPayMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSalesCommissionRates", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSalesCommissionRates(string commItemStr, System.DateTime selectDate, out string err) {
            object[] results = this.Invoke("GetSalesCommissionRates", new object[] {
                        commItemStr,
                        selectDate});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSalesCommissionRates(string commItemStr, System.DateTime selectDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSalesCommissionRates", new object[] {
                        commItemStr,
                        selectDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSalesCommissionRates(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesCommissionRatesAsync(string commItemStr, System.DateTime selectDate) {
            this.GetSalesCommissionRatesAsync(commItemStr, selectDate, null);
        }
        
        /// <remarks/>
        public void GetSalesCommissionRatesAsync(string commItemStr, System.DateTime selectDate, object userState) {
            if ((this.GetSalesCommissionRatesOperationCompleted == null)) {
                this.GetSalesCommissionRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesCommissionRatesOperationCompleted);
            }
            this.InvokeAsync("GetSalesCommissionRates", new object[] {
                        commItemStr,
                        selectDate}, this.GetSalesCommissionRatesOperationCompleted, userState);
        }
        
        private void OnGetSalesCommissionRatesOperationCompleted(object arg) {
            if ((this.GetSalesCommissionRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesCommissionRatesCompleted(this, new GetSalesCommissionRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCommissionRates", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string SaveCommissionRates(string commItemStr, System.Data.DataSet commissionRateSet) {
            object[] results = this.Invoke("SaveCommissionRates", new object[] {
                        commItemStr,
                        commissionRateSet});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCommissionRates(string commItemStr, System.Data.DataSet commissionRateSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCommissionRates", new object[] {
                        commItemStr,
                        commissionRateSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSaveCommissionRates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCommissionRatesAsync(string commItemStr, System.Data.DataSet commissionRateSet) {
            this.SaveCommissionRatesAsync(commItemStr, commissionRateSet, null);
        }
        
        /// <remarks/>
        public void SaveCommissionRatesAsync(string commItemStr, System.Data.DataSet commissionRateSet, object userState) {
            if ((this.SaveCommissionRatesOperationCompleted == null)) {
                this.SaveCommissionRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCommissionRatesOperationCompleted);
            }
            this.InvokeAsync("SaveCommissionRates", new object[] {
                        commItemStr,
                        commissionRateSet}, this.SaveCommissionRatesOperationCompleted, userState);
        }
        
        private void OnSaveCommissionRatesOperationCompleted(object arg) {
            if ((this.SaveCommissionRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCommissionRatesCompleted(this, new SaveCommissionRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ValidateCommItem", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateCommItem(string commItemStr, string commItemText, System.DateTime CommDateFrom, System.DateTime CommDateTo, string CommSpiffBranch, out string err) {
            object[] results = this.Invoke("ValidateCommItem", new object[] {
                        commItemStr,
                        commItemText,
                        CommDateFrom,
                        CommDateTo,
                        CommSpiffBranch});
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateCommItem(string commItemStr, string commItemText, System.DateTime CommDateFrom, System.DateTime CommDateTo, string CommSpiffBranch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateCommItem", new object[] {
                        commItemStr,
                        commItemText,
                        CommDateFrom,
                        CommDateTo,
                        CommSpiffBranch}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndValidateCommItem(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCommItemAsync(string commItemStr, string commItemText, System.DateTime CommDateFrom, System.DateTime CommDateTo, string CommSpiffBranch) {
            this.ValidateCommItemAsync(commItemStr, commItemText, CommDateFrom, CommDateTo, CommSpiffBranch, null);
        }
        
        /// <remarks/>
        public void ValidateCommItemAsync(string commItemStr, string commItemText, System.DateTime CommDateFrom, System.DateTime CommDateTo, string CommSpiffBranch, object userState) {
            if ((this.ValidateCommItemOperationCompleted == null)) {
                this.ValidateCommItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCommItemOperationCompleted);
            }
            this.InvokeAsync("ValidateCommItem", new object[] {
                        commItemStr,
                        commItemText,
                        CommDateFrom,
                        CommDateTo,
                        CommSpiffBranch}, this.ValidateCommItemOperationCompleted, userState);
        }
        
        private void OnValidateCommItemOperationCompleted(object arg) {
            if ((this.ValidateCommItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCommItemCompleted(this, new ValidateCommItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ValidateCategory", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateCategory(out string err) {
            object[] results = this.Invoke("ValidateCategory", new object[0]);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateCategory(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateCategory", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndValidateCategory(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCategoryAsync() {
            this.ValidateCategoryAsync(null);
        }
        
        /// <remarks/>
        public void ValidateCategoryAsync(object userState) {
            if ((this.ValidateCategoryOperationCompleted == null)) {
                this.ValidateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCategoryOperationCompleted);
            }
            this.InvokeAsync("ValidateCategory", new object[0], this.ValidateCategoryOperationCompleted, userState);
        }
        
        private void OnValidateCategoryOperationCompleted(object arg) {
            if ((this.ValidateCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCategoryCompleted(this, new ValidateCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBasicSalesCommission", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicSalesCommission(string branchNo, string employee, System.DateTime fromDate, System.DateTime toDate, string accountNo, int agreementNo, string sumDet, string category, out string err) {
            object[] results = this.Invoke("GetBasicSalesCommission", new object[] {
                        branchNo,
                        employee,
                        fromDate,
                        toDate,
                        accountNo,
                        agreementNo,
                        sumDet,
                        category});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBasicSalesCommission(string branchNo, string employee, System.DateTime fromDate, System.DateTime toDate, string accountNo, int agreementNo, string sumDet, string category, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBasicSalesCommission", new object[] {
                        branchNo,
                        employee,
                        fromDate,
                        toDate,
                        accountNo,
                        agreementNo,
                        sumDet,
                        category}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBasicSalesCommission(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicSalesCommissionAsync(string branchNo, string employee, System.DateTime fromDate, System.DateTime toDate, string accountNo, int agreementNo, string sumDet, string category) {
            this.GetBasicSalesCommissionAsync(branchNo, employee, fromDate, toDate, accountNo, agreementNo, sumDet, category, null);
        }
        
        /// <remarks/>
        public void GetBasicSalesCommissionAsync(string branchNo, string employee, System.DateTime fromDate, System.DateTime toDate, string accountNo, int agreementNo, string sumDet, string category, object userState) {
            if ((this.GetBasicSalesCommissionOperationCompleted == null)) {
                this.GetBasicSalesCommissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicSalesCommissionOperationCompleted);
            }
            this.InvokeAsync("GetBasicSalesCommission", new object[] {
                        branchNo,
                        employee,
                        fromDate,
                        toDate,
                        accountNo,
                        agreementNo,
                        sumDet,
                        category}, this.GetBasicSalesCommissionOperationCompleted, userState);
        }
        
        private void OnGetBasicSalesCommissionOperationCompleted(object arg) {
            if ((this.GetBasicSalesCommissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicSalesCommissionCompleted(this, new GetBasicSalesCommissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSalesCommissionReportHeader", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSalesCommissionReportHeader(int branchNo, int employeeNo, System.DateTime fromDate, System.DateTime toDate, bool showStandardCommission, bool showSPIFFCommission, out string err) {
            object[] results = this.Invoke("GetSalesCommissionReportHeader", new object[] {
                        branchNo,
                        employeeNo,
                        fromDate,
                        toDate,
                        showStandardCommission,
                        showSPIFFCommission});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSalesCommissionReportHeader(int branchNo, int employeeNo, System.DateTime fromDate, System.DateTime toDate, bool showStandardCommission, bool showSPIFFCommission, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSalesCommissionReportHeader", new object[] {
                        branchNo,
                        employeeNo,
                        fromDate,
                        toDate,
                        showStandardCommission,
                        showSPIFFCommission}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSalesCommissionReportHeader(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesCommissionReportHeaderAsync(int branchNo, int employeeNo, System.DateTime fromDate, System.DateTime toDate, bool showStandardCommission, bool showSPIFFCommission) {
            this.GetSalesCommissionReportHeaderAsync(branchNo, employeeNo, fromDate, toDate, showStandardCommission, showSPIFFCommission, null);
        }
        
        /// <remarks/>
        public void GetSalesCommissionReportHeaderAsync(int branchNo, int employeeNo, System.DateTime fromDate, System.DateTime toDate, bool showStandardCommission, bool showSPIFFCommission, object userState) {
            if ((this.GetSalesCommissionReportHeaderOperationCompleted == null)) {
                this.GetSalesCommissionReportHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesCommissionReportHeaderOperationCompleted);
            }
            this.InvokeAsync("GetSalesCommissionReportHeader", new object[] {
                        branchNo,
                        employeeNo,
                        fromDate,
                        toDate,
                        showStandardCommission,
                        showSPIFFCommission}, this.GetSalesCommissionReportHeaderOperationCompleted, userState);
        }
        
        private void OnGetSalesCommissionReportHeaderOperationCompleted(object arg) {
            if ((this.GetSalesCommissionReportHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesCommissionReportHeaderCompleted(this, new GetSalesCommissionReportHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetSalesCommissionReportDetail", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSalesCommissionReportDetail(int employee, System.DateTime fromDate, System.DateTime toDate, bool showStandardCommission, bool showSPIFFCommission, out string err) {
            object[] results = this.Invoke("GetSalesCommissionReportDetail", new object[] {
                        employee,
                        fromDate,
                        toDate,
                        showStandardCommission,
                        showSPIFFCommission});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSalesCommissionReportDetail(int employee, System.DateTime fromDate, System.DateTime toDate, bool showStandardCommission, bool showSPIFFCommission, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSalesCommissionReportDetail", new object[] {
                        employee,
                        fromDate,
                        toDate,
                        showStandardCommission,
                        showSPIFFCommission}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSalesCommissionReportDetail(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesCommissionReportDetailAsync(int employee, System.DateTime fromDate, System.DateTime toDate, bool showStandardCommission, bool showSPIFFCommission) {
            this.GetSalesCommissionReportDetailAsync(employee, fromDate, toDate, showStandardCommission, showSPIFFCommission, null);
        }
        
        /// <remarks/>
        public void GetSalesCommissionReportDetailAsync(int employee, System.DateTime fromDate, System.DateTime toDate, bool showStandardCommission, bool showSPIFFCommission, object userState) {
            if ((this.GetSalesCommissionReportDetailOperationCompleted == null)) {
                this.GetSalesCommissionReportDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesCommissionReportDetailOperationCompleted);
            }
            this.InvokeAsync("GetSalesCommissionReportDetail", new object[] {
                        employee,
                        fromDate,
                        toDate,
                        showStandardCommission,
                        showSPIFFCommission}, this.GetSalesCommissionReportDetailOperationCompleted, userState);
        }
        
        private void OnGetSalesCommissionReportDetailOperationCompleted(object arg) {
            if ((this.GetSalesCommissionReportDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesCommissionReportDetailCompleted(this, new GetSalesCommissionReportDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ReverseBDW", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReverseBDW(string acctno, string countryCode) {
            object[] results = this.Invoke("ReverseBDW", new object[] {
                        acctno,
                        countryCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReverseBDW(string acctno, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReverseBDW", new object[] {
                        acctno,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndReverseBDW(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseBDWAsync(string acctno, string countryCode) {
            this.ReverseBDWAsync(acctno, countryCode, null);
        }
        
        /// <remarks/>
        public void ReverseBDWAsync(string acctno, string countryCode, object userState) {
            if ((this.ReverseBDWOperationCompleted == null)) {
                this.ReverseBDWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseBDWOperationCompleted);
            }
            this.InvokeAsync("ReverseBDW", new object[] {
                        acctno,
                        countryCode}, this.ReverseBDWOperationCompleted, userState);
        }
        
        private void OnReverseBDWOperationCompleted(object arg) {
            if ((this.ReverseBDWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseBDWCompleted(this, new ReverseBDWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCollectionCommissionRule", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCollectionCommissionRule(
                    int id, 
                    string ruleName, 
                    string empeeType, 
                    char commissionType, 
                    string[] actionArr, 
                    float pCentArrearsColl, 
                    float pCentOfCalls, 
                    float pCentOfWorklist, 
                    int noOfCalls, 
                    int noOfDaysSinceAction, 
                    int noTimeFrameDays, 
                    decimal minBal, 
                    decimal maxBal, 
                    decimal minValColl, 
                    decimal maxValColl, 
                    int minMnthsArrears, 
                    int maxMnthsArrears, 
                    float pCentCommOnArrears, 
                    float pCentCommOnAmtPaid, 
                    float pCentCommOnFee, 
                    decimal commSetVal, 
                    out string err) {
            object[] results = this.Invoke("SaveCollectionCommissionRule", new object[] {
                        id,
                        ruleName,
                        empeeType,
                        commissionType,
                        actionArr,
                        pCentArrearsColl,
                        pCentOfCalls,
                        pCentOfWorklist,
                        noOfCalls,
                        noOfDaysSinceAction,
                        noTimeFrameDays,
                        minBal,
                        maxBal,
                        minValColl,
                        maxValColl,
                        minMnthsArrears,
                        maxMnthsArrears,
                        pCentCommOnArrears,
                        pCentCommOnAmtPaid,
                        pCentCommOnFee,
                        commSetVal});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCollectionCommissionRule(
                    int id, 
                    string ruleName, 
                    string empeeType, 
                    char commissionType, 
                    string[] actionArr, 
                    float pCentArrearsColl, 
                    float pCentOfCalls, 
                    float pCentOfWorklist, 
                    int noOfCalls, 
                    int noOfDaysSinceAction, 
                    int noTimeFrameDays, 
                    decimal minBal, 
                    decimal maxBal, 
                    decimal minValColl, 
                    decimal maxValColl, 
                    int minMnthsArrears, 
                    int maxMnthsArrears, 
                    float pCentCommOnArrears, 
                    float pCentCommOnAmtPaid, 
                    float pCentCommOnFee, 
                    decimal commSetVal, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("SaveCollectionCommissionRule", new object[] {
                        id,
                        ruleName,
                        empeeType,
                        commissionType,
                        actionArr,
                        pCentArrearsColl,
                        pCentOfCalls,
                        pCentOfWorklist,
                        noOfCalls,
                        noOfDaysSinceAction,
                        noTimeFrameDays,
                        minBal,
                        maxBal,
                        minValColl,
                        maxValColl,
                        minMnthsArrears,
                        maxMnthsArrears,
                        pCentCommOnArrears,
                        pCentCommOnAmtPaid,
                        pCentCommOnFee,
                        commSetVal}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCollectionCommissionRule(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCollectionCommissionRuleAsync(
                    int id, 
                    string ruleName, 
                    string empeeType, 
                    char commissionType, 
                    string[] actionArr, 
                    float pCentArrearsColl, 
                    float pCentOfCalls, 
                    float pCentOfWorklist, 
                    int noOfCalls, 
                    int noOfDaysSinceAction, 
                    int noTimeFrameDays, 
                    decimal minBal, 
                    decimal maxBal, 
                    decimal minValColl, 
                    decimal maxValColl, 
                    int minMnthsArrears, 
                    int maxMnthsArrears, 
                    float pCentCommOnArrears, 
                    float pCentCommOnAmtPaid, 
                    float pCentCommOnFee, 
                    decimal commSetVal) {
            this.SaveCollectionCommissionRuleAsync(id, ruleName, empeeType, commissionType, actionArr, pCentArrearsColl, pCentOfCalls, pCentOfWorklist, noOfCalls, noOfDaysSinceAction, noTimeFrameDays, minBal, maxBal, minValColl, maxValColl, minMnthsArrears, maxMnthsArrears, pCentCommOnArrears, pCentCommOnAmtPaid, pCentCommOnFee, commSetVal, null);
        }
        
        /// <remarks/>
        public void SaveCollectionCommissionRuleAsync(
                    int id, 
                    string ruleName, 
                    string empeeType, 
                    char commissionType, 
                    string[] actionArr, 
                    float pCentArrearsColl, 
                    float pCentOfCalls, 
                    float pCentOfWorklist, 
                    int noOfCalls, 
                    int noOfDaysSinceAction, 
                    int noTimeFrameDays, 
                    decimal minBal, 
                    decimal maxBal, 
                    decimal minValColl, 
                    decimal maxValColl, 
                    int minMnthsArrears, 
                    int maxMnthsArrears, 
                    float pCentCommOnArrears, 
                    float pCentCommOnAmtPaid, 
                    float pCentCommOnFee, 
                    decimal commSetVal, 
                    object userState) {
            if ((this.SaveCollectionCommissionRuleOperationCompleted == null)) {
                this.SaveCollectionCommissionRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCollectionCommissionRuleOperationCompleted);
            }
            this.InvokeAsync("SaveCollectionCommissionRule", new object[] {
                        id,
                        ruleName,
                        empeeType,
                        commissionType,
                        actionArr,
                        pCentArrearsColl,
                        pCentOfCalls,
                        pCentOfWorklist,
                        noOfCalls,
                        noOfDaysSinceAction,
                        noTimeFrameDays,
                        minBal,
                        maxBal,
                        minValColl,
                        maxValColl,
                        minMnthsArrears,
                        maxMnthsArrears,
                        pCentCommOnArrears,
                        pCentCommOnAmtPaid,
                        pCentCommOnFee,
                        commSetVal}, this.SaveCollectionCommissionRuleOperationCompleted, userState);
        }
        
        private void OnSaveCollectionCommissionRuleOperationCompleted(object arg) {
            if ((this.SaveCollectionCommissionRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCollectionCommissionRuleCompleted(this, new SaveCollectionCommissionRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCollectionCommissionRules", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCollectionCommissionRules(string empeeType, out string err) {
            object[] results = this.Invoke("GetCollectionCommissionRules", new object[] {
                        empeeType});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCollectionCommissionRules(string empeeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCollectionCommissionRules", new object[] {
                        empeeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCollectionCommissionRules(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCollectionCommissionRulesAsync(string empeeType) {
            this.GetCollectionCommissionRulesAsync(empeeType, null);
        }
        
        /// <remarks/>
        public void GetCollectionCommissionRulesAsync(string empeeType, object userState) {
            if ((this.GetCollectionCommissionRulesOperationCompleted == null)) {
                this.GetCollectionCommissionRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCollectionCommissionRulesOperationCompleted);
            }
            this.InvokeAsync("GetCollectionCommissionRules", new object[] {
                        empeeType}, this.GetCollectionCommissionRulesOperationCompleted, userState);
        }
        
        private void OnGetCollectionCommissionRulesOperationCompleted(object arg) {
            if ((this.GetCollectionCommissionRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCollectionCommissionRulesCompleted(this, new GetCollectionCommissionRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteCollectionCommissionRule", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCollectionCommissionRule(int id, out string err) {
            object[] results = this.Invoke("DeleteCollectionCommissionRule", new object[] {
                        id});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteCollectionCommissionRule(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteCollectionCommissionRule", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteCollectionCommissionRule(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCollectionCommissionRuleAsync(int id) {
            this.DeleteCollectionCommissionRuleAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteCollectionCommissionRuleAsync(int id, object userState) {
            if ((this.DeleteCollectionCommissionRuleOperationCompleted == null)) {
                this.DeleteCollectionCommissionRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCollectionCommissionRuleOperationCompleted);
            }
            this.InvokeAsync("DeleteCollectionCommissionRule", new object[] {
                        id}, this.DeleteCollectionCommissionRuleOperationCompleted, userState);
        }
        
        private void OnDeleteCollectionCommissionRuleOperationCompleted(object arg) {
            if ((this.DeleteCollectionCommissionRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCollectionCommissionRuleCompleted(this, new DeleteCollectionCommissionRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteCollectionCommissionRuleActions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCollectionCommissionRuleActions(int id, out string err) {
            object[] results = this.Invoke("DeleteCollectionCommissionRuleActions", new object[] {
                        id});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteCollectionCommissionRuleActions(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteCollectionCommissionRuleActions", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteCollectionCommissionRuleActions(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCollectionCommissionRuleActionsAsync(int id) {
            this.DeleteCollectionCommissionRuleActionsAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteCollectionCommissionRuleActionsAsync(int id, object userState) {
            if ((this.DeleteCollectionCommissionRuleActionsOperationCompleted == null)) {
                this.DeleteCollectionCommissionRuleActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCollectionCommissionRuleActionsOperationCompleted);
            }
            this.InvokeAsync("DeleteCollectionCommissionRuleActions", new object[] {
                        id}, this.DeleteCollectionCommissionRuleActionsOperationCompleted, userState);
        }
        
        private void OnDeleteCollectionCommissionRuleActionsOperationCompleted(object arg) {
            if ((this.DeleteCollectionCommissionRuleActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCollectionCommissionRuleActionsCompleted(this, new DeleteCollectionCommissionRuleActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetUpliftCommissionRates", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUpliftCommissionRates() {
            object[] results = this.Invoke("GetUpliftCommissionRates", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUpliftCommissionRates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUpliftCommissionRates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUpliftCommissionRates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpliftCommissionRatesAsync() {
            this.GetUpliftCommissionRatesAsync(null);
        }
        
        /// <remarks/>
        public void GetUpliftCommissionRatesAsync(object userState) {
            if ((this.GetUpliftCommissionRatesOperationCompleted == null)) {
                this.GetUpliftCommissionRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpliftCommissionRatesOperationCompleted);
            }
            this.InvokeAsync("GetUpliftCommissionRates", new object[0], this.GetUpliftCommissionRatesOperationCompleted, userState);
        }
        
        private void OnGetUpliftCommissionRatesOperationCompleted(object arg) {
            if ((this.GetUpliftCommissionRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpliftCommissionRatesCompleted(this, new GetUpliftCommissionRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveUpliftCommissionRates", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveUpliftCommissionRates(System.Data.DataTable upliftRates) {
            this.Invoke("SaveUpliftCommissionRates", new object[] {
                        upliftRates});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveUpliftCommissionRates(System.Data.DataTable upliftRates, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveUpliftCommissionRates", new object[] {
                        upliftRates}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSaveUpliftCommissionRates(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SaveUpliftCommissionRatesAsync(System.Data.DataTable upliftRates) {
            this.SaveUpliftCommissionRatesAsync(upliftRates, null);
        }
        
        /// <remarks/>
        public void SaveUpliftCommissionRatesAsync(System.Data.DataTable upliftRates, object userState) {
            if ((this.SaveUpliftCommissionRatesOperationCompleted == null)) {
                this.SaveUpliftCommissionRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUpliftCommissionRatesOperationCompleted);
            }
            this.InvokeAsync("SaveUpliftCommissionRates", new object[] {
                        upliftRates}, this.SaveUpliftCommissionRatesOperationCompleted, userState);
        }
        
        private void OnSaveUpliftCommissionRatesOperationCompleted(object arg) {
            if ((this.SaveUpliftCommissionRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUpliftCommissionRatesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetEarlySettlementFig", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetEarlySettlementFig(string accountNumber) {
            object[] results = this.Invoke("GetEarlySettlementFig", new object[] {
                        accountNumber});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEarlySettlementFig(string accountNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEarlySettlementFig", new object[] {
                        accountNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public decimal EndGetEarlySettlementFig(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetEarlySettlementFigAsync(string accountNumber) {
            this.GetEarlySettlementFigAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetEarlySettlementFigAsync(string accountNumber, object userState) {
            if ((this.GetEarlySettlementFigOperationCompleted == null)) {
                this.GetEarlySettlementFigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEarlySettlementFigOperationCompleted);
            }
            this.InvokeAsync("GetEarlySettlementFig", new object[] {
                        accountNumber}, this.GetEarlySettlementFigOperationCompleted, userState);
        }
        
        private void OnGetEarlySettlementFigOperationCompleted(object arg) {
            if ((this.GetEarlySettlementFigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEarlySettlementFigCompleted(this, new GetEarlySettlementFigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CLGeneralFinanceTransactionValidation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CLGeneralFinanceTransactionValidation(string acctno, string transtype, int creditDebit, out decimal amount) {
            object[] results = this.Invoke("CLGeneralFinanceTransactionValidation", new object[] {
                        acctno,
                        transtype,
                        creditDebit});
            amount = ((decimal)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCLGeneralFinanceTransactionValidation(string acctno, string transtype, int creditDebit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CLGeneralFinanceTransactionValidation", new object[] {
                        acctno,
                        transtype,
                        creditDebit}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCLGeneralFinanceTransactionValidation(System.IAsyncResult asyncResult, out decimal amount) {
            object[] results = this.EndInvoke(asyncResult);
            amount = ((decimal)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CLGeneralFinanceTransactionValidationAsync(string acctno, string transtype, int creditDebit) {
            this.CLGeneralFinanceTransactionValidationAsync(acctno, transtype, creditDebit, null);
        }
        
        /// <remarks/>
        public void CLGeneralFinanceTransactionValidationAsync(string acctno, string transtype, int creditDebit, object userState) {
            if ((this.CLGeneralFinanceTransactionValidationOperationCompleted == null)) {
                this.CLGeneralFinanceTransactionValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCLGeneralFinanceTransactionValidationOperationCompleted);
            }
            this.InvokeAsync("CLGeneralFinanceTransactionValidation", new object[] {
                        acctno,
                        transtype,
                        creditDebit}, this.CLGeneralFinanceTransactionValidationOperationCompleted, userState);
        }
        
        private void OnCLGeneralFinanceTransactionValidationOperationCompleted(object arg) {
            if ((this.CLGeneralFinanceTransactionValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CLGeneralFinanceTransactionValidationCompleted(this, new CLGeneralFinanceTransactionValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/IsCashLoanAmortizedAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCashLoanAmortizedAccount(string acctno) {
            object[] results = this.Invoke("IsCashLoanAmortizedAccount", new object[] {
                        acctno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsCashLoanAmortizedAccount(string acctno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsCashLoanAmortizedAccount", new object[] {
                        acctno}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsCashLoanAmortizedAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCashLoanAmortizedAccountAsync(string acctno) {
            this.IsCashLoanAmortizedAccountAsync(acctno, null);
        }
        
        /// <remarks/>
        public void IsCashLoanAmortizedAccountAsync(string acctno, object userState) {
            if ((this.IsCashLoanAmortizedAccountOperationCompleted == null)) {
                this.IsCashLoanAmortizedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCashLoanAmortizedAccountOperationCompleted);
            }
            this.InvokeAsync("IsCashLoanAmortizedAccount", new object[] {
                        acctno}, this.IsCashLoanAmortizedAccountOperationCompleted, userState);
        }
        
        private void OnIsCashLoanAmortizedAccountOperationCompleted(object arg) {
            if ((this.IsCashLoanAmortizedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCashLoanAmortizedAccountCompleted(this, new IsCashLoanAmortizedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPaymentAccountsCompletedEventHandler(object sender, GetPaymentAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal addToValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountSettlementCompletedEventHandler(object sender, GetAccountSettlementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountSettlementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountSettlementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal settlement {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal rebate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal collectionFee {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateCreditFeeCompletedEventHandler(object sender, CalculateCreditFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateCreditFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateCreditFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet accountSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal paymentAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalculateCreditFee1CompletedEventHandler(object sender, CalculateCreditFee1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateCreditFee1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateCreditFee1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int allocatedCourtsPerson {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal paymentAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal collectionFee {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal bailiffFee {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int debitAccount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public int segmentId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SavePaymentCompletedEventHandler(object sender, SavePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int commissionRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int paymentRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int rebateRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal rebateSum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTempReceiptCompletedEventHandler(object sender, GetTempReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTempReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTempReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckDeliveryDateCompletedEventHandler(object sender, CheckDeliveryDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDeliveryDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDeliveryDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime chequeClearance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashierTotalsCompletedEventHandler(object sender, GetCashierTotalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashierTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDateLastAuditCompletedEventHandler(object sender, GetDateLastAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateLastAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateLastAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetChequeDetailsCompletedEventHandler(object sender, GetChequeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChequeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChequeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReverseChequeCompletedEventHandler(object sender, ReverseChequeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseChequeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseChequeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCashierTotalCompletedEventHandler(object sender, SaveCashierTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCashierTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCashierTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashierTotalsHistoryCompletedEventHandler(object sender, GetCashierTotalsHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierTotalsHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashierTotalsHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashierTotalsReversalCompletedEventHandler(object sender, GetCashierTotalsReversalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierTotalsReversalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashierTotalsReversalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canReverse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dateFrom {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal diffTotal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal systemTotal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public decimal depositTotal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public decimal userTotal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCashierTotalsReversalCompletedEventHandler(object sender, SaveCashierTotalsReversalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCashierTotalsReversalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCashierTotalsReversalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashierDepositsCompletedEventHandler(object sender, GetCashierDepositsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierDepositsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashierDepositsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCashierDepositsCompletedEventHandler(object sender, SaveCashierDepositsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCashierDepositsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCashierDepositsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCashierDisbursementsCompletedEventHandler(object sender, SaveCashierDisbursementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCashierDisbursementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCashierDisbursementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VoidCashierDepositCompletedEventHandler(object sender, VoidCashierDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoidCashierDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoidCashierDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccountPaymentsCompletedEventHandler(object sender, GetAccountPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAmountPaidCompletedEventHandler(object sender, GetAmountPaidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmountPaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmountPaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void WriteFintransRecordCompletedEventHandler(object sender, WriteFintransRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteFintransRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteFintransRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCorrectionCompletedEventHandler(object sender, SaveCorrectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCorrectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCorrectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveBDWCorrectionCompletedEventHandler(object sender, SaveBDWCorrectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBDWCorrectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBDWCorrectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveRefundCompletedEventHandler(object sender, SaveRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUnexportedCashierTotalsCompletedEventHandler(object sender, GetUnexportedCashierTotalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnexportedCashierTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnexportedCashierTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllTransactionsByAccountCompletedEventHandler(object sender, GetAllTransactionsByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTransactionsByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTransactionsByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDDMandateCompletedEventHandler(object sender, GetDDMandateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDDMandateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDDMandateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDDMandate1CompletedEventHandler(object sender, GetDDMandate1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDDMandate1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDDMandate1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AnotherMandateCompletedEventHandler(object sender, AnotherMandateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnotherMandateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnotherMandateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int anMandateId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.DateTime endDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public System.DateTime effDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InitDatesCompletedEventHandler(object sender, InitDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveMandateCompletedEventHandler(object sender, SaveMandateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMandateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMandateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDDPaymentExtraListCompletedEventHandler(object sender, GetDDPaymentExtraListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDDPaymentExtraListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDDPaymentExtraListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveDDPaymentExtraListCompletedEventHandler(object sender, SaveDDPaymentExtraListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDDPaymentExtraListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDDPaymentExtraListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string acctNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string customerName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDDRejectionListCompletedEventHandler(object sender, GetDDRejectionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDDRejectionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDDRejectionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveDDRejectionListCompletedEventHandler(object sender, SaveDDRejectionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDDRejectionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDDRejectionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string acctNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string customerName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void WriteGeneralTransactionCompletedEventHandler(object sender, WriteGeneralTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteGeneralTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteGeneralTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void WriteFreeInstalmentCompletedEventHandler(object sender, WriteFreeInstalmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteFreeInstalmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteFreeInstalmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HasCashierTotalledCompletedEventHandler(object sender, HasCashierTotalledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasCashierTotalledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasCashierTotalledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUnexportedCashierTotals1CompletedEventHandler(object sender, GetUnexportedCashierTotals1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnexportedCashierTotals1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnexportedCashierTotals1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashierTotalsBreakdownCompletedEventHandler(object sender, GetCashierTotalsBreakdownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierTotalsBreakdownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashierTotalsBreakdownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetExchangeRatesCompletedEventHandler(object sender, GetExchangeRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetExchangeRateHistoryCompletedEventHandler(object sender, GetExchangeRateHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRateHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRateHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalcForeignTenderCompletedEventHandler(object sender, CalcForeignTenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcForeignTenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcForeignTenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalcExchangeAmountCompletedEventHandler(object sender, CalcExchangeAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcExchangeAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcExchangeAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveExchangeRatesCompletedEventHandler(object sender, SaveExchangeRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExchangeRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExchangeRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ValidateGiftVoucherCompletedEventHandler(object sender, ValidateGiftVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateGiftVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateGiftVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal voucherValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.DateTime expiry {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool redeemed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void JournalEnquiryGetCompletedEventHandler(object sender, JournalEnquiryGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JournalEnquiryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JournalEnquiryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SellGiftVoucherCompletedEventHandler(object sender, SellGiftVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SellGiftVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SellGiftVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashiersWithOutstandingPaymentsCompletedEventHandler(object sender, GetCashiersWithOutstandingPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashiersWithOutstandingPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashiersWithOutstandingPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RedeemOtherGiftVoucherCompletedEventHandler(object sender, RedeemOtherGiftVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RedeemOtherGiftVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RedeemOtherGiftVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCashDrawerOpenCompletedEventHandler(object sender, SaveCashDrawerOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCashDrawerOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCashDrawerOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoadCashDrawerOpenCompletedEventHandler(object sender, LoadCashDrawerOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCashDrawerOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCashDrawerOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsDepositReferenceUniqueCompletedEventHandler(object sender, IsDepositReferenceUniqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDepositReferenceUniqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDepositReferenceUniqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashierOutstandingIncomeCompletedEventHandler(object sender, GetCashierOutstandingIncomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierOutstandingIncomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashierOutstandingIncomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashierOutstandingIncomeByPayMethodCompletedEventHandler(object sender, GetCashierOutstandingIncomeByPayMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierOutstandingIncomeByPayMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashierOutstandingIncomeByPayMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCashierTotalsSummaryCompletedEventHandler(object sender, GetCashierTotalsSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashierTotalsSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashierTotalsSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LockDepositScreenCompletedEventHandler(object sender, LockDepositScreenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockDepositScreenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockDepositScreenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UnLockDepositScreenCompletedEventHandler(object sender, UnLockDepositScreenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnLockDepositScreenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnLockDepositScreenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CashierMustDepositCompletedEventHandler(object sender, CashierMustDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CashierMustDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CashierMustDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool mustDeposit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOutstandingSafeDepositsCompletedEventHandler(object sender, GetOutstandingSafeDepositsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutstandingSafeDepositsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutstandingSafeDepositsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal safeDeposits {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReverseSafeDepositsCompletedEventHandler(object sender, ReverseSafeDepositsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseSafeDepositsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseSafeDepositsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPaymentHolidaysCompletedEventHandler(object sender, GetPaymentHolidaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentHolidaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentHolidaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPaymentReturnedChequesCompletedEventHandler(object sender, GetPaymentReturnedChequesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentReturnedChequesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentReturnedChequesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool authorisationRequired {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SavePaymentHolidayCompletedEventHandler(object sender, SavePaymentHolidayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePaymentHolidayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePaymentHolidayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IncludeDepositsCompletedEventHandler(object sender, IncludeDepositsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncludeDepositsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncludeDepositsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBranchCashierListCompletedEventHandler(object sender, GetBranchCashierListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchCashierListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchCashierListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TemporaryReceiptEnquiryCompletedEventHandler(object sender, TemporaryReceiptEnquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TemporaryReceiptEnquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TemporaryReceiptEnquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void BailiffTemporaryReceiptEnquiryCompletedEventHandler(object sender, BailiffTemporaryReceiptEnquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BailiffTemporaryReceiptEnquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BailiffTemporaryReceiptEnquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelTempReceiptCompletedEventHandler(object sender, CancelTempReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTempReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTempReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VoidTempReceiptCompletedEventHandler(object sender, VoidTempReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoidTempReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoidTempReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AllocateTempReceiptCompletedEventHandler(object sender, AllocateTempReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocateTempReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocateTempReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReallocateTempReceiptCompletedEventHandler(object sender, ReallocateTempReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReallocateTempReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReallocateTempReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckReceiptNotIssuedCompletedEventHandler(object sender, CheckReceiptNotIssuedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckReceiptNotIssuedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckReceiptNotIssuedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int issuedCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNextTemporaryReceptNoCompletedEventHandler(object sender, GetNextTemporaryReceptNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextTemporaryReceptNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextTemporaryReceptNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int nextRecpNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDefaultCommissionBasisCompletedEventHandler(object sender, GetDefaultCommissionBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultCommissionBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultCommissionBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBailiffCommissionBasisCompletedEventHandler(object sender, GetBailiffCommissionBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBailiffCommissionBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBailiffCommissionBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCommissionBasisCompletedEventHandler(object sender, SaveCommissionBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCommissionBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCommissionBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveBailiffCommissionBasisCompletedEventHandler(object sender, SaveBailiffCommissionBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBailiffCommissionBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBailiffCommissionBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteCommissionBasisCompletedEventHandler(object sender, DeleteCommissionBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCommissionBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCommissionBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteBailiffCommissionBasisCompletedEventHandler(object sender, DeleteBailiffCommissionBasisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBailiffCommissionBasisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBailiffCommissionBasisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCommissionTransactionsCompletedEventHandler(object sender, GetCommissionTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommissionTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommissionTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteCommissionTransactionCompletedEventHandler(object sender, DeleteCommissionTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCommissionTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCommissionTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RestoreCommissionTransactionCompletedEventHandler(object sender, RestoreCommissionTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreCommissionTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreCommissionTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateCommissionTransactionStatusCompletedEventHandler(object sender, UpdateCommissionTransactionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommissionTransactionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommissionTransactionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PayBailiffCommissionCompletedEventHandler(object sender, PayBailiffCommissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayBailiffCommissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayBailiffCommissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSUCBFinancialDetailsCompletedEventHandler(object sender, GetSUCBFinancialDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSUCBFinancialDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSUCBFinancialDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWarrantyAdjustmentCompletedEventHandler(object sender, GetWarrantyAdjustmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantyAdjustmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantyAdjustmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDefinitionCompletedEventHandler(object sender, GetDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SavePaymentDefinitionCompletedEventHandler(object sender, SavePaymentDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePaymentDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePaymentDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeletePaymentDefinitionCompletedEventHandler(object sender, DeletePaymentDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePaymentDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePaymentDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPayMethodCompletedEventHandler(object sender, GetPayMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSalesCommissionRatesCompletedEventHandler(object sender, GetSalesCommissionRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesCommissionRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesCommissionRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCommissionRatesCompletedEventHandler(object sender, SaveCommissionRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCommissionRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCommissionRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ValidateCommItemCompletedEventHandler(object sender, ValidateCommItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCommItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCommItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ValidateCategoryCompletedEventHandler(object sender, ValidateCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBasicSalesCommissionCompletedEventHandler(object sender, GetBasicSalesCommissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicSalesCommissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicSalesCommissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSalesCommissionReportHeaderCompletedEventHandler(object sender, GetSalesCommissionReportHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesCommissionReportHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesCommissionReportHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSalesCommissionReportDetailCompletedEventHandler(object sender, GetSalesCommissionReportDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesCommissionReportDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesCommissionReportDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReverseBDWCompletedEventHandler(object sender, ReverseBDWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseBDWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseBDWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveCollectionCommissionRuleCompletedEventHandler(object sender, SaveCollectionCommissionRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCollectionCommissionRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCollectionCommissionRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCollectionCommissionRulesCompletedEventHandler(object sender, GetCollectionCommissionRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCollectionCommissionRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCollectionCommissionRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteCollectionCommissionRuleCompletedEventHandler(object sender, DeleteCollectionCommissionRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCollectionCommissionRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCollectionCommissionRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteCollectionCommissionRuleActionsCompletedEventHandler(object sender, DeleteCollectionCommissionRuleActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCollectionCommissionRuleActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCollectionCommissionRuleActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUpliftCommissionRatesCompletedEventHandler(object sender, GetUpliftCommissionRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpliftCommissionRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpliftCommissionRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveUpliftCommissionRatesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEarlySettlementFigCompletedEventHandler(object sender, GetEarlySettlementFigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEarlySettlementFigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEarlySettlementFigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CLGeneralFinanceTransactionValidationCompletedEventHandler(object sender, CLGeneralFinanceTransactionValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CLGeneralFinanceTransactionValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CLGeneralFinanceTransactionValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal amount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsCashLoanAmortizedAccountCompletedEventHandler(object sender, IsCashLoanAmortizedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCashLoanAmortizedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCashLoanAmortizedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591