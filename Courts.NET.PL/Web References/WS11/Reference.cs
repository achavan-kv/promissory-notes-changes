//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace STL.PL.WS11 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WServiceManagerSoap", Namespace="http://strategicthought.com/webservices/")]
    public partial class WServiceManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback GetServiceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveServiceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSRCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePriceIndexMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTechMainPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceAllocationPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargeToDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechnicianDiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTechnicianSlotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPartsDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookServiceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FreeServiceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantyLengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechniciansOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechniciansByZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateServiceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPriceIndexMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteOffSRChargeAcctOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelSRChargeAcctOperationCompleted;
        
        private System.Threading.SendOrPostCallback SRBatchPrintUpdatePrintedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTechnicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechnicianListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechniciansForPaymentSceenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechnicianPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechnicianPaymentSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDetailsForAllTechniciansOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTechnicianPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSerialNoDupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoodLossOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFoodLossOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCutomerInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutstandingServiceReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchPrintReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceProgressReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceFailureReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClaimsSubmissionReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDepositFromSROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceRequestSummaryForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeToAuthorisationLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChargeToAuthorisationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceRequestAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoiceNumberOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WServiceManager() {
            this.Url = "http://localhost/Courts.NET.WS/WServiceManager.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServiceRequestCompletedEventHandler GetServiceRequestCompleted;
        
        /// <remarks/>
        public event SaveServiceRequestCompletedEventHandler SaveServiceRequestCompleted;
        
        /// <remarks/>
        public event UpdateSRCustomerCompletedEventHandler UpdateSRCustomerCompleted;
        
        /// <remarks/>
        public event SavePriceIndexMatrixCompletedEventHandler SavePriceIndexMatrixCompleted;
        
        /// <remarks/>
        public event CheckTechMainPermissionsCompletedEventHandler CheckTechMainPermissionsCompleted;
        
        /// <remarks/>
        public event GetServiceAllocationPaymentCompletedEventHandler GetServiceAllocationPaymentCompleted;
        
        /// <remarks/>
        public event GetChargeToDepositCompletedEventHandler GetChargeToDepositCompleted;
        
        /// <remarks/>
        public event GetTechnicianDiaryCompletedEventHandler GetTechnicianDiaryCompleted;
        
        /// <remarks/>
        public event CheckTechnicianSlotsCompletedEventHandler CheckTechnicianSlotsCompleted;
        
        /// <remarks/>
        public event CheckPartsDateCompletedEventHandler CheckPartsDateCompleted;
        
        /// <remarks/>
        public event BookServiceRequestCompletedEventHandler BookServiceRequestCompleted;
        
        /// <remarks/>
        public event FreeServiceRequestCompletedEventHandler FreeServiceRequestCompleted;
        
        /// <remarks/>
        public event GetWarrantyLengthCompletedEventHandler GetWarrantyLengthCompleted;
        
        /// <remarks/>
        public event GetTechniciansCompletedEventHandler GetTechniciansCompleted;
        
        /// <remarks/>
        public event GetTechniciansByZoneCompletedEventHandler GetTechniciansByZoneCompleted;
        
        /// <remarks/>
        public event CreateServiceRequestCompletedEventHandler CreateServiceRequestCompleted;
        
        /// <remarks/>
        public event LoadPriceIndexMatrixCompletedEventHandler LoadPriceIndexMatrixCompleted;
        
        /// <remarks/>
        public event WriteOffSRChargeAcctCompletedEventHandler WriteOffSRChargeAcctCompleted;
        
        /// <remarks/>
        public event CancelSRChargeAcctCompletedEventHandler CancelSRChargeAcctCompleted;
        
        /// <remarks/>
        public event SRBatchPrintUpdatePrintedCompletedEventHandler SRBatchPrintUpdatePrintedCompleted;
        
        /// <remarks/>
        public event DeleteTechnicianCompletedEventHandler DeleteTechnicianCompleted;
        
        /// <remarks/>
        public event ActivateTechnicianCompletedEventHandler ActivateTechnicianCompleted;
        
        /// <remarks/>
        public event GetTechnicianCompletedEventHandler GetTechnicianCompleted;
        
        /// <remarks/>
        public event SaveTechnicianCompletedEventHandler SaveTechnicianCompleted;
        
        /// <remarks/>
        public event GetTechnicianListCompletedEventHandler GetTechnicianListCompleted;
        
        /// <remarks/>
        public event GetTechniciansForPaymentSceenCompletedEventHandler GetTechniciansForPaymentSceenCompleted;
        
        /// <remarks/>
        public event GetTechnicianPaymentsCompletedEventHandler GetTechnicianPaymentsCompleted;
        
        /// <remarks/>
        public event GetTechnicianPaymentSummaryCompletedEventHandler GetTechnicianPaymentSummaryCompleted;
        
        /// <remarks/>
        public event SaveDetailsForAllTechniciansCompletedEventHandler SaveDetailsForAllTechniciansCompleted;
        
        /// <remarks/>
        public event SaveTechnicianPaymentCompletedEventHandler SaveTechnicianPaymentCompleted;
        
        /// <remarks/>
        public event ServiceSearchCompletedEventHandler ServiceSearchCompleted;
        
        /// <remarks/>
        public event CheckSerialNoDupCompletedEventHandler CheckSerialNoDupCompleted;
        
        /// <remarks/>
        public event GetFoodLossCompletedEventHandler GetFoodLossCompleted;
        
        /// <remarks/>
        public event SaveFoodLossCompletedEventHandler SaveFoodLossCompleted;
        
        /// <remarks/>
        public event GetCustomerInteractionCompletedEventHandler GetCustomerInteractionCompleted;
        
        /// <remarks/>
        public event SaveCutomerInteractionCompletedEventHandler SaveCutomerInteractionCompleted;
        
        /// <remarks/>
        public event GetOutstandingServiceReportCompletedEventHandler GetOutstandingServiceReportCompleted;
        
        /// <remarks/>
        public event GetBatchPrintReportsCompletedEventHandler GetBatchPrintReportsCompleted;
        
        /// <remarks/>
        public event GetServiceProgressReportCompletedEventHandler GetServiceProgressReportCompleted;
        
        /// <remarks/>
        public event GetServiceFailureReportCompletedEventHandler GetServiceFailureReportCompleted;
        
        /// <remarks/>
        public event GetClaimsSubmissionReportCompletedEventHandler GetClaimsSubmissionReportCompleted;
        
        /// <remarks/>
        public event RemoveDepositFromSRCompletedEventHandler RemoveDepositFromSRCompleted;
        
        /// <remarks/>
        public event GetServiceRequestSummaryForAccountCompletedEventHandler GetServiceRequestSummaryForAccountCompleted;
        
        /// <remarks/>
        public event ChargeToAuthorisationLoadCompletedEventHandler ChargeToAuthorisationLoadCompleted;
        
        /// <remarks/>
        public event UpdateChargeToAuthorisationCompletedEventHandler UpdateChargeToAuthorisationCompleted;
        
        /// <remarks/>
        public event GetServiceRequestAuditCompletedEventHandler GetServiceRequestAuditCompleted;
        
        /// <remarks/>
        public event GetInvoiceNumberCompletedEventHandler GetInvoiceNumberCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetServiceRequest", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetServiceRequest(string serviceTypeSearch, long serviceRequestNo, string custId, string acctNo, int invoiceNo, short branchNo, string user, out string serviceType, out string err, out bool isPaidAndTakenAcct) {
            object[] results = this.Invoke("GetServiceRequest", new object[] {
                        serviceTypeSearch,
                        serviceRequestNo,
                        custId,
                        acctNo,
                        invoiceNo,
                        branchNo,
                        user});
            serviceType = ((string)(results[1]));
            err = ((string)(results[2]));
            isPaidAndTakenAcct = ((bool)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceRequest(string serviceTypeSearch, long serviceRequestNo, string custId, string acctNo, int invoiceNo, short branchNo, string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceRequest", new object[] {
                        serviceTypeSearch,
                        serviceRequestNo,
                        custId,
                        acctNo,
                        invoiceNo,
                        branchNo,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetServiceRequest(System.IAsyncResult asyncResult, out string serviceType, out string err, out bool isPaidAndTakenAcct) {
            object[] results = this.EndInvoke(asyncResult);
            serviceType = ((string)(results[1]));
            err = ((string)(results[2]));
            isPaidAndTakenAcct = ((bool)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceRequestAsync(string serviceTypeSearch, long serviceRequestNo, string custId, string acctNo, int invoiceNo, short branchNo, string user) {
            this.GetServiceRequestAsync(serviceTypeSearch, serviceRequestNo, custId, acctNo, invoiceNo, branchNo, user, null);
        }
        
        /// <remarks/>
        public void GetServiceRequestAsync(string serviceTypeSearch, long serviceRequestNo, string custId, string acctNo, int invoiceNo, short branchNo, string user, object userState) {
            if ((this.GetServiceRequestOperationCompleted == null)) {
                this.GetServiceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceRequestOperationCompleted);
            }
            this.InvokeAsync("GetServiceRequest", new object[] {
                        serviceTypeSearch,
                        serviceRequestNo,
                        custId,
                        acctNo,
                        invoiceNo,
                        branchNo,
                        user}, this.GetServiceRequestOperationCompleted, userState);
        }
        
        private void OnGetServiceRequestOperationCompleted(object arg) {
            if ((this.GetServiceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceRequestCompleted(this, new GetServiceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveServiceRequest", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveServiceRequest(System.Data.DataSet serviceRequestSet, out string err) {
            object[] results = this.Invoke("SaveServiceRequest", new object[] {
                        serviceRequestSet});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveServiceRequest(System.Data.DataSet serviceRequestSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveServiceRequest", new object[] {
                        serviceRequestSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveServiceRequest(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveServiceRequestAsync(System.Data.DataSet serviceRequestSet) {
            this.SaveServiceRequestAsync(serviceRequestSet, null);
        }
        
        /// <remarks/>
        public void SaveServiceRequestAsync(System.Data.DataSet serviceRequestSet, object userState) {
            if ((this.SaveServiceRequestOperationCompleted == null)) {
                this.SaveServiceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveServiceRequestOperationCompleted);
            }
            this.InvokeAsync("SaveServiceRequest", new object[] {
                        serviceRequestSet}, this.SaveServiceRequestOperationCompleted, userState);
        }
        
        private void OnSaveServiceRequestOperationCompleted(object arg) {
            if ((this.SaveServiceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveServiceRequestCompleted(this, new SaveServiceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateSRCustomer", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSRCustomer(int serviceRequestNo, string custID, string title, string firstName, string lastName, decimal arrears, string address1, string address2, string address3, string postCode, string directions, string telHome, string telWork, string telMobile, out string err) {
            object[] results = this.Invoke("UpdateSRCustomer", new object[] {
                        serviceRequestNo,
                        custID,
                        title,
                        firstName,
                        lastName,
                        arrears,
                        address1,
                        address2,
                        address3,
                        postCode,
                        directions,
                        telHome,
                        telWork,
                        telMobile});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSRCustomer(
                    int serviceRequestNo, 
                    string custID, 
                    string title, 
                    string firstName, 
                    string lastName, 
                    decimal arrears, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string postCode, 
                    string directions, 
                    string telHome, 
                    string telWork, 
                    string telMobile, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("UpdateSRCustomer", new object[] {
                        serviceRequestNo,
                        custID,
                        title,
                        firstName,
                        lastName,
                        arrears,
                        address1,
                        address2,
                        address3,
                        postCode,
                        directions,
                        telHome,
                        telWork,
                        telMobile}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateSRCustomer(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSRCustomerAsync(int serviceRequestNo, string custID, string title, string firstName, string lastName, decimal arrears, string address1, string address2, string address3, string postCode, string directions, string telHome, string telWork, string telMobile) {
            this.UpdateSRCustomerAsync(serviceRequestNo, custID, title, firstName, lastName, arrears, address1, address2, address3, postCode, directions, telHome, telWork, telMobile, null);
        }
        
        /// <remarks/>
        public void UpdateSRCustomerAsync(int serviceRequestNo, string custID, string title, string firstName, string lastName, decimal arrears, string address1, string address2, string address3, string postCode, string directions, string telHome, string telWork, string telMobile, object userState) {
            if ((this.UpdateSRCustomerOperationCompleted == null)) {
                this.UpdateSRCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSRCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateSRCustomer", new object[] {
                        serviceRequestNo,
                        custID,
                        title,
                        firstName,
                        lastName,
                        arrears,
                        address1,
                        address2,
                        address3,
                        postCode,
                        directions,
                        telHome,
                        telWork,
                        telMobile}, this.UpdateSRCustomerOperationCompleted, userState);
        }
        
        private void OnUpdateSRCustomerOperationCompleted(object arg) {
            if ((this.UpdateSRCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSRCustomerCompleted(this, new UpdateSRCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SavePriceIndexMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SavePriceIndexMatrix(System.Data.DataSet priceIndexMatrix, out string err) {
            object[] results = this.Invoke("SavePriceIndexMatrix", new object[] {
                        priceIndexMatrix});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSavePriceIndexMatrix(System.Data.DataSet priceIndexMatrix, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SavePriceIndexMatrix", new object[] {
                        priceIndexMatrix}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSavePriceIndexMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SavePriceIndexMatrixAsync(System.Data.DataSet priceIndexMatrix) {
            this.SavePriceIndexMatrixAsync(priceIndexMatrix, null);
        }
        
        /// <remarks/>
        public void SavePriceIndexMatrixAsync(System.Data.DataSet priceIndexMatrix, object userState) {
            if ((this.SavePriceIndexMatrixOperationCompleted == null)) {
                this.SavePriceIndexMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePriceIndexMatrixOperationCompleted);
            }
            this.InvokeAsync("SavePriceIndexMatrix", new object[] {
                        priceIndexMatrix}, this.SavePriceIndexMatrixOperationCompleted, userState);
        }
        
        private void OnSavePriceIndexMatrixOperationCompleted(object arg) {
            if ((this.SavePriceIndexMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePriceIndexMatrixCompleted(this, new SavePriceIndexMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckTechMainPermissions", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckTechMainPermissions() {
            object[] results = this.Invoke("CheckTechMainPermissions", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckTechMainPermissions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckTechMainPermissions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckTechMainPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTechMainPermissionsAsync() {
            this.CheckTechMainPermissionsAsync(null);
        }
        
        /// <remarks/>
        public void CheckTechMainPermissionsAsync(object userState) {
            if ((this.CheckTechMainPermissionsOperationCompleted == null)) {
                this.CheckTechMainPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTechMainPermissionsOperationCompleted);
            }
            this.InvokeAsync("CheckTechMainPermissions", new object[0], this.CheckTechMainPermissionsOperationCompleted, userState);
        }
        
        private void OnCheckTechMainPermissionsOperationCompleted(object arg) {
            if ((this.CheckTechMainPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTechMainPermissionsCompleted(this, new CheckTechMainPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetServiceAllocationPayment", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetServiceAllocationPayment(int technicianId, out string err) {
            object[] results = this.Invoke("GetServiceAllocationPayment", new object[] {
                        technicianId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceAllocationPayment(int technicianId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceAllocationPayment", new object[] {
                        technicianId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetServiceAllocationPayment(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceAllocationPaymentAsync(int technicianId) {
            this.GetServiceAllocationPaymentAsync(technicianId, null);
        }
        
        /// <remarks/>
        public void GetServiceAllocationPaymentAsync(int technicianId, object userState) {
            if ((this.GetServiceAllocationPaymentOperationCompleted == null)) {
                this.GetServiceAllocationPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceAllocationPaymentOperationCompleted);
            }
            this.InvokeAsync("GetServiceAllocationPayment", new object[] {
                        technicianId}, this.GetServiceAllocationPaymentOperationCompleted, userState);
        }
        
        private void OnGetServiceAllocationPaymentOperationCompleted(object arg) {
            if ((this.GetServiceAllocationPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceAllocationPaymentCompleted(this, new GetServiceAllocationPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetChargeToDeposit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetChargeToDeposit(int serviceRequestNo, short serviceBranchNo, out decimal depositAmount, out decimal depositPaid, out string err) {
            object[] results = this.Invoke("GetChargeToDeposit", new object[] {
                        serviceRequestNo,
                        serviceBranchNo});
            depositAmount = ((decimal)(results[1]));
            depositPaid = ((decimal)(results[2]));
            err = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChargeToDeposit(int serviceRequestNo, short serviceBranchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChargeToDeposit", new object[] {
                        serviceRequestNo,
                        serviceBranchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetChargeToDeposit(System.IAsyncResult asyncResult, out decimal depositAmount, out decimal depositPaid, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            depositAmount = ((decimal)(results[1]));
            depositPaid = ((decimal)(results[2]));
            err = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetChargeToDepositAsync(int serviceRequestNo, short serviceBranchNo) {
            this.GetChargeToDepositAsync(serviceRequestNo, serviceBranchNo, null);
        }
        
        /// <remarks/>
        public void GetChargeToDepositAsync(int serviceRequestNo, short serviceBranchNo, object userState) {
            if ((this.GetChargeToDepositOperationCompleted == null)) {
                this.GetChargeToDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeToDepositOperationCompleted);
            }
            this.InvokeAsync("GetChargeToDeposit", new object[] {
                        serviceRequestNo,
                        serviceBranchNo}, this.GetChargeToDepositOperationCompleted, userState);
        }
        
        private void OnGetChargeToDepositOperationCompleted(object arg) {
            if ((this.GetChargeToDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargeToDepositCompleted(this, new GetChargeToDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTechnicianDiary", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTechnicianDiary(int technicianId, out string err) {
            object[] results = this.Invoke("GetTechnicianDiary", new object[] {
                        technicianId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTechnicianDiary(int technicianId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTechnicianDiary", new object[] {
                        technicianId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTechnicianDiary(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTechnicianDiaryAsync(int technicianId) {
            this.GetTechnicianDiaryAsync(technicianId, null);
        }
        
        /// <remarks/>
        public void GetTechnicianDiaryAsync(int technicianId, object userState) {
            if ((this.GetTechnicianDiaryOperationCompleted == null)) {
                this.GetTechnicianDiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechnicianDiaryOperationCompleted);
            }
            this.InvokeAsync("GetTechnicianDiary", new object[] {
                        technicianId}, this.GetTechnicianDiaryOperationCompleted, userState);
        }
        
        private void OnGetTechnicianDiaryOperationCompleted(object arg) {
            if ((this.GetTechnicianDiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechnicianDiaryCompleted(this, new GetTechnicianDiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckTechnicianSlots", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CheckTechnicianSlots(int technicianId, int calls, out string err) {
            object[] results = this.Invoke("CheckTechnicianSlots", new object[] {
                        technicianId,
                        calls});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckTechnicianSlots(int technicianId, int calls, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckTechnicianSlots", new object[] {
                        technicianId,
                        calls}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCheckTechnicianSlots(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTechnicianSlotsAsync(int technicianId, int calls) {
            this.CheckTechnicianSlotsAsync(technicianId, calls, null);
        }
        
        /// <remarks/>
        public void CheckTechnicianSlotsAsync(int technicianId, int calls, object userState) {
            if ((this.CheckTechnicianSlotsOperationCompleted == null)) {
                this.CheckTechnicianSlotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTechnicianSlotsOperationCompleted);
            }
            this.InvokeAsync("CheckTechnicianSlots", new object[] {
                        technicianId,
                        calls}, this.CheckTechnicianSlotsOperationCompleted, userState);
        }
        
        private void OnCheckTechnicianSlotsOperationCompleted(object arg) {
            if ((this.CheckTechnicianSlotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTechnicianSlotsCompleted(this, new CheckTechnicianSlotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckPartsDate", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CheckPartsDate(long serviceRequestNo, out string err) {
            object[] results = this.Invoke("CheckPartsDate", new object[] {
                        serviceRequestNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckPartsDate(long serviceRequestNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckPartsDate", new object[] {
                        serviceRequestNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCheckPartsDate(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPartsDateAsync(long serviceRequestNo) {
            this.CheckPartsDateAsync(serviceRequestNo, null);
        }
        
        /// <remarks/>
        public void CheckPartsDateAsync(long serviceRequestNo, object userState) {
            if ((this.CheckPartsDateOperationCompleted == null)) {
                this.CheckPartsDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPartsDateOperationCompleted);
            }
            this.InvokeAsync("CheckPartsDate", new object[] {
                        serviceRequestNo}, this.CheckPartsDateOperationCompleted, userState);
        }
        
        private void OnCheckPartsDateOperationCompleted(object arg) {
            if ((this.CheckPartsDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPartsDateCompleted(this, new CheckPartsDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/BookServiceRequest", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BookServiceRequest(
                    string zone, 
                    int technicianId, 
                    System.DateTime slotDate, 
                    short slotNo, 
                    short multiSlot, 
                    string bookingType, 
                    long serviceRequestNo, 
                    string IsAM, 
                    string allocatedBy, 
                    string reassignCode, 
                    string reassignedBy, 
                    out bool notFound, 
                    out bool alreadyBooked, 
                    out System.DateTime curSlotDate, 
                    out string curBookingType, 
                    out string err) {
            object[] results = this.Invoke("BookServiceRequest", new object[] {
                        zone,
                        technicianId,
                        slotDate,
                        slotNo,
                        multiSlot,
                        bookingType,
                        serviceRequestNo,
                        IsAM,
                        allocatedBy,
                        reassignCode,
                        reassignedBy});
            notFound = ((bool)(results[1]));
            alreadyBooked = ((bool)(results[2]));
            curSlotDate = ((System.DateTime)(results[3]));
            curBookingType = ((string)(results[4]));
            err = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBookServiceRequest(string zone, int technicianId, System.DateTime slotDate, short slotNo, short multiSlot, string bookingType, long serviceRequestNo, string IsAM, string allocatedBy, string reassignCode, string reassignedBy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BookServiceRequest", new object[] {
                        zone,
                        technicianId,
                        slotDate,
                        slotNo,
                        multiSlot,
                        bookingType,
                        serviceRequestNo,
                        IsAM,
                        allocatedBy,
                        reassignCode,
                        reassignedBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndBookServiceRequest(System.IAsyncResult asyncResult, out bool notFound, out bool alreadyBooked, out System.DateTime curSlotDate, out string curBookingType, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            notFound = ((bool)(results[1]));
            alreadyBooked = ((bool)(results[2]));
            curSlotDate = ((System.DateTime)(results[3]));
            curBookingType = ((string)(results[4]));
            err = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BookServiceRequestAsync(string zone, int technicianId, System.DateTime slotDate, short slotNo, short multiSlot, string bookingType, long serviceRequestNo, string IsAM, string allocatedBy, string reassignCode, string reassignedBy) {
            this.BookServiceRequestAsync(zone, technicianId, slotDate, slotNo, multiSlot, bookingType, serviceRequestNo, IsAM, allocatedBy, reassignCode, reassignedBy, null);
        }
        
        /// <remarks/>
        public void BookServiceRequestAsync(string zone, int technicianId, System.DateTime slotDate, short slotNo, short multiSlot, string bookingType, long serviceRequestNo, string IsAM, string allocatedBy, string reassignCode, string reassignedBy, object userState) {
            if ((this.BookServiceRequestOperationCompleted == null)) {
                this.BookServiceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookServiceRequestOperationCompleted);
            }
            this.InvokeAsync("BookServiceRequest", new object[] {
                        zone,
                        technicianId,
                        slotDate,
                        slotNo,
                        multiSlot,
                        bookingType,
                        serviceRequestNo,
                        IsAM,
                        allocatedBy,
                        reassignCode,
                        reassignedBy}, this.BookServiceRequestOperationCompleted, userState);
        }
        
        private void OnBookServiceRequestOperationCompleted(object arg) {
            if ((this.BookServiceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookServiceRequestCompleted(this, new BookServiceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/FreeServiceRequest", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FreeServiceRequest(int technicianId, System.DateTime slotDate, short slotNo, out string err) {
            object[] results = this.Invoke("FreeServiceRequest", new object[] {
                        technicianId,
                        slotDate,
                        slotNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFreeServiceRequest(int technicianId, System.DateTime slotDate, short slotNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FreeServiceRequest", new object[] {
                        technicianId,
                        slotDate,
                        slotNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndFreeServiceRequest(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FreeServiceRequestAsync(int technicianId, System.DateTime slotDate, short slotNo) {
            this.FreeServiceRequestAsync(technicianId, slotDate, slotNo, null);
        }
        
        /// <remarks/>
        public void FreeServiceRequestAsync(int technicianId, System.DateTime slotDate, short slotNo, object userState) {
            if ((this.FreeServiceRequestOperationCompleted == null)) {
                this.FreeServiceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFreeServiceRequestOperationCompleted);
            }
            this.InvokeAsync("FreeServiceRequest", new object[] {
                        technicianId,
                        slotDate,
                        slotNo}, this.FreeServiceRequestOperationCompleted, userState);
        }
        
        private void OnFreeServiceRequestOperationCompleted(object arg) {
            if ((this.FreeServiceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FreeServiceRequestCompleted(this, new FreeServiceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetWarrantyLength", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetWarrantyLength(string prodCode, int stockLocn, out string err) {
            object[] results = this.Invoke("GetWarrantyLength", new object[] {
                        prodCode,
                        stockLocn});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarrantyLength(string prodCode, int stockLocn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarrantyLength", new object[] {
                        prodCode,
                        stockLocn}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetWarrantyLength(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantyLengthAsync(string prodCode, int stockLocn) {
            this.GetWarrantyLengthAsync(prodCode, stockLocn, null);
        }
        
        /// <remarks/>
        public void GetWarrantyLengthAsync(string prodCode, int stockLocn, object userState) {
            if ((this.GetWarrantyLengthOperationCompleted == null)) {
                this.GetWarrantyLengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantyLengthOperationCompleted);
            }
            this.InvokeAsync("GetWarrantyLength", new object[] {
                        prodCode,
                        stockLocn}, this.GetWarrantyLengthOperationCompleted, userState);
        }
        
        private void OnGetWarrantyLengthOperationCompleted(object arg) {
            if ((this.GetWarrantyLengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantyLengthCompleted(this, new GetWarrantyLengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTechnicians", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTechnicians(System.DateTime dateAvailable, out string err) {
            object[] results = this.Invoke("GetTechnicians", new object[] {
                        dateAvailable});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTechnicians(System.DateTime dateAvailable, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTechnicians", new object[] {
                        dateAvailable}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTechnicians(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTechniciansAsync(System.DateTime dateAvailable) {
            this.GetTechniciansAsync(dateAvailable, null);
        }
        
        /// <remarks/>
        public void GetTechniciansAsync(System.DateTime dateAvailable, object userState) {
            if ((this.GetTechniciansOperationCompleted == null)) {
                this.GetTechniciansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechniciansOperationCompleted);
            }
            this.InvokeAsync("GetTechnicians", new object[] {
                        dateAvailable}, this.GetTechniciansOperationCompleted, userState);
        }
        
        private void OnGetTechniciansOperationCompleted(object arg) {
            if ((this.GetTechniciansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechniciansCompleted(this, new GetTechniciansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTechniciansByZone", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTechniciansByZone(System.DateTime dateAvailable, out string err) {
            object[] results = this.Invoke("GetTechniciansByZone", new object[] {
                        dateAvailable});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTechniciansByZone(System.DateTime dateAvailable, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTechniciansByZone", new object[] {
                        dateAvailable}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTechniciansByZone(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTechniciansByZoneAsync(System.DateTime dateAvailable) {
            this.GetTechniciansByZoneAsync(dateAvailable, null);
        }
        
        /// <remarks/>
        public void GetTechniciansByZoneAsync(System.DateTime dateAvailable, object userState) {
            if ((this.GetTechniciansByZoneOperationCompleted == null)) {
                this.GetTechniciansByZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechniciansByZoneOperationCompleted);
            }
            this.InvokeAsync("GetTechniciansByZone", new object[] {
                        dateAvailable}, this.GetTechniciansByZoneOperationCompleted, userState);
        }
        
        private void OnGetTechniciansByZoneOperationCompleted(object arg) {
            if ((this.GetTechniciansByZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechniciansByZoneCompleted(this, new GetTechniciansByZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CreateServiceRequest", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CreateServiceRequest(short serviceBranchNo, string serviceType, string custId, string accountNo, int invoiceNo, string user, short stockLocn, string productCode, string description, System.DateTime purchaseDate, decimal unitPrice, string serialNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> printLocn, int itemId, out string err) {
            object[] results = this.Invoke("CreateServiceRequest", new object[] {
                        serviceBranchNo,
                        serviceType,
                        custId,
                        accountNo,
                        invoiceNo,
                        user,
                        stockLocn,
                        productCode,
                        description,
                        purchaseDate,
                        unitPrice,
                        serialNo,
                        printLocn,
                        itemId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateServiceRequest(
                    short serviceBranchNo, 
                    string serviceType, 
                    string custId, 
                    string accountNo, 
                    int invoiceNo, 
                    string user, 
                    short stockLocn, 
                    string productCode, 
                    string description, 
                    System.DateTime purchaseDate, 
                    decimal unitPrice, 
                    string serialNo, 
                    System.Nullable<int> printLocn, 
                    int itemId, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CreateServiceRequest", new object[] {
                        serviceBranchNo,
                        serviceType,
                        custId,
                        accountNo,
                        invoiceNo,
                        user,
                        stockLocn,
                        productCode,
                        description,
                        purchaseDate,
                        unitPrice,
                        serialNo,
                        printLocn,
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCreateServiceRequest(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CreateServiceRequestAsync(short serviceBranchNo, string serviceType, string custId, string accountNo, int invoiceNo, string user, short stockLocn, string productCode, string description, System.DateTime purchaseDate, decimal unitPrice, string serialNo, System.Nullable<int> printLocn, int itemId) {
            this.CreateServiceRequestAsync(serviceBranchNo, serviceType, custId, accountNo, invoiceNo, user, stockLocn, productCode, description, purchaseDate, unitPrice, serialNo, printLocn, itemId, null);
        }
        
        /// <remarks/>
        public void CreateServiceRequestAsync(short serviceBranchNo, string serviceType, string custId, string accountNo, int invoiceNo, string user, short stockLocn, string productCode, string description, System.DateTime purchaseDate, decimal unitPrice, string serialNo, System.Nullable<int> printLocn, int itemId, object userState) {
            if ((this.CreateServiceRequestOperationCompleted == null)) {
                this.CreateServiceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateServiceRequestOperationCompleted);
            }
            this.InvokeAsync("CreateServiceRequest", new object[] {
                        serviceBranchNo,
                        serviceType,
                        custId,
                        accountNo,
                        invoiceNo,
                        user,
                        stockLocn,
                        productCode,
                        description,
                        purchaseDate,
                        unitPrice,
                        serialNo,
                        printLocn,
                        itemId}, this.CreateServiceRequestOperationCompleted, userState);
        }
        
        private void OnCreateServiceRequestOperationCompleted(object arg) {
            if ((this.CreateServiceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateServiceRequestCompleted(this, new CreateServiceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/LoadPriceIndexMatrix", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadPriceIndexMatrix(bool screenDisplay, out string err) {
            object[] results = this.Invoke("LoadPriceIndexMatrix", new object[] {
                        screenDisplay});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadPriceIndexMatrix(bool screenDisplay, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadPriceIndexMatrix", new object[] {
                        screenDisplay}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadPriceIndexMatrix(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPriceIndexMatrixAsync(bool screenDisplay) {
            this.LoadPriceIndexMatrixAsync(screenDisplay, null);
        }
        
        /// <remarks/>
        public void LoadPriceIndexMatrixAsync(bool screenDisplay, object userState) {
            if ((this.LoadPriceIndexMatrixOperationCompleted == null)) {
                this.LoadPriceIndexMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPriceIndexMatrixOperationCompleted);
            }
            this.InvokeAsync("LoadPriceIndexMatrix", new object[] {
                        screenDisplay}, this.LoadPriceIndexMatrixOperationCompleted, userState);
        }
        
        private void OnLoadPriceIndexMatrixOperationCompleted(object arg) {
            if ((this.LoadPriceIndexMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPriceIndexMatrixCompleted(this, new LoadPriceIndexMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/WriteOffSRChargeAcct", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string WriteOffSRChargeAcct(int serviceRequestNo, string chargeToAcct, decimal outstBal, string transType, string countryCode, short branchNo) {
            object[] results = this.Invoke("WriteOffSRChargeAcct", new object[] {
                        serviceRequestNo,
                        chargeToAcct,
                        outstBal,
                        transType,
                        countryCode,
                        branchNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWriteOffSRChargeAcct(int serviceRequestNo, string chargeToAcct, decimal outstBal, string transType, string countryCode, short branchNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WriteOffSRChargeAcct", new object[] {
                        serviceRequestNo,
                        chargeToAcct,
                        outstBal,
                        transType,
                        countryCode,
                        branchNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndWriteOffSRChargeAcct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteOffSRChargeAcctAsync(int serviceRequestNo, string chargeToAcct, decimal outstBal, string transType, string countryCode, short branchNo) {
            this.WriteOffSRChargeAcctAsync(serviceRequestNo, chargeToAcct, outstBal, transType, countryCode, branchNo, null);
        }
        
        /// <remarks/>
        public void WriteOffSRChargeAcctAsync(int serviceRequestNo, string chargeToAcct, decimal outstBal, string transType, string countryCode, short branchNo, object userState) {
            if ((this.WriteOffSRChargeAcctOperationCompleted == null)) {
                this.WriteOffSRChargeAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteOffSRChargeAcctOperationCompleted);
            }
            this.InvokeAsync("WriteOffSRChargeAcct", new object[] {
                        serviceRequestNo,
                        chargeToAcct,
                        outstBal,
                        transType,
                        countryCode,
                        branchNo}, this.WriteOffSRChargeAcctOperationCompleted, userState);
        }
        
        private void OnWriteOffSRChargeAcctOperationCompleted(object arg) {
            if ((this.WriteOffSRChargeAcctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteOffSRChargeAcctCompleted(this, new WriteOffSRChargeAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CancelSRChargeAcct", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string CancelSRChargeAcct(int serviceRequestNo, string chargeToAcct, decimal transValue, string countryCode) {
            object[] results = this.Invoke("CancelSRChargeAcct", new object[] {
                        serviceRequestNo,
                        chargeToAcct,
                        transValue,
                        countryCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelSRChargeAcct(int serviceRequestNo, string chargeToAcct, decimal transValue, string countryCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelSRChargeAcct", new object[] {
                        serviceRequestNo,
                        chargeToAcct,
                        transValue,
                        countryCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCancelSRChargeAcct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelSRChargeAcctAsync(int serviceRequestNo, string chargeToAcct, decimal transValue, string countryCode) {
            this.CancelSRChargeAcctAsync(serviceRequestNo, chargeToAcct, transValue, countryCode, null);
        }
        
        /// <remarks/>
        public void CancelSRChargeAcctAsync(int serviceRequestNo, string chargeToAcct, decimal transValue, string countryCode, object userState) {
            if ((this.CancelSRChargeAcctOperationCompleted == null)) {
                this.CancelSRChargeAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelSRChargeAcctOperationCompleted);
            }
            this.InvokeAsync("CancelSRChargeAcct", new object[] {
                        serviceRequestNo,
                        chargeToAcct,
                        transValue,
                        countryCode}, this.CancelSRChargeAcctOperationCompleted, userState);
        }
        
        private void OnCancelSRChargeAcctOperationCompleted(object arg) {
            if ((this.CancelSRChargeAcctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelSRChargeAcctCompleted(this, new CancelSRChargeAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SRBatchPrintUpdatePrinted", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SRBatchPrintUpdatePrinted(string[] srPrinted, short branchno) {
            this.Invoke("SRBatchPrintUpdatePrinted", new object[] {
                        srPrinted,
                        branchno});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSRBatchPrintUpdatePrinted(string[] srPrinted, short branchno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SRBatchPrintUpdatePrinted", new object[] {
                        srPrinted,
                        branchno}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSRBatchPrintUpdatePrinted(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SRBatchPrintUpdatePrintedAsync(string[] srPrinted, short branchno) {
            this.SRBatchPrintUpdatePrintedAsync(srPrinted, branchno, null);
        }
        
        /// <remarks/>
        public void SRBatchPrintUpdatePrintedAsync(string[] srPrinted, short branchno, object userState) {
            if ((this.SRBatchPrintUpdatePrintedOperationCompleted == null)) {
                this.SRBatchPrintUpdatePrintedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSRBatchPrintUpdatePrintedOperationCompleted);
            }
            this.InvokeAsync("SRBatchPrintUpdatePrinted", new object[] {
                        srPrinted,
                        branchno}, this.SRBatchPrintUpdatePrintedOperationCompleted, userState);
        }
        
        private void OnSRBatchPrintUpdatePrintedOperationCompleted(object arg) {
            if ((this.SRBatchPrintUpdatePrintedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SRBatchPrintUpdatePrintedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/DeleteTechnician", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string DeleteTechnician(int technicianId) {
            object[] results = this.Invoke("DeleteTechnician", new object[] {
                        technicianId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteTechnician(int technicianId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteTechnician", new object[] {
                        technicianId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDeleteTechnician(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTechnicianAsync(int technicianId) {
            this.DeleteTechnicianAsync(technicianId, null);
        }
        
        /// <remarks/>
        public void DeleteTechnicianAsync(int technicianId, object userState) {
            if ((this.DeleteTechnicianOperationCompleted == null)) {
                this.DeleteTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTechnicianOperationCompleted);
            }
            this.InvokeAsync("DeleteTechnician", new object[] {
                        technicianId}, this.DeleteTechnicianOperationCompleted, userState);
        }
        
        private void OnDeleteTechnicianOperationCompleted(object arg) {
            if ((this.DeleteTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTechnicianCompleted(this, new DeleteTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ActivateTechnician", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string ActivateTechnician(int technicianId) {
            object[] results = this.Invoke("ActivateTechnician", new object[] {
                        technicianId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginActivateTechnician(int technicianId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ActivateTechnician", new object[] {
                        technicianId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndActivateTechnician(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateTechnicianAsync(int technicianId) {
            this.ActivateTechnicianAsync(technicianId, null);
        }
        
        /// <remarks/>
        public void ActivateTechnicianAsync(int technicianId, object userState) {
            if ((this.ActivateTechnicianOperationCompleted == null)) {
                this.ActivateTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateTechnicianOperationCompleted);
            }
            this.InvokeAsync("ActivateTechnician", new object[] {
                        technicianId}, this.ActivateTechnicianOperationCompleted, userState);
        }
        
        private void OnActivateTechnicianOperationCompleted(object arg) {
            if ((this.ActivateTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateTechnicianCompleted(this, new ActivateTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTechnician", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTechnician(int technicianId, out string err) {
            object[] results = this.Invoke("GetTechnician", new object[] {
                        technicianId});
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTechnician(int technicianId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTechnician", new object[] {
                        technicianId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetTechnician(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTechnicianAsync(int technicianId) {
            this.GetTechnicianAsync(technicianId, null);
        }
        
        /// <remarks/>
        public void GetTechnicianAsync(int technicianId, object userState) {
            if ((this.GetTechnicianOperationCompleted == null)) {
                this.GetTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechnicianOperationCompleted);
            }
            this.InvokeAsync("GetTechnician", new object[] {
                        technicianId}, this.GetTechnicianOperationCompleted, userState);
        }
        
        private void OnGetTechnicianOperationCompleted(object arg) {
            if ((this.GetTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechnicianCompleted(this, new GetTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveTechnician", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string SaveTechnician(System.Data.DataSet technicianDataSet) {
            object[] results = this.Invoke("SaveTechnician", new object[] {
                        technicianDataSet});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveTechnician(System.Data.DataSet technicianDataSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveTechnician", new object[] {
                        technicianDataSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSaveTechnician(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTechnicianAsync(System.Data.DataSet technicianDataSet) {
            this.SaveTechnicianAsync(technicianDataSet, null);
        }
        
        /// <remarks/>
        public void SaveTechnicianAsync(System.Data.DataSet technicianDataSet, object userState) {
            if ((this.SaveTechnicianOperationCompleted == null)) {
                this.SaveTechnicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTechnicianOperationCompleted);
            }
            this.InvokeAsync("SaveTechnician", new object[] {
                        technicianDataSet}, this.SaveTechnicianOperationCompleted, userState);
        }
        
        private void OnSaveTechnicianOperationCompleted(object arg) {
            if ((this.SaveTechnicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTechnicianCompleted(this, new SaveTechnicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTechnicianList", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTechnicianList(out string err) {
            object[] results = this.Invoke("GetTechnicianList", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTechnicianList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTechnicianList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTechnicianList(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTechnicianListAsync() {
            this.GetTechnicianListAsync(null);
        }
        
        /// <remarks/>
        public void GetTechnicianListAsync(object userState) {
            if ((this.GetTechnicianListOperationCompleted == null)) {
                this.GetTechnicianListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechnicianListOperationCompleted);
            }
            this.InvokeAsync("GetTechnicianList", new object[0], this.GetTechnicianListOperationCompleted, userState);
        }
        
        private void OnGetTechnicianListOperationCompleted(object arg) {
            if ((this.GetTechnicianListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechnicianListCompleted(this, new GetTechnicianListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTechniciansForPaymentSceen", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTechniciansForPaymentSceen(out string err) {
            object[] results = this.Invoke("GetTechniciansForPaymentSceen", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTechniciansForPaymentSceen(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTechniciansForPaymentSceen", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTechniciansForPaymentSceen(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTechniciansForPaymentSceenAsync() {
            this.GetTechniciansForPaymentSceenAsync(null);
        }
        
        /// <remarks/>
        public void GetTechniciansForPaymentSceenAsync(object userState) {
            if ((this.GetTechniciansForPaymentSceenOperationCompleted == null)) {
                this.GetTechniciansForPaymentSceenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechniciansForPaymentSceenOperationCompleted);
            }
            this.InvokeAsync("GetTechniciansForPaymentSceen", new object[0], this.GetTechniciansForPaymentSceenOperationCompleted, userState);
        }
        
        private void OnGetTechniciansForPaymentSceenOperationCompleted(object arg) {
            if ((this.GetTechniciansForPaymentSceenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechniciansForPaymentSceenCompleted(this, new GetTechniciansForPaymentSceenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTechnicianPayments", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTechnicianPayments(int technicianId, out string err) {
            object[] results = this.Invoke("GetTechnicianPayments", new object[] {
                        technicianId});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTechnicianPayments(int technicianId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTechnicianPayments", new object[] {
                        technicianId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTechnicianPayments(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTechnicianPaymentsAsync(int technicianId) {
            this.GetTechnicianPaymentsAsync(technicianId, null);
        }
        
        /// <remarks/>
        public void GetTechnicianPaymentsAsync(int technicianId, object userState) {
            if ((this.GetTechnicianPaymentsOperationCompleted == null)) {
                this.GetTechnicianPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechnicianPaymentsOperationCompleted);
            }
            this.InvokeAsync("GetTechnicianPayments", new object[] {
                        technicianId}, this.GetTechnicianPaymentsOperationCompleted, userState);
        }
        
        private void OnGetTechnicianPaymentsOperationCompleted(object arg) {
            if ((this.GetTechnicianPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechnicianPaymentsCompleted(this, new GetTechnicianPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetTechnicianPaymentSummary", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetTechnicianPaymentSummary(int technicianId, ref decimal[] technicianSummaryData, ref string err) {
            object[] results = this.Invoke("GetTechnicianPaymentSummary", new object[] {
                        technicianId,
                        technicianSummaryData,
                        err});
            technicianSummaryData = ((decimal[])(results[0]));
            err = ((string)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTechnicianPaymentSummary(int technicianId, decimal[] technicianSummaryData, string err, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTechnicianPaymentSummary", new object[] {
                        technicianId,
                        technicianSummaryData,
                        err}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetTechnicianPaymentSummary(System.IAsyncResult asyncResult, out decimal[] technicianSummaryData, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            technicianSummaryData = ((decimal[])(results[0]));
            err = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void GetTechnicianPaymentSummaryAsync(int technicianId, decimal[] technicianSummaryData, string err) {
            this.GetTechnicianPaymentSummaryAsync(technicianId, technicianSummaryData, err, null);
        }
        
        /// <remarks/>
        public void GetTechnicianPaymentSummaryAsync(int technicianId, decimal[] technicianSummaryData, string err, object userState) {
            if ((this.GetTechnicianPaymentSummaryOperationCompleted == null)) {
                this.GetTechnicianPaymentSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechnicianPaymentSummaryOperationCompleted);
            }
            this.InvokeAsync("GetTechnicianPaymentSummary", new object[] {
                        technicianId,
                        technicianSummaryData,
                        err}, this.GetTechnicianPaymentSummaryOperationCompleted, userState);
        }
        
        private void OnGetTechnicianPaymentSummaryOperationCompleted(object arg) {
            if ((this.GetTechnicianPaymentSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechnicianPaymentSummaryCompleted(this, new GetTechnicianPaymentSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveDetailsForAllTechnicians", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDetailsForAllTechnicians(string csvZones, string hoursFrom, string hoursTo, int callsPerDay, out int noTechniciansExceedingCallsPerDay, out int technicianWithHighestNoSlots, out string err) {
            object[] results = this.Invoke("SaveDetailsForAllTechnicians", new object[] {
                        csvZones,
                        hoursFrom,
                        hoursTo,
                        callsPerDay});
            noTechniciansExceedingCallsPerDay = ((int)(results[1]));
            technicianWithHighestNoSlots = ((int)(results[2]));
            err = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveDetailsForAllTechnicians(string csvZones, string hoursFrom, string hoursTo, int callsPerDay, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveDetailsForAllTechnicians", new object[] {
                        csvZones,
                        hoursFrom,
                        hoursTo,
                        callsPerDay}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveDetailsForAllTechnicians(System.IAsyncResult asyncResult, out int noTechniciansExceedingCallsPerDay, out int technicianWithHighestNoSlots, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            noTechniciansExceedingCallsPerDay = ((int)(results[1]));
            technicianWithHighestNoSlots = ((int)(results[2]));
            err = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDetailsForAllTechniciansAsync(string csvZones, string hoursFrom, string hoursTo, int callsPerDay) {
            this.SaveDetailsForAllTechniciansAsync(csvZones, hoursFrom, hoursTo, callsPerDay, null);
        }
        
        /// <remarks/>
        public void SaveDetailsForAllTechniciansAsync(string csvZones, string hoursFrom, string hoursTo, int callsPerDay, object userState) {
            if ((this.SaveDetailsForAllTechniciansOperationCompleted == null)) {
                this.SaveDetailsForAllTechniciansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDetailsForAllTechniciansOperationCompleted);
            }
            this.InvokeAsync("SaveDetailsForAllTechnicians", new object[] {
                        csvZones,
                        hoursFrom,
                        hoursTo,
                        callsPerDay}, this.SaveDetailsForAllTechniciansOperationCompleted, userState);
        }
        
        private void OnSaveDetailsForAllTechniciansOperationCompleted(object arg) {
            if ((this.SaveDetailsForAllTechniciansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDetailsForAllTechniciansCompleted(this, new SaveDetailsForAllTechniciansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveTechnicianPayment", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveTechnicianPayment(int technicianId, int serviceRequestNo, System.DateTime DateClosed, decimal totalCost, string status, out string err) {
            object[] results = this.Invoke("SaveTechnicianPayment", new object[] {
                        technicianId,
                        serviceRequestNo,
                        DateClosed,
                        totalCost,
                        status});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveTechnicianPayment(int technicianId, int serviceRequestNo, System.DateTime DateClosed, decimal totalCost, string status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveTechnicianPayment", new object[] {
                        technicianId,
                        serviceRequestNo,
                        DateClosed,
                        totalCost,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveTechnicianPayment(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTechnicianPaymentAsync(int technicianId, int serviceRequestNo, System.DateTime DateClosed, decimal totalCost, string status) {
            this.SaveTechnicianPaymentAsync(technicianId, serviceRequestNo, DateClosed, totalCost, status, null);
        }
        
        /// <remarks/>
        public void SaveTechnicianPaymentAsync(int technicianId, int serviceRequestNo, System.DateTime DateClosed, decimal totalCost, string status, object userState) {
            if ((this.SaveTechnicianPaymentOperationCompleted == null)) {
                this.SaveTechnicianPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTechnicianPaymentOperationCompleted);
            }
            this.InvokeAsync("SaveTechnicianPayment", new object[] {
                        technicianId,
                        serviceRequestNo,
                        DateClosed,
                        totalCost,
                        status}, this.SaveTechnicianPaymentOperationCompleted, userState);
        }
        
        private void OnSaveTechnicianPaymentOperationCompleted(object arg) {
            if ((this.SaveTechnicianPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTechnicianPaymentCompleted(this, new SaveTechnicianPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ServiceSearch", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ServiceSearch(long serviceNo, string custId, string firstName, string lastName, bool showCourts, bool showNonCourts, bool showInternal, bool showCashGo, int seachLimit, bool exactMatch) {
            object[] results = this.Invoke("ServiceSearch", new object[] {
                        serviceNo,
                        custId,
                        firstName,
                        lastName,
                        showCourts,
                        showNonCourts,
                        showInternal,
                        showCashGo,
                        seachLimit,
                        exactMatch});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginServiceSearch(long serviceNo, string custId, string firstName, string lastName, bool showCourts, bool showNonCourts, bool showInternal, bool showCashGo, int seachLimit, bool exactMatch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ServiceSearch", new object[] {
                        serviceNo,
                        custId,
                        firstName,
                        lastName,
                        showCourts,
                        showNonCourts,
                        showInternal,
                        showCashGo,
                        seachLimit,
                        exactMatch}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndServiceSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceSearchAsync(long serviceNo, string custId, string firstName, string lastName, bool showCourts, bool showNonCourts, bool showInternal, bool showCashGo, int seachLimit, bool exactMatch) {
            this.ServiceSearchAsync(serviceNo, custId, firstName, lastName, showCourts, showNonCourts, showInternal, showCashGo, seachLimit, exactMatch, null);
        }
        
        /// <remarks/>
        public void ServiceSearchAsync(long serviceNo, string custId, string firstName, string lastName, bool showCourts, bool showNonCourts, bool showInternal, bool showCashGo, int seachLimit, bool exactMatch, object userState) {
            if ((this.ServiceSearchOperationCompleted == null)) {
                this.ServiceSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceSearchOperationCompleted);
            }
            this.InvokeAsync("ServiceSearch", new object[] {
                        serviceNo,
                        custId,
                        firstName,
                        lastName,
                        showCourts,
                        showNonCourts,
                        showInternal,
                        showCashGo,
                        seachLimit,
                        exactMatch}, this.ServiceSearchOperationCompleted, userState);
        }
        
        private void OnServiceSearchOperationCompleted(object arg) {
            if ((this.ServiceSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceSearchCompleted(this, new ServiceSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/CheckSerialNoDup", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSerialNoDup(string itemno, string serialno, string modelno, string accountNo) {
            object[] results = this.Invoke("CheckSerialNoDup", new object[] {
                        itemno,
                        serialno,
                        modelno,
                        accountNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckSerialNoDup(string itemno, string serialno, string modelno, string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckSerialNoDup", new object[] {
                        itemno,
                        serialno,
                        modelno,
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckSerialNoDup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSerialNoDupAsync(string itemno, string serialno, string modelno, string accountNo) {
            this.CheckSerialNoDupAsync(itemno, serialno, modelno, accountNo, null);
        }
        
        /// <remarks/>
        public void CheckSerialNoDupAsync(string itemno, string serialno, string modelno, string accountNo, object userState) {
            if ((this.CheckSerialNoDupOperationCompleted == null)) {
                this.CheckSerialNoDupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSerialNoDupOperationCompleted);
            }
            this.InvokeAsync("CheckSerialNoDup", new object[] {
                        itemno,
                        serialno,
                        modelno,
                        accountNo}, this.CheckSerialNoDupOperationCompleted, userState);
        }
        
        private void OnCheckSerialNoDupOperationCompleted(object arg) {
            if ((this.CheckSerialNoDupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSerialNoDupCompleted(this, new CheckSerialNoDupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetFoodLoss", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFoodLoss(int serviceRequestNo, out string err) {
            object[] results = this.Invoke("GetFoodLoss", new object[] {
                        serviceRequestNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFoodLoss(int serviceRequestNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFoodLoss", new object[] {
                        serviceRequestNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFoodLoss(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoodLossAsync(int serviceRequestNo) {
            this.GetFoodLossAsync(serviceRequestNo, null);
        }
        
        /// <remarks/>
        public void GetFoodLossAsync(int serviceRequestNo, object userState) {
            if ((this.GetFoodLossOperationCompleted == null)) {
                this.GetFoodLossOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoodLossOperationCompleted);
            }
            this.InvokeAsync("GetFoodLoss", new object[] {
                        serviceRequestNo}, this.GetFoodLossOperationCompleted, userState);
        }
        
        private void OnGetFoodLossOperationCompleted(object arg) {
            if ((this.GetFoodLossCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoodLossCompleted(this, new GetFoodLossCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveFoodLoss", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string SaveFoodLoss(int serviceRequestNo, System.Data.DataSet foodLossDataSet) {
            object[] results = this.Invoke("SaveFoodLoss", new object[] {
                        serviceRequestNo,
                        foodLossDataSet});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveFoodLoss(int serviceRequestNo, System.Data.DataSet foodLossDataSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveFoodLoss", new object[] {
                        serviceRequestNo,
                        foodLossDataSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSaveFoodLoss(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFoodLossAsync(int serviceRequestNo, System.Data.DataSet foodLossDataSet) {
            this.SaveFoodLossAsync(serviceRequestNo, foodLossDataSet, null);
        }
        
        /// <remarks/>
        public void SaveFoodLossAsync(int serviceRequestNo, System.Data.DataSet foodLossDataSet, object userState) {
            if ((this.SaveFoodLossOperationCompleted == null)) {
                this.SaveFoodLossOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFoodLossOperationCompleted);
            }
            this.InvokeAsync("SaveFoodLoss", new object[] {
                        serviceRequestNo,
                        foodLossDataSet}, this.SaveFoodLossOperationCompleted, userState);
        }
        
        private void OnSaveFoodLossOperationCompleted(object arg) {
            if ((this.SaveFoodLossCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFoodLossCompleted(this, new SaveFoodLossCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetCustomerInteraction", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerInteraction(string custId, out string custFullName, out string err) {
            object[] results = this.Invoke("GetCustomerInteraction", new object[] {
                        custId});
            custFullName = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerInteraction(string custId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerInteraction", new object[] {
                        custId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCustomerInteraction(System.IAsyncResult asyncResult, out string custFullName, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            custFullName = ((string)(results[1]));
            err = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerInteractionAsync(string custId) {
            this.GetCustomerInteractionAsync(custId, null);
        }
        
        /// <remarks/>
        public void GetCustomerInteractionAsync(string custId, object userState) {
            if ((this.GetCustomerInteractionOperationCompleted == null)) {
                this.GetCustomerInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerInteractionOperationCompleted);
            }
            this.InvokeAsync("GetCustomerInteraction", new object[] {
                        custId}, this.GetCustomerInteractionOperationCompleted, userState);
        }
        
        private void OnGetCustomerInteractionOperationCompleted(object arg) {
            if ((this.GetCustomerInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerInteractionCompleted(this, new GetCustomerInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/SaveCutomerInteraction", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCutomerInteraction(string custId, System.Data.DataSet customerInteractionDataSet, out string err) {
            object[] results = this.Invoke("SaveCutomerInteraction", new object[] {
                        custId,
                        customerInteractionDataSet});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveCutomerInteraction(string custId, System.Data.DataSet customerInteractionDataSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveCutomerInteraction", new object[] {
                        custId,
                        customerInteractionDataSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveCutomerInteraction(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCutomerInteractionAsync(string custId, System.Data.DataSet customerInteractionDataSet) {
            this.SaveCutomerInteractionAsync(custId, customerInteractionDataSet, null);
        }
        
        /// <remarks/>
        public void SaveCutomerInteractionAsync(string custId, System.Data.DataSet customerInteractionDataSet, object userState) {
            if ((this.SaveCutomerInteractionOperationCompleted == null)) {
                this.SaveCutomerInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCutomerInteractionOperationCompleted);
            }
            this.InvokeAsync("SaveCutomerInteraction", new object[] {
                        custId,
                        customerInteractionDataSet}, this.SaveCutomerInteractionOperationCompleted, userState);
        }
        
        private void OnSaveCutomerInteractionOperationCompleted(object arg) {
            if ((this.SaveCutomerInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCutomerInteractionCompleted(this, new SaveCutomerInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetOutstandingServiceReport", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOutstandingServiceReport(string reportType, object minLogged, object maxLogged, object minServiceNo, object maxServiceNo, object technicianId, object notUpdatedSince, int daysOutstanding, object serviceStatus, object viewTop, string err) {
            object[] results = this.Invoke("GetOutstandingServiceReport", new object[] {
                        reportType,
                        minLogged,
                        maxLogged,
                        minServiceNo,
                        maxServiceNo,
                        technicianId,
                        notUpdatedSince,
                        daysOutstanding,
                        serviceStatus,
                        viewTop,
                        err});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOutstandingServiceReport(string reportType, object minLogged, object maxLogged, object minServiceNo, object maxServiceNo, object technicianId, object notUpdatedSince, int daysOutstanding, object serviceStatus, object viewTop, string err, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOutstandingServiceReport", new object[] {
                        reportType,
                        minLogged,
                        maxLogged,
                        minServiceNo,
                        maxServiceNo,
                        technicianId,
                        notUpdatedSince,
                        daysOutstanding,
                        serviceStatus,
                        viewTop,
                        err}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOutstandingServiceReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutstandingServiceReportAsync(string reportType, object minLogged, object maxLogged, object minServiceNo, object maxServiceNo, object technicianId, object notUpdatedSince, int daysOutstanding, object serviceStatus, object viewTop, string err) {
            this.GetOutstandingServiceReportAsync(reportType, minLogged, maxLogged, minServiceNo, maxServiceNo, technicianId, notUpdatedSince, daysOutstanding, serviceStatus, viewTop, err, null);
        }
        
        /// <remarks/>
        public void GetOutstandingServiceReportAsync(string reportType, object minLogged, object maxLogged, object minServiceNo, object maxServiceNo, object technicianId, object notUpdatedSince, int daysOutstanding, object serviceStatus, object viewTop, string err, object userState) {
            if ((this.GetOutstandingServiceReportOperationCompleted == null)) {
                this.GetOutstandingServiceReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutstandingServiceReportOperationCompleted);
            }
            this.InvokeAsync("GetOutstandingServiceReport", new object[] {
                        reportType,
                        minLogged,
                        maxLogged,
                        minServiceNo,
                        maxServiceNo,
                        technicianId,
                        notUpdatedSince,
                        daysOutstanding,
                        serviceStatus,
                        viewTop,
                        err}, this.GetOutstandingServiceReportOperationCompleted, userState);
        }
        
        private void OnGetOutstandingServiceReportOperationCompleted(object arg) {
            if ((this.GetOutstandingServiceReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutstandingServiceReportCompleted(this, new GetOutstandingServiceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetBatchPrintReports", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBatchPrintReports([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> technichianID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fromDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> toDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> minSR, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> maxSR, int printLocation, bool reprintOnly, bool showAll, out string err) {
            object[] results = this.Invoke("GetBatchPrintReports", new object[] {
                        technichianID,
                        fromDate,
                        toDate,
                        minSR,
                        maxSR,
                        printLocation,
                        reprintOnly,
                        showAll});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBatchPrintReports(System.Nullable<int> technichianID, System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate, System.Nullable<int> minSR, System.Nullable<int> maxSR, int printLocation, bool reprintOnly, bool showAll, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBatchPrintReports", new object[] {
                        technichianID,
                        fromDate,
                        toDate,
                        minSR,
                        maxSR,
                        printLocation,
                        reprintOnly,
                        showAll}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetBatchPrintReports(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchPrintReportsAsync(System.Nullable<int> technichianID, System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate, System.Nullable<int> minSR, System.Nullable<int> maxSR, int printLocation, bool reprintOnly, bool showAll) {
            this.GetBatchPrintReportsAsync(technichianID, fromDate, toDate, minSR, maxSR, printLocation, reprintOnly, showAll, null);
        }
        
        /// <remarks/>
        public void GetBatchPrintReportsAsync(System.Nullable<int> technichianID, System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate, System.Nullable<int> minSR, System.Nullable<int> maxSR, int printLocation, bool reprintOnly, bool showAll, object userState) {
            if ((this.GetBatchPrintReportsOperationCompleted == null)) {
                this.GetBatchPrintReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchPrintReportsOperationCompleted);
            }
            this.InvokeAsync("GetBatchPrintReports", new object[] {
                        technichianID,
                        fromDate,
                        toDate,
                        minSR,
                        maxSR,
                        printLocation,
                        reprintOnly,
                        showAll}, this.GetBatchPrintReportsOperationCompleted, userState);
        }
        
        private void OnGetBatchPrintReportsOperationCompleted(object arg) {
            if ((this.GetBatchPrintReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchPrintReportsCompleted(this, new GetBatchPrintReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetServiceProgressReport", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetServiceProgressReport(object minLogged, object maxLogged, object productCode, object productGroup, bool outstanding, bool allocated, bool completed, string fault, int serviceBranch, out string err) {
            object[] results = this.Invoke("GetServiceProgressReport", new object[] {
                        minLogged,
                        maxLogged,
                        productCode,
                        productGroup,
                        outstanding,
                        allocated,
                        completed,
                        fault,
                        serviceBranch});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceProgressReport(object minLogged, object maxLogged, object productCode, object productGroup, bool outstanding, bool allocated, bool completed, string fault, int serviceBranch, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceProgressReport", new object[] {
                        minLogged,
                        maxLogged,
                        productCode,
                        productGroup,
                        outstanding,
                        allocated,
                        completed,
                        fault,
                        serviceBranch}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetServiceProgressReport(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceProgressReportAsync(object minLogged, object maxLogged, object productCode, object productGroup, bool outstanding, bool allocated, bool completed, string fault, int serviceBranch) {
            this.GetServiceProgressReportAsync(minLogged, maxLogged, productCode, productGroup, outstanding, allocated, completed, fault, serviceBranch, null);
        }
        
        /// <remarks/>
        public void GetServiceProgressReportAsync(object minLogged, object maxLogged, object productCode, object productGroup, bool outstanding, bool allocated, bool completed, string fault, int serviceBranch, object userState) {
            if ((this.GetServiceProgressReportOperationCompleted == null)) {
                this.GetServiceProgressReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceProgressReportOperationCompleted);
            }
            this.InvokeAsync("GetServiceProgressReport", new object[] {
                        minLogged,
                        maxLogged,
                        productCode,
                        productGroup,
                        outstanding,
                        allocated,
                        completed,
                        fault,
                        serviceBranch}, this.GetServiceProgressReportOperationCompleted, userState);
        }
        
        private void OnGetServiceProgressReportOperationCompleted(object arg) {
            if ((this.GetServiceProgressReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceProgressReportCompleted(this, new GetServiceProgressReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetServiceFailureReport", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetServiceFailureReport(System.DateTime minLogged, System.DateTime maxLogged, string fault, string product, bool quarters, out string err) {
            object[] results = this.Invoke("GetServiceFailureReport", new object[] {
                        minLogged,
                        maxLogged,
                        fault,
                        product,
                        quarters});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceFailureReport(System.DateTime minLogged, System.DateTime maxLogged, string fault, string product, bool quarters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceFailureReport", new object[] {
                        minLogged,
                        maxLogged,
                        fault,
                        product,
                        quarters}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetServiceFailureReport(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceFailureReportAsync(System.DateTime minLogged, System.DateTime maxLogged, string fault, string product, bool quarters) {
            this.GetServiceFailureReportAsync(minLogged, maxLogged, fault, product, quarters, null);
        }
        
        /// <remarks/>
        public void GetServiceFailureReportAsync(System.DateTime minLogged, System.DateTime maxLogged, string fault, string product, bool quarters, object userState) {
            if ((this.GetServiceFailureReportOperationCompleted == null)) {
                this.GetServiceFailureReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceFailureReportOperationCompleted);
            }
            this.InvokeAsync("GetServiceFailureReport", new object[] {
                        minLogged,
                        maxLogged,
                        fault,
                        product,
                        quarters}, this.GetServiceFailureReportOperationCompleted, userState);
        }
        
        private void OnGetServiceFailureReportOperationCompleted(object arg) {
            if ((this.GetServiceFailureReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceFailureReportCompleted(this, new GetServiceFailureReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetClaimsSubmissionReport", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClaimsSubmissionReport(object minLogged, object maxLogged, object minServiceNo, object maxServiceNo, string fault, out string err) {
            object[] results = this.Invoke("GetClaimsSubmissionReport", new object[] {
                        minLogged,
                        maxLogged,
                        minServiceNo,
                        maxServiceNo,
                        fault});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetClaimsSubmissionReport(object minLogged, object maxLogged, object minServiceNo, object maxServiceNo, string fault, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetClaimsSubmissionReport", new object[] {
                        minLogged,
                        maxLogged,
                        minServiceNo,
                        maxServiceNo,
                        fault}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetClaimsSubmissionReport(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClaimsSubmissionReportAsync(object minLogged, object maxLogged, object minServiceNo, object maxServiceNo, string fault) {
            this.GetClaimsSubmissionReportAsync(minLogged, maxLogged, minServiceNo, maxServiceNo, fault, null);
        }
        
        /// <remarks/>
        public void GetClaimsSubmissionReportAsync(object minLogged, object maxLogged, object minServiceNo, object maxServiceNo, string fault, object userState) {
            if ((this.GetClaimsSubmissionReportOperationCompleted == null)) {
                this.GetClaimsSubmissionReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClaimsSubmissionReportOperationCompleted);
            }
            this.InvokeAsync("GetClaimsSubmissionReport", new object[] {
                        minLogged,
                        maxLogged,
                        minServiceNo,
                        maxServiceNo,
                        fault}, this.GetClaimsSubmissionReportOperationCompleted, userState);
        }
        
        private void OnGetClaimsSubmissionReportOperationCompleted(object arg) {
            if ((this.GetClaimsSubmissionReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClaimsSubmissionReportCompleted(this, new GetClaimsSubmissionReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/RemoveDepositFromSR", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveDepositFromSR(int serviceRequestNo, out string err) {
            object[] results = this.Invoke("RemoveDepositFromSR", new object[] {
                        serviceRequestNo});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveDepositFromSR(int serviceRequestNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveDepositFromSR", new object[] {
                        serviceRequestNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemoveDepositFromSR(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDepositFromSRAsync(int serviceRequestNo) {
            this.RemoveDepositFromSRAsync(serviceRequestNo, null);
        }
        
        /// <remarks/>
        public void RemoveDepositFromSRAsync(int serviceRequestNo, object userState) {
            if ((this.RemoveDepositFromSROperationCompleted == null)) {
                this.RemoveDepositFromSROperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDepositFromSROperationCompleted);
            }
            this.InvokeAsync("RemoveDepositFromSR", new object[] {
                        serviceRequestNo}, this.RemoveDepositFromSROperationCompleted, userState);
        }
        
        private void OnRemoveDepositFromSROperationCompleted(object arg) {
            if ((this.RemoveDepositFromSRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDepositFromSRCompleted(this, new RemoveDepositFromSRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetServiceRequestSummaryForAccount", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetServiceRequestSummaryForAccount(string accountNo, out string err) {
            object[] results = this.Invoke("GetServiceRequestSummaryForAccount", new object[] {
                        accountNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceRequestSummaryForAccount(string accountNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceRequestSummaryForAccount", new object[] {
                        accountNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetServiceRequestSummaryForAccount(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceRequestSummaryForAccountAsync(string accountNo) {
            this.GetServiceRequestSummaryForAccountAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetServiceRequestSummaryForAccountAsync(string accountNo, object userState) {
            if ((this.GetServiceRequestSummaryForAccountOperationCompleted == null)) {
                this.GetServiceRequestSummaryForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceRequestSummaryForAccountOperationCompleted);
            }
            this.InvokeAsync("GetServiceRequestSummaryForAccount", new object[] {
                        accountNo}, this.GetServiceRequestSummaryForAccountOperationCompleted, userState);
        }
        
        private void OnGetServiceRequestSummaryForAccountOperationCompleted(object arg) {
            if ((this.GetServiceRequestSummaryForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceRequestSummaryForAccountCompleted(this, new GetServiceRequestSummaryForAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/ChargeToAuthorisationLoad", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChargeToAuthorisationLoad(out string err) {
            object[] results = this.Invoke("ChargeToAuthorisationLoad", new object[0]);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChargeToAuthorisationLoad(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChargeToAuthorisationLoad", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndChargeToAuthorisationLoad(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeToAuthorisationLoadAsync() {
            this.ChargeToAuthorisationLoadAsync(null);
        }
        
        /// <remarks/>
        public void ChargeToAuthorisationLoadAsync(object userState) {
            if ((this.ChargeToAuthorisationLoadOperationCompleted == null)) {
                this.ChargeToAuthorisationLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeToAuthorisationLoadOperationCompleted);
            }
            this.InvokeAsync("ChargeToAuthorisationLoad", new object[0], this.ChargeToAuthorisationLoadOperationCompleted, userState);
        }
        
        private void OnChargeToAuthorisationLoadOperationCompleted(object arg) {
            if ((this.ChargeToAuthorisationLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeToAuthorisationLoadCompleted(this, new ChargeToAuthorisationLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/UpdateChargeToAuthorisation", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("err")]
        public string UpdateChargeToAuthorisation(Changes changedValues) {
            object[] results = this.Invoke("UpdateChargeToAuthorisation", new object[] {
                        changedValues});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateChargeToAuthorisation(Changes changedValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateChargeToAuthorisation", new object[] {
                        changedValues}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateChargeToAuthorisation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateChargeToAuthorisationAsync(Changes changedValues) {
            this.UpdateChargeToAuthorisationAsync(changedValues, null);
        }
        
        /// <remarks/>
        public void UpdateChargeToAuthorisationAsync(Changes changedValues, object userState) {
            if ((this.UpdateChargeToAuthorisationOperationCompleted == null)) {
                this.UpdateChargeToAuthorisationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChargeToAuthorisationOperationCompleted);
            }
            this.InvokeAsync("UpdateChargeToAuthorisation", new object[] {
                        changedValues}, this.UpdateChargeToAuthorisationOperationCompleted, userState);
        }
        
        private void OnUpdateChargeToAuthorisationOperationCompleted(object arg) {
            if ((this.UpdateChargeToAuthorisationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChargeToAuthorisationCompleted(this, new UpdateChargeToAuthorisationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetServiceRequestAudit", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetServiceRequestAudit(int serviceRequestNo, out string err) {
            object[] results = this.Invoke("GetServiceRequestAudit", new object[] {
                        serviceRequestNo});
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceRequestAudit(int serviceRequestNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceRequestAudit", new object[] {
                        serviceRequestNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetServiceRequestAudit(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceRequestAuditAsync(int serviceRequestNo) {
            this.GetServiceRequestAuditAsync(serviceRequestNo, null);
        }
        
        /// <remarks/>
        public void GetServiceRequestAuditAsync(int serviceRequestNo, object userState) {
            if ((this.GetServiceRequestAuditOperationCompleted == null)) {
                this.GetServiceRequestAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceRequestAuditOperationCompleted);
            }
            this.InvokeAsync("GetServiceRequestAudit", new object[] {
                        serviceRequestNo}, this.GetServiceRequestAuditOperationCompleted, userState);
        }
        
        private void OnGetServiceRequestAuditOperationCompleted(object arg) {
            if ((this.GetServiceRequestAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceRequestAuditCompleted(this, new GetServiceRequestAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://strategicthought.com/webservices/GetInvoiceNumber", RequestNamespace="http://strategicthought.com/webservices/", ResponseNamespace="http://strategicthought.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInvoiceNumber(CustomerDetails cusDetails, out string err) {
            object[] results = this.Invoke("GetInvoiceNumber", new object[] {
                        cusDetails});
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInvoiceNumber(CustomerDetails cusDetails, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInvoiceNumber", new object[] {
                        cusDetails}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetInvoiceNumber(System.IAsyncResult asyncResult, out string err) {
            object[] results = this.EndInvoke(asyncResult);
            err = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoiceNumberAsync(CustomerDetails cusDetails) {
            this.GetInvoiceNumberAsync(cusDetails, null);
        }
        
        /// <remarks/>
        public void GetInvoiceNumberAsync(CustomerDetails cusDetails, object userState) {
            if ((this.GetInvoiceNumberOperationCompleted == null)) {
                this.GetInvoiceNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceNumberOperationCompleted);
            }
            this.InvokeAsync("GetInvoiceNumber", new object[] {
                        cusDetails}, this.GetInvoiceNumberOperationCompleted, userState);
        }
        
        private void OnGetInvoiceNumberOperationCompleted(object arg) {
            if ((this.GetInvoiceNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoiceNumberCompleted(this, new GetInvoiceNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://strategicthought.com/webservices/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private int userIdField;
        
        private string cookieField;
        
        private string passwordField;
        
        private string cultureField;
        
        private string countryField;
        
        private string versionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class Changes {
        
        private string defaultChargeToField;
        
        private string customerChargeToField;
        
        private string aigChargeToField;
        
        private string supplierChargeToField;
        
        private string internalChargeToField;
        
        private string delivererChargeToField;
        
        /// <remarks/>
        public string defaultChargeTo {
            get {
                return this.defaultChargeToField;
            }
            set {
                this.defaultChargeToField = value;
            }
        }
        
        /// <remarks/>
        public string customerChargeTo {
            get {
                return this.customerChargeToField;
            }
            set {
                this.customerChargeToField = value;
            }
        }
        
        /// <remarks/>
        public string aigChargeTo {
            get {
                return this.aigChargeToField;
            }
            set {
                this.aigChargeToField = value;
            }
        }
        
        /// <remarks/>
        public string supplierChargeTo {
            get {
                return this.supplierChargeToField;
            }
            set {
                this.supplierChargeToField = value;
            }
        }
        
        /// <remarks/>
        public string internalChargeTo {
            get {
                return this.internalChargeToField;
            }
            set {
                this.internalChargeToField = value;
            }
        }
        
        /// <remarks/>
        public string delivererChargeTo {
            get {
                return this.delivererChargeToField;
            }
            set {
                this.delivererChargeToField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://strategicthought.com/webservices/")]
    public partial class CustomerDetails {
        
        private string customerIDField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string postcodeField;
        
        private string directionsField;
        
        private string homePhoneField;
        
        private string workPhoneField;
        
        private string mobileField;
        
        private short branchNoField;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public string directions {
            get {
                return this.directionsField;
            }
            set {
                this.directionsField = value;
            }
        }
        
        /// <remarks/>
        public string homePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string workPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public short branchNo {
            get {
                return this.branchNoField;
            }
            set {
                this.branchNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetServiceRequestCompletedEventHandler(object sender, GetServiceRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string serviceType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool isPaidAndTakenAcct {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SaveServiceRequestCompletedEventHandler(object sender, SaveServiceRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveServiceRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveServiceRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateSRCustomerCompletedEventHandler(object sender, UpdateSRCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSRCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSRCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SavePriceIndexMatrixCompletedEventHandler(object sender, SavePriceIndexMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePriceIndexMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePriceIndexMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckTechMainPermissionsCompletedEventHandler(object sender, CheckTechMainPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTechMainPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTechMainPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetServiceAllocationPaymentCompletedEventHandler(object sender, GetServiceAllocationPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceAllocationPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceAllocationPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetChargeToDepositCompletedEventHandler(object sender, GetChargeToDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargeToDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargeToDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal depositAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal depositPaid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTechnicianDiaryCompletedEventHandler(object sender, GetTechnicianDiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechnicianDiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechnicianDiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckTechnicianSlotsCompletedEventHandler(object sender, CheckTechnicianSlotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTechnicianSlotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTechnicianSlotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckPartsDateCompletedEventHandler(object sender, CheckPartsDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPartsDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPartsDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void BookServiceRequestCompletedEventHandler(object sender, BookServiceRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookServiceRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookServiceRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool notFound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool alreadyBooked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.DateTime curSlotDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string curBookingType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FreeServiceRequestCompletedEventHandler(object sender, FreeServiceRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FreeServiceRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FreeServiceRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetWarrantyLengthCompletedEventHandler(object sender, GetWarrantyLengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantyLengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantyLengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTechniciansCompletedEventHandler(object sender, GetTechniciansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechniciansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechniciansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTechniciansByZoneCompletedEventHandler(object sender, GetTechniciansByZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechniciansByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechniciansByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateServiceRequestCompletedEventHandler(object sender, CreateServiceRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateServiceRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateServiceRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoadPriceIndexMatrixCompletedEventHandler(object sender, LoadPriceIndexMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPriceIndexMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPriceIndexMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void WriteOffSRChargeAcctCompletedEventHandler(object sender, WriteOffSRChargeAcctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteOffSRChargeAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteOffSRChargeAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CancelSRChargeAcctCompletedEventHandler(object sender, CancelSRChargeAcctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelSRChargeAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelSRChargeAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SRBatchPrintUpdatePrintedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteTechnicianCompletedEventHandler(object sender, DeleteTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ActivateTechnicianCompletedEventHandler(object sender, ActivateTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTechnicianCompletedEventHandler(object sender, GetTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTechnicianCompletedEventHandler(object sender, SaveTechnicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTechnicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTechnicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTechnicianListCompletedEventHandler(object sender, GetTechnicianListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechnicianListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechnicianListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTechniciansForPaymentSceenCompletedEventHandler(object sender, GetTechniciansForPaymentSceenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechniciansForPaymentSceenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechniciansForPaymentSceenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTechnicianPaymentsCompletedEventHandler(object sender, GetTechnicianPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechnicianPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechnicianPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTechnicianPaymentSummaryCompletedEventHandler(object sender, GetTechnicianPaymentSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechnicianPaymentSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechnicianPaymentSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal[] technicianSummaryData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDetailsForAllTechniciansCompletedEventHandler(object sender, SaveDetailsForAllTechniciansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDetailsForAllTechniciansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDetailsForAllTechniciansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int noTechniciansExceedingCallsPerDay {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int technicianWithHighestNoSlots {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTechnicianPaymentCompletedEventHandler(object sender, SaveTechnicianPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTechnicianPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTechnicianPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ServiceSearchCompletedEventHandler(object sender, ServiceSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckSerialNoDupCompletedEventHandler(object sender, CheckSerialNoDupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSerialNoDupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSerialNoDupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFoodLossCompletedEventHandler(object sender, GetFoodLossCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoodLossCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoodLossCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFoodLossCompletedEventHandler(object sender, SaveFoodLossCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFoodLossCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFoodLossCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomerInteractionCompletedEventHandler(object sender, GetCustomerInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string custFullName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveCutomerInteractionCompletedEventHandler(object sender, SaveCutomerInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCutomerInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCutomerInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOutstandingServiceReportCompletedEventHandler(object sender, GetOutstandingServiceReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutstandingServiceReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutstandingServiceReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBatchPrintReportsCompletedEventHandler(object sender, GetBatchPrintReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchPrintReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchPrintReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceProgressReportCompletedEventHandler(object sender, GetServiceProgressReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceProgressReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceProgressReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceFailureReportCompletedEventHandler(object sender, GetServiceFailureReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceFailureReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceFailureReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetClaimsSubmissionReportCompletedEventHandler(object sender, GetClaimsSubmissionReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClaimsSubmissionReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClaimsSubmissionReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveDepositFromSRCompletedEventHandler(object sender, RemoveDepositFromSRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDepositFromSRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDepositFromSRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceRequestSummaryForAccountCompletedEventHandler(object sender, GetServiceRequestSummaryForAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceRequestSummaryForAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceRequestSummaryForAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChargeToAuthorisationLoadCompletedEventHandler(object sender, ChargeToAuthorisationLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeToAuthorisationLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeToAuthorisationLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateChargeToAuthorisationCompletedEventHandler(object sender, UpdateChargeToAuthorisationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateChargeToAuthorisationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateChargeToAuthorisationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceRequestAuditCompletedEventHandler(object sender, GetServiceRequestAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceRequestAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceRequestAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInvoiceNumberCompletedEventHandler(object sender, GetInvoiceNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoiceNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoiceNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string err {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591