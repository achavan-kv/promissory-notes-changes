













//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Cosacs Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Blue.Transactions;

namespace Blue.Cosacs.Financial
{
    	public partial class MarkTransactionsAsExported : Blue.Transactions.Command<Context>
	{
	    public MarkTransactionsAsExported() : base("Financial.MarkTransactionsAsExported")
	    {
	                base.AddInParameter("@RunNumber", DbType.Int32 );
	            }
	
	        public int? RunNumber
	    {
	        get { return (int?)base[0]; }
	        set { base[0] = value; }
	    }
	    }
	
	partial class MarkTransactionsAsExported
	{
	    public new int ExecuteNonQuery()
	    {
	        return base.ExecuteNonQuery();
	    }
	
	        public int ExecuteNonQuery( int? _RunNumber)
	    {
	        this.RunNumber = _RunNumber;

	        var __result = base.ExecuteNonQuery();
	        
	        return __result;
	    }
	    }
	
	public partial class GetCountryCode : Blue.Transactions.Command<Context>
	{
	    public GetCountryCode() : base("Financial.GetCountryCode")
	    {
	            }
	
	    }
	
	partial class GetCountryCode
	{
		public new object ExecuteScalar()
		{
			return base.ExecuteScalar();
		}
	
		}
	

        public partial class ContextBase : DbContextBase
        {
			protected ContextBase(string connectionString = "Default") : base(connectionString) 
			{
				Database.SetInitializer<Context>(null);
			}
		 
            
                public virtual DbSet<Transaction> Transaction { get; set; }
            
                public virtual DbSet<CintOrderReceiptMessage> CintOrderReceiptMessage { get; set; }
            
                public virtual DbSet<GoodsReceiptMessage> GoodsReceiptMessage { get; set; }
            
                public virtual DbSet<GoodsReceiptProductMessage> GoodsReceiptProductMessage { get; set; }
            
                public virtual DbSet<StockAdjustmentMessage> StockAdjustmentMessage { get; set; }
            
                public virtual DbSet<StockAdjustmentProductMessage> StockAdjustmentProductMessage { get; set; }
            
                public virtual DbSet<TransferMessage> TransferMessage { get; set; }
            
                public virtual DbSet<TransferProductMessage> TransferProductMessage { get; set; }
            
                public virtual DbSet<VendorReturnMessage> VendorReturnMessage { get; set; }
            
                public virtual DbSet<VendorReturnProductMessage> VendorReturnProductMessage { get; set; }
            
            
            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                base.OnModelCreating(modelBuilder);
                
                        var t0 = modelBuilder.Entity< Transaction >();
                        t0.ToTable("Transaction", "Financial");
                        
                        t0.HasKey(t => t.Id);
                        
                        t0.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.RunNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Account)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(32)
                        
                        
                        ;
                        
                        t0.Property(t => t.BranchNo)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(3)
                        .IsFixedLength()
                        
                        ;
                        
                        t0.Property(t => t.Amount)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        .HasPrecision(28,12)
                        ;
                        
                        t0.Property(t => t.Date)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.MessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t0.Property(t => t.Description)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        var t1 = modelBuilder.Entity< CintOrderReceiptMessage >();
                        t1.ToTable("CintOrderReceiptMessage", "Financial");
                        
                        t1.HasKey(t => t.Id);
                        
                        t1.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.CintOrderId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.ProductId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.PrimaryReference)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.SalesType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.SalesLocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.TotalAWC)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.DepartmentCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.MessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t1.Property(t => t.SecondaryReference)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        t1.Property(t => t.ReferenceType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(20)
                        
                        
                        ;
                        
                        var t2 = modelBuilder.Entity< GoodsReceiptMessage >();
                        t2.ToTable("GoodsReceiptMessage", "Financial");
                        
                        t2.HasKey(t => t.Id);
                        
                        t2.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ReceiptId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.LocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.VendorId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.ReceiptType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.CreatedDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.VendorType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t2.Property(t => t.SalesLocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t2.Property(t => t.MessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t3 = modelBuilder.Entity< GoodsReceiptProductMessage >();
                        t3.ToTable("GoodsReceiptProductMessage", "Financial");
                        
                        t3.HasKey(t => t.Id);
                        
                        t3.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.GoodsReceiptMessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.ProductId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.DepartmentCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Cost)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t3.Property(t => t.Units)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t4 = modelBuilder.Entity< StockAdjustmentMessage >();
                        t4.ToTable("StockAdjustmentMessage", "Financial");
                        
                        t4.HasKey(t => t.Id);
                        
                        t4.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.AdjustmentId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.LocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.CreatedDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.SecondaryReason)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t4.Property(t => t.SalesLocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t4.Property(t => t.MessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t5 = modelBuilder.Entity< StockAdjustmentProductMessage >();
                        t5.ToTable("StockAdjustmentProductMessage", "Financial");
                        
                        t5.HasKey(t => t.Id);
                        
                        t5.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.StockAdjustmentMessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.ProductId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.DepartmentCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.Cost)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t5.Property(t => t.Units)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t6 = modelBuilder.Entity< TransferMessage >();
                        t6.ToTable("TransferMessage", "Financial");
                        
                        t6.HasKey(t => t.Id);
                        
                        t6.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.MessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.LocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.SalesLocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t6.Property(t => t.CreatedDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.TotalAWC)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t6.Property(t => t.ReceivingLocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t6.Property(t => t.ReceivingLocationSalesId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        var t7 = modelBuilder.Entity< TransferProductMessage >();
                        t7.ToTable("TransferProductMessage", "Financial");
                        
                        t7.HasKey(t => t.Id);
                        
                        t7.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.TransferMessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.ProductId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.DepartmentCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Cost)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t7.Property(t => t.Units)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t8 = modelBuilder.Entity< VendorReturnMessage >();
                        t8.ToTable("VendorReturnMessage", "Financial");
                        
                        t8.HasKey(t => t.Id);
                        
                        t8.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.VendorReturnId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.LocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.VendorId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.ReceiptType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.CreatedDate)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.VendorType)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t8.Property(t => t.SalesLocationId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        .IsUnicode(false)
                        .HasMaxLength(100)
                        
                        
                        ;
                        
                        t8.Property(t => t.MessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        var t9 = modelBuilder.Entity< VendorReturnProductMessage >();
                        t9.ToTable("VendorReturnProductMessage", "Financial");
                        
                        t9.HasKey(t => t.Id);
                        
                        t9.Property(t => t.Id)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.Identity)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.VendorReturnMessageId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.ProductId)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.Type)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.DepartmentCode)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.Cost)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        t9.Property(t => t.Units)
                        .HasDatabaseGeneratedOption(databaseGeneratedOption: DatabaseGeneratedOption.None)
                        
                        
                        
                        
                        ;
                        
                        modelBuilder.Entity< CountryMaintenanceView >().ToTable("CountryMaintenanceView", "Financial");
                        
                        modelBuilder.Entity< TransactionTypeView >().ToTable("TransactionTypeView", "Financial");
                        
                        modelBuilder.Entity< TransactionView >().ToTable("TransactionView", "Financial");
                        
                        modelBuilder.Entity< TransactionMappingMerchandisingView >().ToTable("TransactionMappingMerchandisingView", "Financial");
                        
            }
        }

        
        [Serializable]
	[DataContract]
    public partial class Transaction
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public short? RunNo { get; set; }
                [DataMember] public string Account { get; set; }
                [DataMember] public short BranchNo { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public decimal? Amount { get; set; }
                [DataMember] public DateTime Date { get; set; }
                [DataMember] public int MessageId { get; set; }
                [DataMember] public string Description { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class CintOrderReceiptMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int CintOrderId { get; set; }
                [DataMember] public int ProductId { get; set; }
                [DataMember] public string PrimaryReference { get; set; }
                [DataMember] public string SalesType { get; set; }
                [DataMember] public string SalesLocationId { get; set; }
                [DataMember] public decimal TotalAWC { get; set; }
                [DataMember] public string DepartmentCode { get; set; }
                [DataMember] public int? MessageId { get; set; }
                [DataMember] public string SecondaryReference { get; set; }
                [DataMember] public string ReferenceType { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class GoodsReceiptMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int ReceiptId { get; set; }
                [DataMember] public int LocationId { get; set; }
                [DataMember] public int VendorId { get; set; }
                [DataMember] public string ReceiptType { get; set; }
                [DataMember] public DateTime CreatedDate { get; set; }
                [DataMember] public string VendorType { get; set; }
                [DataMember] public string SalesLocationId { get; set; }
                [DataMember] public int? MessageId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class GoodsReceiptProductMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int GoodsReceiptMessageId { get; set; }
                [DataMember] public int ProductId { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string DepartmentCode { get; set; }
                [DataMember] public decimal Cost { get; set; }
                [DataMember] public int Units { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class StockAdjustmentMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int AdjustmentId { get; set; }
                [DataMember] public int LocationId { get; set; }
                [DataMember] public DateTime CreatedDate { get; set; }
                [DataMember] public string SecondaryReason { get; set; }
                [DataMember] public string SalesLocationId { get; set; }
                [DataMember] public int? MessageId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class StockAdjustmentProductMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int StockAdjustmentMessageId { get; set; }
                [DataMember] public int ProductId { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string DepartmentCode { get; set; }
                [DataMember] public decimal Cost { get; set; }
                [DataMember] public int Units { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TransferMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int? MessageId { get; set; }
                [DataMember] public int LocationId { get; set; }
                [DataMember] public string SalesLocationId { get; set; }
                [DataMember] public DateTime CreatedDate { get; set; }
                [DataMember] public decimal TotalAWC { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public int ReceivingLocationId { get; set; }
                [DataMember] public string ReceivingLocationSalesId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class TransferProductMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int TransferMessageId { get; set; }
                [DataMember] public int ProductId { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string DepartmentCode { get; set; }
                [DataMember] public decimal Cost { get; set; }
                [DataMember] public int Units { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class VendorReturnMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int VendorReturnId { get; set; }
                [DataMember] public int LocationId { get; set; }
                [DataMember] public int VendorId { get; set; }
                [DataMember] public string ReceiptType { get; set; }
                [DataMember] public DateTime CreatedDate { get; set; }
                [DataMember] public string VendorType { get; set; }
                [DataMember] public string SalesLocationId { get; set; }
                [DataMember] public int? MessageId { get; set; }
            }

    
        [Serializable]
	[DataContract]
    public partial class VendorReturnProductMessage
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public int VendorReturnMessageId { get; set; }
                [DataMember] public int ProductId { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public string DepartmentCode { get; set; }
                [DataMember] public decimal Cost { get; set; }
                [DataMember] public int Units { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<CountryMaintenanceView> CountryMaintenanceView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class CountryMaintenanceView
    {
                [DataMember] public int ParameterID { get; set; }
                [DataMember] public string CountryCode { get; set; }
                [DataMember] public string ParameterCategory { get; set; }
                [DataMember] public string Name { get; set; }
                [DataMember] public string Value { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public int Precision { get; set; }
                [DataMember] public string OptionCategory { get; set; }
                [DataMember] public string OptionListName { get; set; }
                [DataMember] public string Description { get; set; }
                [DataMember] public string CodeName { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<TransactionTypeView> TransactionTypeView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class TransactionTypeView
    {
                [DataMember] public string Id { get; set; }
                [DataMember] public string Name { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<TransactionView> TransactionView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class TransactionView
    {
                [DataMember] public int Id { get; set; }
                [DataMember] public short? RunNo { get; set; }
                [DataMember] public string Account { get; set; }
                [DataMember] public short BranchNo { get; set; }
                [DataMember] public string Type { get; set; }
                [DataMember] public decimal? Amount { get; set; }
                [DataMember] public DateTime Date { get; set; }
                [DataMember] public int MessageId { get; set; }
                [DataMember] public string Description { get; set; }
                [DataMember] public int LocationId { get; set; }
                [DataMember] public string Location { get; set; }
                [DataMember] public int? Percentage { get; set; }
            }

        partial class ContextBase
    {
        public virtual DbSet<TransactionMappingMerchandisingView> TransactionMappingMerchandisingView { get; set; }
    }
    
        [Serializable]
	[DataContract]
    public partial class TransactionMappingMerchandisingView
    {
                [DataMember] public int? Id { get; set; }
                [DataMember] public string TransactionType { get; set; }
                [DataMember] public string TransactionDescription { get; set; }
                [DataMember] public string ProductType { get; set; }
                [DataMember] public int? SaleType { get; set; }
                [DataMember] public int? AdjustmentType { get; set; }
                [DataMember] public string VendorType { get; set; }
                [DataMember] public int Percentage { get; set; }
                [DataMember] public string TransactionCode { get; set; }
                [DataMember] public bool SplitDebitByDepartment { get; set; }
                [DataMember] public string Account { get; set; }
            }

    

    }
